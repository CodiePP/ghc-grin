primop pure
  "*#"  :: T_Int64 -> T_Int64 -> T_Int64
  "+#"  :: T_Int64 -> T_Int64 -> T_Int64
  "-#"  :: T_Int64 -> T_Int64 -> T_Int64
  "/=#" :: T_Int64 -> T_Int64 -> T_Int64
  "<#"  :: T_Int64 -> T_Int64 -> T_Int64
  "<=#" :: T_Int64 -> T_Int64 -> T_Int64
  "==#" :: T_Int64 -> T_Int64 -> T_Int64
  ">#"  :: T_Int64 -> T_Int64 -> T_Int64
  ">=#" :: T_Int64 -> T_Int64 -> T_Int64

primop effectful
  __hsbase_MD5Final          :: T_Addr -> T_Addr -> {"GHC.Prim.(##)"}
  __hsbase_MD5Init           :: T_Addr -> {"GHC.Prim.(##)"}
  __hsbase_MD5Update         :: T_Addr -> T_Addr -> T_Int64 -> {"GHC.Prim.(##)"}
  __hscore_echo              :: {"GHC.Prim.Unit#" T_Int64}
  __hscore_fstat             :: T_Int64 -> T_Addr -> {"GHC.Prim.Unit#" T_Int64}
  __hscore_ftruncate         :: T_Int64 -> T_Int64 -> {"GHC.Prim.Unit#" T_Int64}
  __hscore_get_errno         :: {"GHC.Prim.Unit#" T_Int64}
  __hscore_get_saved_termios :: T_Int64 -> {"GHC.Prim.Unit#" T_Addr}
  __hscore_icanon            :: {"GHC.Prim.Unit#" T_Int64}
  __hscore_lflag             :: T_Addr -> {"GHC.Prim.Unit#" T_Word64}
  __hscore_poke_lflag        :: T_Addr -> T_Word64 -> {"GHC.Prim.(##)"}
  __hscore_ptr_c_cc          :: T_Addr -> {"GHC.Prim.Unit#" T_Addr}
  __hscore_set_saved_termios :: T_Int64 -> T_Addr -> {"GHC.Prim.(##)"}
  __hscore_sig_block         :: {"GHC.Prim.Unit#" T_Int64}
  __hscore_sig_setmask       :: {"GHC.Prim.Unit#" T_Int64}
  __hscore_sigttou           :: {"GHC.Prim.Unit#" T_Int64}
  __hscore_sizeof_sigset_t   :: {"GHC.Prim.Unit#" T_Int64}
  __hscore_sizeof_stat       :: {"GHC.Prim.Unit#" T_Int64}
  __hscore_sizeof_termios    :: {"GHC.Prim.Unit#" T_Int64}
  __hscore_st_dev            :: T_Addr -> {"GHC.Prim.Unit#" T_Word64}
  __hscore_st_ino            :: T_Addr -> {"GHC.Prim.Unit#" T_Word64}
  __hscore_st_mode           :: T_Addr -> {"GHC.Prim.Unit#" T_Word64}
  __hscore_st_size           :: T_Addr -> {"GHC.Prim.Unit#" T_Int64}
  __hscore_tcsanow           :: {"GHC.Prim.Unit#" T_Int64}
  __hscore_vmin              :: {"GHC.Prim.Unit#" T_Int64}
  __hscore_vtime             :: {"GHC.Prim.Unit#" T_Int64}

primop pure
  "and#"               :: T_Word64 -> T_Word64 -> T_Word64
  "andI#"              :: T_Int64 -> T_Int64 -> T_Int64
  "byteArrayContents#" :: {"ByteArray#"} -> T_Addr
  "chr#"               :: T_Int64 -> T_Char

primop effectful
  close             :: T_Int64 -> {"GHC.Prim.Unit#" T_Int64}
  "deRefStablePtr#" :: {"StablePtr#" %a} -> {"GHC.Prim.Unit#" %a}
  "deRefWeak#"      :: {"Weak#" %a} -> {"GHC.Prim.(#,#)" T_Int64 %a}
  dup               :: T_Int64 -> {"GHC.Prim.Unit#" T_Int64}
  dup2              :: T_Int64 -> T_Int64 -> {"GHC.Prim.Unit#" T_Int64}

primop pure
  "eqAddr#" :: T_Addr -> T_Addr -> T_Int64
  "eqChar#" :: T_Char -> T_Char -> T_Int64
  "eqWord#" :: T_Word64 -> T_Word64 -> T_Int64

primop effectful
  fdReady             :: T_Int64 -> T_Word64 -> T_Int64 -> T_Word64 -> {"GHC.Prim.Unit#" T_Int64}
  "fetchAddIntArray#" :: {"MutableByteArray#"} -> T_Int64 -> T_Int64 -> {"GHC.Prim.Unit#" T_Int64}

primop pure
  "geWord#"        :: T_Word64 -> T_Word64 -> T_Int64
  "getCurrentCCS#" :: %a -> {"GHC.Prim.Unit#" T_Addr}

primop effectful
  "getMaskingState#"                                            :: {"GHC.Prim.Unit#" T_Int64}
  getOrSetGHCConcSignalSignalHandlerStore                       :: T_Addr -> {"GHC.Prim.Unit#" T_Addr}
  getOrSetSystemEventThreadEventManagerStore                    :: T_Addr -> {"GHC.Prim.Unit#" T_Addr}
  ghczuwrapperZC0ZCbaseZCSystemziPosixziInternalsZCSEEKzuEND    :: {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC10ZCbaseZCSystemziPosixziInternalsZCtcgetattr   :: T_Int64 -> T_Addr -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask :: T_Int64 -> T_Addr -> T_Addr -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC12ZCbaseZCSystemziPosixziInternalsZCsigaddset   :: T_Addr -> T_Int64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC13ZCbaseZCSystemziPosixziInternalsZCsigemptyset :: T_Addr -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC19ZCbaseZCSystemziPosixziInternalsZCwrite       :: T_Int64 -> T_Addr -> T_Word64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC1ZCbaseZCSystemziPosixziInternalsZCSEEKzuSET    :: {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite       :: T_Int64 -> T_Addr -> T_Word64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC21ZCbaseZCSystemziPosixziInternalsZCread        :: T_Int64 -> T_Addr -> T_Word64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread        :: T_Int64 -> T_Addr -> T_Word64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC23ZCbaseZCSystemziPosixziInternalsZClseek       :: T_Int64 -> T_Int64 -> T_Int64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC2ZCbaseZCSystemziPosixziInternalsZCSEEKzuCUR    :: {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK    :: T_Word64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO    :: T_Word64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR     :: T_Word64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK     :: T_Word64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR     :: T_Word64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG     :: T_Word64 -> {"GHC.Prim.Unit#" T_Int64}
  ghczuwrapperZC9ZCbaseZCSystemziPosixziInternalsZCtcsetattr    :: T_Int64 -> T_Int64 -> T_Addr -> {"GHC.Prim.Unit#" T_Int64}

primop pure
  "gtWord#" :: T_Word64 -> T_Word64 -> T_Int64

primop effectful
  hs_free_stable_ptr :: T_Addr -> {"GHC.Prim.(##)"}
  hs_iconv           :: T_Int64 -> T_Addr -> T_Addr -> T_Addr -> T_Addr -> {"GHC.Prim.Unit#" T_Word64}
  hs_iconv_close     :: T_Int64 -> {"GHC.Prim.Unit#" T_Int64}
  hs_iconv_open      :: T_Addr -> T_Addr -> {"GHC.Prim.Unit#" T_Int64}

primop pure
  "indexArray#"       :: {"Array#" %a} -> T_Int64 -> {"GHC.Prim.Unit#" %a}
  "indexCharOffAddr#" :: T_Addr -> T_Int64 -> T_Char
  "indexIntArray#"    :: {"ByteArray#"} -> T_Int64 -> T_Int64
  "int2Word#"         :: T_Int64 -> T_Word64

primop effectful
  isatty        :: T_Int64 -> {"GHC.Prim.Unit#" T_Int64}
  "killThread#" :: {"ThreadId#"} -> %a -> {"GHC.Prim.(##)"}

primop pure
  "leChar#" :: T_Char -> T_Char -> T_Int64
  "leWord#" :: T_Word64 -> T_Word64 -> T_Int64

primop effectful
  localeEncoding :: {"GHC.Prim.Unit#" T_Addr}

primop pure
  "ltWord#" :: T_Word64 -> T_Word64 -> T_Int64

primop effectful
  "makeStablePtr#"     :: %a -> {"GHC.Prim.Unit#" {"StablePtr#" %a}}
  malloc               :: T_Word64 -> {"GHC.Prim.Unit#" T_Addr}
  memcpy               :: T_Addr -> T_Addr -> T_Word64 -> {"GHC.Prim.Unit#" T_Addr}
  "mkWeakNoFinalizer#" :: %o -> %b -> {"GHC.Prim.Unit#" {"Weak#" %b}}
  "myThreadId#"        :: {"GHC.Prim.Unit#" {"ThreadId#"}}

primop pure
  "narrow16Word#" :: T_Word64 -> T_Word64
  "narrow32Int#"  :: T_Int64 -> T_Int64
  "narrow32Word#" :: T_Word64 -> T_Word64
  "narrow8Int#"   :: T_Int64 -> T_Int64
  "narrow8Word#"  :: T_Word64 -> T_Word64
  "neChar#"       :: T_Char -> T_Char -> T_Int64
  "negateInt#"    :: T_Int64 -> T_Int64

primop effectful
  "newAlignedPinnedByteArray#" :: T_Int64 -> T_Int64 -> {"GHC.Prim.Unit#" {"MutableByteArray#"}}
  "newArray#"                  :: T_Int64 -> %a -> {"GHC.Prim.Unit#" {"MutableArray#" %a}}
  "newMVar#"                   :: {"GHC.Prim.Unit#" {"MVar#" %a}}
  "newMutVar#"                 :: %a -> {"GHC.Prim.Unit#" {"MutVar#" %a}}
  "newPinnedByteArray#"        :: T_Int64 -> {"GHC.Prim.Unit#" {"MutableByteArray#"}}
  "noDuplicate#"               :: {"GHC.Prim.(##)"}

primop pure
  "or#"       :: T_Word64 -> T_Word64 -> T_Word64
  "orI#"      :: T_Int64 -> T_Int64 -> T_Int64
  "ord#"      :: T_Char -> T_Int64
  "plusAddr#" :: T_Addr -> T_Int64 -> T_Addr
  "plusWord#" :: T_Word64 -> T_Word64 -> T_Word64

primop effectful
  "putMVar#" :: {"MVar#" %a} -> %a -> {"GHC.Prim.(##)"}

primop pure
  "quotRemInt#" :: T_Int64 -> T_Int64 -> {"GHC.Prim.(#,#)" T_Int64 T_Int64}

primop effectful
  "raise#"                :: %b -> %o
  "raiseIO#"              :: %a -> {"GHC.Prim.Unit#" %b}
  "readAddrOffAddr#"      :: T_Addr -> T_Int64 -> {"GHC.Prim.Unit#" T_Addr}
  "readArray#"            :: {"MutableArray#" %a} -> T_Int64 -> {"GHC.Prim.Unit#" %a}
  "readInt32OffAddr#"     :: T_Addr -> T_Int64 -> {"GHC.Prim.Unit#" T_Int64}
  "readInt8OffAddr#"      :: T_Addr -> T_Int64 -> {"GHC.Prim.Unit#" T_Int64}
  "readIntOffAddr#"       :: T_Addr -> T_Int64 -> {"GHC.Prim.Unit#" T_Int64}
  "readMutVar#"           :: {"MutVar#" %a} -> {"GHC.Prim.Unit#" %a}
  "readWideCharOffAddr#"  :: T_Addr -> T_Int64 -> {"GHC.Prim.Unit#" T_Char}
  "readWord64OffAddr#"    :: T_Addr -> T_Int64 -> {"GHC.Prim.Unit#" T_Word64}
  "readWord8OffAddr#"     :: T_Addr -> T_Int64 -> {"GHC.Prim.Unit#" T_Word64}
  rtsSupportsBoundThreads :: {"GHC.Prim.Unit#" T_Int64}
  rts_setMainThread       :: {"Weak#" {ThreadId}} -> {"GHC.Prim.(##)"}

primop pure
  "sizeofMutableArray#" :: {"MutableArray#" %a} -> T_Int64

primop effectful
  stg_sig_install :: T_Int64 -> T_Int64 -> T_Addr -> {"GHC.Prim.Unit#" T_Int64}
  strerror        :: T_Int64 -> {"GHC.Prim.Unit#" T_Addr}
  "takeMVar#"     :: {"MVar#" %a} -> {"GHC.Prim.Unit#" %a}
  "threadStatus#" :: {"ThreadId#"} -> {"GHC.Prim.(#,,#)" T_Int64 T_Int64 T_Int64}
  "touch#"        :: %o -> {"GHC.Prim.(##)"}
  u_towupper      :: T_Int64 -> {"GHC.Prim.Unit#" T_Int64}

primop pure
  "uncheckedIShiftL#"  :: T_Int64 -> T_Int64 -> T_Int64
  "uncheckedIShiftRA#" :: T_Int64 -> T_Int64 -> T_Int64
  "uncheckedShiftL#"   :: T_Word64 -> T_Int64 -> T_Word64
  "uncheckedShiftRL#"  :: T_Word64 -> T_Int64 -> T_Word64

primop effectful
  unlockFile               :: T_Int64 -> {"GHC.Prim.Unit#" T_Int64}
  "unsafeFreezeArray#"     :: {"MutableArray#" %a} -> {"GHC.Prim.Unit#" {"Array#" %a}}
  "unsafeFreezeByteArray#" :: {"MutableByteArray#"} -> {"GHC.Prim.Unit#" {"ByteArray#"}}
  "waitRead#"              :: T_Int64 -> {"GHC.Prim.(##)"}
  "waitWrite#"             :: T_Int64 -> {"GHC.Prim.(##)"}

primop pure
  "word2Int#" :: T_Word64 -> T_Int64

primop effectful
  "writeAddrOffAddr#"     :: T_Addr -> T_Int64 -> T_Addr -> {"GHC.Prim.(##)"}
  "writeArray#"           :: {"MutableArray#" %a} -> T_Int64 -> %a -> {"GHC.Prim.(##)"}
  "writeInt8OffAddr#"     :: T_Addr -> T_Int64 -> T_Int64 -> {"GHC.Prim.(##)"}
  "writeIntOffAddr#"      :: T_Addr -> T_Int64 -> T_Int64 -> {"GHC.Prim.(##)"}
  "writeMutVar#"          :: {"MutVar#" %a} -> %a -> {"GHC.Prim.(##)"}
  "writeWideCharOffAddr#" :: T_Addr -> T_Int64 -> T_Char -> {"GHC.Prim.(##)"}
  "writeWord64OffAddr#"   :: T_Addr -> T_Int64 -> T_Word64 -> {"GHC.Prim.(##)"}
  "writeWord8OffAddr#"    :: T_Addr -> T_Int64 -> T_Word64 -> {"GHC.Prim.(##)"}

primop pure
  "xor#" :: T_Word64 -> T_Word64 -> T_Word64

":Main.main" void.040.2098 =
  Main.main2 @ #"GHC.Prim.void#"

Control.Exception.Base.absentError s.s17236.0 =
  let sat.s17237.0 = Control.Exception.Base.absentError.closure.0 @ s.s17236.0{- value -}
  letS sat.s17238.0 = "GHC.CString.unpackAppendCString#" @ Control.Exception.Base.lvl{- value -} sat.s17237.0
  GHC.Err.errorWithoutStackTrace @ sat.s17238.0

Control.Exception.Base.absentError.closure.0 s.s17236.1 =
  "GHC.CString.unpackCStringUtf8#" @ s.s17236.1{- value -}

Control.Exception.Base.lvl =
  #"Oops!  Entered absent arg "

"Data.OldList.intercalate_$spoly_go" sc.s34354.0 sc1.s34355.0 =
  let sat.s34356.0 = "Data.OldList.intercalate_$spoly_go.closure.0" @ sc1.s34355.0
  "GHC.Base.++" @ sc.s34354.0 sat.s34356.0

"Data.OldList.intercalate_$spoly_go.closure.0" sc1.s34355.1 =
  Data.OldList.poly_go2 @ sc1.s34355.1

Data.OldList.poly_go2 ds.s34357.0 =
  letS wild.s34358.0 = ds.s34357.0
  case wild.s34358.0 of
    ("GHC.Types.[]") ->
        ["GHC.Types.[]"]
    (GHC.Types.: y.s34359.0 ys.s34360.0) ->
        let sat.s34361.0 = Data.OldList.poly_go2.closure.0 @ ys.s34360.0
        "GHC.Base.++" @ y.s34359.0 sat.s34361.0

Data.OldList.poly_go2.closure.0 ys.s34360.1 =
  Data.OldList.poly_go2 @ ys.s34360.1

Data.OldList.prependToAll ds.s34362.0 ds1.s34363.0 =
  letS wild.s34364.0 = ds1.s34363.0
  case wild.s34364.0 of
    ("GHC.Types.[]") ->
        ["GHC.Types.[]"]
    (GHC.Types.: x.s34365.0 xs.s34366.0) ->
        let sat.s34367.0 = Data.OldList.prependToAll.closure.0 @ ds.s34362.0 xs.s34366.0
            sat.s34368.0 = [GHC.Types.: x.s34365.0 sat.s34367.0]
        [GHC.Types.: ds.s34362.0 sat.s34368.0]

Data.OldList.prependToAll.closure.0 ds.s34362.1 xs.s34366.1 =
  Data.OldList.prependToAll @ ds.s34362.1 xs.s34366.1

Data.Tuple.snd ds.s4712.0 =
  letS wild.s4713.0 = ds.s4712.0
  case wild.s4713.0 of
    ("GHC.Tuple.(,)" ds1.s4714.0 y.s4715.0) ->
        y.s4715.0

"Data.Typeable.Internal.$WTrType" =
  [Data.Typeable.Internal.TrType]

"Data.Typeable.Internal.$dIP" =
  [GHC.Stack.Types.SrcLoc Data.Typeable.Internal.typeNatTypeRep6 Data.Typeable.Internal.loc Data.Typeable.Internal.loc2 Data.Typeable.Internal.loc3 Data.Typeable.Internal.loc4 Data.Typeable.Internal.loc5 Data.Typeable.Internal.loc6]

"Data.Typeable.Internal.$dIP1" =
  #"error"

"Data.Typeable.Internal.$dIP2" =
  "GHC.CString.unpackCString#" @ "Data.Typeable.Internal.$dIP1"{- value -}

"Data.Typeable.Internal.$dIP3" =
  [GHC.Stack.Types.PushCallStack "Data.Typeable.Internal.$dIP2" "Data.Typeable.Internal.$dIP" GHC.Stack.Types.EmptyCallStack]

"Data.Typeable.Internal.$dTypeable" =
  letS ww.s46349.0 = "Data.Typeable.Internal.$wmkTrCon" @ 16061740385350239211u 16151208295847465774u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'VecRep2" 0 "GHC.Types.$tc'VecRep1" "GHC.Types.[]"
  case ww.s46349.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46350.0 ww2.s46351.0 ww3.s46352.0 ww4.s46353.0 ww5.s46354.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46350.0{- value -} ww2.s46351.0{- value -} ww3.s46352.0 ww4.s46353.0 ww5.s46354.0]

"Data.Typeable.Internal.$dTypeable1" =
  letS ww.s46355.0 = "Data.Typeable.Internal.$wmkTrCon" @ 11236294097344325946u 16774987540944797320u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'TupleRep1" 0 "GHC.Types.$tc'SumRep1" "GHC.Types.[]"
  case ww.s46355.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46356.0 ww2.s46357.0 ww3.s46358.0 ww4.s46359.0 ww5.s46360.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46356.0{- value -} ww2.s46357.0{- value -} ww3.s46358.0 ww4.s46359.0 ww5.s46360.0]

"Data.Typeable.Internal.$dTypeable10" =
  letS ww.s46409.0 = "Data.Typeable.Internal.$wmkTrCon" @ 962290929416314342u 11588961526395372820u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Word64ElemRep1" 0 "GHC.Types.$tc'DoubleElemRep1" "GHC.Types.[]"
  case ww.s46409.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46410.0 ww2.s46411.0 ww3.s46412.0 ww4.s46413.0 ww5.s46414.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46410.0{- value -} ww2.s46411.0{- value -} ww3.s46412.0 ww4.s46413.0 ww5.s46414.0]

"Data.Typeable.Internal.$dTypeable11" =
  letS ww.s46415.0 = "Data.Typeable.Internal.$wmkTrCon" @ 15883484483715390461u 15637062959146651066u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'FloatElemRep1" 0 "GHC.Types.$tc'DoubleElemRep1" "GHC.Types.[]"
  case ww.s46415.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46416.0 ww2.s46417.0 ww3.s46418.0 ww4.s46419.0 ww5.s46420.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46416.0{- value -} ww2.s46417.0{- value -} ww3.s46418.0 ww4.s46419.0 ww5.s46420.0]

"Data.Typeable.Internal.$dTypeable12" =
  letS ww.s46421.0 = "Data.Typeable.Internal.$wmkTrCon" @ 16505408126773671068u 15840522396645720043u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'DoubleElemRep2" 0 "GHC.Types.$tc'DoubleElemRep1" "GHC.Types.[]"
  case ww.s46421.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46422.0 ww2.s46423.0 ww3.s46424.0 ww4.s46425.0 ww5.s46426.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46422.0{- value -} ww2.s46423.0{- value -} ww3.s46424.0 ww4.s46425.0 ww5.s46426.0]

"Data.Typeable.Internal.$dTypeable13" =
  letS ww.s46427.0 = "Data.Typeable.Internal.$wmkTrCon" @ 5064784584368764068u 3361418040082324600u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Vec6" 0 "GHC.Types.$tc'Vec1" "GHC.Types.[]"
  case ww.s46427.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46428.0 ww2.s46429.0 ww3.s46430.0 ww4.s46431.0 ww5.s46432.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46428.0{- value -} ww2.s46429.0{- value -} ww3.s46430.0 ww4.s46431.0 ww5.s46432.0]

"Data.Typeable.Internal.$dTypeable14" =
  letS ww.s46433.0 = "Data.Typeable.Internal.$wmkTrCon" @ 2949723101192076374u 13868511445625308700u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Vec11" 0 "GHC.Types.$tc'Vec1" "GHC.Types.[]"
  case ww.s46433.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46434.0 ww2.s46435.0 ww3.s46436.0 ww4.s46437.0 ww5.s46438.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46434.0{- value -} ww2.s46435.0{- value -} ww3.s46436.0 ww4.s46437.0 ww5.s46438.0]

"Data.Typeable.Internal.$dTypeable15" =
  letS ww.s46439.0 = "Data.Typeable.Internal.$wmkTrCon" @ 3758042556634193295u 10767974819517516184u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Vec15" 0 "GHC.Types.$tc'Vec1" "GHC.Types.[]"
  case ww.s46439.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46440.0 ww2.s46441.0 ww3.s46442.0 ww4.s46443.0 ww5.s46444.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46440.0{- value -} ww2.s46441.0{- value -} ww3.s46442.0 ww4.s46443.0 ww5.s46444.0]

"Data.Typeable.Internal.$dTypeable16" =
  letS ww.s46445.0 = "Data.Typeable.Internal.$wmkTrCon" @ 6809166228708554316u 10078663918743733643u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Vec3" 0 "GHC.Types.$tc'Vec1" "GHC.Types.[]"
  case ww.s46445.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46446.0 ww2.s46447.0 ww3.s46448.0 ww4.s46449.0 ww5.s46450.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46446.0{- value -} ww2.s46447.0{- value -} ww3.s46448.0 ww4.s46449.0 ww5.s46450.0]

"Data.Typeable.Internal.$dTypeable17" =
  letS ww.s46451.0 = "Data.Typeable.Internal.$wmkTrCon" @ 16161886298178258610u 2636327133046335869u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Vec9" 0 "GHC.Types.$tc'Vec1" "GHC.Types.[]"
  case ww.s46451.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46452.0 ww2.s46453.0 ww3.s46454.0 ww4.s46455.0 ww5.s46456.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46452.0{- value -} ww2.s46453.0{- value -} ww3.s46454.0 ww4.s46455.0 ww5.s46456.0]

"Data.Typeable.Internal.$dTypeable18" =
  letS ww.s46457.0 = "Data.Typeable.Internal.$wmkTrCon" @ 3080776645865338754u 4655447985337863841u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Vec13" 0 "GHC.Types.$tc'Vec1" "GHC.Types.[]"
  case ww.s46457.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46458.0 ww2.s46459.0 ww3.s46460.0 ww4.s46461.0 ww5.s46462.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46458.0{- value -} ww2.s46459.0{- value -} ww3.s46460.0 ww4.s46461.0 ww5.s46462.0]

"Data.Typeable.Internal.$dTypeable19" =
  letS ww.s46463.0 = "Data.Typeable.Internal.$wmkTrCon" @ 11381980694367588106u 6985823218031611027u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'UnliftedRep1" 0 "GHC.Types.$tc'AddrRep1" "GHC.Types.[]"
  case ww.s46463.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46464.0 ww2.s46465.0 ww3.s46466.0 ww4.s46467.0 ww5.s46468.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46464.0{- value -} ww2.s46465.0{- value -} ww3.s46466.0 ww4.s46467.0 ww5.s46468.0]

"Data.Typeable.Internal.$dTypeable2" =
  letS ww.s46361.0 = "Data.Typeable.Internal.$wmkTrCon" @ 10556863606068296798u 3753084309665086038u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'SumRep2" 0 "GHC.Types.$tc'SumRep1" "GHC.Types.[]"
  case ww.s46361.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46362.0 ww2.s46363.0 ww3.s46364.0 ww4.s46365.0 ww5.s46366.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46362.0{- value -} ww2.s46363.0{- value -} ww3.s46364.0 ww4.s46365.0 ww5.s46366.0]

"Data.Typeable.Internal.$dTypeable20" =
  letS ww.s46469.0 = "Data.Typeable.Internal.$wmkTrCon" @ 1643621531038604835u 995665650565270366u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'IntRep1" 0 "GHC.Types.$tc'AddrRep1" "GHC.Types.[]"
  case ww.s46469.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46470.0 ww2.s46471.0 ww3.s46472.0 ww4.s46473.0 ww5.s46474.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46470.0{- value -} ww2.s46471.0{- value -} ww3.s46472.0 ww4.s46473.0 ww5.s46474.0]

"Data.Typeable.Internal.$dTypeable21" =
  letS ww.s46475.0 = "Data.Typeable.Internal.$wmkTrCon" @ 2319654550960344434u 3701159919126444947u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'WordRep1" 0 "GHC.Types.$tc'AddrRep1" "GHC.Types.[]"
  case ww.s46475.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46476.0 ww2.s46477.0 ww3.s46478.0 ww4.s46479.0 ww5.s46480.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46476.0{- value -} ww2.s46477.0{- value -} ww3.s46478.0 ww4.s46479.0 ww5.s46480.0]

"Data.Typeable.Internal.$dTypeable22" =
  letS ww.s46481.0 = "Data.Typeable.Internal.$wmkTrCon" @ 14566721020672121491u 12053098557973436272u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Int64Rep1" 0 "GHC.Types.$tc'AddrRep1" "GHC.Types.[]"
  case ww.s46481.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46482.0 ww2.s46483.0 ww3.s46484.0 ww4.s46485.0 ww5.s46486.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46482.0{- value -} ww2.s46483.0{- value -} ww3.s46484.0 ww4.s46485.0 ww5.s46486.0]

"Data.Typeable.Internal.$dTypeable23" =
  letS ww.s46487.0 = "Data.Typeable.Internal.$wmkTrCon" @ 7285637290992773088u 13333493731104093526u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Word64Rep1" 0 "GHC.Types.$tc'AddrRep1" "GHC.Types.[]"
  case ww.s46487.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46488.0 ww2.s46489.0 ww3.s46490.0 ww4.s46491.0 ww5.s46492.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46488.0{- value -} ww2.s46489.0{- value -} ww3.s46490.0 ww4.s46491.0 ww5.s46492.0]

"Data.Typeable.Internal.$dTypeable24" =
  letS ww.s46493.0 = "Data.Typeable.Internal.$wmkTrCon" @ 13260046615011703138u 5768022175959643661u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'AddrRep2" 0 "GHC.Types.$tc'AddrRep1" "GHC.Types.[]"
  case ww.s46493.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46494.0 ww2.s46495.0 ww3.s46496.0 ww4.s46497.0 ww5.s46498.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46494.0{- value -} ww2.s46495.0{- value -} ww3.s46496.0 ww4.s46497.0 ww5.s46498.0]

"Data.Typeable.Internal.$dTypeable25" =
  letS ww.s46499.0 = "Data.Typeable.Internal.$wmkTrCon" @ 16100233514953086494u 11309892152729952862u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'FloatRep1" 0 "GHC.Types.$tc'AddrRep1" "GHC.Types.[]"
  case ww.s46499.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46500.0 ww2.s46501.0 ww3.s46502.0 ww4.s46503.0 ww5.s46504.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46500.0{- value -} ww2.s46501.0{- value -} ww3.s46502.0 ww4.s46503.0 ww5.s46504.0]

"Data.Typeable.Internal.$dTypeable26" =
  letS ww.s46505.0 = "Data.Typeable.Internal.$wmkTrCon" @ 15136788248456133214u 2542973289854300647u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'DoubleRep1" 0 "GHC.Types.$tc'AddrRep1" "GHC.Types.[]"
  case ww.s46505.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46506.0 ww2.s46507.0 ww3.s46508.0 ww4.s46509.0 ww5.s46510.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46506.0{- value -} ww2.s46507.0{- value -} ww3.s46508.0 ww4.s46509.0 ww5.s46510.0]

"Data.Typeable.Internal.$dTypeable27" =
  letS ww.s46511.0 = "Data.Typeable.Internal.$wmkTrCon" @ 16896417499213239425u 17941018328399767108u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tcRuntimeRep1" 0 "GHC.Types.krep$*" "GHC.Types.[]"
  case ww.s46511.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46512.0 ww2.s46513.0 ww3.s46514.0 ww4.s46515.0 ww5.s46516.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46512.0{- value -} ww2.s46513.0{- value -} ww3.s46514.0 ww4.s46515.0 ww5.s46516.0]

"Data.Typeable.Internal.$dTypeable28" =
  letS ww.s46523.0 = "Data.Typeable.Internal.$wmkTrCon" @ 8291149181508222008u 8102497587284234673u "GHC.Types.$trModule" "GHC.Types.$tc':2" 1 "GHC.Types.$tc':1" Data.Typeable.Internal.lvl44
  case ww.s46523.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46524.0 ww2.s46525.0 ww3.s46526.0 ww4.s46527.0 ww5.s46528.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46524.0{- value -} ww2.s46525.0{- value -} ww3.s46526.0 ww4.s46527.0 ww5.s46528.0]

"Data.Typeable.Internal.$dTypeable3" =
  letS ww.s46367.0 = "Data.Typeable.Internal.$wmkTrCon" @ 9194034948621217596u 3813387606400768988u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Int8ElemRep1" 0 "GHC.Types.$tc'DoubleElemRep1" "GHC.Types.[]"
  case ww.s46367.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46368.0 ww2.s46369.0 ww3.s46370.0 ww4.s46371.0 ww5.s46372.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46368.0{- value -} ww2.s46369.0{- value -} ww3.s46370.0 ww4.s46371.0 ww5.s46372.0]

"Data.Typeable.Internal.$dTypeable4" =
  letS ww.s46373.0 = "Data.Typeable.Internal.$wmkTrCon" @ 12324835591211728489u 569422348384104869u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Int16ElemRep1" 0 "GHC.Types.$tc'DoubleElemRep1" "GHC.Types.[]"
  case ww.s46373.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46374.0 ww2.s46375.0 ww3.s46376.0 ww4.s46377.0 ww5.s46378.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46374.0{- value -} ww2.s46375.0{- value -} ww3.s46376.0 ww4.s46377.0 ww5.s46378.0]

"Data.Typeable.Internal.$dTypeable5" =
  letS ww.s46379.0 = "Data.Typeable.Internal.$wmkTrCon" @ 867802707030612316u 11912135053702998423u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Int32ElemRep1" 0 "GHC.Types.$tc'DoubleElemRep1" "GHC.Types.[]"
  case ww.s46379.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46380.0 ww2.s46381.0 ww3.s46382.0 ww4.s46383.0 ww5.s46384.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46380.0{- value -} ww2.s46381.0{- value -} ww3.s46382.0 ww4.s46383.0 ww5.s46384.0]

"Data.Typeable.Internal.$dTypeable6" =
  letS ww.s46385.0 = "Data.Typeable.Internal.$wmkTrCon" @ 14864408902934138479u 8560703910045895209u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Int64ElemRep1" 0 "GHC.Types.$tc'DoubleElemRep1" "GHC.Types.[]"
  case ww.s46385.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46386.0 ww2.s46387.0 ww3.s46388.0 ww4.s46389.0 ww5.s46390.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46386.0{- value -} ww2.s46387.0{- value -} ww3.s46388.0 ww4.s46389.0 ww5.s46390.0]

"Data.Typeable.Internal.$dTypeable7" =
  letS ww.s46391.0 = "Data.Typeable.Internal.$wmkTrCon" @ 6185720481729960427u 1695477128451607639u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Word8ElemRep1" 0 "GHC.Types.$tc'DoubleElemRep1" "GHC.Types.[]"
  case ww.s46391.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46392.0 ww2.s46393.0 ww3.s46394.0 ww4.s46395.0 ww5.s46396.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46392.0{- value -} ww2.s46393.0{- value -} ww3.s46394.0 ww4.s46395.0 ww5.s46396.0]

"Data.Typeable.Internal.$dTypeable8" =
  letS ww.s46397.0 = "Data.Typeable.Internal.$wmkTrCon" @ 8592276417630986265u 2739355175822653149u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Word16ElemRep1" 0 "GHC.Types.$tc'DoubleElemRep1" "GHC.Types.[]"
  case ww.s46397.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46398.0 ww2.s46399.0 ww3.s46400.0 ww4.s46401.0 ww5.s46402.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46398.0{- value -} ww2.s46399.0{- value -} ww3.s46400.0 ww4.s46401.0 ww5.s46402.0]

"Data.Typeable.Internal.$dTypeable9" =
  letS ww.s46403.0 = "Data.Typeable.Internal.$wmkTrCon" @ 6347302282357058060u 18010127333503250784u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'Word32ElemRep1" 0 "GHC.Types.$tc'DoubleElemRep1" "GHC.Types.[]"
  case ww.s46403.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46404.0 ww2.s46405.0 ww3.s46406.0 ww4.s46407.0 ww5.s46408.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46404.0{- value -} ww2.s46405.0{- value -} ww3.s46406.0 ww4.s46407.0 ww5.s46408.0]

"Data.Typeable.Internal.$fShowSomeTypeRep" =
  [GHC.Show.C:Show "Data.Typeable.Internal.$fShowSomeTypeRep_$cshowsPrec" "Data.Typeable.Internal.$fShowSomeTypeRep_$cshow" "Data.Typeable.Internal.$fShowSomeTypeRep_$cshowList"]

"Data.Typeable.Internal.$fShowSomeTypeRep1" ds.s46280.0 =
  letS wild.s46281.0 = ds.s46280.0
  case wild.s46281.0 of
    (Data.Typeable.Internal.SomeTypeRep ty.s46282.0) ->
        Data.Typeable.Internal.showTypeable @ "Data.Typeable.Internal.$fShowSomeTypeRep2" ty.s46282.0

"Data.Typeable.Internal.$fShowSomeTypeRep2" =
  ["GHC.Types.I#" 0]

"Data.Typeable.Internal.$fShowSomeTypeRep_$cshow" x.s46277.0 =
  letS wild.s46278.0 = x.s46277.0
  case wild.s46278.0 of
    (Data.Typeable.Internal.SomeTypeRep ty.s46279.0) ->
        Data.Typeable.Internal.showTypeable @ "Data.Typeable.Internal.$fShowSomeTypeRep2" ty.s46279.0 "GHC.Types.[]"

"Data.Typeable.Internal.$fShowSomeTypeRep_$cshowList" ls.s46283.0 s.s46284.0 =
  GHC.Show.showList__ @ "Data.Typeable.Internal.$fShowSomeTypeRep1" ls.s46283.0 s.s46284.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$cshowsPrec" p.s46273.0 ds.s46274.0 =
  letS wild.s46275.0 = ds.s46274.0
  case wild.s46275.0 of
    (Data.Typeable.Internal.SomeTypeRep ty.s46276.0) ->
        Data.Typeable.Internal.showTypeable @ p.s46273.0 ty.s46276.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable" sc.s46766.0 sc1.s46767.0 =
  letS wild.s46768.0 = sc.s46766.0
  let "$j.s46769.0" = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.36" @ sc1.s46767.0{- value -} wild.s46768.0
  letS wild1.s46912.0 = wild.s46768.0
  case wild1.s46912.0 of
    (Data.Typeable.Internal.TrTyCon dt.s46913.0 dt1.s46914.0 ds.s46915.0 ds1.s46916.0 ds2.s46917.0) ->
        "$j.s46769.0" @ ds.s46915.0 "GHC.Types.[]"
    (Data.Typeable.Internal.TrApp dt.s46918.0 dt1.s46919.0 ds.s46920.0 ds1.s46921.0 ds2.s46922.0) ->
        let sat.s46923.0 = [Data.Typeable.Internal.SomeTypeRep ds1.s46921.0]
        letS ww.s46924.0 = "Data.Typeable.Internal.splitApps_$s$wgo" @ ds.s46920.0 sat.s46923.0 "GHC.Types.[]"
        case ww.s46924.0{- value -} of
          ("GHC.Prim.(#,#)" ww1.s46925.0 ww2.s46926.0) ->
              "$j.s46769.0" @ ww1.s46925.0 ww2.s46926.0
    (Data.Typeable.Internal.TrFun dt.s46927.0 dt1.s46928.0 ds.s46929.0 ds1.s46930.0) ->
        let sat.s46932.0 = [Data.Typeable.Internal.SomeTypeRep ds1.s46930.0]
            sat.s46933.0 = [GHC.Types.: sat.s46932.0 "GHC.Types.[]"]
            sat.s46931.0 = [Data.Typeable.Internal.SomeTypeRep ds.s46929.0]
            sat.s46934.0 = [GHC.Types.: sat.s46931.0 sat.s46933.0]
        "$j.s46769.0" @ "Data.Typeable.Internal.$mApp6" sat.s46934.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.0" ww6.s46799.1 =
  "Data.Typeable.Internal.$wshowTyCon" @ ww6.s46799.1

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.1" ipv.s46803.1 ipv1.s46804.1 =
  "Data.Typeable.Internal.$sshowArgs1" @ ipv.s46803.1 ipv1.s46804.1 "Data.Typeable.Internal.$fShowSomeTypeRep"

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.10" f3.s46823.1 g2.s46824.1 x.s46826.0 =
  let sat.s46827.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.9" @ g2.s46824.1 x.s46826.0
      sat.s46828.0 = [GHC.Types.: Data.Typeable.Internal.f sat.s46827.0]
  f3.s46823.1 @ sat.s46828.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.11" g2.s46824.5 x.s46830.2 =
  let sat.s46831.0 = [GHC.Types.: "GHC.Show.$fShow(,)2" x.s46830.2]
  g2.s46824.5 @ sat.s46831.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.12" f3.s46823.3 g2.s46824.4 x.s46830.1 =
  let sat.s46832.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.11" @ g2.s46824.4 x.s46830.1
      sat.s46833.0 = [GHC.Types.: Data.Typeable.Internal.f sat.s46832.0]
  f3.s46823.3 @ sat.s46833.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.13" f3.s46823.2 g2.s46824.3 x.s46830.0 =
  let sat.s46834.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.12" @ f3.s46823.2 g2.s46824.3 x.s46830.0
  [GHC.Types.: "GHC.Show.$fShow(,)4" sat.s46834.0]

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.14" ds1.s46838.1 =
  Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl12 ds1.s46838.1

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.15" ds12.s46839.1 =
  Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl13 ds12.s46839.1

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.16" g2.s46841.3 x.s46843.2 =
  g2.s46841.3 @ x.s46843.2

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.17" g2.s46841.2 x.s46843.1 =
  let sat.s46844.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.16" @ g2.s46841.2 x.s46843.1
  "GHC.CString.unpackAppendCString#" @ Data.Typeable.Internal.lvl6{- value -} sat.s46844.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.18" f3.s46840.1 g2.s46841.1 x.s46843.0 =
  let sat.s46845.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.17" @ g2.s46841.1 x.s46843.0
  f3.s46840.1 @ sat.s46845.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.19" g2.s46841.7 x.s46847.3 =
  let sat.s46848.0 = [GHC.Types.: "GHC.Show.$fShow(,)2" x.s46847.3]
  g2.s46841.7 @ sat.s46848.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.2" g2.s46806.2 x.s46808.1 =
  g2.s46806.2 @ x.s46808.1

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.20" g2.s46841.6 x.s46847.2 =
  let sat.s46849.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.19" @ g2.s46841.6 x.s46847.2
  "GHC.CString.unpackAppendCString#" @ Data.Typeable.Internal.lvl6{- value -} sat.s46849.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.21" f3.s46840.3 g2.s46841.5 x.s46847.1 =
  let sat.s46850.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.20" @ g2.s46841.5 x.s46847.1
  f3.s46840.3 @ sat.s46850.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.22" f3.s46840.2 g2.s46841.4 x.s46847.0 =
  let sat.s46851.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.21" @ f3.s46840.2 g2.s46841.4 x.s46847.0
  [GHC.Types.: "GHC.Show.$fShow(,)4" sat.s46851.0]

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.23" sc1.s46767.3 wild.s46768.3 =
  letS wild3.s46789.0 = wild.s46768.3
  case wild3.s46789.0 of
    (Data.Typeable.Internal.TrTyCon dt.s46790.0 dt1.s46791.0 ds1.s46792.0 ds12.s46793.0 ds13.s46794.0) ->
        letS ww2.s46795.0 = ds1.s46792.0
        case ww2.s46795.0 of
          (GHC.Types.TyCon ww3.s46796.0 ww4.s46797.0 ww5.s46798.0 ww6.s46799.0 ww7.s46800.0 ww8.s46801.0) ->
              letS wild4.s46802.0 = ds12.s46793.0
              case wild4.s46802.0 of
                ("GHC.Types.[]") ->
                    "Data.Typeable.Internal.$wshowTyCon" @ ww6.s46799.0
                (GHC.Types.: ipv.s46803.0 ipv1.s46804.0) ->
                    let f3.s46805.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.0" @ ww6.s46799.0
                        g2.s46806.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.1" @ ipv.s46803.0 ipv1.s46804.0
                    letS lwild.s46807.0 = ">#" @ sc1.s46767.3{- value -} 9
                    case lwild.s46807.0{- value -} of
                      _ ->
                          let sat.s46811.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.3" @ f3.s46805.0 g2.s46806.0
                          sat.s46811.0
                      1 ->
                          let sat.s46817.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.6" @ f3.s46805.0 g2.s46806.0
                          sat.s46817.0
    (Data.Typeable.Internal.TrApp dt.s46818.0 dt1.s46819.0 ds1.s46820.0 ds12.s46821.0 ds13.s46822.0) ->
        let f3.s46823.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.7" @ ds1.s46820.0
            g2.s46824.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.8" @ ds12.s46821.0
        letS lwild.s46825.0 = ">#" @ sc1.s46767.3{- value -} 9
        case lwild.s46825.0{- value -} of
          _ ->
              let sat.s46829.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.10" @ f3.s46823.0 g2.s46824.0
              sat.s46829.0
          1 ->
              let sat.s46835.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.13" @ f3.s46823.0 g2.s46824.0
              sat.s46835.0
    (Data.Typeable.Internal.TrFun dt.s46836.0 dt1.s46837.0 ds1.s46838.0 ds12.s46839.0) ->
        let f3.s46840.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.14" @ ds1.s46838.0
            g2.s46841.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.15" @ ds12.s46839.0
        letS lwild.s46842.0 = ">#" @ sc1.s46767.3{- value -} 8
        case lwild.s46842.0{- value -} of
          _ ->
              let sat.s46846.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.18" @ f3.s46840.0 g2.s46841.0
              sat.s46846.0
          1 ->
              let sat.s46852.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.22" @ f3.s46840.0 g2.s46841.0
              sat.s46852.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.24" a.s46865.1 =
  letS wild7.s46873.0 = a.s46865.1
  case wild7.s46873.0 of
    (Data.Typeable.Internal.SomeTypeRep ty.s46874.0) ->
        Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl17 ty.s46874.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.25" ipv.s46870.1 ipv1.s46871.1 =
  "Data.Typeable.Internal.$sshowArgs" @ ipv.s46870.1 ipv1.s46871.1 "Data.Typeable.Internal.$fShowSomeTypeRep"

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.26" g2.s46875.2 x.s46876.1 =
  g2.s46875.2 @ x.s46876.1

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.27" f4.s46872.1 g2.s46875.1 x.s46876.0 =
  let sat.s46877.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.26" @ g2.s46875.1 x.s46876.0
      sat.s46878.0 = [GHC.Types.: Data.Typeable.Internal.lvl14 sat.s46877.0]
  f4.s46872.1 @ sat.s46878.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.28" ww1.s46771.3 =
  letS wild5.s46864.0 = ww1.s46771.3
  case wild5.s46864.0 of
    ("GHC.Types.[]") ->
        GHC.Base.id
    (GHC.Types.: a.s46865.0 ds16.s46866.0) ->
        letS wild6.s46867.0 = ds16.s46866.0
        case wild6.s46867.0 of
          ("GHC.Types.[]") ->
              letS wild7.s46868.0 = a.s46865.0
              case wild7.s46868.0 of
                (Data.Typeable.Internal.SomeTypeRep ty.s46869.0) ->
                    Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl17 ty.s46869.0
          (GHC.Types.: ipv.s46870.0 ipv1.s46871.0) ->
              let f4.s46872.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.24" @ a.s46865.0
                  g2.s46875.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.25" @ ipv.s46870.0 ipv1.s46871.0
                  sat.s46879.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.27" @ f4.s46872.0 g2.s46875.0
              sat.s46879.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.29" f3.s46863.2 x.s46880.1 =
  let sat.s46881.0 = [GHC.Types.: Data.Typeable.Internal.g x.s46880.1]
  f3.s46863.2 @ sat.s46881.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.3" f3.s46805.1 g2.s46806.1 x.s46808.0 =
  let sat.s46809.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.2" @ g2.s46806.1 x.s46808.0
      sat.s46810.0 = [GHC.Types.: Data.Typeable.Internal.f sat.s46809.0]
  f3.s46805.1 @ sat.s46810.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.30" f3.s46863.1 x.s46880.0 =
  let sat.s46882.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.29" @ f3.s46863.1 x.s46880.0
  [GHC.Types.: Data.Typeable.Internal.f1 sat.s46882.0]

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.31" "$j1.s46788.1" ww1.s46771.2 ww2.s46854.0 w.s46855.0 =
  letS ds1.s46856.0 = ww2.s46854.0{- value -}
  case ds1.s46856.0{- value -} of
    _ ->
        "$j1.s46788.1"
    #'(' ->
        letS wild3.s46857.0 = w.s46855.0
        case wild3.s46857.0 of
          ("GHC.Types.[]") ->
              "$j1.s46788.1"
          (GHC.Types.: ds12.s46858.0 ds13.s46859.0) ->
              letS wild4.s46860.0 = ds12.s46858.0
              case wild4.s46860.0 of
                ("GHC.Types.C#" ds14.s46861.0) ->
                    letS ds15.s46862.0 = ds14.s46861.0{- value -}
                    case ds15.s46862.0{- value -} of
                      _ ->
                          "$j1.s46788.1"
                      #',' ->
                          let f3.s46863.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.28" @ ww1.s46771.2
                              sat.s46883.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.30" @ f3.s46863.0
                          sat.s46883.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.32" ds3.s46776.1 sc1.s46767.2 wild.s46768.2 ww1.s46771.1 void.040.59 =
  let "$j1.s46788.0" = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.23" @ sc1.s46767.2{- value -} wild.s46768.2
      "$w$j.s46853.0" = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.31" @ "$j1.s46788.0" ww1.s46771.1
  letS wild3.s46884.0 = ds3.s46776.1
  case wild3.s46884.0 of
    (GHC.Types.TrNameS s.s46885.0) ->
        letS wild4.s46886.0 = "GHC.CString.unpackCStringUtf8#" @ s.s46885.0{- value -}
        case wild4.s46886.0 of
          ("GHC.Types.[]") ->
              "$j1.s46788.0"
          (GHC.Types.: ds1.s46887.0 ds12.s46888.0) ->
              letS ww2.s46889.0 = ds1.s46887.0
              case ww2.s46889.0 of
                ("GHC.Types.C#" ww3.s46890.0) ->
                    "$w$j.s46853.0" @ ww3.s46890.0{- value -} ds12.s46888.0
    (GHC.Types.TrNameD s.s46891.0) ->
        letS wild4.s46892.0 = s.s46891.0
        case wild4.s46892.0 of
          ("GHC.Types.[]") ->
              "$j1.s46788.0"
          (GHC.Types.: ds1.s46893.0 ds12.s46894.0) ->
              letS ww2.s46895.0 = ds1.s46893.0
              case ww2.s46895.0 of
                ("GHC.Types.C#" ww3.s46896.0) ->
                    "$w$j.s46853.0" @ ww3.s46896.0{- value -} ds12.s46894.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.33" ty.s46900.1 =
  letS wild5.s46904.0 = ty.s46900.1
  case wild5.s46904.0 of
    (Data.Typeable.Internal.SomeTypeRep ty1.s46905.0) ->
        Data.Typeable.Internal.showTypeable @ "GHC.Show.$fShow(,)1" ty1.s46905.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.34" f3.s46903.2 x.s46906.1 =
  let sat.s46907.0 = [GHC.Types.: Data.Typeable.Internal.g1 x.s46906.1]
  f3.s46903.2 @ sat.s46907.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.35" f3.s46903.1 x.s46906.0 =
  let sat.s46908.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.34" @ f3.s46903.1 x.s46906.0
  [GHC.Types.: Data.Typeable.Internal.f2 sat.s46908.0]

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.36" sc1.s46767.1 wild.s46768.1 ww.s46770.0 ww1.s46771.0 =
  letS wild1.s46772.0 = ww.s46770.0
  case wild1.s46772.0 of
    (GHC.Types.TyCon hi1.s46773.0 lo1.s46774.0 ds2.s46775.0 ds3.s46776.0 ds4.s46777.0 ds5.s46778.0) ->
        letS wild2.s46779.0 = Data.Typeable.Internal.lvl33
        case wild2.s46779.0 of
          (GHC.Types.TyCon hi2.s46780.0 lo2.s46781.0 ds6.s46782.0 ds7.s46783.0 ds8.s46784.0 ds9.s46785.0) ->
              let fail.s46786.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.32" @ ds3.s46776.0 sc1.s46767.1{- value -} wild.s46768.1 ww1.s46771.0
              letS lwild.s46897.0 = "eqWord#" @ hi1.s46773.0{- value -} hi2.s46780.0{- value -}
              case lwild.s46897.0{- value -} of
                _ ->
                    fail.s46786.0 @ #"GHC.Prim.void#"
                1 ->
                    letS lwild1.s46898.0 = "eqWord#" @ lo1.s46774.0{- value -} lo2.s46781.0{- value -}
                    case lwild1.s46898.0{- value -} of
                      _ ->
                          fail.s46786.0 @ #"GHC.Prim.void#"
                      1 ->
                          letS wild3.s46899.0 = ww1.s46771.0
                          case wild3.s46899.0 of
                            ("GHC.Types.[]") ->
                                fail.s46786.0 @ #"GHC.Prim.void#"
                            (GHC.Types.: ty.s46900.0 ds.s46901.0) ->
                                letS wild4.s46902.0 = ds.s46901.0
                                case wild4.s46902.0 of
                                  ("GHC.Types.[]") ->
                                      let f3.s46903.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.33" @ ty.s46900.0
                                          sat.s46909.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.35" @ f3.s46903.0
                                      sat.s46909.0
                                  (GHC.Types.: ipv.s46910.0 ipv1.s46911.0) ->
                                      fail.s46786.0 @ #"GHC.Prim.void#"

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.4" g2.s46806.5 x.s46812.2 =
  let sat.s46813.0 = [GHC.Types.: "GHC.Show.$fShow(,)2" x.s46812.2]
  g2.s46806.5 @ sat.s46813.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.5" f3.s46805.3 g2.s46806.4 x.s46812.1 =
  let sat.s46814.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.4" @ g2.s46806.4 x.s46812.1
      sat.s46815.0 = [GHC.Types.: Data.Typeable.Internal.f sat.s46814.0]
  f3.s46805.3 @ sat.s46815.0

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.6" f3.s46805.2 g2.s46806.3 x.s46812.0 =
  let sat.s46816.0 = "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.5" @ f3.s46805.2 g2.s46806.3 x.s46812.0
  [GHC.Types.: "GHC.Show.$fShow(,)4" sat.s46816.0]

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.7" ds1.s46820.1 =
  Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl13 ds1.s46820.1

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.8" ds12.s46821.1 =
  Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl17 ds12.s46821.1

"Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable.closure.9" g2.s46824.2 x.s46826.1 =
  g2.s46824.2 @ x.s46826.1

"Data.Typeable.Internal.$mApp1" =
  letS ww.s46214.0 = "Data.Typeable.Internal.$wmkTrCon" @ 16105171405184389724u 5595830777317938557u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc'LiftedRep1" 0 "GHC.Types.$tc'AddrRep1" "GHC.Types.[]"
  case ww.s46214.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46215.0 ww2.s46216.0 ww3.s46217.0 ww4.s46218.0 ww5.s46219.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46215.0{- value -} ww2.s46216.0{- value -} ww3.s46217.0 ww4.s46218.0 ww5.s46219.0]

"Data.Typeable.Internal.$mApp2" =
  letS ww.s46201.0 = "Data.Typeable.Internal.$wmkTrCon" @ 16277905407886699876u 12502576999761269576u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tcTYPE2" 0 "GHC.Types.$tcTYPE1" "GHC.Types.[]"
  case ww.s46201.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46202.0 ww2.s46203.0 ww3.s46204.0 ww4.s46205.0 ww5.s46206.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46202.0{- value -} ww2.s46203.0{- value -} ww3.s46204.0 ww4.s46205.0 ww5.s46206.0]

"Data.Typeable.Internal.$mApp3" a1.s46935.0 =
  let sat.s46947.0 = "Data.Typeable.Internal.$mApp3.closure.0" @ a1.s46935.0
  letS sat.s46948.0 = "GHC.CString.unpackAppendCString#" @ Data.Typeable.Internal.lvl5{- value -} sat.s46947.0
  GHC.Err.error @ "Data.Typeable.Internal.$dIP3" sat.s46948.0

"Data.Typeable.Internal.$mApp3.closure.0" a1.s46935.1 =
  letS wild.s46936.0 = a1.s46935.1
  case wild.s46936.0 of
    (Data.Typeable.Internal.TrTyCon dt.s46937.0 dt1.s46938.0 ds.s46939.0 ds1.s46940.0 ds2.s46941.0) ->
        "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable" @ ds2.s46941.0 0 "GHC.Types.[]"
    (Data.Typeable.Internal.TrApp dt.s46942.0 dt1.s46943.0 ds.s46944.0 ds1.s46945.0 ds2.s46946.0) ->
        "Data.Typeable.Internal.$fShowSomeTypeRep_$sshowTypeable" @ ds2.s46946.0 0 "GHC.Types.[]"

"Data.Typeable.Internal.$mApp6" =
  letS ww.s46263.0 = "Data.Typeable.Internal.$wmkTrCon" @ 122946601436099267u 10623293127740494908u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tc->2" 2 "GHC.Types.$tc->1" "Data.Typeable.Internal.$mApp7"
  case ww.s46263.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46264.0 ww2.s46265.0 ww3.s46266.0 ww4.s46267.0 ww5.s46268.0) ->
        let sat.s46269.0 = [Data.Typeable.Internal.TrTyCon ww1.s46264.0{- value -} ww2.s46265.0{- value -} ww3.s46266.0 ww4.s46267.0 ww5.s46268.0]
        Data.Typeable.Internal.typeRepTyCon @ sat.s46269.0

"Data.Typeable.Internal.$mApp7" =
  [GHC.Types.: "Data.Typeable.Internal.$mApp9" "Data.Typeable.Internal.$mApp8"]

"Data.Typeable.Internal.$mApp8" =
  [GHC.Types.: "Data.Typeable.Internal.$mApp9" "GHC.Types.[]"]

"Data.Typeable.Internal.$mApp9" =
  [Data.Typeable.Internal.SomeTypeRep "Data.Typeable.Internal.$mApp1"]

"Data.Typeable.Internal.$sshowArgs" sc.s45741.0 sc1.s45742.0 sc2.s45743.0 =
  letS wild.s45744.0 = sc1.s45742.0
  case wild.s45744.0 of
    ("GHC.Types.[]") ->
        GHC.Show.showsPrec @ sc2.s45743.0 Data.Typeable.Internal.lvl17 sc.s45741.0
    (GHC.Types.: ipv.s45745.0 ipv1.s45746.0) ->
        let f3.s45747.0 = "Data.Typeable.Internal.$sshowArgs.closure.0" @ sc.s45741.0 sc2.s45743.0
            g2.s45748.0 = "Data.Typeable.Internal.$sshowArgs.closure.1" @ ipv.s45745.0 ipv1.s45746.0 sc2.s45743.0
            sat.s45752.0 = "Data.Typeable.Internal.$sshowArgs.closure.3" @ f3.s45747.0 g2.s45748.0
        sat.s45752.0

"Data.Typeable.Internal.$sshowArgs.closure.0" sc.s45741.1 sc2.s45743.1 =
  GHC.Show.showsPrec @ sc2.s45743.1 Data.Typeable.Internal.lvl17 sc.s45741.1

"Data.Typeable.Internal.$sshowArgs.closure.1" ipv.s45745.1 ipv1.s45746.1 sc2.s45743.2 =
  "Data.Typeable.Internal.$sshowArgs" @ ipv.s45745.1 ipv1.s45746.1 sc2.s45743.2

"Data.Typeable.Internal.$sshowArgs.closure.2" g2.s45748.2 x.s45749.1 =
  g2.s45748.2 @ x.s45749.1

"Data.Typeable.Internal.$sshowArgs.closure.3" f3.s45747.1 g2.s45748.1 x.s45749.0 =
  let sat.s45750.0 = "Data.Typeable.Internal.$sshowArgs.closure.2" @ g2.s45748.1 x.s45749.0
      sat.s45751.0 = [GHC.Types.: Data.Typeable.Internal.lvl14 sat.s45750.0]
  f3.s45747.1 @ sat.s45751.0

"Data.Typeable.Internal.$sshowArgs1" sc.s45753.0 sc1.s45754.0 sc2.s45755.0 =
  letS wild.s45756.0 = sc1.s45754.0
  case wild.s45756.0 of
    ("GHC.Types.[]") ->
        GHC.Show.showsPrec @ sc2.s45755.0 Data.Typeable.Internal.lvl17 sc.s45753.0
    (GHC.Types.: ipv.s45757.0 ipv1.s45758.0) ->
        let f3.s45759.0 = "Data.Typeable.Internal.$sshowArgs1.closure.0" @ sc.s45753.0 sc2.s45755.0
            g2.s45760.0 = "Data.Typeable.Internal.$sshowArgs1.closure.1" @ ipv.s45757.0 ipv1.s45758.0 sc2.s45755.0
            sat.s45764.0 = "Data.Typeable.Internal.$sshowArgs1.closure.3" @ f3.s45759.0 g2.s45760.0
        sat.s45764.0

"Data.Typeable.Internal.$sshowArgs1.closure.0" sc.s45753.1 sc2.s45755.1 =
  GHC.Show.showsPrec @ sc2.s45755.1 Data.Typeable.Internal.lvl17 sc.s45753.1

"Data.Typeable.Internal.$sshowArgs1.closure.1" ipv.s45757.1 ipv1.s45758.1 sc2.s45755.2 =
  "Data.Typeable.Internal.$sshowArgs1" @ ipv.s45757.1 ipv1.s45758.1 sc2.s45755.2

"Data.Typeable.Internal.$sshowArgs1.closure.2" g2.s45760.2 x.s45761.1 =
  g2.s45760.2 @ x.s45761.1

"Data.Typeable.Internal.$sshowArgs1.closure.3" f3.s45759.1 g2.s45760.1 x.s45761.0 =
  let sat.s45762.0 = "Data.Typeable.Internal.$sshowArgs1.closure.2" @ g2.s45760.1 x.s45761.0
      sat.s45763.0 = [GHC.Types.: Data.Typeable.Internal.f sat.s45762.0]
  f3.s45759.1 @ sat.s45763.0

"Data.Typeable.Internal.$trModule2" =
  #"Data.Typeable.Internal"

"Data.Typeable.Internal.$trModule4" =
  #"base"

"Data.Typeable.Internal.$w$stypeLitTypeRep" w.s46171.0 w1.s46172.0 =
  letS wild.s46173.0 = Data.Typeable.Internal.mkTyConFingerprint @ Data.Typeable.Internal.typeNatTypeRep6 Data.Typeable.Internal.typeNatTypeRep_modl w.s46171.0
  case wild.s46173.0 of
    (GHC.Fingerprint.Type.Fingerprint dt.s46174.0 dt1.s46175.0) ->
        let sat.s46177.0 = [GHC.Types.KindRepTyConApp w1.s46172.0 "GHC.Types.[]"]
            sat.s46176.0 = [GHC.Types.TrNameD w.s46171.0]
        "Data.Typeable.Internal.$wmkTrCon" @ dt.s46174.0{- value -} dt1.s46175.0{- value -} Data.Typeable.Internal.typeNatTypeRep2 sat.s46176.0 0 sat.s46177.0 "GHC.Types.[]"

"Data.Typeable.Internal.$wmkTrCon" ww.s46949.0 ww1.s46950.0 ww2.s46951.0 ww3.s46952.0 ww4.s46953.0 ww5.s46954.0 w.s46955.0 =
  let sat.s46957.0 = "Data.Typeable.Internal.$wmkTrCon.closure.0" @ w.s46955.0
      sat.s46956.0 = [GHC.Fingerprint.Type.Fingerprint ww.s46949.0{- value -} ww1.s46950.0{- value -}]
      sat.s46958.0 = [GHC.Types.: sat.s46956.0 sat.s46957.0]
  letS dt.s46959.0 = GHC.Fingerprint.fingerprintFingerprints @ sat.s46958.0
  case dt.s46959.0 of
    (GHC.Fingerprint.Type.Fingerprint dt1.s46960.0 dt2.s46961.0) ->
        let vars.s46962.0 = "Data.Typeable.Internal.$wmkTrCon.closure.4" @ w.s46955.0 ww4.s46953.0{- value -}
        letrec go2.s47000.0 = "Data.Typeable.Internal.$wmkTrCon.closure.12" @ go2.s47000.0 vars.s46962.0
        letS wild.s47134.0 = go2.s47000.0 @ ww5.s46954.0
        case wild.s47134.0 of
          (Data.Typeable.Internal.SomeTypeRep r.s47135.0) ->
              let sat.s47136.0 = [GHC.Types.TyCon ww.s46949.0{- value -} ww1.s46950.0{- value -} ww2.s46951.0 ww3.s46952.0 ww4.s46953.0{- value -} ww5.s46954.0]
              ["GHC.Prim.(#,,,,#)" dt1.s46960.0{- value -} dt2.s46961.0{- value -} sat.s47136.0 w.s46955.0 r.s47135.0]

"Data.Typeable.Internal.$wmkTrCon.closure.0" w.s46955.1 =
  GHC.Base.map @ Data.Typeable.Internal.someTypeRepFingerprint w.s46955.1

"Data.Typeable.Internal.$wmkTrCon.closure.1" ipv1.s46969.1 u.s46963.2 wild.s46970.1 void.040.60 =
  letS ds2.s46973.0 = "unsafeFreezeArray#" @ ipv1.s46969.1
  case ds2.s46973.0 of
    ("GHC.Prim.Unit#" ipv3.s46975.0) ->
        let sat.s46976.0 = ["GHC.Types.I#" u.s46963.2{- value -}]
            sat.s46977.0 = [GHC.Arr.Array "Data.Typeable.Internal.$fShowSomeTypeRep2" sat.s46976.0 wild.s46970.1{- value -} ipv3.s46975.0]
        ["GHC.Prim.Unit#" sat.s46977.0]

"Data.Typeable.Internal.$wmkTrCon.closure.10" r1.s47085.1 =
  letS wild3.s47086.0 = r1.s47085.1
  case wild3.s47086.0 of
    (Data.Typeable.Internal.TrType) ->
        Data.Typeable.Internal.fpTYPELiftedRep
    (Data.Typeable.Internal.TrTyCon dt3.s47087.0 dt4.s47088.0 ds1.s47089.0 ds2.s47090.0 ds3.s47091.0) ->
        [GHC.Fingerprint.Type.Fingerprint dt3.s47087.0{- value -} dt4.s47088.0{- value -}]
    (Data.Typeable.Internal.TrApp dt3.s47092.0 dt4.s47093.0 ds1.s47094.0 ds2.s47095.0 ds3.s47096.0) ->
        [GHC.Fingerprint.Type.Fingerprint dt3.s47092.0{- value -} dt4.s47093.0{- value -}]
    (Data.Typeable.Internal.TrFun dt3.s47097.0 dt4.s47098.0 ds1.s47099.0 ds2.s47100.0) ->
        [GHC.Fingerprint.Type.Fingerprint dt3.s47097.0{- value -} dt4.s47098.0{- value -}]

"Data.Typeable.Internal.$wmkTrCon.closure.11" s.s47130.1 =
  "GHC.CString.unpackCStringUtf8#" @ s.s47130.1{- value -}

"Data.Typeable.Internal.$wmkTrCon.closure.12" go2.s47000.1 vars.s46962.1 ds.s47001.0 =
  letS wild.s47002.0 = ds.s47001.0
  case wild.s47002.0 of
    (GHC.Types.KindRepTyConApp tc.s47003.0 args.s47004.0) ->
        letS wild1.s47005.0 = tc.s47003.0
        case wild1.s47005.0 of
          (GHC.Types.TyCon ds1.s47006.0 ds2.s47007.0 ds3.s47008.0 ds4.s47009.0 n.s47010.0 ds5.s47011.0) ->
              let "$j.s47012.0" = "Data.Typeable.Internal.$wmkTrCon.closure.8" @ ds1.s47006.0{- value -} ds2.s47007.0{- value -} ds3.s47008.0 ds4.s47009.0 ds5.s47011.0 go2.s47000.1 n.s47010.0{- value -}
              letS lwild.s47045.0 = "<=#" @ n.s47010.0{- value -} 0
              case lwild.s47045.0{- value -} of
                _ ->
                    letS wild2.s47046.0 = args.s47004.0
                    case wild2.s47046.0 of
                      ("GHC.Types.[]") ->
                          "$j.s47012.0" @ "GHC.Types.[]" "GHC.Types.[]"
                      (GHC.Types.: ipv.s47047.0 ipv1.s47048.0) ->
                          letS ds6.s47049.0 = n.s47010.0{- value -}
                          case ds6.s47049.0{- value -} of
                            _ ->
                                letS sat.s47050.0 = "-#" @ ds6.s47049.0{- value -} 1
                                     ww6.s47051.0 = "GHC.List.splitAt_$s$wsplitAt'" @ ipv1.s47048.0 sat.s47050.0{- value -}
                                case ww6.s47051.0{- value -} of
                                  ("GHC.Prim.(#,#)" ww7.s47052.0 ww8.s47053.0) ->
                                      let sat.s47054.0 = [GHC.Types.: ipv.s47047.0 ww7.s47052.0]
                                      "$j.s47012.0" @ sat.s47054.0 ww8.s47053.0
                            1 ->
                                let sat.s47055.0 = [GHC.Types.: ipv.s47047.0 "GHC.Types.[]"]
                                "$j.s47012.0" @ sat.s47055.0 ipv1.s47048.0
                1 ->
                    "$j.s47012.0" @ "GHC.Types.[]" args.s47004.0
    (GHC.Types.KindRepVar dt3.s47056.0) ->
        letS wild1.s47057.0 = vars.s46962.1
        case wild1.s47057.0 of
          (GHC.Arr.Array l.s47058.0 u.s47059.0 dt4.s47060.0 ds1.s47061.0) ->
              letS wild2.s47062.0 = l.s47058.0
              case wild2.s47062.0 of
                ("GHC.Types.I#" m.s47063.0) ->
                    letS wild3.s47064.0 = u.s47059.0
                    case wild3.s47064.0 of
                      ("GHC.Types.I#" n.s47065.0) ->
                          letS lwild.s47066.0 = "<=#" @ m.s47063.0{- value -} dt3.s47056.0{- value -}
                          case lwild.s47066.0{- value -} of
                            _ ->
                                Data.Typeable.Internal.lvl10 @ dt3.s47056.0{- value -} wild2.s47062.0 wild3.s47064.0
                            1 ->
                                letS lwild1.s47068.0 = "<=#" @ dt3.s47056.0{- value -} n.s47065.0{- value -}
                                case lwild1.s47068.0{- value -} of
                                  _ ->
                                      Data.Typeable.Internal.lvl10 @ dt3.s47056.0{- value -} wild2.s47062.0 wild3.s47064.0
                                  1 ->
                                      letS sat.s47070.0 = "-#" @ dt3.s47056.0{- value -} m.s47063.0{- value -}
                                           ds2.s47071.0 = "indexArray#" @ ds1.s47061.0 sat.s47070.0{- value -}
                                      case ds2.s47071.0 of
                                        ("GHC.Prim.Unit#" ipv.s47072.0) ->
                                            ipv.s47072.0
    (GHC.Types.KindRepApp f3.s47073.0 a1.s47074.0) ->
        letS wild1.s47075.0 = go2.s47000.1 @ f3.s47073.0
        case wild1.s47075.0 of
          (Data.Typeable.Internal.SomeTypeRep r.s47076.0) ->
              letS wild2.s47077.0 = go2.s47000.1 @ a1.s47074.0
              case wild2.s47077.0 of
                (Data.Typeable.Internal.SomeTypeRep r1.s47078.0) ->
                    letS dt3.s47079.0 = Data.Typeable.Internal.mkTrApp @ r.s47076.0 r1.s47078.0
                    [Data.Typeable.Internal.SomeTypeRep dt3.s47079.0]
    (GHC.Types.KindRepFun a1.s47080.0 b.s47081.0) ->
        letS wild1.s47082.0 = go2.s47000.1 @ b.s47081.0
        case wild1.s47082.0 of
          (Data.Typeable.Internal.SomeTypeRep r.s47083.0) ->
              letS wild2.s47084.0 = go2.s47000.1 @ a1.s47080.0
              case wild2.s47084.0 of
                (Data.Typeable.Internal.SomeTypeRep r1.s47085.0) ->
                    let sat.s47117.0 = "Data.Typeable.Internal.$wmkTrCon.closure.9" @ r.s47083.0
                        sat.s47118.0 = [GHC.Types.: sat.s47117.0 "GHC.Types.[]"]
                        sat.s47101.0 = "Data.Typeable.Internal.$wmkTrCon.closure.10" @ r1.s47085.0
                        sat.s47119.0 = [GHC.Types.: sat.s47101.0 sat.s47118.0]
                    letS dt3.s47120.0 = GHC.Fingerprint.fingerprintFingerprints @ sat.s47119.0
                    case dt3.s47120.0 of
                      (GHC.Fingerprint.Type.Fingerprint dt4.s47121.0 dt5.s47122.0) ->
                          let sat.s47123.0 = [Data.Typeable.Internal.TrFun dt4.s47121.0{- value -} dt5.s47122.0{- value -} r1.s47085.0 r.s47083.0]
                          [Data.Typeable.Internal.SomeTypeRep sat.s47123.0]
    (GHC.Types.KindRepTYPE ds1.s47124.0) ->
        letS wild1.s47125.0 = ds1.s47124.0
        case wild1.s47125.0 of
          _ ->
              letS wild2.s47126.0 = Data.Typeable.Internal.runtimeRepTypeRep @ wild1.s47125.0
              case wild2.s47126.0 of
                (Data.Typeable.Internal.SomeKindedTypeRep a2.s47127.0) ->
                    letS dt3.s47128.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$mApp2" a2.s47127.0
                    [Data.Typeable.Internal.SomeTypeRep dt3.s47128.0]
          (GHC.Types.LiftedRep) ->
              Data.Typeable.Internal.lvl11
    (GHC.Types.KindRepTypeLitS sort.s47129.0 s.s47130.0) ->
        let sat.s47131.0 = "Data.Typeable.Internal.$wmkTrCon.closure.11" @ s.s47130.0{- value -}
        Data.Typeable.Internal.mkTypeLitFromString @ sort.s47129.0 sat.s47131.0
    (GHC.Types.KindRepTypeLitD sort.s47132.0 s.s47133.0) ->
        Data.Typeable.Internal.mkTypeLitFromString @ sort.s47132.0 s.s47133.0

"Data.Typeable.Internal.$wmkTrCon.closure.2" "$j1.s46971.1" go2.s46978.1 ipv1.s46969.2 wild.s46970.2 ds.s46979.0 eta.s46980.0 void.040.61 =
  letS wild1.s46982.0 = ds.s46979.0
  case wild1.s46982.0 of
    ("GHC.Types.[]") ->
        "$j1.s46971.1" @ #"GHC.Prim.void#"
    (GHC.Types.: y.s46983.0 ys.s46984.0) ->
        letS "s4#.s46985.0" = "writeArray#" @ ipv1.s46969.2 eta.s46980.0{- value -} y.s46983.0
        case "s4#.s46985.0"{- value -} of
          ("GHC.Prim.(##)") ->
              letS sat.s46986.0 = "-#" @ wild.s46970.2{- value -} 1
                   lwild1.s46987.0 = "==#" @ eta.s46980.0{- value -} sat.s46986.0{- value -}
              case lwild1.s46987.0{- value -} of
                _ ->
                    letS sat.s46988.0 = "+#" @ eta.s46980.0{- value -} 1
                    go2.s46978.1 @ ys.s46984.0 sat.s46988.0{- value -} #"GHC.Prim.void#"
                1 ->
                    "$j1.s46971.1" @ #"GHC.Prim.void#"

"Data.Typeable.Internal.$wmkTrCon.closure.3" u.s46963.1 w.s46955.3 x.s46965.0 =
  letS lwild.s46966.0 = "<#" @ x.s46965.0{- value -} 0
  case lwild.s46966.0{- value -} of
    _ ->
        letS ds1.s46967.0 = "newArray#" @ x.s46965.0{- value -} GHC.Arr.arrEleBottom
        case ds1.s46967.0 of
          ("GHC.Prim.Unit#" ipv1.s46969.0) ->
              letS wild.s46970.0 = x.s46965.0{- value -}
              case wild.s46970.0{- value -} of
                _ ->
                    let "$j1.s46971.0" = "Data.Typeable.Internal.$wmkTrCon.closure.1" @ ipv1.s46969.0 u.s46963.1{- value -} wild.s46970.0{- value -}
                    letrec go2.s46978.0 = "Data.Typeable.Internal.$wmkTrCon.closure.2" @ "$j1.s46971.0" go2.s46978.0 ipv1.s46969.0 wild.s46970.0{- value -}
                    go2.s46978.0 @ w.s46955.3 0 #"GHC.Prim.void#"
                0 ->
                    letS ds2.s46989.0 = "unsafeFreezeArray#" @ ipv1.s46969.0
                    case ds2.s46989.0 of
                      ("GHC.Prim.Unit#" ipv3.s46991.0) ->
                          let sat.s46992.0 = ["GHC.Types.I#" u.s46963.1{- value -}]
                              sat.s46993.0 = [GHC.Arr.Array "Data.Typeable.Internal.$fShowSomeTypeRep2" sat.s46992.0 0 ipv3.s46991.0]
                          ["GHC.Prim.Unit#" sat.s46993.0]
    1 ->
        GHC.Arr.negRange

"Data.Typeable.Internal.$wmkTrCon.closure.4" w.s46955.2 ww4.s46953.1 =
  letS u.s46963.0 = "-#" @ ww4.s46953.1{- value -} 1
       ds1.s46997.0 = let "$j.s46964.0" = "Data.Typeable.Internal.$wmkTrCon.closure.3" @ u.s46963.0{- value -} w.s46955.2
       letS lwild.s46995.0 = "<=#" @ 0 u.s46963.0{- value -}
       case lwild.s46995.0{- value -} of
         _ ->
             "$j.s46964.0" @ 0
         1 ->
             letS sat.s46996.0 = "+#" @ u.s46963.0{- value -} 1
             "$j.s46964.0" @ sat.s46996.0{- value -}
  case ds1.s46997.0 of
    ("GHC.Prim.Unit#" ipv1.s46999.0) ->
        ipv1.s46999.0

"Data.Typeable.Internal.$wmkTrCon.closure.5" go2.s47000.3 kind_args.s47013.1 =
  GHC.Base.map @ go2.s47000.3 kind_args.s47013.1

"Data.Typeable.Internal.$wmkTrCon.closure.6" go2.s47000.4 go3.s47023.1 ds6.s47033.0 eta.s47034.0 =
  letS wild2.s47035.0 = ds6.s47033.0
  case wild2.s47035.0 of
    ("GHC.Types.[]") ->
        eta.s47034.0
    (GHC.Types.: y.s47036.0 ys.s47037.0) ->
        letS z.s47038.0 = eta.s47034.0
        case z.s47038.0 of
          (Data.Typeable.Internal.SomeTypeRep ipv2.s47039.0) ->
              letS wild3.s47040.0 = go2.s47000.4 @ y.s47036.0
              case wild3.s47040.0 of
                (Data.Typeable.Internal.SomeTypeRep ty'.s47041.0) ->
                    letS dt3.s47042.0 = Data.Typeable.Internal.mkTrApp @ ipv2.s47039.0 ty'.s47041.0
                    let sat.s47043.0 = [Data.Typeable.Internal.SomeTypeRep dt3.s47042.0]
                    go3.s47023.1 @ ys.s47037.0 sat.s47043.0

"Data.Typeable.Internal.$wmkTrCon.closure.7" go2.s47000.5 go3.s47023.2 sc.s47024.0 sc1.s47025.0 =
  letS wild2.s47026.0 = sc1.s47025.0
  case wild2.s47026.0 of
    ("GHC.Types.[]") ->
        [Data.Typeable.Internal.SomeTypeRep sc.s47024.0]
    (GHC.Types.: y.s47027.0 ys.s47028.0) ->
        letS wild3.s47029.0 = go2.s47000.5 @ y.s47027.0
        case wild3.s47029.0 of
          (Data.Typeable.Internal.SomeTypeRep ty'.s47030.0) ->
              letS dt3.s47031.0 = Data.Typeable.Internal.mkTrApp @ sc.s47024.0 ty'.s47030.0
              let sat.s47032.0 = [Data.Typeable.Internal.SomeTypeRep dt3.s47031.0]
              go3.s47023.2 @ ys.s47028.0 sat.s47032.0

"Data.Typeable.Internal.$wmkTrCon.closure.8" ds1.s47006.1 ds2.s47007.1 ds3.s47008.1 ds4.s47009.1 ds5.s47011.1 go2.s47000.2 n.s47010.1 kind_args.s47013.0 ty_args.s47014.0 =
  let sat.s47015.0 = "Data.Typeable.Internal.$wmkTrCon.closure.5" @ go2.s47000.2 kind_args.s47013.0
  letS ww6.s47016.0 = "Data.Typeable.Internal.$wmkTrCon" @ ds1.s47006.1{- value -} ds2.s47007.1{- value -} ds3.s47008.1 ds4.s47009.1 n.s47010.1{- value -} ds5.s47011.1 sat.s47015.0
  case ww6.s47016.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww7.s47017.0 ww8.s47018.0 ww9.s47019.0 ww10.s47020.0 ww11.s47021.0) ->
        let sat.s47044.0 = [Data.Typeable.Internal.TrTyCon ww7.s47017.0{- value -} ww8.s47018.0{- value -} ww9.s47019.0 ww10.s47020.0 ww11.s47021.0]
        letrec go3.s47023.0 = "Data.Typeable.Internal.$wmkTrCon.closure.6" @ go2.s47000.2 go3.s47023.0
        let "$sgo.s47022.0" = "Data.Typeable.Internal.$wmkTrCon.closure.7" @ go2.s47000.2 go3.s47023.0
        "$sgo.s47022.0" @ sat.s47044.0 ty_args.s47014.0

"Data.Typeable.Internal.$wmkTrCon.closure.9" r.s47083.1 =
  letS wild3.s47102.0 = r.s47083.1
  case wild3.s47102.0 of
    (Data.Typeable.Internal.TrType) ->
        Data.Typeable.Internal.fpTYPELiftedRep
    (Data.Typeable.Internal.TrTyCon dt3.s47103.0 dt4.s47104.0 ds1.s47105.0 ds2.s47106.0 ds3.s47107.0) ->
        [GHC.Fingerprint.Type.Fingerprint dt3.s47103.0{- value -} dt4.s47104.0{- value -}]
    (Data.Typeable.Internal.TrApp dt3.s47108.0 dt4.s47109.0 ds1.s47110.0 ds2.s47111.0 ds3.s47112.0) ->
        [GHC.Fingerprint.Type.Fingerprint dt3.s47108.0{- value -} dt4.s47109.0{- value -}]
    (Data.Typeable.Internal.TrFun dt3.s47113.0 dt4.s47114.0 ds1.s47115.0 ds2.s47116.0) ->
        [GHC.Fingerprint.Type.Fingerprint dt3.s47113.0{- value -} dt4.s47114.0{- value -}]

"Data.Typeable.Internal.$wshowTyCon" ww.s45895.0 =
  let p.s45896.0 = "Data.Typeable.Internal.$wshowTyCon.closure.1" @ ww.s45895.0
      "$w$j.s45901.0" = "Data.Typeable.Internal.$wshowTyCon.closure.4" @ p.s45896.0
  letS wild.s45908.0 = ww.s45895.0
  case wild.s45908.0 of
    (GHC.Types.TrNameS s.s45909.0) ->
        letS wild1.s45910.0 = "GHC.CString.unpackCStringUtf8#" @ s.s45909.0{- value -}
        case wild1.s45910.0 of
          ("GHC.Types.[]") ->
              p.s45896.0
          (GHC.Types.: symb.s45911.0 ds.s45912.0) ->
              "$w$j.s45901.0" @ symb.s45911.0
    (GHC.Types.TrNameD s.s45913.0) ->
        letS wild1.s45914.0 = s.s45913.0
        case wild1.s45914.0 of
          ("GHC.Types.[]") ->
              p.s45896.0
          (GHC.Types.: symb.s45915.0 ds.s45916.0) ->
              "$w$j.s45901.0" @ symb.s45915.0

"Data.Typeable.Internal.$wshowTyCon.closure.0" s.s45898.1 =
  "GHC.CString.unpackCStringUtf8#" @ s.s45898.1{- value -}

"Data.Typeable.Internal.$wshowTyCon.closure.1" ww.s45895.1 =
  letS wild.s45897.0 = ww.s45895.1
  case wild.s45897.0 of
    (GHC.Types.TrNameS s.s45898.0) ->
        let sat.s45899.0 = "Data.Typeable.Internal.$wshowTyCon.closure.0" @ s.s45898.0{- value -}
        "GHC.Base.++" @ sat.s45899.0
    (GHC.Types.TrNameD s.s45900.0) ->
        "GHC.Base.++" @ s.s45900.0

"Data.Typeable.Internal.$wshowTyCon.closure.2" p.s45896.3 x.s45904.1 =
  let sat.s45905.0 = [GHC.Types.: "GHC.Show.$fShow(,)2" x.s45904.1]
  p.s45896.3 @ sat.s45905.0

"Data.Typeable.Internal.$wshowTyCon.closure.3" p.s45896.2 x.s45904.0 =
  let sat.s45906.0 = "Data.Typeable.Internal.$wshowTyCon.closure.2" @ p.s45896.2 x.s45904.0
  [GHC.Types.: "GHC.Show.$fShow(,)4" sat.s45906.0]

"Data.Typeable.Internal.$wshowTyCon.closure.4" p.s45896.1 w.s45902.0 =
  letS wild.s45903.0 = GHC.List.elem @ "GHC.Classes.$fEqChar" w.s45902.0 Data.Typeable.Internal.lvl19
  case wild.s45903.0 of
    (GHC.Types.False) ->
        p.s45896.1
    (GHC.Types.True) ->
        let sat.s45907.0 = "Data.Typeable.Internal.$wshowTyCon.closure.3" @ p.s45896.1
        sat.s45907.0

Data.Typeable.Internal.f =
  ["GHC.Types.C#" #' ']

Data.Typeable.Internal.f1 =
  ["GHC.Types.C#" #'(']

Data.Typeable.Internal.f2 =
  ["GHC.Types.C#" #'[']

Data.Typeable.Internal.fpTYPELiftedRep =
  GHC.Fingerprint.fingerprintFingerprints @ Data.Typeable.Internal.lvl50

Data.Typeable.Internal.g =
  ["GHC.Types.C#" #')']

Data.Typeable.Internal.g1 =
  ["GHC.Types.C#" #']']

Data.Typeable.Internal.go ds.s46529.0 =
  letS wild.s46530.0 = ds.s46529.0
  case wild.s46530.0 of
    ("GHC.Types.[]") ->
        Data.Typeable.Internal.lvl46
    (GHC.Types.: y.s46531.0 ys.s46532.0) ->
        letS wild1.s46533.0 = Data.Typeable.Internal.runtimeRepTypeRep @ y.s46531.0
        case wild1.s46533.0 of
          (Data.Typeable.Internal.SomeKindedTypeRep a1.s46534.0) ->
              letS wild2.s46535.0 = Data.Typeable.Internal.go @ ys.s46532.0
              case wild2.s46535.0 of
                (Data.Typeable.Internal.SomeKindedTypeRep a3.s46536.0) ->
                    let sat.s46538.0 = Data.Typeable.Internal.go.closure.0 @ a1.s46534.0 a3.s46536.0
                    [Data.Typeable.Internal.SomeKindedTypeRep sat.s46538.0]

Data.Typeable.Internal.go.closure.0 a1.s46534.1 a3.s46536.1 =
  letS sat.s46537.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable28" a1.s46534.1
  Data.Typeable.Internal.mkTrApp @ sat.s46537.0 a3.s46536.1

Data.Typeable.Internal.go1 ds.s47150.0 =
  letS wild.s47151.0 = ds.s47150.0
  case wild.s47151.0 of
    ("GHC.Types.[]") ->
        Data.Typeable.Internal.lvl46
    (GHC.Types.: y.s47152.0 ys.s47153.0) ->
        letS wild1.s47154.0 = Data.Typeable.Internal.runtimeRepTypeRep @ y.s47152.0
        case wild1.s47154.0 of
          (Data.Typeable.Internal.SomeKindedTypeRep a1.s47155.0) ->
              letS wild2.s47156.0 = Data.Typeable.Internal.go1 @ ys.s47153.0
              case wild2.s47156.0 of
                (Data.Typeable.Internal.SomeKindedTypeRep a3.s47157.0) ->
                    let sat.s47159.0 = Data.Typeable.Internal.go1.closure.0 @ a1.s47155.0 a3.s47157.0
                    [Data.Typeable.Internal.SomeKindedTypeRep sat.s47159.0]

Data.Typeable.Internal.go1.closure.0 a1.s47155.1 a3.s47157.1 =
  letS sat.s47158.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable28" a1.s47155.1
  Data.Typeable.Internal.mkTrApp @ sat.s47158.0 a3.s47157.1

Data.Typeable.Internal.loc =
  "GHC.CString.unpackCString#" @ "Data.Typeable.Internal.$trModule2"{- value -}

Data.Typeable.Internal.loc1 =
  #"libraries/base/Data/Typeable/Internal.hs"

Data.Typeable.Internal.loc2 =
  "GHC.CString.unpackCString#" @ Data.Typeable.Internal.loc1{- value -}

Data.Typeable.Internal.loc3 =
  ["GHC.Types.I#" 405]

Data.Typeable.Internal.loc4 =
  ["GHC.Types.I#" 17]

Data.Typeable.Internal.loc5 =
  ["GHC.Types.I#" 406]

Data.Typeable.Internal.loc6 =
  ["GHC.Types.I#" 52]

Data.Typeable.Internal.lvl10 dt.s45737.0 l.s45738.0 u.s45739.0 =
  let sat.s45740.0 = ["GHC.Types.I#" dt.s45737.0{- value -}]
  "GHC.Arr.$windexError" @ GHC.Show.showSignedInt l.s45738.0 u.s45739.0 sat.s45740.0 Data.Typeable.Internal.lvl9

Data.Typeable.Internal.lvl11 =
  [Data.Typeable.Internal.SomeTypeRep "Data.Typeable.Internal.$WTrType"]

Data.Typeable.Internal.lvl12 =
  ["GHC.Types.I#" 9]

Data.Typeable.Internal.lvl13 =
  ["GHC.Types.I#" 8]

Data.Typeable.Internal.lvl14 =
  ["GHC.Types.C#" #',']

Data.Typeable.Internal.lvl15 =
  ["GHC.Types.C#" #'*']

Data.Typeable.Internal.lvl16 eta.B1.111 =
  [GHC.Types.: Data.Typeable.Internal.lvl15 eta.B1.111]

Data.Typeable.Internal.lvl17 =
  ["GHC.Types.I#" 10]

Data.Typeable.Internal.lvl18 =
  #"!#$%&*+./<=>?@\\^|-~:"

Data.Typeable.Internal.lvl19 =
  "GHC.CString.unpackCString#" @ Data.Typeable.Internal.lvl18{- value -}

Data.Typeable.Internal.lvl33 =
  letS ww.s46207.0 = "Data.Typeable.Internal.$wmkTrCon" @ 15300440589168157478u 15016221815972113379u "GHC.Types.$trModule" "GHC.Types.$tc[]1" 0 "GHC.Types.krep$*Arr*" "GHC.Types.[]"
  case ww.s46207.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46208.0 ww2.s46209.0 ww3.s46210.0 ww4.s46211.0 ww5.s46212.0) ->
        let sat.s46213.0 = [Data.Typeable.Internal.TrTyCon ww1.s46208.0{- value -} ww2.s46209.0{- value -} ww3.s46210.0 ww4.s46211.0 ww5.s46212.0]
        Data.Typeable.Internal.typeRepTyCon @ sat.s46213.0

Data.Typeable.Internal.lvl34 =
  [Data.Typeable.Internal.SomeKindedTypeRep "Data.Typeable.Internal.$mApp1"]

Data.Typeable.Internal.lvl35 =
  [Data.Typeable.Internal.SomeKindedTypeRep "Data.Typeable.Internal.$dTypeable19"]

Data.Typeable.Internal.lvl36 =
  [Data.Typeable.Internal.SomeKindedTypeRep "Data.Typeable.Internal.$dTypeable20"]

Data.Typeable.Internal.lvl37 =
  [Data.Typeable.Internal.SomeKindedTypeRep "Data.Typeable.Internal.$dTypeable21"]

Data.Typeable.Internal.lvl38 =
  [Data.Typeable.Internal.SomeKindedTypeRep "Data.Typeable.Internal.$dTypeable22"]

Data.Typeable.Internal.lvl39 =
  [Data.Typeable.Internal.SomeKindedTypeRep "Data.Typeable.Internal.$dTypeable23"]

Data.Typeable.Internal.lvl40 =
  [Data.Typeable.Internal.SomeKindedTypeRep "Data.Typeable.Internal.$dTypeable24"]

Data.Typeable.Internal.lvl41 =
  [Data.Typeable.Internal.SomeKindedTypeRep "Data.Typeable.Internal.$dTypeable25"]

Data.Typeable.Internal.lvl42 =
  [Data.Typeable.Internal.SomeKindedTypeRep "Data.Typeable.Internal.$dTypeable26"]

Data.Typeable.Internal.lvl43 =
  [Data.Typeable.Internal.SomeTypeRep "Data.Typeable.Internal.$dTypeable27"]

Data.Typeable.Internal.lvl44 =
  [GHC.Types.: Data.Typeable.Internal.lvl43 "GHC.Types.[]"]

Data.Typeable.Internal.lvl45 =
  letS ww.s46517.0 = "Data.Typeable.Internal.$wmkTrCon" @ 3806001641902838837u 15909392753215318654u "GHC.Types.$trModule" "GHC.Types.$tc'[]2" 1 "GHC.Types.$tc'[]1" Data.Typeable.Internal.lvl44
  case ww.s46517.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46518.0 ww2.s46519.0 ww3.s46520.0 ww4.s46521.0 ww5.s46522.0) ->
        [Data.Typeable.Internal.TrTyCon ww1.s46518.0{- value -} ww2.s46519.0{- value -} ww3.s46520.0 ww4.s46521.0 ww5.s46522.0]

Data.Typeable.Internal.lvl46 =
  [Data.Typeable.Internal.SomeKindedTypeRep Data.Typeable.Internal.lvl45]

Data.Typeable.Internal.lvl47 =
  letS wild.s47137.0 = "Data.Typeable.Internal.$mApp1"
  case wild.s47137.0 of
    (Data.Typeable.Internal.TrTyCon dt.s47138.0 dt1.s47139.0 ds.s47140.0 ds1.s47141.0 ds2.s47142.0) ->
        [GHC.Fingerprint.Type.Fingerprint dt.s47138.0{- value -} dt1.s47139.0{- value -}]

Data.Typeable.Internal.lvl48 =
  [GHC.Types.: Data.Typeable.Internal.lvl47 "GHC.Types.[]"]

Data.Typeable.Internal.lvl49 =
  letS wild.s47143.0 = Data.Typeable.Internal.tyConTYPE
  case wild.s47143.0 of
    (GHC.Types.TyCon hi.s47144.0 lo.s47145.0 ds.s47146.0 ds1.s47147.0 ds2.s47148.0 ds3.s47149.0) ->
        [GHC.Fingerprint.Type.Fingerprint hi.s47144.0{- value -} lo.s47145.0{- value -}]

Data.Typeable.Internal.lvl5 =
  #"Ill-kinded type application: "

Data.Typeable.Internal.lvl50 =
  [GHC.Types.: Data.Typeable.Internal.lvl49 Data.Typeable.Internal.lvl48]

Data.Typeable.Internal.lvl6 =
  #" -> "

Data.Typeable.Internal.lvl8 =
  #"Int"

Data.Typeable.Internal.lvl9 =
  "GHC.CString.unpackCString#" @ Data.Typeable.Internal.lvl8{- value -}

Data.Typeable.Internal.mkTrApp a1.s46220.0 b1.s46221.0 =
  let fail.s46222.0 = Data.Typeable.Internal.mkTrApp.closure.2 @ a1.s46220.0 b1.s46221.0
  letS wild.s46261.0 = Data.Typeable.Internal.sameTypeRep @ a1.s46220.0 "Data.Typeable.Internal.$mApp2"
  case wild.s46261.0 of
    (GHC.Types.False) ->
        fail.s46222.0 @ #"GHC.Prim.void#"
    (GHC.Types.True) ->
        letS wild1.s46262.0 = Data.Typeable.Internal.sameTypeRep @ b1.s46221.0 "Data.Typeable.Internal.$mApp1"
        case wild1.s46262.0 of
          (GHC.Types.False) ->
              fail.s46222.0 @ #"GHC.Prim.void#"
          (GHC.Types.True) ->
              "Data.Typeable.Internal.$WTrType"

Data.Typeable.Internal.mkTrApp.closure.0 b1.s46221.2 =
  Data.Typeable.Internal.typeRepFingerprint @ b1.s46221.2

Data.Typeable.Internal.mkTrApp.closure.1 b1.s46221.3 =
  Data.Typeable.Internal.typeRepFingerprint @ b1.s46221.3

Data.Typeable.Internal.mkTrApp.closure.2 a1.s46220.1 b1.s46221.1 void.040.54 =
  letS wild.s46224.0 = a1.s46220.1
  case wild.s46224.0 of
    (Data.Typeable.Internal.TrTyCon dt.s46225.0 dt1.s46226.0 ds1.s46227.0 ds2.s46228.0 ds3.s46229.0) ->
        letS wild1.s46230.0 = ds3.s46229.0
        case wild1.s46230.0 of
          _ ->
              "Data.Typeable.Internal.$mApp3" @ wild.s46224.0
          (Data.Typeable.Internal.TrFun dt2.s46231.0 dt3.s46232.0 ds4.s46233.0 ds5.s46234.0) ->
              let sat.s46236.0 = Data.Typeable.Internal.mkTrApp.closure.0 @ b1.s46221.1
                  sat.s46237.0 = [GHC.Types.: sat.s46236.0 "GHC.Types.[]"]
                  sat.s46235.0 = [GHC.Fingerprint.Type.Fingerprint dt.s46225.0{- value -} dt1.s46226.0{- value -}]
                  sat.s46238.0 = [GHC.Types.: sat.s46235.0 sat.s46237.0]
              letS dt4.s46239.0 = GHC.Fingerprint.fingerprintFingerprints @ sat.s46238.0
              case dt4.s46239.0 of
                (GHC.Fingerprint.Type.Fingerprint dt5.s46240.0 dt6.s46241.0) ->
                    letS dt7.s46242.0 = b1.s46221.1
                    [Data.Typeable.Internal.TrApp dt5.s46240.0{- value -} dt6.s46241.0{- value -} wild.s46224.0 dt7.s46242.0 ds5.s46234.0]
    (Data.Typeable.Internal.TrApp dt.s46243.0 dt1.s46244.0 ds1.s46245.0 ds2.s46246.0 ds3.s46247.0) ->
        letS wild1.s46248.0 = ds3.s46247.0
        case wild1.s46248.0 of
          _ ->
              "Data.Typeable.Internal.$mApp3" @ wild.s46224.0
          (Data.Typeable.Internal.TrFun dt2.s46249.0 dt3.s46250.0 ds4.s46251.0 ds5.s46252.0) ->
              let sat.s46254.0 = Data.Typeable.Internal.mkTrApp.closure.1 @ b1.s46221.1
                  sat.s46255.0 = [GHC.Types.: sat.s46254.0 "GHC.Types.[]"]
                  sat.s46253.0 = [GHC.Fingerprint.Type.Fingerprint dt.s46243.0{- value -} dt1.s46244.0{- value -}]
                  sat.s46256.0 = [GHC.Types.: sat.s46253.0 sat.s46255.0]
              letS dt4.s46257.0 = GHC.Fingerprint.fingerprintFingerprints @ sat.s46256.0
              case dt4.s46257.0 of
                (GHC.Fingerprint.Type.Fingerprint dt5.s46258.0 dt6.s46259.0) ->
                    letS dt7.s46260.0 = b1.s46221.1
                    [Data.Typeable.Internal.TrApp dt5.s46258.0{- value -} dt6.s46259.0{- value -} wild.s46224.0 dt7.s46260.0 ds5.s46252.0]

Data.Typeable.Internal.mkTyConFingerprint pkg_name.s46042.0 mod_name.s46043.0 tycon_name.s46044.0 =
  let sat.s46047.0 = Data.Typeable.Internal.mkTyConFingerprint.closure.0 @ tycon_name.s46044.0
      sat.s46048.0 = [GHC.Types.: sat.s46047.0 "GHC.Types.[]"]
      sat.s46046.0 = Data.Typeable.Internal.mkTyConFingerprint.closure.1 @ mod_name.s46043.0
      sat.s46049.0 = [GHC.Types.: sat.s46046.0 sat.s46048.0]
      sat.s46045.0 = Data.Typeable.Internal.mkTyConFingerprint.closure.2 @ pkg_name.s46042.0
      sat.s46050.0 = [GHC.Types.: sat.s46045.0 sat.s46049.0]
  GHC.Fingerprint.fingerprintFingerprints @ sat.s46050.0

Data.Typeable.Internal.mkTyConFingerprint.closure.0 tycon_name.s46044.1 =
  GHC.Fingerprint.fingerprintString @ tycon_name.s46044.1

Data.Typeable.Internal.mkTyConFingerprint.closure.1 mod_name.s46043.1 =
  GHC.Fingerprint.fingerprintString @ mod_name.s46043.1

Data.Typeable.Internal.mkTyConFingerprint.closure.2 pkg_name.s46042.1 =
  GHC.Fingerprint.fingerprintString @ pkg_name.s46042.1

Data.Typeable.Internal.mkTypeLitFromString ds.s46184.0 s.s46185.0 =
  letS wild.s46186.0 = ds.s46184.0
  case wild.s46186.0 of
    (GHC.Types.TypeLitSymbol) ->
        letS ww.s46187.0 = "Data.Typeable.Internal.$w$stypeLitTypeRep" @ s.s46185.0 Data.Typeable.Internal.tcSymbol
        case ww.s46187.0{- value -} of
          ("GHC.Prim.(#,,,,#)" ww1.s46188.0 ww2.s46189.0 ww3.s46190.0 ww4.s46191.0 ww5.s46192.0) ->
              let sat.s46193.0 = [Data.Typeable.Internal.TrTyCon ww1.s46188.0{- value -} ww2.s46189.0{- value -} ww3.s46190.0 ww4.s46191.0 ww5.s46192.0]
              [Data.Typeable.Internal.SomeTypeRep sat.s46193.0]
    (GHC.Types.TypeLitNat) ->
        letS ww.s46194.0 = "Data.Typeable.Internal.$w$stypeLitTypeRep" @ s.s46185.0 Data.Typeable.Internal.tcSymbol
        case ww.s46194.0{- value -} of
          ("GHC.Prim.(#,,,,#)" ww1.s46195.0 ww2.s46196.0 ww3.s46197.0 ww4.s46198.0 ww5.s46199.0) ->
              let sat.s46200.0 = [Data.Typeable.Internal.TrTyCon ww1.s46195.0{- value -} ww2.s46196.0{- value -} ww3.s46197.0 ww4.s46198.0 ww5.s46199.0]
              [Data.Typeable.Internal.SomeTypeRep sat.s46200.0]

Data.Typeable.Internal.runtimeRepTypeRep r.s46539.0 =
  letS wild.s46540.0 = r.s46539.0
  case wild.s46540.0 of
    (GHC.Types.VecRep c.s46541.0 e.s46542.0) ->
        let "$j.s46543.0" = Data.Typeable.Internal.runtimeRepTypeRep.closure.10 @ e.s46542.0
        letS wild1.s46566.0 = c.s46541.0
        case wild1.s46566.0 of
          (GHC.Types.Vec2) ->
              "$j.s46543.0" @ "Data.Typeable.Internal.$dTypeable13"
          (GHC.Types.Vec4) ->
              "$j.s46543.0" @ "Data.Typeable.Internal.$dTypeable14"
          (GHC.Types.Vec8) ->
              "$j.s46543.0" @ "Data.Typeable.Internal.$dTypeable15"
          (GHC.Types.Vec16) ->
              "$j.s46543.0" @ "Data.Typeable.Internal.$dTypeable16"
          (GHC.Types.Vec32) ->
              "$j.s46543.0" @ "Data.Typeable.Internal.$dTypeable17"
          (GHC.Types.Vec64) ->
              "$j.s46543.0" @ "Data.Typeable.Internal.$dTypeable18"
    (GHC.Types.TupleRep rs.s46567.0) ->
        letS wild1.s46568.0 = Data.Typeable.Internal.go1 @ rs.s46567.0
        case wild1.s46568.0 of
          (Data.Typeable.Internal.SomeKindedTypeRep a1.s46569.0) ->
              let sat.s46570.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.11 @ a1.s46569.0
              [Data.Typeable.Internal.SomeKindedTypeRep sat.s46570.0]
    (GHC.Types.SumRep rs.s46571.0) ->
        letS wild1.s46572.0 = Data.Typeable.Internal.go @ rs.s46571.0
        case wild1.s46572.0 of
          (Data.Typeable.Internal.SomeKindedTypeRep a1.s46573.0) ->
              let sat.s46574.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.12 @ a1.s46573.0
              [Data.Typeable.Internal.SomeKindedTypeRep sat.s46574.0]
    (GHC.Types.LiftedRep) ->
        Data.Typeable.Internal.lvl34
    (GHC.Types.UnliftedRep) ->
        Data.Typeable.Internal.lvl35
    (GHC.Types.IntRep) ->
        Data.Typeable.Internal.lvl36
    (GHC.Types.WordRep) ->
        Data.Typeable.Internal.lvl37
    (GHC.Types.Int64Rep) ->
        Data.Typeable.Internal.lvl38
    (GHC.Types.Word64Rep) ->
        Data.Typeable.Internal.lvl39
    (GHC.Types.AddrRep) ->
        Data.Typeable.Internal.lvl40
    (GHC.Types.FloatRep) ->
        Data.Typeable.Internal.lvl41
    (GHC.Types.DoubleRep) ->
        Data.Typeable.Internal.lvl42

Data.Typeable.Internal.runtimeRepTypeRep.closure.0 a1.s46544.1 =
  letS sat.s46546.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable" a1.s46544.1
  Data.Typeable.Internal.mkTrApp @ sat.s46546.0 "Data.Typeable.Internal.$dTypeable3"

Data.Typeable.Internal.runtimeRepTypeRep.closure.1 a1.s46544.2 =
  letS sat.s46548.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable" a1.s46544.2
  Data.Typeable.Internal.mkTrApp @ sat.s46548.0 "Data.Typeable.Internal.$dTypeable4"

Data.Typeable.Internal.runtimeRepTypeRep.closure.10 e.s46542.1 a1.s46544.0 =
  letS wild1.s46545.0 = e.s46542.1
  case wild1.s46545.0 of
    (GHC.Types.Int8ElemRep) ->
        let sat.s46547.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.0 @ a1.s46544.0
        [Data.Typeable.Internal.SomeKindedTypeRep sat.s46547.0]
    (GHC.Types.Int16ElemRep) ->
        let sat.s46549.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.1 @ a1.s46544.0
        [Data.Typeable.Internal.SomeKindedTypeRep sat.s46549.0]
    (GHC.Types.Int32ElemRep) ->
        let sat.s46551.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.2 @ a1.s46544.0
        [Data.Typeable.Internal.SomeKindedTypeRep sat.s46551.0]
    (GHC.Types.Int64ElemRep) ->
        let sat.s46553.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.3 @ a1.s46544.0
        [Data.Typeable.Internal.SomeKindedTypeRep sat.s46553.0]
    (GHC.Types.Word8ElemRep) ->
        let sat.s46555.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.4 @ a1.s46544.0
        [Data.Typeable.Internal.SomeKindedTypeRep sat.s46555.0]
    (GHC.Types.Word16ElemRep) ->
        let sat.s46557.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.5 @ a1.s46544.0
        [Data.Typeable.Internal.SomeKindedTypeRep sat.s46557.0]
    (GHC.Types.Word32ElemRep) ->
        let sat.s46559.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.6 @ a1.s46544.0
        [Data.Typeable.Internal.SomeKindedTypeRep sat.s46559.0]
    (GHC.Types.Word64ElemRep) ->
        let sat.s46561.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.7 @ a1.s46544.0
        [Data.Typeable.Internal.SomeKindedTypeRep sat.s46561.0]
    (GHC.Types.FloatElemRep) ->
        let sat.s46563.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.8 @ a1.s46544.0
        [Data.Typeable.Internal.SomeKindedTypeRep sat.s46563.0]
    (GHC.Types.DoubleElemRep) ->
        let sat.s46565.0 = Data.Typeable.Internal.runtimeRepTypeRep.closure.9 @ a1.s46544.0
        [Data.Typeable.Internal.SomeKindedTypeRep sat.s46565.0]

Data.Typeable.Internal.runtimeRepTypeRep.closure.11 a1.s46569.1 =
  Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable1" a1.s46569.1

Data.Typeable.Internal.runtimeRepTypeRep.closure.12 a1.s46573.1 =
  Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable2" a1.s46573.1

Data.Typeable.Internal.runtimeRepTypeRep.closure.2 a1.s46544.3 =
  letS sat.s46550.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable" a1.s46544.3
  Data.Typeable.Internal.mkTrApp @ sat.s46550.0 "Data.Typeable.Internal.$dTypeable5"

Data.Typeable.Internal.runtimeRepTypeRep.closure.3 a1.s46544.4 =
  letS sat.s46552.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable" a1.s46544.4
  Data.Typeable.Internal.mkTrApp @ sat.s46552.0 "Data.Typeable.Internal.$dTypeable6"

Data.Typeable.Internal.runtimeRepTypeRep.closure.4 a1.s46544.5 =
  letS sat.s46554.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable" a1.s46544.5
  Data.Typeable.Internal.mkTrApp @ sat.s46554.0 "Data.Typeable.Internal.$dTypeable7"

Data.Typeable.Internal.runtimeRepTypeRep.closure.5 a1.s46544.6 =
  letS sat.s46556.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable" a1.s46544.6
  Data.Typeable.Internal.mkTrApp @ sat.s46556.0 "Data.Typeable.Internal.$dTypeable8"

Data.Typeable.Internal.runtimeRepTypeRep.closure.6 a1.s46544.7 =
  letS sat.s46558.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable" a1.s46544.7
  Data.Typeable.Internal.mkTrApp @ sat.s46558.0 "Data.Typeable.Internal.$dTypeable9"

Data.Typeable.Internal.runtimeRepTypeRep.closure.7 a1.s46544.8 =
  letS sat.s46560.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable" a1.s46544.8
  Data.Typeable.Internal.mkTrApp @ sat.s46560.0 "Data.Typeable.Internal.$dTypeable10"

Data.Typeable.Internal.runtimeRepTypeRep.closure.8 a1.s46544.9 =
  letS sat.s46562.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable" a1.s46544.9
  Data.Typeable.Internal.mkTrApp @ sat.s46562.0 "Data.Typeable.Internal.$dTypeable11"

Data.Typeable.Internal.runtimeRepTypeRep.closure.9 a1.s46544.10 =
  letS sat.s46564.0 = Data.Typeable.Internal.mkTrApp @ "Data.Typeable.Internal.$dTypeable" a1.s46544.10
  Data.Typeable.Internal.mkTrApp @ sat.s46564.0 "Data.Typeable.Internal.$dTypeable12"

Data.Typeable.Internal.sameTypeRep a1.s46084.0 b1.s46085.0 =
  let "$j.s46086.0" = Data.Typeable.Internal.sameTypeRep.closure.0 @ b1.s46085.0
  letS wild.s46115.0 = a1.s46084.0
  case wild.s46115.0 of
    (Data.Typeable.Internal.TrType) ->
        letS wild1.s46116.0 = Data.Typeable.Internal.fpTYPELiftedRep
        case wild1.s46116.0 of
          (GHC.Fingerprint.Type.Fingerprint dt.s46117.0 dt1.s46118.0) ->
              "$j.s46086.0" @ dt.s46117.0{- value -} dt1.s46118.0{- value -}
    (Data.Typeable.Internal.TrTyCon dt.s46119.0 dt1.s46120.0 ds.s46121.0 ds1.s46122.0 ds2.s46123.0) ->
        "$j.s46086.0" @ dt.s46119.0{- value -} dt1.s46120.0{- value -}
    (Data.Typeable.Internal.TrApp dt.s46124.0 dt1.s46125.0 ds.s46126.0 ds1.s46127.0 ds2.s46128.0) ->
        "$j.s46086.0" @ dt.s46124.0{- value -} dt1.s46125.0{- value -}
    (Data.Typeable.Internal.TrFun dt.s46129.0 dt1.s46130.0 ds.s46131.0 ds1.s46132.0) ->
        "$j.s46086.0" @ dt.s46129.0{- value -} dt1.s46130.0{- value -}

Data.Typeable.Internal.sameTypeRep.closure.0 b1.s46085.1 dt.s46087.0 dt1.s46088.0 =
  letS wild.s46089.0 = b1.s46085.1
  case wild.s46089.0 of
    (Data.Typeable.Internal.TrType) ->
        letS wild1.s46090.0 = Data.Typeable.Internal.fpTYPELiftedRep
        case wild1.s46090.0 of
          (GHC.Fingerprint.Type.Fingerprint dt2.s46091.0 dt3.s46092.0) ->
              letS lwild.s46093.0 = "eqWord#" @ dt.s46087.0{- value -} dt2.s46091.0{- value -}
              case lwild.s46093.0{- value -} of
                _ ->
                    [GHC.Types.False]
                1 ->
                    letS sat.s46094.0 = "eqWord#" @ dt1.s46088.0{- value -} dt3.s46092.0{- value -}
                    case sat.s46094.0{- value -} of
                      0 ->
                          [GHC.Types.False]
                      1 ->
                          [GHC.Types.True]
    (Data.Typeable.Internal.TrTyCon dt2.s46095.0 dt3.s46096.0 ds.s46097.0 ds1.s46098.0 ds2.s46099.0) ->
        letS lwild.s46100.0 = "eqWord#" @ dt.s46087.0{- value -} dt2.s46095.0{- value -}
        case lwild.s46100.0{- value -} of
          _ ->
              [GHC.Types.False]
          1 ->
              letS sat.s46101.0 = "eqWord#" @ dt1.s46088.0{- value -} dt3.s46096.0{- value -}
              case sat.s46101.0{- value -} of
                0 ->
                    [GHC.Types.False]
                1 ->
                    [GHC.Types.True]
    (Data.Typeable.Internal.TrApp dt2.s46102.0 dt3.s46103.0 ds.s46104.0 ds1.s46105.0 ds2.s46106.0) ->
        letS lwild.s46107.0 = "eqWord#" @ dt.s46087.0{- value -} dt2.s46102.0{- value -}
        case lwild.s46107.0{- value -} of
          _ ->
              [GHC.Types.False]
          1 ->
              letS sat.s46108.0 = "eqWord#" @ dt1.s46088.0{- value -} dt3.s46103.0{- value -}
              case sat.s46108.0{- value -} of
                0 ->
                    [GHC.Types.False]
                1 ->
                    [GHC.Types.True]
    (Data.Typeable.Internal.TrFun dt2.s46109.0 dt3.s46110.0 ds.s46111.0 ds1.s46112.0) ->
        letS lwild.s46113.0 = "eqWord#" @ dt.s46087.0{- value -} dt2.s46109.0{- value -}
        case lwild.s46113.0{- value -} of
          _ ->
              [GHC.Types.False]
          1 ->
              letS sat.s46114.0 = "eqWord#" @ dt1.s46088.0{- value -} dt3.s46110.0{- value -}
              case sat.s46114.0{- value -} of
                0 ->
                    [GHC.Types.False]
                1 ->
                    [GHC.Types.True]

Data.Typeable.Internal.showTypeable ds.s46591.0 ds1.s46592.0 =
  letS wild.s46593.0 = ds1.s46592.0
  case wild.s46593.0 of
    _ ->
        let "$j.s46594.0" = Data.Typeable.Internal.showTypeable.closure.36 @ ds.s46591.0 wild.s46593.0
        letS wild1.s46743.0 = wild.s46593.0
        case wild1.s46743.0 of
          (Data.Typeable.Internal.TrTyCon dt.s46744.0 dt1.s46745.0 ds2.s46746.0 ds3.s46747.0 ds4.s46748.0) ->
              "$j.s46594.0" @ ds2.s46746.0 "GHC.Types.[]"
          (Data.Typeable.Internal.TrApp dt.s46749.0 dt1.s46750.0 ds2.s46751.0 ds3.s46752.0 ds4.s46753.0) ->
              let sat.s46754.0 = [Data.Typeable.Internal.SomeTypeRep ds3.s46752.0]
              letS ww.s46755.0 = "Data.Typeable.Internal.splitApps_$s$wgo" @ ds2.s46751.0 sat.s46754.0 "GHC.Types.[]"
              case ww.s46755.0{- value -} of
                ("GHC.Prim.(#,#)" ww1.s46756.0 ww2.s46757.0) ->
                    "$j.s46594.0" @ ww1.s46756.0 ww2.s46757.0
          (Data.Typeable.Internal.TrFun dt.s46758.0 dt1.s46759.0 ds2.s46760.0 ds3.s46761.0) ->
              let sat.s46763.0 = [Data.Typeable.Internal.SomeTypeRep ds3.s46761.0]
                  sat.s46764.0 = [GHC.Types.: sat.s46763.0 "GHC.Types.[]"]
                  sat.s46762.0 = [Data.Typeable.Internal.SomeTypeRep ds2.s46760.0]
                  sat.s46765.0 = [GHC.Types.: sat.s46762.0 sat.s46764.0]
              "$j.s46594.0" @ "Data.Typeable.Internal.$mApp6" sat.s46765.0
    (Data.Typeable.Internal.TrType) ->
        Data.Typeable.Internal.lvl16

Data.Typeable.Internal.showTypeable.closure.0 ww6.s46624.1 =
  "Data.Typeable.Internal.$wshowTyCon" @ ww6.s46624.1

Data.Typeable.Internal.showTypeable.closure.1 ipv.s46628.1 ipv1.s46629.1 =
  "Data.Typeable.Internal.$sshowArgs1" @ ipv.s46628.1 ipv1.s46629.1 "Data.Typeable.Internal.$fShowSomeTypeRep"

Data.Typeable.Internal.showTypeable.closure.10 f3.s46652.1 g2.s46653.1 x1.s46655.0 =
  let sat.s46656.0 = Data.Typeable.Internal.showTypeable.closure.9 @ g2.s46653.1 x1.s46655.0
      sat.s46657.0 = [GHC.Types.: Data.Typeable.Internal.f sat.s46656.0]
  f3.s46652.1 @ sat.s46657.0

Data.Typeable.Internal.showTypeable.closure.11 g2.s46653.5 x1.s46659.2 =
  let sat.s46660.0 = [GHC.Types.: "GHC.Show.$fShow(,)2" x1.s46659.2]
  g2.s46653.5 @ sat.s46660.0

Data.Typeable.Internal.showTypeable.closure.12 f3.s46652.3 g2.s46653.4 x1.s46659.1 =
  let sat.s46661.0 = Data.Typeable.Internal.showTypeable.closure.11 @ g2.s46653.4 x1.s46659.1
      sat.s46662.0 = [GHC.Types.: Data.Typeable.Internal.f sat.s46661.0]
  f3.s46652.3 @ sat.s46662.0

Data.Typeable.Internal.showTypeable.closure.13 f3.s46652.2 g2.s46653.3 x1.s46659.0 =
  let sat.s46663.0 = Data.Typeable.Internal.showTypeable.closure.12 @ f3.s46652.2 g2.s46653.3 x1.s46659.0
  [GHC.Types.: "GHC.Show.$fShow(,)4" sat.s46663.0]

Data.Typeable.Internal.showTypeable.closure.14 ds13.s46667.1 =
  Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl12 ds13.s46667.1

Data.Typeable.Internal.showTypeable.closure.15 ds14.s46668.1 =
  Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl13 ds14.s46668.1

Data.Typeable.Internal.showTypeable.closure.16 g2.s46672.3 x1.s46674.2 =
  g2.s46672.3 @ x1.s46674.2

Data.Typeable.Internal.showTypeable.closure.17 g2.s46672.2 x1.s46674.1 =
  let sat.s46675.0 = Data.Typeable.Internal.showTypeable.closure.16 @ g2.s46672.2 x1.s46674.1
  "GHC.CString.unpackAppendCString#" @ Data.Typeable.Internal.lvl6{- value -} sat.s46675.0

Data.Typeable.Internal.showTypeable.closure.18 f3.s46671.1 g2.s46672.1 x1.s46674.0 =
  let sat.s46676.0 = Data.Typeable.Internal.showTypeable.closure.17 @ g2.s46672.1 x1.s46674.0
  f3.s46671.1 @ sat.s46676.0

Data.Typeable.Internal.showTypeable.closure.19 g2.s46672.7 x1.s46678.3 =
  let sat.s46679.0 = [GHC.Types.: "GHC.Show.$fShow(,)2" x1.s46678.3]
  g2.s46672.7 @ sat.s46679.0

Data.Typeable.Internal.showTypeable.closure.2 g2.s46633.2 x1.s46635.1 =
  g2.s46633.2 @ x1.s46635.1

Data.Typeable.Internal.showTypeable.closure.20 g2.s46672.6 x1.s46678.2 =
  let sat.s46680.0 = Data.Typeable.Internal.showTypeable.closure.19 @ g2.s46672.6 x1.s46678.2
  "GHC.CString.unpackAppendCString#" @ Data.Typeable.Internal.lvl6{- value -} sat.s46680.0

Data.Typeable.Internal.showTypeable.closure.21 f3.s46671.3 g2.s46672.5 x1.s46678.1 =
  let sat.s46681.0 = Data.Typeable.Internal.showTypeable.closure.20 @ g2.s46672.5 x1.s46678.1
  f3.s46671.3 @ sat.s46681.0

Data.Typeable.Internal.showTypeable.closure.22 f3.s46671.2 g2.s46672.4 x1.s46678.0 =
  let sat.s46682.0 = Data.Typeable.Internal.showTypeable.closure.21 @ f3.s46671.2 g2.s46672.4 x1.s46678.0
  [GHC.Types.: "GHC.Show.$fShow(,)4" sat.s46682.0]

Data.Typeable.Internal.showTypeable.closure.23 ds.s46591.3 wild.s46593.3 =
  letS wild3.s46614.0 = wild.s46593.3
  case wild3.s46614.0 of
    (Data.Typeable.Internal.TrTyCon dt.s46615.0 dt1.s46616.0 ds13.s46617.0 ds14.s46618.0 ds15.s46619.0) ->
        letS ww2.s46620.0 = ds13.s46617.0
        case ww2.s46620.0 of
          (GHC.Types.TyCon ww3.s46621.0 ww4.s46622.0 ww5.s46623.0 ww6.s46624.0 ww7.s46625.0 ww8.s46626.0) ->
              letS wild4.s46627.0 = ds14.s46618.0
              case wild4.s46627.0 of
                ("GHC.Types.[]") ->
                    "Data.Typeable.Internal.$wshowTyCon" @ ww6.s46624.0
                (GHC.Types.: ipv.s46628.0 ipv1.s46629.0) ->
                    letS wild5.s46630.0 = ds.s46591.3
                    case wild5.s46630.0 of
                      ("GHC.Types.I#" x.s46631.0) ->
                          let f3.s46632.0 = Data.Typeable.Internal.showTypeable.closure.0 @ ww6.s46624.0
                              g2.s46633.0 = Data.Typeable.Internal.showTypeable.closure.1 @ ipv.s46628.0 ipv1.s46629.0
                          letS lwild.s46634.0 = ">#" @ x.s46631.0{- value -} 9
                          case lwild.s46634.0{- value -} of
                            _ ->
                                let sat.s46638.0 = Data.Typeable.Internal.showTypeable.closure.3 @ f3.s46632.0 g2.s46633.0
                                sat.s46638.0
                            1 ->
                                let sat.s46644.0 = Data.Typeable.Internal.showTypeable.closure.6 @ f3.s46632.0 g2.s46633.0
                                sat.s46644.0
    (Data.Typeable.Internal.TrApp dt.s46645.0 dt1.s46646.0 ds13.s46647.0 ds14.s46648.0 ds15.s46649.0) ->
        letS wild4.s46650.0 = ds.s46591.3
        case wild4.s46650.0 of
          ("GHC.Types.I#" x.s46651.0) ->
              let f3.s46652.0 = Data.Typeable.Internal.showTypeable.closure.7 @ ds13.s46647.0
                  g2.s46653.0 = Data.Typeable.Internal.showTypeable.closure.8 @ ds14.s46648.0
              letS lwild.s46654.0 = ">#" @ x.s46651.0{- value -} 9
              case lwild.s46654.0{- value -} of
                _ ->
                    let sat.s46658.0 = Data.Typeable.Internal.showTypeable.closure.10 @ f3.s46652.0 g2.s46653.0
                    sat.s46658.0
                1 ->
                    let sat.s46664.0 = Data.Typeable.Internal.showTypeable.closure.13 @ f3.s46652.0 g2.s46653.0
                    sat.s46664.0
    (Data.Typeable.Internal.TrFun dt.s46665.0 dt1.s46666.0 ds13.s46667.0 ds14.s46668.0) ->
        letS wild4.s46669.0 = ds.s46591.3
        case wild4.s46669.0 of
          ("GHC.Types.I#" x.s46670.0) ->
              let f3.s46671.0 = Data.Typeable.Internal.showTypeable.closure.14 @ ds13.s46667.0
                  g2.s46672.0 = Data.Typeable.Internal.showTypeable.closure.15 @ ds14.s46668.0
              letS lwild.s46673.0 = ">#" @ x.s46670.0{- value -} 8
              case lwild.s46673.0{- value -} of
                _ ->
                    let sat.s46677.0 = Data.Typeable.Internal.showTypeable.closure.18 @ f3.s46671.0 g2.s46672.0
                    sat.s46677.0
                1 ->
                    let sat.s46683.0 = Data.Typeable.Internal.showTypeable.closure.22 @ f3.s46671.0 g2.s46672.0
                    sat.s46683.0

Data.Typeable.Internal.showTypeable.closure.24 a1.s46696.1 =
  letS wild7.s46704.0 = a1.s46696.1
  case wild7.s46704.0 of
    (Data.Typeable.Internal.SomeTypeRep ty.s46705.0) ->
        Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl17 ty.s46705.0

Data.Typeable.Internal.showTypeable.closure.25 ipv.s46701.1 ipv1.s46702.1 =
  "Data.Typeable.Internal.$sshowArgs" @ ipv.s46701.1 ipv1.s46702.1 "Data.Typeable.Internal.$fShowSomeTypeRep"

Data.Typeable.Internal.showTypeable.closure.26 g2.s46706.2 x.s46707.1 =
  g2.s46706.2 @ x.s46707.1

Data.Typeable.Internal.showTypeable.closure.27 f4.s46703.1 g2.s46706.1 x.s46707.0 =
  let sat.s46708.0 = Data.Typeable.Internal.showTypeable.closure.26 @ g2.s46706.1 x.s46707.0
      sat.s46709.0 = [GHC.Types.: Data.Typeable.Internal.lvl14 sat.s46708.0]
  f4.s46703.1 @ sat.s46709.0

Data.Typeable.Internal.showTypeable.closure.28 ww1.s46596.3 =
  letS wild5.s46695.0 = ww1.s46596.3
  case wild5.s46695.0 of
    ("GHC.Types.[]") ->
        GHC.Base.id
    (GHC.Types.: a1.s46696.0 ds18.s46697.0) ->
        letS wild6.s46698.0 = ds18.s46697.0
        case wild6.s46698.0 of
          ("GHC.Types.[]") ->
              letS wild7.s46699.0 = a1.s46696.0
              case wild7.s46699.0 of
                (Data.Typeable.Internal.SomeTypeRep ty.s46700.0) ->
                    Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl17 ty.s46700.0
          (GHC.Types.: ipv.s46701.0 ipv1.s46702.0) ->
              let f4.s46703.0 = Data.Typeable.Internal.showTypeable.closure.24 @ a1.s46696.0
                  g2.s46706.0 = Data.Typeable.Internal.showTypeable.closure.25 @ ipv.s46701.0 ipv1.s46702.0
                  sat.s46710.0 = Data.Typeable.Internal.showTypeable.closure.27 @ f4.s46703.0 g2.s46706.0
              sat.s46710.0

Data.Typeable.Internal.showTypeable.closure.29 f3.s46694.2 x.s46711.1 =
  let sat.s46712.0 = [GHC.Types.: Data.Typeable.Internal.g x.s46711.1]
  f3.s46694.2 @ sat.s46712.0

Data.Typeable.Internal.showTypeable.closure.3 f3.s46632.1 g2.s46633.1 x1.s46635.0 =
  let sat.s46636.0 = Data.Typeable.Internal.showTypeable.closure.2 @ g2.s46633.1 x1.s46635.0
      sat.s46637.0 = [GHC.Types.: Data.Typeable.Internal.f sat.s46636.0]
  f3.s46632.1 @ sat.s46637.0

Data.Typeable.Internal.showTypeable.closure.30 f3.s46694.1 x.s46711.0 =
  let sat.s46713.0 = Data.Typeable.Internal.showTypeable.closure.29 @ f3.s46694.1 x.s46711.0
  [GHC.Types.: Data.Typeable.Internal.f1 sat.s46713.0]

Data.Typeable.Internal.showTypeable.closure.31 "$j1.s46613.1" ww1.s46596.2 ww2.s46685.0 w.s46686.0 =
  letS ds13.s46687.0 = ww2.s46685.0{- value -}
  case ds13.s46687.0{- value -} of
    _ ->
        "$j1.s46613.1"
    #'(' ->
        letS wild3.s46688.0 = w.s46686.0
        case wild3.s46688.0 of
          ("GHC.Types.[]") ->
              "$j1.s46613.1"
          (GHC.Types.: ds14.s46689.0 ds15.s46690.0) ->
              letS wild4.s46691.0 = ds14.s46689.0
              case wild4.s46691.0 of
                ("GHC.Types.C#" ds16.s46692.0) ->
                    letS ds17.s46693.0 = ds16.s46692.0{- value -}
                    case ds17.s46693.0{- value -} of
                      _ ->
                          "$j1.s46613.1"
                      #',' ->
                          let f3.s46694.0 = Data.Typeable.Internal.showTypeable.closure.28 @ ww1.s46596.2
                              sat.s46714.0 = Data.Typeable.Internal.showTypeable.closure.30 @ f3.s46694.0
                          sat.s46714.0

Data.Typeable.Internal.showTypeable.closure.32 ds.s46591.2 ds3.s46601.1 wild.s46593.2 ww1.s46596.1 void.040.58 =
  let "$j1.s46613.0" = Data.Typeable.Internal.showTypeable.closure.23 @ ds.s46591.2 wild.s46593.2
      "$w$j.s46684.0" = Data.Typeable.Internal.showTypeable.closure.31 @ "$j1.s46613.0" ww1.s46596.1
  letS wild3.s46715.0 = ds3.s46601.1
  case wild3.s46715.0 of
    (GHC.Types.TrNameS s.s46716.0) ->
        letS wild4.s46717.0 = "GHC.CString.unpackCStringUtf8#" @ s.s46716.0{- value -}
        case wild4.s46717.0 of
          ("GHC.Types.[]") ->
              "$j1.s46613.0"
          (GHC.Types.: ds13.s46718.0 ds14.s46719.0) ->
              letS ww2.s46720.0 = ds13.s46718.0
              case ww2.s46720.0 of
                ("GHC.Types.C#" ww3.s46721.0) ->
                    "$w$j.s46684.0" @ ww3.s46721.0{- value -} ds14.s46719.0
    (GHC.Types.TrNameD s.s46722.0) ->
        letS wild4.s46723.0 = s.s46722.0
        case wild4.s46723.0 of
          ("GHC.Types.[]") ->
              "$j1.s46613.0"
          (GHC.Types.: ds13.s46724.0 ds14.s46725.0) ->
              letS ww2.s46726.0 = ds13.s46724.0
              case ww2.s46726.0 of
                ("GHC.Types.C#" ww3.s46727.0) ->
                    "$w$j.s46684.0" @ ww3.s46727.0{- value -} ds14.s46725.0

Data.Typeable.Internal.showTypeable.closure.33 ty.s46731.1 =
  letS wild5.s46735.0 = ty.s46731.1
  case wild5.s46735.0 of
    (Data.Typeable.Internal.SomeTypeRep ty1.s46736.0) ->
        Data.Typeable.Internal.showTypeable @ "GHC.Show.$fShow(,)1" ty1.s46736.0

Data.Typeable.Internal.showTypeable.closure.34 f3.s46734.2 x.s46737.1 =
  let sat.s46738.0 = [GHC.Types.: Data.Typeable.Internal.g1 x.s46737.1]
  f3.s46734.2 @ sat.s46738.0

Data.Typeable.Internal.showTypeable.closure.35 f3.s46734.1 x.s46737.0 =
  let sat.s46739.0 = Data.Typeable.Internal.showTypeable.closure.34 @ f3.s46734.1 x.s46737.0
  [GHC.Types.: Data.Typeable.Internal.f2 sat.s46739.0]

Data.Typeable.Internal.showTypeable.closure.36 ds.s46591.1 wild.s46593.1 ww.s46595.0 ww1.s46596.0 =
  letS wild1.s46597.0 = ww.s46595.0
  case wild1.s46597.0 of
    (GHC.Types.TyCon hi1.s46598.0 lo1.s46599.0 ds2.s46600.0 ds3.s46601.0 ds4.s46602.0 ds5.s46603.0) ->
        letS wild2.s46604.0 = Data.Typeable.Internal.lvl33
        case wild2.s46604.0 of
          (GHC.Types.TyCon hi2.s46605.0 lo2.s46606.0 ds6.s46607.0 ds7.s46608.0 ds8.s46609.0 ds9.s46610.0) ->
              let fail.s46611.0 = Data.Typeable.Internal.showTypeable.closure.32 @ ds.s46591.1 ds3.s46601.0 wild.s46593.1 ww1.s46596.0
              letS lwild.s46728.0 = "eqWord#" @ hi1.s46598.0{- value -} hi2.s46605.0{- value -}
              case lwild.s46728.0{- value -} of
                _ ->
                    fail.s46611.0 @ #"GHC.Prim.void#"
                1 ->
                    letS lwild1.s46729.0 = "eqWord#" @ lo1.s46599.0{- value -} lo2.s46606.0{- value -}
                    case lwild1.s46729.0{- value -} of
                      _ ->
                          fail.s46611.0 @ #"GHC.Prim.void#"
                      1 ->
                          letS wild3.s46730.0 = ww1.s46596.0
                          case wild3.s46730.0 of
                            ("GHC.Types.[]") ->
                                fail.s46611.0 @ #"GHC.Prim.void#"
                            (GHC.Types.: ty.s46731.0 ds12.s46732.0) ->
                                letS wild4.s46733.0 = ds12.s46732.0
                                case wild4.s46733.0 of
                                  ("GHC.Types.[]") ->
                                      let f3.s46734.0 = Data.Typeable.Internal.showTypeable.closure.33 @ ty.s46731.0
                                          sat.s46740.0 = Data.Typeable.Internal.showTypeable.closure.35 @ f3.s46734.0
                                      sat.s46740.0
                                  (GHC.Types.: ipv.s46741.0 ipv1.s46742.0) ->
                                      fail.s46611.0 @ #"GHC.Prim.void#"

Data.Typeable.Internal.showTypeable.closure.4 g2.s46633.5 x1.s46639.2 =
  let sat.s46640.0 = [GHC.Types.: "GHC.Show.$fShow(,)2" x1.s46639.2]
  g2.s46633.5 @ sat.s46640.0

Data.Typeable.Internal.showTypeable.closure.5 f3.s46632.3 g2.s46633.4 x1.s46639.1 =
  let sat.s46641.0 = Data.Typeable.Internal.showTypeable.closure.4 @ g2.s46633.4 x1.s46639.1
      sat.s46642.0 = [GHC.Types.: Data.Typeable.Internal.f sat.s46641.0]
  f3.s46632.3 @ sat.s46642.0

Data.Typeable.Internal.showTypeable.closure.6 f3.s46632.2 g2.s46633.3 x1.s46639.0 =
  let sat.s46643.0 = Data.Typeable.Internal.showTypeable.closure.5 @ f3.s46632.2 g2.s46633.3 x1.s46639.0
  [GHC.Types.: "GHC.Show.$fShow(,)4" sat.s46643.0]

Data.Typeable.Internal.showTypeable.closure.7 ds13.s46647.1 =
  Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl13 ds13.s46647.1

Data.Typeable.Internal.showTypeable.closure.8 ds14.s46648.1 =
  Data.Typeable.Internal.showTypeable @ Data.Typeable.Internal.lvl17 ds14.s46648.1

Data.Typeable.Internal.showTypeable.closure.9 g2.s46653.2 x1.s46655.1 =
  g2.s46653.2 @ x1.s46655.1

Data.Typeable.Internal.someTypeRepFingerprint ds.s46133.0 =
  letS wild.s46134.0 = ds.s46133.0
  case wild.s46134.0 of
    (Data.Typeable.Internal.SomeTypeRep t.s46135.0) ->
        letS wild1.s46136.0 = t.s46135.0
        case wild1.s46136.0 of
          (Data.Typeable.Internal.TrType) ->
              Data.Typeable.Internal.fpTYPELiftedRep
          (Data.Typeable.Internal.TrTyCon dt.s46137.0 dt1.s46138.0 ds1.s46139.0 ds2.s46140.0 ds3.s46141.0) ->
              [GHC.Fingerprint.Type.Fingerprint dt.s46137.0{- value -} dt1.s46138.0{- value -}]
          (Data.Typeable.Internal.TrApp dt.s46142.0 dt1.s46143.0 ds1.s46144.0 ds2.s46145.0 ds3.s46146.0) ->
              [GHC.Fingerprint.Type.Fingerprint dt.s46142.0{- value -} dt1.s46143.0{- value -}]
          (Data.Typeable.Internal.TrFun dt.s46147.0 dt1.s46148.0 ds1.s46149.0 ds2.s46150.0) ->
              [GHC.Fingerprint.Type.Fingerprint dt.s46147.0{- value -} dt1.s46148.0{- value -}]

Data.Typeable.Internal.splitApps10 =
  #"GHC.Prim"

Data.Typeable.Internal.splitApps11 =
  [GHC.Types.TrNameD Data.Typeable.Internal.splitApps_pkg]

Data.Typeable.Internal.splitApps3 =
  [GHC.Types.KindRepFun Data.Typeable.Internal.splitApps5 Data.Typeable.Internal.splitApps4]

Data.Typeable.Internal.splitApps4 =
  [GHC.Types.KindRepTYPE GHC.Types.LiftedRep]

Data.Typeable.Internal.splitApps5 =
  [GHC.Types.KindRepTyConApp Data.Typeable.Internal.splitApps_liftedRepTyCon "GHC.Types.[]"]

Data.Typeable.Internal.splitApps6 =
  [GHC.Types.TrNameD Data.Typeable.Internal.splitApps_name]

Data.Typeable.Internal.splitApps7 =
  #"TYPE"

Data.Typeable.Internal.splitApps8 =
  [GHC.Types.Module Data.Typeable.Internal.splitApps11 Data.Typeable.Internal.splitApps9]

Data.Typeable.Internal.splitApps9 =
  [GHC.Types.TrNameD Data.Typeable.Internal.splitApps_modl]

"Data.Typeable.Internal.splitApps_$s$wgo" sc.s46051.0 sc1.s46052.0 sc2.s46053.0 =
  letS wild.s46054.0 = sc.s46051.0
  case wild.s46054.0 of
    (Data.Typeable.Internal.TrTyCon dt.s46055.0 dt1.s46056.0 ds.s46057.0 ds1.s46058.0 ds2.s46059.0) ->
        let sat.s46060.0 = [GHC.Types.: sc1.s46052.0 sc2.s46053.0]
        ["GHC.Prim.(#,#)" ds.s46057.0 sat.s46060.0]
    (Data.Typeable.Internal.TrApp dt.s46061.0 dt1.s46062.0 ds.s46063.0 ds1.s46064.0 ds2.s46065.0) ->
        let sat.s46067.0 = [GHC.Types.: sc1.s46052.0 sc2.s46053.0]
            sat.s46066.0 = [Data.Typeable.Internal.SomeTypeRep ds1.s46064.0]
        "Data.Typeable.Internal.splitApps_$s$wgo" @ ds.s46063.0 sat.s46066.0 sat.s46067.0

Data.Typeable.Internal.splitApps_liftedRepTyCon =
  letS ww.s46151.0 = "Data.Typeable.Internal.$wmkTrCon" @ 16896417499213239425u 17941018328399767108u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tcRuntimeRep1" 0 "GHC.Types.krep$*" "GHC.Types.[]"
  case ww.s46151.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46152.0 ww2.s46153.0 ww3.s46154.0 ww4.s46155.0 ww5.s46156.0) ->
        let sat.s46157.0 = [Data.Typeable.Internal.TrTyCon ww1.s46152.0{- value -} ww2.s46153.0{- value -} ww3.s46154.0 ww4.s46155.0 ww5.s46156.0]
        Data.Typeable.Internal.typeRepTyCon @ sat.s46157.0

Data.Typeable.Internal.splitApps_modl =
  "GHC.CString.unpackCString#" @ Data.Typeable.Internal.splitApps10{- value -}

Data.Typeable.Internal.splitApps_name =
  "GHC.CString.unpackCString#" @ Data.Typeable.Internal.splitApps7{- value -}

Data.Typeable.Internal.splitApps_pkg =
  letS wild.s46158.0 = Data.Typeable.Internal.splitApps_liftedRepTyCon
  case wild.s46158.0 of
    (GHC.Types.TyCon ds.s46159.0 ds1.s46160.0 m.s46161.0 ds2.s46162.0 ds3.s46163.0 ds4.s46164.0) ->
        letS wild1.s46165.0 = m.s46161.0
        case wild1.s46165.0 of
          (GHC.Types.Module p.s46166.0 ds5.s46167.0) ->
              letS wild2.s46168.0 = p.s46166.0
              case wild2.s46168.0 of
                (GHC.Types.TrNameS s.s46169.0) ->
                    "GHC.CString.unpackCStringUtf8#" @ s.s46169.0{- value -}
                (GHC.Types.TrNameD s.s46170.0) ->
                    s.s46170.0

Data.Typeable.Internal.tcSymbol =
  letS ww.s46178.0 = "Data.Typeable.Internal.$wmkTrCon" @ 1607066643426143658u 4132086080390950439u "GHC.Types.$trModule" "GHC.Types.$tcSymbol1" 0 "GHC.Types.krep$*" "GHC.Types.[]"
  case ww.s46178.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww1.s46179.0 ww2.s46180.0 ww3.s46181.0 ww4.s46182.0 ww5.s46183.0) ->
        ww3.s46181.0

Data.Typeable.Internal.tyConTYPE =
  letS wild.s46270.0 = Data.Typeable.Internal.mkTyConFingerprint @ Data.Typeable.Internal.splitApps_pkg Data.Typeable.Internal.splitApps_modl Data.Typeable.Internal.splitApps_name
  case wild.s46270.0 of
    (GHC.Fingerprint.Type.Fingerprint dt.s46271.0 dt1.s46272.0) ->
        [GHC.Types.TyCon dt.s46271.0{- value -} dt1.s46272.0{- value -} Data.Typeable.Internal.splitApps8 Data.Typeable.Internal.splitApps6 0 Data.Typeable.Internal.splitApps3]

Data.Typeable.Internal.typeNatTypeRep2 =
  [GHC.Types.Module Data.Typeable.Internal.typeNatTypeRep5 Data.Typeable.Internal.typeNatTypeRep3]

Data.Typeable.Internal.typeNatTypeRep3 =
  [GHC.Types.TrNameD Data.Typeable.Internal.typeNatTypeRep_modl]

Data.Typeable.Internal.typeNatTypeRep4 =
  #"GHC.TypeLits"

Data.Typeable.Internal.typeNatTypeRep5 =
  [GHC.Types.TrNameD Data.Typeable.Internal.typeNatTypeRep6]

Data.Typeable.Internal.typeNatTypeRep6 =
  "GHC.CString.unpackCString#" @ "Data.Typeable.Internal.$trModule4"{- value -}

Data.Typeable.Internal.typeNatTypeRep_modl =
  "GHC.CString.unpackCString#" @ Data.Typeable.Internal.typeNatTypeRep4{- value -}

Data.Typeable.Internal.typeRepFingerprint ds.s46068.0 =
  letS wild.s46069.0 = ds.s46068.0
  case wild.s46069.0 of
    (Data.Typeable.Internal.TrType) ->
        Data.Typeable.Internal.fpTYPELiftedRep
    (Data.Typeable.Internal.TrTyCon dt.s46070.0 dt1.s46071.0 ds1.s46072.0 ds2.s46073.0 ds3.s46074.0) ->
        [GHC.Fingerprint.Type.Fingerprint dt.s46070.0{- value -} dt1.s46071.0{- value -}]
    (Data.Typeable.Internal.TrApp dt.s46075.0 dt1.s46076.0 ds1.s46077.0 ds2.s46078.0 ds3.s46079.0) ->
        [GHC.Fingerprint.Type.Fingerprint dt.s46075.0{- value -} dt1.s46076.0{- value -}]
    (Data.Typeable.Internal.TrFun dt.s46080.0 dt1.s46081.0 ds1.s46082.0 ds2.s46083.0) ->
        [GHC.Fingerprint.Type.Fingerprint dt.s46080.0{- value -} dt1.s46081.0{- value -}]

Data.Typeable.Internal.typeRepTyCon ds.s46575.0 =
  letS wild.s46576.0 = ds.s46575.0
  case wild.s46576.0 of
    (Data.Typeable.Internal.TrType) ->
        Data.Typeable.Internal.tyConTYPE
    (Data.Typeable.Internal.TrTyCon dt.s46577.0 dt1.s46578.0 ds1.s46579.0 ds2.s46580.0 ds3.s46581.0) ->
        ds1.s46579.0
    (Data.Typeable.Internal.TrApp dt.s46582.0 dt1.s46583.0 ds1.s46584.0 ds2.s46585.0 ds3.s46586.0) ->
        Data.Typeable.Internal.typeRepTyCon @ ds1.s46584.0
    (Data.Typeable.Internal.TrFun dt.s46587.0 dt1.s46588.0 ds1.s46589.0 ds2.s46590.0) ->
        "Data.Typeable.Internal.$mApp6"

"Foreign.C.Error.$werrnoToIOError" w.s23728.0 ww.s23729.0 w1.s23730.0 w2.s23731.0 =
  letS ds.s23748.0 = letS s'.s23732.0 = "noDuplicate#" @
       case s'.s23732.0{- value -} of
         ("GHC.Prim.(##)") ->
             letS wild.s23734.0 = strerror @ ww.s23729.0{- value -}
             case wild.s23734.0{- value -} of
               ("GHC.Prim.Unit#" ds1.s23736.0) ->
                   letS ds2.s23737.0 = GHC.IO.Encoding.getForeignEncoding @ #"GHC.Prim.void#"
                   case ds2.s23737.0 of
                     ("GHC.Prim.Unit#" ipv1.s23739.0) ->
                         letS ds3.s23740.0 = "GHC.Foreign.$wpeekCString" @ ipv1.s23739.0 ds1.s23736.0{- value -} #"GHC.Prim.void#"
                         case ds3.s23740.0 of
                           ("GHC.Prim.Unit#" ipv3.s23742.0) ->
                               let sat.s23745.0 = ["GHC.Int.I32#" ww.s23729.0{- value -}]
                                   sat.s23746.0 = [GHC.Maybe.Just sat.s23745.0]
                                   sat.s23744.0 = "Foreign.C.Error.$werrnoToIOError.closure.0" @ ww.s23729.0{- value -}
                                   sat.s23747.0 = [GHC.IO.Exception.IOError w1.s23730.0 sat.s23744.0 w.s23728.0 ipv3.s23742.0 sat.s23746.0 w2.s23731.0]
                               ["GHC.Prim.Unit#" sat.s23747.0]
  case ds.s23748.0 of
    ("GHC.Prim.Unit#" ipv1.s23750.0) ->
        ipv1.s23750.0

"Foreign.C.Error.$werrnoToIOError.closure.0" ww.s23729.1 =
  letS wild1.s23743.0 = ww.s23729.1{- value -}
  case wild1.s23743.0{- value -} of
    _ ->
        [GHC.IO.Exception.OtherError]
    1 ->
        [GHC.IO.Exception.PermissionDenied]
    2 ->
        [GHC.IO.Exception.NoSuchThing]
    3 ->
        [GHC.IO.Exception.NoSuchThing]
    4 ->
        [GHC.IO.Exception.Interrupted]
    5 ->
        [GHC.IO.Exception.HardwareFault]
    6 ->
        [GHC.IO.Exception.NoSuchThing]
    7 ->
        [GHC.IO.Exception.ResourceExhausted]
    8 ->
        [GHC.IO.Exception.InvalidArgument]
    9 ->
        [GHC.IO.Exception.InvalidArgument]
    10 ->
        [GHC.IO.Exception.NoSuchThing]
    11 ->
        [GHC.IO.Exception.ResourceExhausted]
    12 ->
        [GHC.IO.Exception.ResourceExhausted]
    13 ->
        [GHC.IO.Exception.PermissionDenied]
    15 ->
        [GHC.IO.Exception.InvalidArgument]
    16 ->
        [GHC.IO.Exception.ResourceBusy]
    17 ->
        [GHC.IO.Exception.AlreadyExists]
    18 ->
        [GHC.IO.Exception.UnsupportedOperation]
    19 ->
        [GHC.IO.Exception.UnsupportedOperation]
    20 ->
        [GHC.IO.Exception.InappropriateType]
    21 ->
        [GHC.IO.Exception.InappropriateType]
    22 ->
        [GHC.IO.Exception.InvalidArgument]
    23 ->
        [GHC.IO.Exception.ResourceExhausted]
    24 ->
        [GHC.IO.Exception.ResourceExhausted]
    25 ->
        [GHC.IO.Exception.IllegalOperation]
    26 ->
        [GHC.IO.Exception.ResourceBusy]
    27 ->
        [GHC.IO.Exception.PermissionDenied]
    28 ->
        [GHC.IO.Exception.ResourceExhausted]
    29 ->
        [GHC.IO.Exception.UnsupportedOperation]
    30 ->
        [GHC.IO.Exception.PermissionDenied]
    31 ->
        [GHC.IO.Exception.ResourceExhausted]
    32 ->
        [GHC.IO.Exception.ResourceVanished]
    33 ->
        [GHC.IO.Exception.InvalidArgument]
    34 ->
        [GHC.IO.Exception.UnsupportedOperation]
    35 ->
        [GHC.IO.Exception.ResourceBusy]
    36 ->
        [GHC.IO.Exception.InvalidArgument]
    37 ->
        [GHC.IO.Exception.ResourceExhausted]
    38 ->
        [GHC.IO.Exception.UnsupportedOperation]
    39 ->
        [GHC.IO.Exception.UnsatisfiedConstraints]
    40 ->
        [GHC.IO.Exception.InvalidArgument]
    42 ->
        [GHC.IO.Exception.NoSuchThing]
    43 ->
        [GHC.IO.Exception.ResourceVanished]
    60 ->
        [GHC.IO.Exception.InvalidArgument]
    61 ->
        [GHC.IO.Exception.NoSuchThing]
    62 ->
        [GHC.IO.Exception.TimeExpired]
    63 ->
        [GHC.IO.Exception.ResourceExhausted]
    64 ->
        [GHC.IO.Exception.NoSuchThing]
    66 ->
        [GHC.IO.Exception.IllegalOperation]
    67 ->
        [GHC.IO.Exception.ResourceVanished]
    69 ->
        [GHC.IO.Exception.UnsatisfiedConstraints]
    70 ->
        [GHC.IO.Exception.ResourceVanished]
    71 ->
        [GHC.IO.Exception.ProtocolError]
    72 ->
        [GHC.IO.Exception.UnsupportedOperation]
    74 ->
        [GHC.IO.Exception.InappropriateType]
    78 ->
        [GHC.IO.Exception.ResourceVanished]
    84 ->
        [GHC.IO.Exception.InvalidArgument]
    87 ->
        [GHC.IO.Exception.ResourceExhausted]
    88 ->
        [GHC.IO.Exception.InvalidArgument]
    89 ->
        [GHC.IO.Exception.InvalidArgument]
    90 ->
        [GHC.IO.Exception.ResourceExhausted]
    91 ->
        [GHC.IO.Exception.ProtocolError]
    92 ->
        [GHC.IO.Exception.UnsupportedOperation]
    93 ->
        [GHC.IO.Exception.ProtocolError]
    94 ->
        [GHC.IO.Exception.UnsupportedOperation]
    95 ->
        [GHC.IO.Exception.UnsupportedOperation]
    96 ->
        [GHC.IO.Exception.UnsupportedOperation]
    97 ->
        [GHC.IO.Exception.UnsupportedOperation]
    98 ->
        [GHC.IO.Exception.ResourceBusy]
    99 ->
        [GHC.IO.Exception.UnsupportedOperation]
    100 ->
        [GHC.IO.Exception.ResourceVanished]
    101 ->
        [GHC.IO.Exception.NoSuchThing]
    102 ->
        [GHC.IO.Exception.ResourceVanished]
    104 ->
        [GHC.IO.Exception.ResourceVanished]
    105 ->
        [GHC.IO.Exception.ResourceExhausted]
    106 ->
        [GHC.IO.Exception.AlreadyExists]
    107 ->
        [GHC.IO.Exception.InvalidArgument]
    108 ->
        [GHC.IO.Exception.IllegalOperation]
    109 ->
        [GHC.IO.Exception.ResourceExhausted]
    110 ->
        [GHC.IO.Exception.TimeExpired]
    111 ->
        [GHC.IO.Exception.NoSuchThing]
    112 ->
        [GHC.IO.Exception.NoSuchThing]
    113 ->
        [GHC.IO.Exception.NoSuchThing]
    114 ->
        [GHC.IO.Exception.AlreadyExists]
    115 ->
        [GHC.IO.Exception.AlreadyExists]
    116 ->
        [GHC.IO.Exception.ResourceVanished]
    122 ->
        [GHC.IO.Exception.PermissionDenied]

"Foreign.C.Error.$wlvl" void.040.79 ww.s23758.0 w1.s23759.0 =
  let sat.s23761.0 = "Foreign.C.Error.$wlvl.closure.1" @ w1.s23759.0 ww.s23758.0{- value -}
  "raiseIO#" @ sat.s23761.0

"Foreign.C.Error.$wlvl.closure.0" w1.s23759.2 ww.s23758.2 =
  "Foreign.C.Error.$werrnoToIOError" @ w1.s23759.2 ww.s23758.2{- value -} GHC.Maybe.Nothing GHC.Maybe.Nothing

"Foreign.C.Error.$wlvl.closure.1" w1.s23759.1 ww.s23758.1 =
  let sat.s23760.0 = "Foreign.C.Error.$wlvl.closure.0" @ w1.s23759.1 ww.s23758.1{- value -}
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ sat.s23760.0

Foreign.C.Error.throwErrno1 loc.s23762.0 void.040.80 =
  letS wild.s23765.0 = __hscore_get_errno @
  case wild.s23765.0{- value -} of
    ("GHC.Prim.Unit#" ds1.s23767.0) ->
        letS sat.s23768.0 = "narrow32Int#" @ ds1.s23767.0{- value -}
        "Foreign.C.Error.$wlvl" @ #"GHC.Prim.void#" sat.s23768.0{- value -} loc.s23762.0

Foreign.C.Error.throwErrnoIfMinus1Retry2 pred.s23830.0 loc.s23831.0 f.s23832.0 void.040.90 =
  letS ds1.s23834.0 = f.s23832.0 @ #"GHC.Prim.void#"
  case ds1.s23834.0 of
    ("GHC.Prim.Unit#" ipv1.s23836.0) ->
        letS wild.s23837.0 = pred.s23830.0 @ ipv1.s23836.0
        case wild.s23837.0 of
          (GHC.Types.False) ->
              ["GHC.Prim.Unit#" ipv1.s23836.0]
          (GHC.Types.True) ->
              letS wild1.s23839.0 = __hscore_get_errno @
              case wild1.s23839.0{- value -} of
                ("GHC.Prim.Unit#" ds2.s23841.0) ->
                    letS wild2.s23842.0 = "narrow32Int#" @ ds2.s23841.0{- value -}
                    case wild2.s23842.0{- value -} of
                      _ ->
                          Foreign.C.Error.throwErrno1 @ loc.s23831.0 #"GHC.Prim.void#"
                      4 ->
                          Foreign.C.Error.throwErrnoIfMinus1Retry2 @ pred.s23830.0 loc.s23831.0 f.s23832.0 #"GHC.Prim.void#"

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 pred.s23873.0 loc.s23874.0 f.s23875.0 on_block.s23876.0 void.040.97 =
  letS ds1.s23878.0 = f.s23875.0 @ #"GHC.Prim.void#"
  case ds1.s23878.0 of
    ("GHC.Prim.Unit#" ipv1.s23880.0) ->
        letS wild.s23881.0 = pred.s23873.0 @ ipv1.s23880.0
        case wild.s23881.0 of
          (GHC.Types.False) ->
              ["GHC.Prim.Unit#" ipv1.s23880.0]
          (GHC.Types.True) ->
              letS wild1.s23883.0 = __hscore_get_errno @
              case wild1.s23883.0{- value -} of
                ("GHC.Prim.Unit#" ds2.s23885.0) ->
                    letS wild2.s23886.0 = "narrow32Int#" @ ds2.s23885.0{- value -}
                    case wild2.s23886.0{- value -} of
                      _ ->
                          Foreign.C.Error.throwErrno1 @ loc.s23874.0 #"GHC.Prim.void#"
                      4 ->
                          Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 @ pred.s23873.0 loc.s23874.0 f.s23875.0 on_block.s23876.0 #"GHC.Prim.void#"
                      11 ->
                          letS ds3.s23887.0 = on_block.s23876.0 @ #"GHC.Prim.void#"
                          case ds3.s23887.0 of
                            ("GHC.Prim.Unit#" ipv3.s23889.0) ->
                                Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 @ pred.s23873.0 loc.s23874.0 f.s23875.0 on_block.s23876.0 #"GHC.Prim.void#"

"Foreign.C.String.$wpeekCAString" ww.s33168.0 void.040.132 =
  let "$w$j.s33170.0" = "Foreign.C.String.$wpeekCAString.closure.1" @ ww.s33168.0{- value -}
  letrec "$sloop.s33196.0" = "Foreign.C.String.$wpeekCAString.closure.2" @ "$sloop.s33196.0" "$w$j.s33170.0" ww.s33168.0{- value -}
  "$sloop.s33196.0" @ #"GHC.Prim.void#" 0

"Foreign.C.String.$wpeekCAString.closure.0" "$wloop.s33174.1" ww.s33168.2 w2.s33175.0 ww2.s33176.0 void.X69.2 =
  letS ds2.s33178.0 = "readInt8OffAddr#" @ ww.s33168.2{- value -} ww2.s33176.0{- value -}
  case ds2.s33178.0{- value -} of
    ("GHC.Prim.Unit#" ipv1.s33180.0) ->
        letS lwild1.s33181.0 = "<=#" @ ww2.s33176.0{- value -} 0
        case lwild1.s33181.0{- value -} of
          _ ->
              letS sat.s33188.0 = "-#" @ ww2.s33176.0{- value -} 1
                   sat.s33182.1 = "int2Word#" @ ipv1.s33180.0{- value -}
                   sat.s33183.0 = "narrow8Word#" @ sat.s33182.1{- value -}
                   sat.s33184.1 = "word2Int#" @ sat.s33183.0{- value -}
                   sat.s33185.1 = "chr#" @ sat.s33184.1{- value -}
              let sat.s33186.1 = ["GHC.Types.C#" sat.s33185.1{- value -}]
                  sat.s33187.1 = [GHC.Types.: sat.s33186.1 w2.s33175.0]
              "$wloop.s33174.1" @ sat.s33187.1 sat.s33188.0{- value -} #"GHC.Prim.void#"
          1 ->
              letS sat.s33189.1 = "int2Word#" @ ipv1.s33180.0{- value -}
                   sat.s33190.1 = "narrow8Word#" @ sat.s33189.1{- value -}
                   sat.s33191.1 = "word2Int#" @ sat.s33190.1{- value -}
                   sat.s33192.0 = "chr#" @ sat.s33191.1{- value -}
              let sat.s33193.1 = ["GHC.Types.C#" sat.s33192.0{- value -}]
                  sat.s33194.0 = [GHC.Types.: sat.s33193.1 w2.s33175.0]
              ["GHC.Prim.Unit#" sat.s33194.0]

"Foreign.C.String.$wpeekCAString.closure.1" ww.s33168.1 void.040.133 ww1.s33172.0 =
  letS lwild.s33173.0 = "<=#" @ ww1.s33172.0{- value -} 0
  case lwild.s33173.0{- value -} of
    _ ->
        letS sat.s33195.0 = "-#" @ ww1.s33172.0{- value -} 1
        letrec "$wloop.s33174.0" = "Foreign.C.String.$wpeekCAString.closure.0" @ "$wloop.s33174.0" ww.s33168.1{- value -}
        "$wloop.s33174.0" @ "GHC.Types.[]" sat.s33195.0{- value -} #"GHC.Prim.void#"
    1 ->
        ["GHC.Prim.Unit#" "GHC.Types.[]"]

"Foreign.C.String.$wpeekCAString.closure.2" "$sloop.s33196.1" "$w$j.s33170.1" ww.s33168.3 void.040.134 sc1.s33198.0 =
  letS ds2.s33199.0 = "readInt8OffAddr#" @ ww.s33168.3{- value -} sc1.s33198.0{- value -}
  case ds2.s33199.0{- value -} of
    ("GHC.Prim.Unit#" ipv1.s33201.0) ->
        letS wild.s33202.1 = ipv1.s33201.0{- value -}
        case wild.s33202.1{- value -} of
          _ ->
              letS sat.s33203.0 = "+#" @ sc1.s33198.0{- value -} 1
              "$sloop.s33196.1" @ #"GHC.Prim.void#" sat.s33203.0{- value -}
          0 ->
              "$w$j.s33170.1" @ #"GHC.Prim.void#" sc1.s33198.0{- value -}

Foreign.C.String.withCAString1 str.s33516.0 f.s33517.0 void.040.170 =
  letS ww2.s33519.0 = "GHC.List.$wlenAcc" @ str.s33516.0 0
  let sat.s33553.0 = Foreign.C.String.withCAString1.closure.2 @ f.s33517.0 str.s33516.0
  letS sat.s33520.0 = "+#" @ ww2.s33519.0{- value -} 1
  let sat.s33521.0 = ["GHC.Types.I#" sat.s33520.0{- value -}]
  Foreign.Marshal.Alloc.allocaBytesAligned @ sat.s33521.0 "Foreign.Storable.$fStorable()7" sat.s33553.0 #"GHC.Prim.void#"

Foreign.C.String.withCAString1.closure.0 f.s33517.2 ptr.s33522.1 ww.s33525.0 void.X99.1 =
  letS wild.s33527.0 = ptr.s33522.1
  case wild.s33527.0 of
    (GHC.Ptr.Ptr a1.s33528.0) ->
        letS s2.s33529.0 = "writeInt8OffAddr#" @ a1.s33528.0{- value -} ww.s33525.0{- value -} 0
        case s2.s33529.0{- value -} of
          ("GHC.Prim.(##)") ->
              f.s33517.2 @ wild.s33527.0 #"GHC.Prim.void#"

Foreign.C.String.withCAString1.closure.1 "$wgo.s33540.1" a1.s33534.1 exit.s33524.1 w.s33541.0 ww.s33542.0 void.X111.0 =
  letS wild3.s33544.0 = w.s33541.0
  case wild3.s33544.0 of
    ("GHC.Types.[]") ->
        exit.s33524.1 @ ww.s33542.0{- value -} #"GHC.Prim.void#"
    (GHC.Types.: c1.s33545.0 cs1.s33546.0) ->
        letS wild4.s33547.0 = c1.s33545.0
        case wild4.s33547.0 of
          ("GHC.Types.C#" "c#1.s33548.0") ->
              letS sat.s33549.1 = "ord#" @ "c#1.s33548.0"{- value -}
                   sat.s33550.0 = "narrow8Int#" @ sat.s33549.1{- value -}
                   s1.s33551.0 = "writeInt8OffAddr#" @ a1.s33534.1{- value -} ww.s33542.0{- value -} sat.s33550.0{- value -}
              case s1.s33551.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS sat.s33552.0 = "+#" @ ww.s33542.0{- value -} 1
                    "$wgo.s33540.1" @ cs1.s33546.0 sat.s33552.0{- value -} #"GHC.Prim.void#"

Foreign.C.String.withCAString1.closure.2 f.s33517.1 str.s33516.1 ptr.s33522.0 void.040.171 =
  let exit.s33524.0 = Foreign.C.String.withCAString1.closure.0 @ f.s33517.1 ptr.s33522.0
  letS wild.s33530.0 = str.s33516.1
  case wild.s33530.0 of
    ("GHC.Types.[]") ->
        exit.s33524.0 @ 0 #"GHC.Prim.void#"
    (GHC.Types.: c.s33531.0 cs.s33532.0) ->
        letS wild1.s33533.0 = ptr.s33522.0
        case wild1.s33533.0 of
          (GHC.Ptr.Ptr a1.s33534.0) ->
              letS wild2.s33535.0 = c.s33531.0
              case wild2.s33535.0 of
                ("GHC.Types.C#" "c#.s33536.0") ->
                    letS sat.s33537.0 = "ord#" @ "c#.s33536.0"{- value -}
                         sat.s33538.1 = "narrow8Int#" @ sat.s33537.0{- value -}
                         s2.s33539.0 = "writeInt8OffAddr#" @ a1.s33534.0{- value -} 0 sat.s33538.1{- value -}
                    case s2.s33539.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letrec "$wgo.s33540.0" = Foreign.C.String.withCAString1.closure.1 @ "$wgo.s33540.0" a1.s33534.0{- value -} exit.s33524.0
                          "$wgo.s33540.0" @ cs.s33532.0 1 #"GHC.Prim.void#"

Foreign.Marshal.Alloc.allocaBytes eta.B3.45 eta.B2.108 void.040.177 =
  Foreign.Marshal.Alloc.allocaBytes1 @ eta.B3.45 eta.B2.108 #"GHC.Prim.void#"

Foreign.Marshal.Alloc.allocaBytes1 ds.s21054.0 action.s21055.0 void.040.176 =
  letS wild.s21057.0 = ds.s21054.0
  case wild.s21057.0 of
    ("GHC.Types.I#" size.s21058.0) ->
        letS ds1.s21059.0 = "newPinnedByteArray#" @ size.s21058.0{- value -}
        case ds1.s21059.0 of
          ("GHC.Prim.Unit#" ipv1.s21061.0) ->
              letS ds2.s21062.0 = "unsafeFreezeByteArray#" @ ipv1.s21061.0
              case ds2.s21062.0 of
                ("GHC.Prim.Unit#" ipv3.s21064.0) ->
                    letS sat.s21065.0 = "byteArrayContents#" @ ipv3.s21064.0
                    let sat.s21066.0 = [GHC.Ptr.Ptr sat.s21065.0{- value -}]
                    letS ds3.s21067.0 = action.s21055.0 @ sat.s21066.0 #"GHC.Prim.void#"
                    case ds3.s21067.0 of
                      ("GHC.Prim.Unit#" ipv5.s21069.0) ->
                          letS s4.s21070.0 = "touch#" @ ipv3.s21064.0
                          case s4.s21070.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                ["GHC.Prim.Unit#" ipv5.s21069.0]

Foreign.Marshal.Alloc.allocaBytesAligned eta.B4.27 eta.B3.46 eta.B2.109 void.040.179 =
  Foreign.Marshal.Alloc.allocaBytesAligned1 @ eta.B4.27 eta.B3.46 eta.B2.109 #"GHC.Prim.void#"

Foreign.Marshal.Alloc.allocaBytesAligned1 ds.s21071.0 ds1.s21072.0 action.s21073.0 void.040.178 =
  letS wild.s21075.0 = ds.s21071.0
  case wild.s21075.0 of
    ("GHC.Types.I#" size.s21076.0) ->
        letS wild1.s21077.0 = ds1.s21072.0
        case wild1.s21077.0 of
          ("GHC.Types.I#" align.s21078.0) ->
              letS ds2.s21079.0 = "newAlignedPinnedByteArray#" @ size.s21076.0{- value -} align.s21078.0{- value -}
              case ds2.s21079.0 of
                ("GHC.Prim.Unit#" ipv1.s21081.0) ->
                    letS ds3.s21082.0 = "unsafeFreezeByteArray#" @ ipv1.s21081.0
                    case ds3.s21082.0 of
                      ("GHC.Prim.Unit#" ipv3.s21084.0) ->
                          letS sat.s21085.0 = "byteArrayContents#" @ ipv3.s21084.0
                          let sat.s21086.0 = [GHC.Ptr.Ptr sat.s21085.0{- value -}]
                          letS ds4.s21087.0 = action.s21073.0 @ sat.s21086.0 #"GHC.Prim.void#"
                          case ds4.s21087.0 of
                            ("GHC.Prim.Unit#" ipv5.s21089.0) ->
                                letS s4.s21090.0 = "touch#" @ ipv3.s21084.0
                                case s4.s21090.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      ["GHC.Prim.Unit#" ipv5.s21089.0]

Foreign.Marshal.Alloc.calloc3 =
  "GHC.CString.unpackCString#" @ Foreign.Marshal.Alloc.calloc4{- value -}

Foreign.Marshal.Alloc.calloc4 =
  #"out of memory"

Foreign.Marshal.Alloc.malloc1 =
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ Foreign.Marshal.Alloc.malloc2

Foreign.Marshal.Alloc.malloc2 =
  [GHC.IO.Exception.IOError GHC.Maybe.Nothing GHC.IO.Exception.ResourceExhausted Foreign.Marshal.Alloc.malloc3 Foreign.Marshal.Alloc.calloc3 GHC.Maybe.Nothing GHC.Maybe.Nothing]

Foreign.Marshal.Alloc.malloc3 =
  "GHC.CString.unpackCString#" @ Foreign.Marshal.Alloc.malloc4{- value -}

Foreign.Marshal.Alloc.malloc4 =
  #"malloc"

"Foreign.Storable.$fStorable()7" =
  ["GHC.Types.I#" 1]

"Foreign.Storable.$fStorableBool7" =
  ["GHC.Types.I#" 4]

"Foreign.Storable.$fStorableDouble5" =
  ["GHC.Types.I#" 8]

"Foreign.Storable.$fStorableFingerprint2" p0.s31440.0 void.040.334 =
  letS ds.s31442.0 = p0.s31440.0
  case ds.s31442.0 of
    (GHC.Ptr.Ptr ipv.s31443.0) ->
        letS ds2.s31444.0 = "readWord8OffAddr#" @ ipv.s31443.0{- value -} 0
        case ds2.s31444.0{- value -} of
          ("GHC.Prim.Unit#" ipv2.s31446.0) ->
              letS sat.s31447.0 = "plusAddr#" @ ipv.s31443.0{- value -} 1
                   ds1.s31448.0 = "Foreign.Storable.$fStorableFingerprint_$s$wpeekW64" @ #"GHC.Prim.void#" ipv2.s31446.0{- value -} 7 sat.s31447.0{- value -}
              case ds1.s31448.0 of
                ("GHC.Prim.Unit#" ipv4.s31450.0) ->
                    letS ipv5.s31451.0 = "plusAddr#" @ ipv.s31443.0{- value -} 8
                         ds4.s31452.0 = "readWord8OffAddr#" @ ipv5.s31451.0{- value -} 0
                    case ds4.s31452.0{- value -} of
                      ("GHC.Prim.Unit#" ipv7.s31454.0) ->
                          letS sat.s31455.1 = "plusAddr#" @ ipv5.s31451.0{- value -} 1
                               ds5.s31456.0 = "Foreign.Storable.$fStorableFingerprint_$s$wpeekW64" @ #"GHC.Prim.void#" ipv7.s31454.0{- value -} 7 sat.s31455.1{- value -}
                          case ds5.s31456.0 of
                            ("GHC.Prim.Unit#" ipv9.s31458.0) ->
                                let sat.s31459.0 = "Foreign.Storable.$fStorableFingerprint2.closure.0" @ ipv4.s31450.0 ipv9.s31458.0
                                ["GHC.Prim.Unit#" sat.s31459.0]

"Foreign.Storable.$fStorableFingerprint2.closure.0" ipv4.s31450.1 ipv9.s31458.1 =
  "GHC.Fingerprint.Type.$WFingerprint" @ ipv4.s31450.1 ipv9.s31458.1

"Foreign.Storable.$fStorableFingerprint_$s$wpeekW64" void.040.333 sc1.s31428.0 sc2.s31429.0 sc3.s31430.0 =
  letS ds.s31431.0 = sc2.s31429.0{- value -}
  case ds.s31431.0{- value -} of
    _ ->
        letS ds2.s31432.0 = "readWord8OffAddr#" @ sc3.s31430.0{- value -} 0
        case ds2.s31432.0{- value -} of
          ("GHC.Prim.Unit#" ipv1.s31434.0) ->
              letS sat.s31438.0 = "plusAddr#" @ sc3.s31430.0{- value -} 1
                   sat.s31437.0 = "-#" @ ds.s31431.0{- value -} 1
                   sat.s31435.1 = "uncheckedShiftL#" @ sc1.s31428.0{- value -} 8
                   sat.s31436.0 = "or#" @ sat.s31435.1{- value -} ipv1.s31434.0{- value -}
              "Foreign.Storable.$fStorableFingerprint_$s$wpeekW64" @ #"GHC.Prim.void#" sat.s31436.0{- value -} sat.s31437.0{- value -} sat.s31438.0{- value -}
    0 ->
        let sat.s31439.0 = ["GHC.Word.W64#" sc1.s31428.0{- value -}]
        ["GHC.Prim.Unit#" sat.s31439.0]

"Foreign.Storable.$fStorableFingerprint_$s$wpokeW64" void.040.330 sc1.s31396.0 sc2.s31397.0 sc3.s31398.0 =
  letS ds.s31399.0 = sc2.s31397.0{- value -}
  case ds.s31399.0{- value -} of
    _ ->
        letS sat.s31401.0 = "narrow8Word#" @ sc1.s31396.0{- value -}
             sat.s31400.1 = "-#" @ ds.s31399.0{- value -} 1
             s2.s31402.0 = "writeWord8OffAddr#" @ sc3.s31398.0{- value -} sat.s31400.1{- value -} sat.s31401.0{- value -}
        case s2.s31402.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS sat.s31404.0 = "-#" @ ds.s31399.0{- value -} 1
                   sat.s31403.0 = "uncheckedShiftRL#" @ sc1.s31396.0{- value -} 8
              "Foreign.Storable.$fStorableFingerprint_$s$wpokeW64" @ #"GHC.Prim.void#" sat.s31403.0{- value -} sat.s31404.0{- value -} sc3.s31398.0{- value -}
    0 ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.Arr.$fIxInt1" =
  ["GHC.Types.I#" 0]

"GHC.Arr.$windexError" ww.s92300.0 ww1.s92301.0 ww2.s92302.0 w.s92303.0 w1.s92304.0 =
  let sat.s92316.0 = "GHC.Arr.$windexError.closure.5" @ w.s92303.0 w1.s92304.0 ww.s92300.0 ww1.s92301.0 ww2.s92302.0
  letS sat.s92317.0 = "GHC.CString.unpackAppendCString#" @ GHC.Arr.lvl29{- value -} sat.s92316.0
  GHC.Err.errorWithoutStackTrace @ sat.s92317.0

"GHC.Arr.$windexError.closure.0" ww.s92300.6 ww2.s92302.6 =
  letS sat.s92305.0 = ww.s92300.6 @ "GHC.Show.$fShow(,)1" ww2.s92302.6
  "GHC.Show.$fShow(,)_$sgo1" @ GHC.Arr.lvl32 sat.s92305.0 "GHC.Types.[]"

"GHC.Arr.$windexError.closure.1" ww.s92300.5 ww1.s92301.5 ww2.s92302.5 =
  let sat.s92306.0 = "GHC.Arr.$windexError.closure.0" @ ww.s92300.5 ww2.s92302.5
      sat.s92307.0 = [GHC.Types.: GHC.Show.showList__1 sat.s92306.0]
  ww.s92300.5 @ "GHC.Show.$fShow(,)1" ww1.s92301.5 sat.s92307.0

"GHC.Arr.$windexError.closure.2" ww.s92300.4 ww1.s92301.4 ww2.s92302.4 =
  let sat.s92308.0 = "GHC.Arr.$windexError.closure.1" @ ww.s92300.4 ww1.s92301.4 ww2.s92302.4
      sat.s92309.0 = [GHC.Types.: "GHC.Show.$fShow(,)4" sat.s92308.0]
      sat.s92310.0 = [GHC.Types.: "GHC.Show.$fShow(,)4" sat.s92309.0]
  "GHC.CString.unpackAppendCString#" @ GHC.Arr.lvl31{- value -} sat.s92310.0

"GHC.Arr.$windexError.closure.3" w.s92303.3 ww.s92300.3 ww1.s92301.3 ww2.s92302.3 =
  let sat.s92311.0 = "GHC.Arr.$windexError.closure.2" @ ww.s92300.3 ww1.s92301.3 ww2.s92302.3
      sat.s92312.0 = [GHC.Types.: "GHC.Show.$fShow(,)2" sat.s92311.0]
  ww.s92300.3 @ "GHC.Arr.$fIxInt1" w.s92303.3 sat.s92312.0

"GHC.Arr.$windexError.closure.4" w.s92303.2 ww.s92300.2 ww1.s92301.2 ww2.s92302.2 =
  let sat.s92313.0 = "GHC.Arr.$windexError.closure.3" @ w.s92303.2 ww.s92300.2 ww1.s92301.2 ww2.s92302.2
      sat.s92314.0 = [GHC.Types.: "GHC.Show.$fShow(,)4" sat.s92313.0]
  "GHC.CString.unpackAppendCString#" @ GHC.Arr.lvl30{- value -} sat.s92314.0

"GHC.Arr.$windexError.closure.5" w.s92303.1 w1.s92304.1 ww.s92300.1 ww1.s92301.1 ww2.s92302.1 =
  let sat.s92315.0 = "GHC.Arr.$windexError.closure.4" @ w.s92303.1 ww.s92300.1 ww1.s92301.1 ww2.s92302.1
  "GHC.Base.++" @ w1.s92304.1 sat.s92315.0

GHC.Arr.arrEleBottom =
  letS sat.s90771.0 = "GHC.CString.unpackCString#" @ GHC.Arr.lvl9{- value -}
  GHC.Err.errorWithoutStackTrace @ sat.s90771.0

GHC.Arr.lvl28 =
  [GHC.Types.: "GHC.Show.$fShow(,)2" "GHC.Types.[]"]

GHC.Arr.lvl29 =
  #"Ix{"

GHC.Arr.lvl30 =
  #"}.index: Index "

GHC.Arr.lvl31 =
  #" out of range "

GHC.Arr.lvl32 =
  [GHC.Types.: "GHC.Show.$fShow(,)2" GHC.Arr.lvl28]

GHC.Arr.lvl8 =
  #"Negative range size"

GHC.Arr.lvl9 =
  #"(Array.!): undefined array element"

GHC.Arr.negRange =
  letS sat.s90708.0 = "GHC.CString.unpackCString#" @ GHC.Arr.lvl8{- value -}
  GHC.Err.errorWithoutStackTrace @ sat.s90708.0

"GHC.Base.++" ds.s41320.0 ys.s41321.0 =
  letS wild.s41322.0 = ds.s41320.0
  case wild.s41322.0 of
    ("GHC.Types.[]") ->
        ys.s41321.0
    (GHC.Types.: x.s41323.0 xs.s41324.0) ->
        let sat.s41325.0 = "GHC.Base.++.closure.0" @ xs.s41324.0 ys.s41321.0
        [GHC.Types.: x.s41323.0 sat.s41325.0]

"GHC.Base.++.closure.0" xs.s41324.1 ys.s41321.1 =
  "GHC.Base.++" @ xs.s41324.1 ys.s41321.1

"GHC.Base.++_$s++" sc.s41326.0 sc1.s41327.0 sc2.s41328.0 =
  let sat.s41329.0 = "GHC.Base.++_$s++.closure.0" @ sc.s41326.0 sc2.s41328.0
  [GHC.Types.: sc1.s41327.0 sat.s41329.0]

"GHC.Base.++_$s++.closure.0" sc.s41326.1 sc2.s41328.1 =
  "GHC.Base.++" @ sc2.s41328.1 sc.s41326.1

GHC.Base.breakpoint r.s41185.0 =
  r.s41185.0

GHC.Base.const x.s41171.0 ds.s41172.0 =
  x.s41171.0

GHC.Base.eqString ds.s40656.0 ds1.s40657.0 =
  letS wild.s40658.0 = ds.s40656.0
  case wild.s40658.0 of
    ("GHC.Types.[]") ->
        letS wild1.s40659.0 = ds1.s40657.0
        case wild1.s40659.0 of
          ("GHC.Types.[]") ->
              [GHC.Types.True]
          (GHC.Types.: ipv.s40660.0 ipv1.s40661.0) ->
              [GHC.Types.False]
    (GHC.Types.: c1.s40662.0 cs1.s40663.0) ->
        letS wild1.s40664.0 = ds1.s40657.0
        case wild1.s40664.0 of
          ("GHC.Types.[]") ->
              [GHC.Types.False]
          (GHC.Types.: c2.s40665.0 cs2.s40666.0) ->
              letS wild2.s40667.0 = c1.s40662.0
              case wild2.s40667.0 of
                ("GHC.Types.C#" x.s40668.0) ->
                    letS wild3.s40669.0 = c2.s40665.0
                    case wild3.s40669.0 of
                      ("GHC.Types.C#" y.s40670.0) ->
                          letS lwild.s40671.0 = "eqChar#" @ x.s40668.0{- value -} y.s40670.0{- value -}
                          case lwild.s40671.0{- value -} of
                            _ ->
                                [GHC.Types.False]
                            1 ->
                                GHC.Base.eqString @ cs1.s40663.0 cs2.s40666.0

GHC.Base.id eta.B1.180 =
  GHC.Base.breakpoint @ eta.B1.180

GHC.Base.map ds.s41339.0 ds1.s41340.0 =
  letS wild.s41341.0 = ds1.s41340.0
  case wild.s41341.0 of
    ("GHC.Types.[]") ->
        ["GHC.Types.[]"]
    (GHC.Types.: x.s41342.0 xs.s41343.0) ->
        let sat.s41345.0 = GHC.Base.map.closure.0 @ ds.s41339.0 xs.s41343.0
            sat.s41344.0 = GHC.Base.map.closure.1 @ ds.s41339.0 x.s41342.0
        [GHC.Types.: sat.s41344.0 sat.s41345.0]

GHC.Base.map.closure.0 ds.s41339.1 xs.s41343.1 =
  GHC.Base.map @ ds.s41339.1 xs.s41343.1

GHC.Base.map.closure.1 ds.s41339.2 x.s41342.1 =
  ds.s41339.2 @ x.s41342.1

"GHC.CString.unpackAppendCString#" addr.s3201.0 rest.s3202.0 =
  letrec unpack.s3203.0 = "GHC.CString.unpackAppendCString#.closure.1" @ addr.s3201.0{- value -} rest.s3202.0 unpack.s3203.0
  unpack.s3203.0 @ 0

"GHC.CString.unpackAppendCString#.closure.0" nh.s3204.1 unpack.s3203.2 =
  letS sat.s3207.0 = "+#" @ nh.s3204.1{- value -} 1
  unpack.s3203.2 @ sat.s3207.0{- value -}

"GHC.CString.unpackAppendCString#.closure.1" addr.s3201.1 rest.s3202.1 unpack.s3203.1 nh.s3204.0 =
  letS ch.s3205.0 = "indexCharOffAddr#" @ addr.s3201.1{- value -} nh.s3204.0{- value -}
  case ch.s3205.0{- value -} of
    _ ->
        let sat.s3208.0 = "GHC.CString.unpackAppendCString#.closure.0" @ nh.s3204.0{- value -} unpack.s3203.1
            sat.s3206.0 = ["GHC.Types.C#" ch.s3205.0{- value -}]
        [GHC.Types.: sat.s3206.0 sat.s3208.0]
    #'\NUL' ->
        rest.s3202.1

"GHC.CString.unpackCString#" addr.s3194.0 =
  letrec unpack.s3195.0 = "GHC.CString.unpackCString#.closure.1" @ addr.s3194.0{- value -} unpack.s3195.0
  unpack.s3195.0 @ 0

"GHC.CString.unpackCString#.closure.0" nh.s3196.1 unpack.s3195.2 =
  letS sat.s3199.0 = "+#" @ nh.s3196.1{- value -} 1
  unpack.s3195.2 @ sat.s3199.0{- value -}

"GHC.CString.unpackCString#.closure.1" addr.s3194.1 unpack.s3195.1 nh.s3196.0 =
  letS ch.s3197.0 = "indexCharOffAddr#" @ addr.s3194.1{- value -} nh.s3196.0{- value -}
  case ch.s3197.0{- value -} of
    _ ->
        let sat.s3200.0 = "GHC.CString.unpackCString#.closure.0" @ nh.s3196.0{- value -} unpack.s3195.1
            sat.s3198.0 = ["GHC.Types.C#" ch.s3197.0{- value -}]
        [GHC.Types.: sat.s3198.0 sat.s3200.0]
    #'\NUL' ->
        ["GHC.Types.[]"]

"GHC.CString.unpackCStringUtf8#" addr.s3218.0 =
  letrec unpack.s3219.0 = "GHC.CString.unpackCStringUtf8#.closure.4" @ addr.s3218.0{- value -} unpack.s3219.0
  unpack.s3219.0 @ 0

"GHC.CString.unpackCStringUtf8#.closure.0" nh.s3220.1 unpack.s3219.2 =
  letS sat.s3247.0 = "+#" @ nh.s3220.1{- value -} 4
  unpack.s3219.2 @ sat.s3247.0{- value -}

"GHC.CString.unpackCStringUtf8#.closure.1" nh.s3220.2 unpack.s3219.3 =
  letS sat.s3265.0 = "+#" @ nh.s3220.2{- value -} 3
  unpack.s3219.3 @ sat.s3265.0{- value -}

"GHC.CString.unpackCStringUtf8#.closure.2" nh.s3220.3 unpack.s3219.4 =
  letS sat.s3277.0 = "+#" @ nh.s3220.3{- value -} 2
  unpack.s3219.4 @ sat.s3277.0{- value -}

"GHC.CString.unpackCStringUtf8#.closure.3" nh.s3220.4 unpack.s3219.5 =
  letS sat.s3280.0 = "+#" @ nh.s3220.4{- value -} 1
  unpack.s3219.5 @ sat.s3280.0{- value -}

"GHC.CString.unpackCStringUtf8#.closure.4" addr.s3218.1 unpack.s3219.1 nh.s3220.0 =
  letS ch.s3221.0 = "indexCharOffAddr#" @ addr.s3218.1{- value -} nh.s3220.0{- value -}
  case ch.s3221.0{- value -} of
    _ ->
        letS lwild.s3222.0 = "leChar#" @ ch.s3221.0{- value -} #'\DEL'
        case lwild.s3222.0{- value -} of
          _ ->
              letS lwild1.s3223.0 = "leChar#" @ ch.s3221.0{- value -} #'\223'
              case lwild1.s3223.0{- value -} of
                _ ->
                    letS lwild2.s3224.0 = "leChar#" @ ch.s3221.0{- value -} #'\239'
                    case lwild2.s3224.0{- value -} of
                      _ ->
                          letS sat.s3225.0 = "+#" @ nh.s3220.0{- value -} 3
                               wild.s3226.0 = "indexCharOffAddr#" @ addr.s3218.1{- value -} sat.s3225.0{- value -}
                               sat.s3227.0 = "+#" @ nh.s3220.0{- value -} 2
                               wild1.s3228.0 = "indexCharOffAddr#" @ addr.s3218.1{- value -} sat.s3227.0{- value -}
                               sat.s3229.0 = "+#" @ nh.s3220.0{- value -} 1
                               wild2.s3230.0 = "indexCharOffAddr#" @ addr.s3218.1{- value -} sat.s3229.0{- value -}
                          let sat.s3248.0 = "GHC.CString.unpackCStringUtf8#.closure.0" @ nh.s3220.0{- value -} unpack.s3219.1
                          letS sat.s3242.0 = "ord#" @ wild.s3226.0{- value -}
                               sat.s3238.0 = "ord#" @ wild1.s3228.0{- value -}
                               sat.s3239.0 = "-#" @ sat.s3238.0{- value -} 128
                               sat.s3240.0 = "uncheckedIShiftL#" @ sat.s3239.0{- value -} 6
                               sat.s3234.0 = "ord#" @ wild2.s3230.0{- value -}
                               sat.s3235.0 = "-#" @ sat.s3234.0{- value -} 128
                               sat.s3236.0 = "uncheckedIShiftL#" @ sat.s3235.0{- value -} 12
                               sat.s3231.0 = "ord#" @ ch.s3221.0{- value -}
                               sat.s3232.0 = "-#" @ sat.s3231.0{- value -} 240
                               sat.s3233.0 = "uncheckedIShiftL#" @ sat.s3232.0{- value -} 18
                               sat.s3237.0 = "+#" @ sat.s3233.0{- value -} sat.s3236.0{- value -}
                               sat.s3241.0 = "+#" @ sat.s3237.0{- value -} sat.s3240.0{- value -}
                               sat.s3243.0 = "+#" @ sat.s3241.0{- value -} sat.s3242.0{- value -}
                               sat.s3244.0 = "-#" @ sat.s3243.0{- value -} 128
                               sat.s3245.0 = "chr#" @ sat.s3244.0{- value -}
                          let sat.s3246.0 = ["GHC.Types.C#" sat.s3245.0{- value -}]
                          [GHC.Types.: sat.s3246.0 sat.s3248.0]
                      1 ->
                          letS sat.s3249.0 = "+#" @ nh.s3220.0{- value -} 2
                               wild.s3250.0 = "indexCharOffAddr#" @ addr.s3218.1{- value -} sat.s3249.0{- value -}
                               sat.s3251.0 = "+#" @ nh.s3220.0{- value -} 1
                               wild1.s3252.0 = "indexCharOffAddr#" @ addr.s3218.1{- value -} sat.s3251.0{- value -}
                          let sat.s3266.0 = "GHC.CString.unpackCStringUtf8#.closure.1" @ nh.s3220.0{- value -} unpack.s3219.1
                          letS sat.s3260.0 = "ord#" @ wild.s3250.0{- value -}
                               sat.s3256.0 = "ord#" @ wild1.s3252.0{- value -}
                               sat.s3257.0 = "-#" @ sat.s3256.0{- value -} 128
                               sat.s3258.0 = "uncheckedIShiftL#" @ sat.s3257.0{- value -} 6
                               sat.s3253.0 = "ord#" @ ch.s3221.0{- value -}
                               sat.s3254.0 = "-#" @ sat.s3253.0{- value -} 224
                               sat.s3255.0 = "uncheckedIShiftL#" @ sat.s3254.0{- value -} 12
                               sat.s3259.0 = "+#" @ sat.s3255.0{- value -} sat.s3258.0{- value -}
                               sat.s3261.0 = "+#" @ sat.s3259.0{- value -} sat.s3260.0{- value -}
                               sat.s3262.0 = "-#" @ sat.s3261.0{- value -} 128
                               sat.s3263.0 = "chr#" @ sat.s3262.0{- value -}
                          let sat.s3264.0 = ["GHC.Types.C#" sat.s3263.0{- value -}]
                          [GHC.Types.: sat.s3264.0 sat.s3266.0]
                1 ->
                    letS sat.s3267.0 = "+#" @ nh.s3220.0{- value -} 1
                         wild.s3268.0 = "indexCharOffAddr#" @ addr.s3218.1{- value -} sat.s3267.0{- value -}
                    let sat.s3278.0 = "GHC.CString.unpackCStringUtf8#.closure.2" @ nh.s3220.0{- value -} unpack.s3219.1
                    letS sat.s3272.0 = "ord#" @ wild.s3268.0{- value -}
                         sat.s3269.0 = "ord#" @ ch.s3221.0{- value -}
                         sat.s3270.0 = "-#" @ sat.s3269.0{- value -} 192
                         sat.s3271.0 = "uncheckedIShiftL#" @ sat.s3270.0{- value -} 6
                         sat.s3273.0 = "+#" @ sat.s3271.0{- value -} sat.s3272.0{- value -}
                         sat.s3274.0 = "-#" @ sat.s3273.0{- value -} 128
                         sat.s3275.0 = "chr#" @ sat.s3274.0{- value -}
                    let sat.s3276.0 = ["GHC.Types.C#" sat.s3275.0{- value -}]
                    [GHC.Types.: sat.s3276.0 sat.s3278.0]
          1 ->
              let sat.s3281.0 = "GHC.CString.unpackCStringUtf8#.closure.3" @ nh.s3220.0{- value -} unpack.s3219.1
                  sat.s3279.0 = ["GHC.Types.C#" ch.s3221.0{- value -}]
              [GHC.Types.: sat.s3279.0 sat.s3281.0]
    #'\NUL' ->
        ["GHC.Types.[]"]

"GHC.Char.$wlvl" ww.s4748.0 =
  let sat.s4752.0 = "GHC.Char.$wlvl.closure.0" @ ww.s4748.0{- value -}
  letS sat.s4753.0 = "GHC.CString.unpackAppendCString#" @ GHC.Char.lvl{- value -} sat.s4752.0
  GHC.Err.errorWithoutStackTrace @ sat.s4753.0

"GHC.Char.$wlvl.closure.0" ww.s4748.1 =
  letS ww4.s4749.0 = "GHC.Show.$wshowSignedInt" @ 9 ww.s4748.1{- value -} "GHC.Types.[]"
  case ww4.s4749.0{- value -} of
    ("GHC.Prim.(#,#)" ww5.s4750.0 ww6.s4751.0) ->
        [GHC.Types.: ww5.s4750.0 ww6.s4751.0]

GHC.Char.lvl =
  #"Prelude.chr: bad argument: "

"GHC.Classes.$fEqChar" =
  [GHC.Classes.C:Eq GHC.Classes.eqChar GHC.Classes.neChar]

"GHC.Classes.$fEqModule_$s$c==" ds.s289475.0 ds1.s289476.0 =
  letS wild.s289477.0 = ds.s289475.0
  case wild.s289477.0 of
    ("GHC.Types.[]") ->
        letS wild1.s289478.0 = ds1.s289476.0
        case wild1.s289478.0 of
          ("GHC.Types.[]") ->
              [GHC.Types.True]
          (GHC.Types.: ipv.s289479.0 ipv1.s289480.0) ->
              [GHC.Types.False]
    (GHC.Types.: x.s289481.0 xs.s289482.0) ->
        letS wild1.s289483.0 = ds1.s289476.0
        case wild1.s289483.0 of
          ("GHC.Types.[]") ->
              [GHC.Types.False]
          (GHC.Types.: y.s289484.0 ys.s289485.0) ->
              letS wild2.s289486.0 = x.s289481.0
              case wild2.s289486.0 of
                ("GHC.Types.C#" x1.s289487.0) ->
                    letS wild3.s289488.0 = y.s289484.0
                    case wild3.s289488.0 of
                      ("GHC.Types.C#" y1.s289489.0) ->
                          letS lwild.s289490.0 = "eqChar#" @ x1.s289487.0{- value -} y1.s289489.0{- value -}
                          case lwild.s289490.0{- value -} of
                            _ ->
                                [GHC.Types.False]
                            1 ->
                                "GHC.Classes.$fEqModule_$s$c==" @ xs.s289482.0 ys.s289485.0

"GHC.Classes.$fEq[]_$s$c/=1" eta.s289535.0 eta1.s289536.0 =
  letS wild.s289537.0 = "GHC.Classes.$fEqModule_$s$c==" @ eta.s289535.0 eta1.s289536.0
  case wild.s289537.0 of
    (GHC.Types.False) ->
        [GHC.Types.True]
    (GHC.Types.True) ->
        [GHC.Types.False]

"GHC.Classes.$fEq[]_$s$fEq[]1" =
  [GHC.Classes.C:Eq "GHC.Classes.$fEqModule_$s$c==" "GHC.Classes.$fEq[]_$s$c/=1"]

"GHC.Classes.==" v.s200057.0 =
  letS v.s200058.0 = v.s200057.0
  case v.s200058.0 of
    (GHC.Classes.C:Eq v.s200059.0 v.s200060.0) ->
        v.s200059.0

GHC.Classes.eqChar ds.s286725.0 ds1.s286726.0 =
  letS wild.s286727.0 = ds.s286725.0
  case wild.s286727.0 of
    ("GHC.Types.C#" x.s286728.0) ->
        letS wild1.s286729.0 = ds1.s286726.0
        case wild1.s286729.0 of
          ("GHC.Types.C#" y.s286730.0) ->
              letS sat.s286731.0 = "eqChar#" @ x.s286728.0{- value -} y.s286730.0{- value -}
              case sat.s286731.0{- value -} of
                0 ->
                    [GHC.Types.False]
                1 ->
                    [GHC.Types.True]

GHC.Classes.neChar ds.s286732.0 ds1.s286733.0 =
  letS wild.s286734.0 = ds.s286732.0
  case wild.s286734.0 of
    ("GHC.Types.C#" x.s286735.0) ->
        letS wild1.s286736.0 = ds1.s286733.0
        case wild1.s286736.0 of
          ("GHC.Types.C#" y.s286737.0) ->
              letS sat.s286738.0 = "neChar#" @ x.s286735.0{- value -} y.s286737.0{- value -}
              case sat.s286738.0{- value -} of
                0 ->
                    [GHC.Types.False]
                1 ->
                    [GHC.Types.True]

GHC.Conc.Signal.lvl =
  ["GHC.Types.I#" 0]

GHC.Conc.Signal.lvl1 =
  ["GHC.Types.I#" 64]

GHC.Conc.Signal.lvl2 void.040.441 =
  letS s'.s21012.0 = "noDuplicate#" @
  case s'.s21012.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS ds1.s21013.0 = "newArray#" @ 65 GHC.Maybe.Nothing
        case ds1.s21013.0 of
          ("GHC.Prim.Unit#" ipv1.s21015.0) ->
              letS ds.s21016.0 = "newMVar#" @
              case ds.s21016.0 of
                ("GHC.Prim.Unit#" ipv3.s21018.0) ->
                    let sat.s21019.0 = [GHC.Arr.STArray GHC.Conc.Signal.lvl GHC.Conc.Signal.lvl1 65 ipv1.s21015.0]
                    letS "s2#.s21020.0" = "putMVar#" @ ipv3.s21018.0 sat.s21019.0
                    case "s2#.s21020.0"{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS ds2.s21021.0 = "getMaskingState#" @
                          case ds2.s21021.0{- value -} of
                            ("GHC.Prim.Unit#" ipv5.s21023.0) ->
                                let ipv6.s21024.0 = [GHC.MVar.MVar ipv3.s21018.0]
                                letS ds3.s21025.0 = ipv5.s21023.0{- value -}
                                case ds3.s21025.0{- value -} of
                                  _ ->
                                      letS ds4.s21026.0 = "makeStablePtr#" @ ipv6.s21024.0
                                      case ds4.s21026.0{- value -} of
                                        ("GHC.Prim.Unit#" ipv8.s21028.0) ->
                                            letS wild.s21030.0 = getOrSetGHCConcSignalSignalHandlerStore @ ipv8.s21028.0{- value -}
                                            case wild.s21030.0{- value -} of
                                              ("GHC.Prim.Unit#" ds6.s21032.0) ->
                                                  letS lwild.s21033.0 = "eqAddr#" @ ipv8.s21028.0{- value -} ds6.s21032.0{- value -}
                                                  case lwild.s21033.0{- value -} of
                                                    _ ->
                                                        letS wild1.s21035.0 = hs_free_stable_ptr @ ipv8.s21028.0{- value -}
                                                        case wild1.s21035.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              "deRefStablePtr#" @ ds6.s21032.0{- value -}
                                                    1 ->
                                                        ["GHC.Prim.Unit#" ipv6.s21024.0]
                                  0 ->
                                      let sat.s21049.0 = GHC.Conc.Signal.lvl2.closure.0 @ ipv6.s21024.0
                                      sat.s21049.0 @ #"GHC.Prim.void#"

GHC.Conc.Signal.lvl2.closure.0 ipv6.s21024.1 void.040.442 =
  letS ds4.s21038.0 = "makeStablePtr#" @ ipv6.s21024.1
  case ds4.s21038.0{- value -} of
    ("GHC.Prim.Unit#" ipv8.s21040.0) ->
        letS wild.s21042.0 = getOrSetGHCConcSignalSignalHandlerStore @ ipv8.s21040.0{- value -}
        case wild.s21042.0{- value -} of
          ("GHC.Prim.Unit#" ds6.s21044.0) ->
              letS lwild.s21045.0 = "eqAddr#" @ ipv8.s21040.0{- value -} ds6.s21044.0{- value -}
              case lwild.s21045.0{- value -} of
                _ ->
                    letS wild1.s21047.0 = hs_free_stable_ptr @ ipv8.s21040.0{- value -}
                    case wild1.s21047.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          "deRefStablePtr#" @ ds6.s21044.0{- value -}
                1 ->
                    ["GHC.Prim.Unit#" ipv6.s21024.1]

GHC.Conc.Signal.lvl3 =
  #"GHC.Conc.setHandler: signal out of range"

GHC.Conc.Signal.setHandler1 sig.s21054.0 handler.s21055.0 void.040.443 =
  letS ds.s21057.0 = "getMaskingState#" @
  case ds.s21057.0{- value -} of
    ("GHC.Prim.Unit#" ipv1.s21059.0) ->
        let io.s21060.0 = GHC.Conc.Signal.setHandler1.closure.0 @ handler.s21055.0 sig.s21054.0
        letS ds1.s21082.0 = ipv1.s21059.0{- value -}
        case ds1.s21082.0{- value -} of
          _ ->
              letS wild.s21083.0 = GHC.Conc.Signal.signal_handlers
              case wild.s21083.0 of
                (GHC.MVar.MVar "mvar#.s21084.0") ->
                    letS ds2.s21085.0 = "takeMVar#" @ "mvar#.s21084.0"
                    case ds2.s21085.0 of
                      ("GHC.Prim.Unit#" ipv3.s21087.0) ->
                          let sat.s21093.1 = GHC.Conc.Signal.setHandler1.closure.1 @ ipv3.s21087.0 "mvar#.s21084.0"
                              sat.s21088.0 = GHC.Conc.Signal.setHandler1.closure.2 @ io.s21060.0 ipv3.s21087.0
                              sat.s21089.0 = GHC.Conc.Signal.setHandler1.closure.3 @ sat.s21088.0
                          letS ds3.s21094.0 = sat.s21089.0 @ #"GHC.Prim.void#"
                          case ds3.s21094.0 of
                            ("GHC.Prim.Unit#" ipv5.s21096.0) ->
                                letS "s2#.s21097.0" = "putMVar#" @ "mvar#.s21084.0" ipv3.s21087.0
                                case "s2#.s21097.0"{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      ["GHC.Prim.Unit#" ipv5.s21096.0]
          0 ->
              let sat.s21114.1 = GHC.Conc.Signal.setHandler1.closure.7 @ io.s21060.0
              sat.s21114.1 @ #"GHC.Prim.void#"
          1 ->
              letS wild.s21115.0 = GHC.Conc.Signal.signal_handlers
              case wild.s21115.0 of
                (GHC.MVar.MVar "mvar#.s21116.0") ->
                    letS ds2.s21117.0 = "takeMVar#" @ "mvar#.s21116.0"
                    case ds2.s21117.0 of
                      ("GHC.Prim.Unit#" ipv3.s21119.0) ->
                          let sat.s21125.0 = GHC.Conc.Signal.setHandler1.closure.8 @ ipv3.s21119.0 "mvar#.s21116.0"
                              sat.s21120.0 = GHC.Conc.Signal.setHandler1.closure.9 @ io.s21060.0 ipv3.s21119.0
                              sat.s21121.0 = GHC.Conc.Signal.setHandler1.closure.10 @ sat.s21120.0
                          letS ds3.s21126.0 = sat.s21121.0 @ #"GHC.Prim.void#"
                          case ds3.s21126.0 of
                            ("GHC.Prim.Unit#" ipv5.s21128.0) ->
                                letS "s2#.s21129.0" = "putMVar#" @ "mvar#.s21116.0" ipv3.s21119.0
                                case "s2#.s21129.0"{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      ["GHC.Prim.Unit#" ipv5.s21128.0]

GHC.Conc.Signal.setHandler1.closure.0 handler.s21055.1 sig.s21054.1 arr.s21061.0 void.040.444 =
  letS wild.s21063.0 = arr.s21061.0
  case wild.s21063.0 of
    (GHC.Arr.STArray l.s21064.0 u.s21065.0 dt.s21066.0 ds1.s21067.0) ->
        letS wild1.s21068.0 = l.s21064.0
        case wild1.s21068.0 of
          ("GHC.Types.I#" m.s21069.0) ->
              letS wild2.s21070.0 = u.s21065.0
              case wild2.s21070.0 of
                ("GHC.Types.I#" n.s21071.0) ->
                    letS wild4.s21072.0 = sig.s21054.1
                    case wild4.s21072.0 of
                      ("GHC.Int.I32#" "x#.s21073.0") ->
                          letS lwild.s21074.0 = "<=#" @ m.s21069.0{- value -} "x#.s21073.0"{- value -}
                          case lwild.s21074.0{- value -} of
                            _ ->
                                GHC.Conc.Signal.setHandler2
                            1 ->
                                letS lwild1.s21076.0 = "<=#" @ "x#.s21073.0"{- value -} n.s21071.0{- value -}
                                case lwild1.s21076.0{- value -} of
                                  _ ->
                                      GHC.Conc.Signal.setHandler2
                                  1 ->
                                      letS ds2.s21078.0 = "readArray#" @ ds1.s21067.0 "x#.s21073.0"{- value -}
                                      case ds2.s21078.0 of
                                        ("GHC.Prim.Unit#" ipv3.s21080.0) ->
                                            letS "s2#.s21081.0" = "writeArray#" @ ds1.s21067.0 "x#.s21073.0"{- value -} handler.s21055.1
                                            case "s2#.s21081.0"{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  ["GHC.Prim.Unit#" ipv3.s21080.0]

GHC.Conc.Signal.setHandler1.closure.1 ipv3.s21087.1 "mvar#.s21084.1" e1.s21090.0 void.040.445 =
  letS "s2#.s21092.0" = "putMVar#" @ "mvar#.s21084.1" ipv3.s21087.1
  case "s2#.s21092.0"{- value -} of
    ("GHC.Prim.(##)") ->
        "raiseIO#" @ e1.s21090.0

GHC.Conc.Signal.setHandler1.closure.10 sat.s21120.1 void.040.451 =
  sat.s21120.1 @ #"GHC.Prim.void#"

GHC.Conc.Signal.setHandler1.closure.2 io.s21060.1 ipv3.s21087.2 void.040.446 =
  io.s21060.1 @ ipv3.s21087.2 #"GHC.Prim.void#"

GHC.Conc.Signal.setHandler1.closure.3 sat.s21088.1 void.040.447 =
  sat.s21088.1 @ #"GHC.Prim.void#"

GHC.Conc.Signal.setHandler1.closure.4 ipv3.s21103.1 "mvar#.s21100.1" e1.s21106.0 void.X61.0 =
  letS "s2#.s21108.0" = "putMVar#" @ "mvar#.s21100.1" ipv3.s21103.1
  case "s2#.s21108.0"{- value -} of
    ("GHC.Prim.(##)") ->
        "raiseIO#" @ e1.s21106.0

GHC.Conc.Signal.setHandler1.closure.5 io.s21060.3 ipv3.s21103.2 void.X61.1 =
  io.s21060.3 @ ipv3.s21103.2 #"GHC.Prim.void#"

GHC.Conc.Signal.setHandler1.closure.6 sat.s21104.2 void.X62.1 =
  sat.s21104.2 @ #"GHC.Prim.void#"

GHC.Conc.Signal.setHandler1.closure.7 io.s21060.2 void.040.448 =
  letS wild.s21099.0 = GHC.Conc.Signal.signal_handlers
  case wild.s21099.0 of
    (GHC.MVar.MVar "mvar#.s21100.0") ->
        letS ds2.s21101.0 = "takeMVar#" @ "mvar#.s21100.0"
        case ds2.s21101.0 of
          ("GHC.Prim.Unit#" ipv3.s21103.0) ->
              let sat.s21109.0 = GHC.Conc.Signal.setHandler1.closure.4 @ ipv3.s21103.0 "mvar#.s21100.0"
                  sat.s21104.1 = GHC.Conc.Signal.setHandler1.closure.5 @ io.s21060.2 ipv3.s21103.0
                  sat.s21105.0 = GHC.Conc.Signal.setHandler1.closure.6 @ sat.s21104.1
              letS ds3.s21110.0 = sat.s21105.0 @ #"GHC.Prim.void#"
              case ds3.s21110.0 of
                ("GHC.Prim.Unit#" ipv5.s21112.0) ->
                    letS "s2#.s21113.0" = "putMVar#" @ "mvar#.s21100.0" ipv3.s21103.0
                    case "s2#.s21113.0"{- value -} of
                      ("GHC.Prim.(##)") ->
                          ["GHC.Prim.Unit#" ipv5.s21112.0]

GHC.Conc.Signal.setHandler1.closure.8 ipv3.s21119.1 "mvar#.s21116.1" e1.s21122.0 void.040.449 =
  letS "s2#.s21124.0" = "putMVar#" @ "mvar#.s21116.1" ipv3.s21119.1
  case "s2#.s21124.0"{- value -} of
    ("GHC.Prim.(##)") ->
        "raiseIO#" @ e1.s21122.0

GHC.Conc.Signal.setHandler1.closure.9 io.s21060.4 ipv3.s21119.2 void.040.450 =
  io.s21060.4 @ ipv3.s21119.2 #"GHC.Prim.void#"

GHC.Conc.Signal.setHandler2 =
  letS sat.s21053.0 = "GHC.CString.unpackCString#" @ GHC.Conc.Signal.lvl3{- value -}
  GHC.Err.errorWithoutStackTrace @ sat.s21053.0

GHC.Conc.Signal.signal_handlers =
  letS ds.s21050.0 = GHC.Conc.Signal.lvl2 @ #"GHC.Prim.realWorld#"
  case ds.s21050.0 of
    ("GHC.Prim.Unit#" ipv1.s21052.0) ->
        ipv1.s21052.0

"GHC.Enum.$fEnumBool1" =
  letS sat.s54274.0 = "GHC.CString.unpackCString#" @ GHC.Enum.lvl1{- value -}
  GHC.Err.errorWithoutStackTrace @ sat.s54274.0

GHC.Enum.lvl1 =
  #"Prelude.Enum.Bool.toEnum: bad argument"

GHC.Err.error "$dIP.s7304.0" s.s7305.0 =
  let sat.s7306.0 = GHC.Err.error.closure.0 @ "$dIP.s7304.0" s.s7305.0
  "raise#" @ sat.s7306.0

GHC.Err.error.closure.0 "$dIP.s7304.1" s.s7305.1 =
  GHC.Exception.errorCallWithCallStackException @ s.s7305.1 "$dIP.s7304.1"

GHC.Err.errorWithoutStackTrace s.s7312.0 =
  let sat.s7313.0 = GHC.Err.errorWithoutStackTrace.closure.0 @ s.s7312.0
  "raise#" @ sat.s7313.0

GHC.Err.errorWithoutStackTrace.closure.0 s.s7312.1 =
  GHC.Exception.errorCallException @ s.s7312.1

"GHC.Event.IntTable.$sinsertWith" void.040.693 sc1.s17588.0 void.040.694 sc2.s17589.0 sc3.s17590.0 sc4.s17591.0 =
  letS ds1.s17592.0 = "readMutVar#" @ sc1.s17588.0
  case ds1.s17592.0 of
    ("GHC.Prim.Unit#" ipv1.s17594.0) ->
        letS wild.s17595.0 = ipv1.s17594.0
        case wild.s17595.0 of
          (GHC.Event.IntTable.IT dt.s17596.0 dt1.s17597.0 dt2.s17598.0) ->
              letS sat.s17600.0 = "sizeofMutableArray#" @ dt.s17596.0
                   sat.s17601.0 = "-#" @ sat.s17600.0{- value -} 1
                   "n#.s17599.0" = "andI#" @ sc3.s17590.0{- value -} sat.s17601.0{- value -}
                   ds2.s17602.0 = "readArray#" @ dt.s17596.0 "n#.s17599.0"{- value -}
              case ds2.s17602.0 of
                ("GHC.Prim.Unit#" ipv3.s17604.0) ->
                    let exit.s17605.0 = "GHC.Event.IntTable.$sinsertWith.closure.0" @ dt.s17596.0 dt1.s17597.0{- value -} dt2.s17598.0 "n#.s17599.0"{- value -} sc1.s17588.0 sc2.s17589.0 sc3.s17590.0{- value -} sc4.s17591.0
                        exit1.s17630.0 = "GHC.Event.IntTable.$sinsertWith.closure.1" @ dt.s17596.0 "n#.s17599.0"{- value -} sc2.s17589.0 sc3.s17590.0{- value -} sc4.s17591.0
                    letrec go.s17640.0 = "GHC.Event.IntTable.$sinsertWith.closure.2" @ exit.s17605.0 exit1.s17630.0 go.s17640.0 sc3.s17590.0{- value -}
                    go.s17640.0 @ GHC.Event.IntTable.Empty ipv3.s17604.0 #"GHC.Prim.void#"

"GHC.Event.IntTable.$sinsertWith.closure.0" dt.s17596.1 dt1.s17597.1 dt2.s17598.1 "n#.s17599.1" sc1.s17588.1 sc2.s17589.1 sc3.s17590.1 sc4.s17591.1 seen.s17606.0 void.040.695 =
  letS ds3.s17608.0 = "readIntOffAddr#" @ dt1.s17597.1{- value -} 0
  case ds3.s17608.0{- value -} of
    ("GHC.Prim.Unit#" ipv5.s17610.0) ->
        letS sat.s17613.0 = "sizeofMutableArray#" @ dt.s17596.1
             sat.s17614.0 = "uncheckedIShiftRA#" @ sat.s17613.0{- value -} 2
             sat.s17612.0 = "sizeofMutableArray#" @ dt.s17596.1
             sat.s17615.0 = "-#" @ sat.s17612.0{- value -} sat.s17614.0{- value -}
             sat.s17611.0 = "+#" @ ipv5.s17610.0{- value -} 1
             lwild.s17616.0 = ">=#" @ sat.s17611.0{- value -} sat.s17615.0{- value -}
        case lwild.s17616.0{- value -} of
          _ ->
              letS v.s17617.0 = sc2.s17589.1
              let sat.s17618.0 = [GHC.Event.IntTable.Bucket sc3.s17590.1{- value -} v.s17617.0 seen.s17606.0]
              letS "s1#.s17619.0" = "writeArray#" @ dt.s17596.1 "n#.s17599.1"{- value -} sat.s17618.0
              case "s1#.s17619.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    letS sat.s17620.0 = "+#" @ ipv5.s17610.0{- value -} 1
                         s2.s17621.0 = "writeIntOffAddr#" @ dt1.s17597.1{- value -} 0 sat.s17620.0{- value -}
                    case s2.s17621.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'.s17622.0 = "touch#" @ dt2.s17598.1
                          case s'.s17622.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                ["GHC.Prim.Unit#" GHC.Maybe.Nothing]
          1 ->
              letS ds4.s17623.0 = "GHC.Event.IntTable.$wgrow" @ dt.s17596.1 sc1.s17588.1 ipv5.s17610.0{- value -} #"GHC.Prim.void#"
              case ds4.s17623.0 of
                ("GHC.Prim.Unit#" ipv7.s17625.0) ->
                    letS ds5.s17626.0 = "GHC.Event.IntTable.$winsertWith" @ sc4.s17591.1 sc3.s17590.1{- value -} sc2.s17589.1 sc1.s17588.1 #"GHC.Prim.void#"
                    case ds5.s17626.0 of
                      ("GHC.Prim.Unit#" ipv9.s17628.0) ->
                          letS s'.s17629.0 = "touch#" @ dt2.s17598.1
                          case s'.s17629.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                ["GHC.Prim.Unit#" ipv9.s17628.0]

"GHC.Event.IntTable.$sinsertWith.closure.1" dt.s17596.2 "n#.s17599.2" sc2.s17589.2 sc3.s17590.2 sc4.s17591.2 seen.s17631.0 void.040.696 ds.s17633.0 ds3.s17634.0 =
  letS next.s17635.0 = "GHC.Event.IntTable.poly_<>" @ seen.s17631.0 ds3.s17634.0
       v'.s17636.0 = sc4.s17591.2 @ sc2.s17589.2 ds.s17633.0
  let sat.s17637.0 = [GHC.Event.IntTable.Bucket sc3.s17590.2{- value -} v'.s17636.0 next.s17635.0]
  letS "s1#.s17638.0" = "writeArray#" @ dt.s17596.2 "n#.s17599.2"{- value -} sat.s17637.0
  case "s1#.s17638.0"{- value -} of
    ("GHC.Prim.(##)") ->
        let sat.s17639.0 = [GHC.Maybe.Just ds.s17633.0]
        ["GHC.Prim.Unit#" sat.s17639.0]

"GHC.Event.IntTable.$sinsertWith.closure.2" exit.s17605.1 exit1.s17630.1 go.s17640.1 sc3.s17590.3 seen.s17641.0 bkt.s17642.0 void.040.697 =
  letS wild1.s17644.0 = bkt.s17642.0
  case wild1.s17644.0 of
    (GHC.Event.IntTable.Empty) ->
        exit.s17605.1 @ seen.s17641.0 #"GHC.Prim.void#"
    (GHC.Event.IntTable.Bucket dt3.s17645.0 ds.s17646.0 ds3.s17647.0) ->
        letS lwild.s17648.0 = "==#" @ dt3.s17645.0{- value -} sc3.s17590.3{- value -}
        case lwild.s17648.0{- value -} of
          _ ->
              let sat.s17649.0 = [GHC.Event.IntTable.Bucket dt3.s17645.0{- value -} ds.s17646.0 seen.s17641.0]
              go.s17640.1 @ sat.s17649.0 ds3.s17647.0 #"GHC.Prim.void#"
          1 ->
              exit1.s17630.1 @ seen.s17641.0 #"GHC.Prim.void#" ds.s17646.0 ds3.s17647.0

"GHC.Event.IntTable.$wgrow" ww.s17521.0 ww1.s17522.0 ww2.s17523.0 void.040.689 =
  letS sat.s17525.0 = "sizeofMutableArray#" @ ww.s17521.0
       sat.s17526.0 = "uncheckedIShiftL#" @ sat.s17525.0{- value -} 1
       ds1.s17527.0 = "newArray#" @ sat.s17526.0{- value -} GHC.Event.IntTable.Empty
  case ds1.s17527.0 of
    ("GHC.Prim.Unit#" ipv1.s17529.0) ->
        letS ds.s17530.0 = "newMutVar#" @ GHC.ForeignPtr.NoFinalizers
        case ds.s17530.0 of
          ("GHC.Prim.Unit#" ipv3.s17532.0) ->
              letS ds2.s17533.0 = "newAlignedPinnedByteArray#" @ 8 8
              case ds2.s17533.0 of
                ("GHC.Prim.Unit#" ipv5.s17535.0) ->
                    letS ipv6.s17536.0 = "byteArrayContents#" @ ipv5.s17535.0
                         s2.s17537.0 = "writeIntOffAddr#" @ ipv6.s17536.0{- value -} 0 0
                    case s2.s17537.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          let ipv7.s17538.0 = [GHC.ForeignPtr.MallocPtr ipv5.s17535.0 ipv3.s17532.0]
                          letS s'.s17539.0 = "touch#" @ ipv7.s17538.0
                          case s'.s17539.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                let exit.s17540.0 = "GHC.Event.IntTable.$wgrow.closure.0" @ ipv1.s17529.0 ipv6.s17536.0{- value -} ipv7.s17538.0 ww1.s17522.0 ww2.s17523.0{- value -}
                                letrec "$wcopySlot.s17546.0" = "GHC.Event.IntTable.$wgrow.closure.3" @ "$wcopySlot.s17546.0" exit.s17540.0 ipv1.s17529.0 ww.s17521.0 ww2.s17523.0{- value -}
                                "$wcopySlot.s17546.0" @ 0 0 #"GHC.Prim.void#"

"GHC.Event.IntTable.$wgrow.closure.0" ipv1.s17529.1 ipv6.s17536.1 ipv7.s17538.1 ww1.s17522.1 ww2.s17523.1 void.040.690 =
  letS s1.s17542.0 = "writeIntOffAddr#" @ ipv6.s17536.1{- value -} 0 ww2.s17523.1{- value -}
  case s1.s17542.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS s'1.s17543.0 = "touch#" @ ipv7.s17538.1
        case s'1.s17543.0{- value -} of
          ("GHC.Prim.(##)") ->
              let sat.s17544.0 = [GHC.Event.IntTable.IT ipv1.s17529.1 ipv6.s17536.1{- value -} ipv7.s17538.1]
              letS "s2#.s17545.0" = "writeMutVar#" @ ww1.s17522.1 sat.s17544.0
              case "s2#.s17545.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.Event.IntTable.$wgrow.closure.1" "$wcopySlot.s17546.2" ww4.s17548.1 ww5.s17555.0 void.X82.1 =
  letS sat.s17557.0 = "+#" @ ww4.s17548.1{- value -} 1
  "$wcopySlot.s17546.2" @ ww5.s17555.0{- value -} sat.s17557.0{- value -} #"GHC.Prim.void#"

"GHC.Event.IntTable.$wgrow.closure.2" "$wcopyBucket.s17558.1" exit1.s17554.1 ipv1.s17529.3 ww5.s17559.0 w2.s17560.0 void.X84.0 =
  letS wild.s17562.0 = w2.s17560.0
  case wild.s17562.0 of
    (GHC.Event.IntTable.Empty) ->
        exit1.s17554.1 @ ww5.s17559.0{- value -} #"GHC.Prim.void#"
    (GHC.Event.IntTable.Bucket ipv10.s17563.0 ipv11.s17564.0 ipv12.s17565.0) ->
        letS sat.s17567.0 = "sizeofMutableArray#" @ ipv1.s17529.3
             sat.s17568.0 = "-#" @ sat.s17567.0{- value -} 1
             idx.s17566.0 = "andI#" @ ipv10.s17563.0{- value -} sat.s17568.0{- value -}
             ds4.s17569.0 = "readArray#" @ ipv1.s17529.3 idx.s17566.0{- value -}
        case ds4.s17569.0 of
          ("GHC.Prim.Unit#" ipv14.s17571.0) ->
              let sat.s17572.0 = [GHC.Event.IntTable.Bucket ipv10.s17563.0{- value -} ipv11.s17564.0 ipv14.s17571.0]
              letS "s1#.s17573.0" = "writeArray#" @ ipv1.s17529.3 idx.s17566.0{- value -} sat.s17572.0
              case "s1#.s17573.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    letS sat.s17574.0 = "+#" @ ww5.s17559.0{- value -} 1
                    "$wcopyBucket.s17558.1" @ sat.s17574.0{- value -} ipv12.s17565.0 #"GHC.Prim.void#"

"GHC.Event.IntTable.$wgrow.closure.3" "$wcopySlot.s17546.1" exit.s17540.1 ipv1.s17529.2 ww.s17521.1 ww2.s17523.2 ww3.s17547.0 ww4.s17548.0 void.040.691 =
  letS lwild.s17550.0 = "==#" @ ww3.s17547.0{- value -} ww2.s17523.2{- value -}
  case lwild.s17550.0{- value -} of
    _ ->
        letS ds3.s17551.0 = "readArray#" @ ww.s17521.1 ww4.s17548.0{- value -}
        case ds3.s17551.0 of
          ("GHC.Prim.Unit#" ipv9.s17553.0) ->
              let exit1.s17554.0 = "GHC.Event.IntTable.$wgrow.closure.1" @ "$wcopySlot.s17546.1" ww4.s17548.0{- value -}
              letrec "$wcopyBucket.s17558.0" = "GHC.Event.IntTable.$wgrow.closure.2" @ "$wcopyBucket.s17558.0" exit1.s17554.0 ipv1.s17529.2
              "$wcopyBucket.s17558.0" @ ww3.s17547.0{- value -} ipv9.s17553.0 #"GHC.Prim.void#"
    1 ->
        exit.s17540.1 @ #"GHC.Prim.void#"

"GHC.Event.IntTable.$winsertWith" w.s17582.0 ww.s17583.0 w1.s17584.0 ww1.s17585.0 void.040.692 =
  "GHC.Event.IntTable.$sinsertWith" @ #"GHC.Prim.void#" ww1.s17585.0 #"GHC.Prim.coercionToken#" w1.s17584.0 ww.s17583.0{- value -} w.s17582.0

GHC.Event.IntTable.Empty =
  [GHC.Event.IntTable.Empty]

"GHC.Event.IntTable.poly_<>" ds.s17575.0 bs.s17576.0 =
  letS wild.s17577.0 = ds.s17575.0
  case wild.s17577.0 of
    (GHC.Event.IntTable.Empty) ->
        bs.s17576.0
    (GHC.Event.IntTable.Bucket dt.s17578.0 ds1.s17579.0 ds2.s17580.0) ->
        let sat.s17581.0 = "GHC.Event.IntTable.poly_<>.closure.0" @ bs.s17576.0 ds2.s17580.0
        [GHC.Event.IntTable.Bucket dt.s17578.0{- value -} ds1.s17579.0 sat.s17581.0]

"GHC.Event.IntTable.poly_<>.closure.0" bs.s17576.1 ds2.s17580.1 =
  "GHC.Event.IntTable.poly_<>" @ ds2.s17580.1 bs.s17576.1

"GHC.Event.Internal.$fMonoidEventLifetime1" =
  ["GHC.Types.I#" 0]

"GHC.Event.Internal.$wgo1" w.s26439.0 =
  letS wild.s26440.0 = w.s26439.0
  case wild.s26440.0 of
    ("GHC.Types.[]") ->
        0
    (GHC.Types.: y.s26441.0 ys.s26442.0) ->
        letS wild1.s26443.0 = y.s26441.0
        case wild1.s26443.0 of
          ("GHC.Types.I#" "x#.s26444.0") ->
              letS ww.s26445.0 = "GHC.Event.Internal.$wgo1" @ ys.s26442.0
              "orI#" @ "x#.s26444.0"{- value -} ww.s26445.0{- value -}

GHC.Event.Internal.evtNothing =
  "GHC.Event.Internal.$fMonoidEventLifetime1"

GHC.Event.Internal.evtRead =
  GHC.Event.Internal.evtRead1

GHC.Event.Internal.evtRead1 =
  ["GHC.Types.I#" 1]

GHC.Event.Internal.evtWrite =
  GHC.Event.Internal.evtWrite1

GHC.Event.Internal.evtWrite1 =
  ["GHC.Types.I#" 2]

"GHC.Event.Manager.$wcloseFd_" w.s54713.0 ww.s54714.0 ww1.s54715.0 void.040.764 =
  letS ds1.s54717.0 = "readMutVar#" @ ww.s54714.0
  case ds1.s54717.0 of
    ("GHC.Prim.Unit#" ipv1.s54719.0) ->
        letS wild.s54720.0 = ipv1.s54719.0
        case wild.s54720.0 of
          (GHC.Event.IntTable.IT dt.s54721.0 dt1.s54722.0 dt2.s54723.0) ->
              letS sat.s54725.0 = "sizeofMutableArray#" @ dt.s54721.0
                   sat.s54726.0 = "-#" @ sat.s54725.0{- value -} 1
                   "n#.s54724.0" = "andI#" @ ww1.s54715.0{- value -} sat.s54726.0{- value -}
                   ds2.s54727.0 = "readArray#" @ dt.s54721.0 "n#.s54724.0"{- value -}
              case ds2.s54727.0 of
                ("GHC.Prim.Unit#" ipv3.s54729.0) ->
                    letrec "$wgo.s54730.0" = "GHC.Event.Manager.$wcloseFd_.closure.0" @ "$wgo.s54730.0" ww1.s54715.0{- value -}
                    letS ww2.s54743.0 = "$wgo.s54730.0" @ ipv3.s54729.0
                    case ww2.s54743.0{- value -} of
                      ("GHC.Prim.(#,,#)" ww3.s54744.0 ww4.s54745.0 ww5.s54746.0) ->
                          let "$s$j.s54747.0" = "GHC.Event.Manager.$wcloseFd_.closure.3" @ w.s54713.0 ww1.s54715.0{- value -}
                          letS wild1.s54779.0 = ww4.s54745.0
                          case wild1.s54779.0 of
                            (GHC.Maybe.Nothing) ->
                                ["GHC.Prim.Unit#" GHC.Event.Manager.closeFd_2]
                            (GHC.Maybe.Just ipv4.s54780.0) ->
                                letS "s1#.s54781.0" = "writeArray#" @ dt.s54721.0 "n#.s54724.0"{- value -} ww5.s54746.0
                                case "s1#.s54781.0"{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS wild2.s54782.0 = ww3.s54744.0
                                      case wild2.s54782.0 of
                                        (GHC.Types.False) ->
                                            "$s$j.s54747.0" @ ipv4.s54780.0 #"GHC.Prim.void#"
                                        (GHC.Types.True) ->
                                            letS ds3.s54783.0 = "readIntOffAddr#" @ dt1.s54722.0{- value -} 0
                                            case ds3.s54783.0{- value -} of
                                              ("GHC.Prim.Unit#" ipv6.s54785.0) ->
                                                  letS sat.s54786.1 = "-#" @ ipv6.s54785.0{- value -} 1
                                                       s2.s54787.0 = "writeIntOffAddr#" @ dt1.s54722.0{- value -} 0 sat.s54786.1{- value -}
                                                  case s2.s54787.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS s'.s54788.0 = "touch#" @ dt2.s54723.0
                                                        case s'.s54788.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              "$s$j.s54747.0" @ ipv4.s54780.0 #"GHC.Prim.void#"

"GHC.Event.Manager.$wcloseFd_.closure.0" "$wgo.s54730.1" ww1.s54715.1 w2.s54731.0 =
  letS wild1.s54732.0 = w2.s54731.0
  case wild1.s54732.0 of
    (GHC.Event.IntTable.Empty) ->
        ["GHC.Prim.(#,,#)" GHC.Types.False GHC.Maybe.Nothing GHC.Event.IntTable.Empty]
    (GHC.Event.IntTable.Bucket dt3.s54733.0 ds.s54734.0 ds3.s54735.0) ->
        letS lwild.s54736.0 = "==#" @ dt3.s54733.0{- value -} ww1.s54715.1{- value -}
        case lwild.s54736.0{- value -} of
          _ ->
              letS ww2.s54737.0 = "$wgo.s54730.1" @ ds3.s54735.0
              case ww2.s54737.0{- value -} of
                ("GHC.Prim.(#,,#)" ww3.s54738.0 ww4.s54739.0 ww5.s54740.0) ->
                    let sat.s54741.0 = [GHC.Event.IntTable.Bucket dt3.s54733.0{- value -} ds.s54734.0 ww5.s54740.0]
                    ["GHC.Prim.(#,,#)" ww3.s54738.0 ww4.s54739.0 sat.s54741.0]
          1 ->
              let sat.s54742.0 = [GHC.Maybe.Just ds.s54734.0]
              ["GHC.Prim.(#,,#)" GHC.Types.True sat.s54742.0 ds3.s54735.0]

"GHC.Event.Manager.$wcloseFd_.closure.1" sc.s54748.1 void.X237.0 =
  GHC.Event.Manager.closeFd_3 @ sc.s54748.1 #"GHC.Prim.void#"

"GHC.Event.Manager.$wcloseFd_.closure.2" sc.s54748.2 void.X212.0 =
  GHC.Event.Manager.closeFd_3 @ sc.s54748.2 #"GHC.Prim.void#"

"GHC.Event.Manager.$wcloseFd_.closure.3" w.s54713.1 ww1.s54715.2 sc.s54748.0 void.040.765 =
  letS ww8.s54750.0 = "GHC.Event.Manager.$weventsOf" @ sc.s54748.0
  case ww8.s54750.0{- value -} of
    _ ->
        letS wild1.s54751.0 = w.s54713.1
        case wild1.s54751.0 of
          (GHC.Event.Manager.EventManager ds.s54752.0 dt4.s54753.0 dt5.s54754.0 dt6.s54755.0 dt7.s54756.0 dt8.s54757.0 dt9.s54758.0 dt10.s54759.0 dt11.s54760.0 dt12.s54761.0 dt13.s54762.0 dt14.s54763.0 dt15.s54764.0) ->
              letS wild2.s54765.0 = ds.s54752.0
              case wild2.s54765.0 of
                (GHC.Event.Internal.Backend bState.s54766.0 ds4.s54767.0 bModifyFd.s54768.0 ds5.s54769.0 ds3.s54770.0) ->
                    letS sat.s54772.0 = "andI#" @ ww8.s54750.0{- value -} 7
                    let sat.s54773.0 = ["GHC.Types.I#" sat.s54772.0{- value -}]
                        sat.s54771.0 = ["GHC.Int.I32#" ww1.s54715.2{- value -}]
                    letS ds6.s54774.0 = bModifyFd.s54768.0 @ bState.s54766.0 sat.s54771.0 sat.s54773.0 GHC.Event.Internal.evtNothing #"GHC.Prim.void#"
                    case ds6.s54774.0 of
                      ("GHC.Prim.Unit#" ipv5.s54776.0) ->
                          let sat.s54777.0 = "GHC.Event.Manager.$wcloseFd_.closure.1" @ sc.s54748.0
                          ["GHC.Prim.Unit#" sat.s54777.0]
    0 ->
        let sat.s54778.1 = "GHC.Event.Manager.$wcloseFd_.closure.2" @ sc.s54748.0
        ["GHC.Prim.Unit#" sat.s54778.1]

"GHC.Event.Manager.$weventsOf" w.s54050.0 =
  letS wild.s54051.0 = w.s54050.0
  case wild.s54051.0 of
    ("GHC.Types.[]") ->
        letS v.s54052.0 = GHC.Event.Manager.closeFd_4
        case v.s54052.0 of
          ("GHC.Types.I#" v1.s54053.0) ->
              v1.s54053.0{- value -}
    (GHC.Types.: fdd.s54054.0 ds.s54055.0) ->
        letS wild1.s54056.0 = ds.s54055.0
        case wild1.s54056.0 of
          ("GHC.Types.[]") ->
              letS wild2.s54057.0 = fdd.s54054.0
              case wild2.s54057.0 of
                (GHC.Event.Manager.FdData dt.s54058.0 dt1.s54059.0 dt2.s54060.0 ds1.s54061.0) ->
                    dt2.s54060.0{- value -}
          (GHC.Types.: ipv.s54062.0 ipv1.s54063.0) ->
              letS sat.s54064.0 = GHC.Base.map @ GHC.Event.Manager.fdEvents wild.s54051.0
              "GHC.Event.Internal.$wgo1" @ sat.s54064.0

"GHC.Event.Manager.$wlvl" ww.s53906.0 w.s53907.0 =
  let sat.s53912.0 = "GHC.Event.Manager.$wlvl.closure.1" @ w.s53907.0 ww.s53906.0{- value -}
  letS sat.s53913.0 = "GHC.CString.unpackAppendCString#" @ GHC.Event.Manager.lvl4{- value -} sat.s53912.0
  GHC.Err.errorWithoutStackTrace @ sat.s53913.0

"GHC.Event.Manager.$wlvl.closure.0" w.s53907.2 =
  "GHC.CString.unpackAppendCString#" @ GHC.Event.Manager.lvl5{- value -} w.s53907.2

"GHC.Event.Manager.$wlvl.closure.1" w.s53907.1 ww.s53906.1 =
  letS ww4.s53908.0 = "GHC.Show.$wshowSignedInt" @ 0 ww.s53906.1{- value -} "GHC.Types.[]"
  case ww4.s53908.0{- value -} of
    ("GHC.Prim.(#,#)" ww5.s53909.0 ww6.s53910.0) ->
        let sat.s53911.0 = "GHC.Event.Manager.$wlvl.closure.0" @ w.s53907.1
        "GHC.Base.++_$s++" @ sat.s53911.0 ww5.s53909.0 ww6.s53910.0

GHC.Event.Manager.closeFd_2 void.040.763 =
  ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.Event.Manager.closeFd_3 ds.s54067.0 void.040.728 =
  letS wild.s54069.0 = ds.s54067.0
  case wild.s54069.0 of
    ("GHC.Types.[]") ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]
    (GHC.Types.: y.s54070.0 ys.s54071.0) ->
        letS wild1.s54072.0 = y.s54070.0
        case wild1.s54072.0 of
          (GHC.Event.Manager.FdData dt.s54073.0 dt1.s54074.0 dt2.s54075.0 cb.s54076.0) ->
              letS sat.s54078.0 = "andI#" @ dt2.s54075.0{- value -} 7
                   sat.s54079.0 = "orI#" @ sat.s54078.0{- value -} 4
              let sat.s54080.0 = ["GHC.Types.I#" sat.s54079.0{- value -}]
                  sat.s54077.0 = [GHC.Event.Manager.FdKey dt.s54073.0{- value -} dt1.s54074.0{- value -}]
              letS ds1.s54081.0 = cb.s54076.0 @ sat.s54077.0 sat.s54080.0 #"GHC.Prim.void#"
              case ds1.s54081.0 of
                ("GHC.Prim.Unit#" ipv1.s54083.0) ->
                    GHC.Event.Manager.closeFd_3 @ ys.s54071.0 #"GHC.Prim.void#"

GHC.Event.Manager.closeFd_4 =
  letS sat.s54048.0 = GHC.Base.map @ GHC.Event.Manager.fdEvents "GHC.Types.[]"
       v.s54049.0 = "GHC.Event.Internal.$wgo1" @ sat.s54048.0
  ["GHC.Types.I#" v.s54049.0{- value -}]

GHC.Event.Manager.fdEvents ds.s53617.0 =
  letS wild.s53618.0 = ds.s53617.0
  case wild.s53618.0 of
    (GHC.Event.Manager.FdData dt.s53619.0 dt1.s53620.0 dt2.s53621.0 ds1.s53622.0) ->
        ["GHC.Types.I#" dt2.s53621.0{- value -}]

GHC.Event.Manager.lvl1 =
  #"Int"

GHC.Event.Manager.lvl13 =
  #"unregisterFd_"

GHC.Event.Manager.lvl14 =
  "GHC.CString.unpackCString#" @ GHC.Event.Manager.lvl13{- value -}

GHC.Event.Manager.lvl15 dt.s55052.0 =
  "GHC.Event.Manager.$wlvl" @ dt.s55052.0{- value -} GHC.Event.Manager.lvl14

GHC.Event.Manager.lvl2 =
  "GHC.CString.unpackCString#" @ GHC.Event.Manager.lvl1{- value -}

GHC.Event.Manager.lvl3 i1.s53751.0 dt.s53752.0 dt1.s53753.0 =
  let sat.s53754.0 = ["GHC.Types.I#" i1.s53751.0{- value -}]
  "GHC.Arr.$windexError" @ GHC.Show.showSignedInt dt.s53752.0 dt1.s53753.0 sat.s53754.0 GHC.Event.Manager.lvl2

GHC.Event.Manager.lvl4 =
  #"Failed while attempting to modify registration of file "

GHC.Event.Manager.lvl5 =
  #" at location "

GHC.Event.Manager.unregisterFd2 mgr.s55053.0 ds.s55054.0 void.040.779 =
  letS wild.s55056.0 = mgr.s55053.0
  case wild.s55056.0 of
    (GHC.Event.Manager.EventManager ds1.s55057.0 dt.s55058.0 dt1.s55059.0 dt2.s55060.0 dt3.s55061.0 dt4.s55062.0 dt5.s55063.0 dt6.s55064.0 dt7.s55065.0 dt8.s55066.0 dt9.s55067.0 dt10.s55068.0 dt11.s55069.0) ->
        letS wild1.s55070.0 = dt.s55058.0
        case wild1.s55070.0 of
          ("GHC.Types.I#" m.s55071.0) ->
              letS wild2.s55072.0 = dt1.s55059.0
              case wild2.s55072.0 of
                ("GHC.Types.I#" n.s55073.0) ->
                    letS wild4.s55074.0 = ds1.s55057.0
                    case wild4.s55074.0 of
                      (GHC.Event.Internal.Backend bState.s55075.0 ds2.s55076.0 bModifyFd.s55077.0 ds3.s55078.0 ds4.s55079.0) ->
                          letS wild5.s55080.0 = ds.s55054.0
                          case wild5.s55080.0 of
                            (GHC.Event.Manager.FdKey dt12.s55081.0 dt13.s55082.0) ->
                                letS ds5.s55083.0 = "getMaskingState#" @
                                case ds5.s55083.0{- value -} of
                                  ("GHC.Prim.Unit#" ipv1.s55085.0) ->
                                      letS i1.s55086.0 = "andI#" @ dt12.s55081.0{- value -} 31
                                           lwild.s55087.0 = "<=#" @ m.s55071.0{- value -} i1.s55086.0{- value -}
                                      case lwild.s55087.0{- value -} of
                                        _ ->
                                            GHC.Event.Manager.lvl3 @ i1.s55086.0{- value -} wild1.s55070.0 wild2.s55072.0
                                        1 ->
                                            letS lwild1.s55089.0 = "<=#" @ i1.s55086.0{- value -} n.s55073.0{- value -}
                                            case lwild1.s55089.0{- value -} of
                                              _ ->
                                                  GHC.Event.Manager.lvl3 @ i1.s55086.0{- value -} wild1.s55070.0 wild2.s55072.0
                                              1 ->
                                                  letS sat.s55091.0 = "-#" @ i1.s55086.0{- value -} m.s55071.0{- value -}
                                                       ds6.s55092.0 = "indexArray#" @ dt3.s55061.0 sat.s55091.0{- value -}
                                                  case ds6.s55092.0 of
                                                    ("GHC.Prim.Unit#" ipv2.s55093.0) ->
                                                        letS ww.s55094.0 = ipv2.s55093.0
                                                        case ww.s55094.0 of
                                                          (GHC.MVar.MVar ww1.s55095.0) ->
                                                              let "$wio.s55096.0" = GHC.Event.Manager.unregisterFd2.closure.6 @ bModifyFd.s55077.0 bState.s55075.0 ds3.s55078.0 dt12.s55081.0{- value -} dt13.s55082.0{- value -}
                                                                  io.s55205.0 = GHC.Event.Manager.unregisterFd2.closure.7 @ "$wio.s55096.0"
                                                              letS ds7.s55210.0 = ipv1.s55085.0{- value -}
                                                              case ds7.s55210.0{- value -} of
                                                                _ ->
                                                                    letS ds8.s55211.0 = "takeMVar#" @ ww1.s55095.0
                                                                    case ds8.s55211.0 of
                                                                      ("GHC.Prim.Unit#" ipv4.s55213.0) ->
                                                                          let sat.s55219.0 = GHC.Event.Manager.unregisterFd2.closure.8 @ ipv4.s55213.0 ww1.s55095.0
                                                                              sat.s55214.1 = GHC.Event.Manager.unregisterFd2.closure.9 @ io.s55205.0 ipv4.s55213.0
                                                                              sat.s55215.1 = GHC.Event.Manager.unregisterFd2.closure.10 @ sat.s55214.1
                                                                          letS ds9.s55220.0 = sat.s55215.1 @ #"GHC.Prim.void#"
                                                                          case ds9.s55220.0 of
                                                                            ("GHC.Prim.Unit#" ipv6.s55222.0) ->
                                                                                letS "s2#.s55223.0" = "putMVar#" @ ww1.s55095.0 ipv4.s55213.0
                                                                                case "s2#.s55223.0"{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      ["GHC.Prim.Unit#" ipv6.s55222.0]
                                                                0 ->
                                                                    let sat.s55238.0 = GHC.Event.Manager.unregisterFd2.closure.14 @ io.s55205.0 ww1.s55095.0
                                                                    sat.s55238.0 @ #"GHC.Prim.void#"
                                                                1 ->
                                                                    letS ds8.s55239.0 = "takeMVar#" @ ww1.s55095.0
                                                                    case ds8.s55239.0 of
                                                                      ("GHC.Prim.Unit#" ipv4.s55241.0) ->
                                                                          let sat.s55247.0 = GHC.Event.Manager.unregisterFd2.closure.15 @ ipv4.s55241.0 ww1.s55095.0
                                                                              sat.s55242.0 = GHC.Event.Manager.unregisterFd2.closure.16 @ io.s55205.0 ipv4.s55241.0
                                                                              sat.s55243.0 = GHC.Event.Manager.unregisterFd2.closure.17 @ sat.s55242.0
                                                                          letS ds9.s55248.0 = sat.s55243.0 @ #"GHC.Prim.void#"
                                                                          case ds9.s55248.0 of
                                                                            ("GHC.Prim.Unit#" ipv6.s55250.0) ->
                                                                                letS "s2#.s55251.0" = "putMVar#" @ ww1.s55095.0 ipv4.s55241.0
                                                                                case "s2#.s55251.0"{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      ["GHC.Prim.Unit#" ipv6.s55250.0]

GHC.Event.Manager.unregisterFd2.closure.0 dt13.s55082.2 x1.s55113.0 =
  letS wild7.s55114.0 = x1.s55113.0
  case wild7.s55114.0 of
    (GHC.Event.Manager.FdData dt17.s55115.0 dt18.s55116.0 dt19.s55117.0 ds9.s55118.0) ->
        letS sat.s55119.0 = "/=#" @ dt18.s55116.0{- value -} dt13.s55082.2{- value -}
        case sat.s55119.0{- value -} of
          0 ->
              [GHC.Types.False]
          1 ->
              [GHC.Types.True]

GHC.Event.Manager.unregisterFd2.closure.1 "$wgo.s55120.1" dt12.s55081.2 g.s55112.1 w2.s55121.0 =
  letS wild7.s55122.0 = w2.s55121.0
  case wild7.s55122.0 of
    (GHC.Event.IntTable.Empty) ->
        ["GHC.Prim.(#,,#)" GHC.Types.False GHC.Maybe.Nothing GHC.Event.IntTable.Empty]
    (GHC.Event.IntTable.Bucket dt17.s55123.0 ds9.s55124.0 ds10.s55125.0) ->
        letS lwild2.s55126.0 = "==#" @ dt17.s55123.0{- value -} dt12.s55081.2{- value -}
        case lwild2.s55126.0{- value -} of
          _ ->
              letS ww3.s55127.0 = "$wgo.s55120.1" @ ds10.s55125.0
              case ww3.s55127.0{- value -} of
                ("GHC.Prim.(#,,#)" ww4.s55128.0 ww5.s55129.0 ww6.s55130.0) ->
                    let sat.s55131.1 = [GHC.Event.IntTable.Bucket dt17.s55123.0{- value -} ds9.s55124.0 ww6.s55130.0]
                    ["GHC.Prim.(#,,#)" ww4.s55128.0 ww5.s55129.0 sat.s55131.1]
          1 ->
              letS wild8.s55132.0 = GHC.List.filter @ g.s55112.1 ds9.s55124.0
              case wild8.s55132.0 of
                ("GHC.Types.[]") ->
                    let sat.s55133.0 = [GHC.Maybe.Just ds9.s55124.0]
                    ["GHC.Prim.(#,,#)" GHC.Types.True sat.s55133.0 ds10.s55125.0]
                (GHC.Types.: ds11.s55134.0 ds12.s55135.0) ->
                    let sat.s55137.1 = [GHC.Event.IntTable.Bucket dt17.s55123.0{- value -} wild8.s55132.0 ds10.s55125.0]
                        sat.s55136.0 = [GHC.Maybe.Just ds9.s55124.0]
                    ["GHC.Prim.(#,,#)" GHC.Types.False sat.s55136.0 sat.s55137.1]

GHC.Event.Manager.unregisterFd2.closure.10 sat.s55214.2 void.040.784 =
  sat.s55214.2 @ #"GHC.Prim.void#"

GHC.Event.Manager.unregisterFd2.closure.11 ipv4.s55227.1 ww1.s55095.3 e1.s55230.0 void.X246.0 =
  letS "s2#.s55232.0" = "putMVar#" @ ww1.s55095.3 ipv4.s55227.1
  case "s2#.s55232.0"{- value -} of
    ("GHC.Prim.(##)") ->
        "raiseIO#" @ e1.s55230.0

GHC.Event.Manager.unregisterFd2.closure.12 io.s55205.3 ipv4.s55227.2 void.X246.1 =
  io.s55205.3 @ ipv4.s55227.2 #"GHC.Prim.void#"

GHC.Event.Manager.unregisterFd2.closure.13 sat.s55228.1 void.X247.0 =
  sat.s55228.1 @ #"GHC.Prim.void#"

GHC.Event.Manager.unregisterFd2.closure.14 io.s55205.2 ww1.s55095.2 void.040.785 =
  letS ds8.s55225.0 = "takeMVar#" @ ww1.s55095.2
  case ds8.s55225.0 of
    ("GHC.Prim.Unit#" ipv4.s55227.0) ->
        let sat.s55233.0 = GHC.Event.Manager.unregisterFd2.closure.11 @ ipv4.s55227.0 ww1.s55095.2
            sat.s55228.0 = GHC.Event.Manager.unregisterFd2.closure.12 @ io.s55205.2 ipv4.s55227.0
            sat.s55229.0 = GHC.Event.Manager.unregisterFd2.closure.13 @ sat.s55228.0
        letS ds9.s55234.0 = sat.s55229.0 @ #"GHC.Prim.void#"
        case ds9.s55234.0 of
          ("GHC.Prim.Unit#" ipv6.s55236.0) ->
              letS "s2#.s55237.0" = "putMVar#" @ ww1.s55095.2 ipv4.s55227.0
              case "s2#.s55237.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    ["GHC.Prim.Unit#" ipv6.s55236.0]

GHC.Event.Manager.unregisterFd2.closure.15 ipv4.s55241.1 ww1.s55095.4 e1.s55244.0 void.040.786 =
  letS "s2#.s55246.0" = "putMVar#" @ ww1.s55095.4 ipv4.s55241.1
  case "s2#.s55246.0"{- value -} of
    ("GHC.Prim.(##)") ->
        "raiseIO#" @ e1.s55244.0

GHC.Event.Manager.unregisterFd2.closure.16 io.s55205.4 ipv4.s55241.2 void.040.787 =
  io.s55205.4 @ ipv4.s55241.2 #"GHC.Prim.void#"

GHC.Event.Manager.unregisterFd2.closure.17 sat.s55242.1 void.040.788 =
  sat.s55242.1 @ #"GHC.Prim.void#"

GHC.Event.Manager.unregisterFd2.closure.2 bModifyFd.s55077.4 bState.s55075.4 dt12.s55081.5 fd.s55150.1 ww7.s55147.1 ww8.s55148.1 void.X267.0 =
  letS sat.s55155.0 = "andI#" @ ww8.s55148.1{- value -} 7
  let sat.s55156.0 = ["GHC.Types.I#" sat.s55155.0{- value -}]
  letS sat.s55153.0 = "andI#" @ ww7.s55147.1{- value -} 7
  let sat.s55154.0 = ["GHC.Types.I#" sat.s55153.0{- value -}]
  letS ds10.s55157.0 = bModifyFd.s55077.4 @ bState.s55075.4 fd.s55150.1 sat.s55154.0 sat.s55156.0 #"GHC.Prim.void#"
  case ds10.s55157.0 of
    ("GHC.Prim.Unit#" ipv8.s55159.0) ->
        letS wild7.s55160.0 = ipv8.s55159.0
        case wild7.s55160.0 of
          (GHC.Types.False) ->
              GHC.Event.Manager.lvl15 @ dt12.s55081.5{- value -}
          (GHC.Types.True) ->
              ["GHC.Prim.Unit#" GHC.Types.True]

GHC.Event.Manager.unregisterFd2.closure.3 bModifyFd.s55077.3 bState.s55075.3 ds3.s55078.3 dt12.s55081.4 void.X261.0 ww7.s55147.0 ww8.s55148.0 =
  letS lwild2.s55149.0 = "/=#" @ ww7.s55147.0{- value -} ww8.s55148.0{- value -}
  case lwild2.s55149.0{- value -} of
    _ ->
        ["GHC.Prim.Unit#" GHC.Types.False]
    1 ->
        let fd.s55150.0 = ["GHC.Int.I32#" dt12.s55081.4{- value -}]
            fail.s55151.0 = GHC.Event.Manager.unregisterFd2.closure.2 @ bModifyFd.s55077.3 bState.s55075.3 dt12.s55081.4{- value -} fd.s55150.0 ww7.s55147.0{- value -} ww8.s55148.0{- value -}
        letS wild7.s55162.0 = "andI#" @ ww8.s55148.0{- value -} 8
        case wild7.s55162.0{- value -} of
          _ ->
              fail.s55151.0 @ #"GHC.Prim.void#"
          0 ->
              letS wild8.s55163.0 = "andI#" @ ww8.s55148.0{- value -} 7
              case wild8.s55163.0{- value -} of
                _ ->
                    let sat.s55164.0 = ["GHC.Types.I#" wild8.s55163.0{- value -}]
                    letS ds9.s55165.0 = ds3.s55078.3 @ bState.s55075.3 fd.s55150.0 sat.s55164.0 #"GHC.Prim.void#"
                    case ds9.s55165.0 of
                      ("GHC.Prim.Unit#" ipv8.s55167.0) ->
                          letS wild9.s55168.0 = ipv8.s55167.0
                          case wild9.s55168.0 of
                            (GHC.Types.False) ->
                                GHC.Event.Manager.lvl15 @ dt12.s55081.4{- value -}
                            (GHC.Types.True) ->
                                ["GHC.Prim.Unit#" GHC.Types.True]
                0 ->
                    fail.s55151.0 @ #"GHC.Prim.void#"

GHC.Event.Manager.unregisterFd2.closure.4 dt12.s55081.6 go.s55183.1 ds11.s55184.0 =
  letS wild8.s55185.0 = ds11.s55184.0
  case wild8.s55185.0 of
    (GHC.Event.IntTable.Empty) ->
        [GHC.Maybe.Nothing]
    (GHC.Event.IntTable.Bucket dt20.s55186.0 ds12.s55187.0 ds13.s55188.0) ->
        letS lwild2.s55189.0 = "==#" @ dt20.s55186.0{- value -} dt12.s55081.6{- value -}
        case lwild2.s55189.0{- value -} of
          _ ->
              go.s55183.1 @ ds13.s55188.0
          1 ->
              [GHC.Maybe.Just ds12.s55187.0]

GHC.Event.Manager.unregisterFd2.closure.5 bModifyFd.s55077.2 bState.s55075.2 ds3.s55078.2 dt12.s55081.3 ww2.s55097.1 sc.s55143.0 void.X259.0 =
  let "$w$j.s55145.0" = GHC.Event.Manager.unregisterFd2.closure.3 @ bModifyFd.s55077.2 bState.s55075.2 ds3.s55078.2 dt12.s55081.3{- value -}
  letS ds9.s55170.0 = "readMutVar#" @ ww2.s55097.1
  case ds9.s55170.0 of
    ("GHC.Prim.Unit#" ipv8.s55172.0) ->
        letS wild7.s55173.0 = ipv8.s55172.0
        case wild7.s55173.0 of
          (GHC.Event.IntTable.IT dt17.s55174.0 dt18.s55175.0 dt19.s55176.0) ->
              letS sat.s55177.1 = "sizeofMutableArray#" @ dt17.s55174.0
                   sat.s55178.0 = "-#" @ sat.s55177.1{- value -} 1
                   sat.s55179.1 = "andI#" @ dt12.s55081.3{- value -} sat.s55178.0{- value -}
                   ds10.s55180.0 = "readArray#" @ dt17.s55174.0 sat.s55179.1{- value -}
              case ds10.s55180.0 of
                ("GHC.Prim.Unit#" ipv10.s55182.0) ->
                    letrec go.s55183.0 = GHC.Event.Manager.unregisterFd2.closure.4 @ dt12.s55081.3{- value -} go.s55183.0
                    letS vx.s55190.0 = go.s55183.0 @ ipv10.s55182.0
                         ww7.s55191.0 = "GHC.Event.Manager.$weventsOf" @ sc.s55143.0
                         wild8.s55192.0 = vx.s55190.0
                    case wild8.s55192.0 of
                      (GHC.Maybe.Nothing) ->
                          "$w$j.s55145.0" @ #"GHC.Prim.void#" ww7.s55191.0{- value -} 0
                      (GHC.Maybe.Just x1.s55193.0) ->
                          letS ww8.s55194.0 = "GHC.Event.Manager.$weventsOf" @ x1.s55193.0
                          "$w$j.s55145.0" @ #"GHC.Prim.void#" ww7.s55191.0{- value -} ww8.s55194.0{- value -}

GHC.Event.Manager.unregisterFd2.closure.6 bModifyFd.s55077.1 bState.s55075.1 ds3.s55078.1 dt12.s55081.1 dt13.s55082.1 ww2.s55097.0 void.040.780 =
  letS ds7.s55099.0 = "readMutVar#" @ ww2.s55097.0
  case ds7.s55099.0 of
    ("GHC.Prim.Unit#" ipv4.s55101.0) ->
        letS wild6.s55102.0 = ipv4.s55101.0
        case wild6.s55102.0 of
          (GHC.Event.IntTable.IT dt14.s55103.0 dt15.s55104.0 dt16.s55105.0) ->
              letS sat.s55107.0 = "sizeofMutableArray#" @ dt14.s55103.0
                   sat.s55108.0 = "-#" @ sat.s55107.0{- value -} 1
                   "n#.s55106.0" = "andI#" @ dt12.s55081.1{- value -} sat.s55108.0{- value -}
                   ds8.s55109.0 = "readArray#" @ dt14.s55103.0 "n#.s55106.0"{- value -}
              case ds8.s55109.0 of
                ("GHC.Prim.Unit#" ipv6.s55111.0) ->
                    let g.s55112.0 = GHC.Event.Manager.unregisterFd2.closure.0 @ dt13.s55082.1{- value -}
                    letrec "$wgo.s55120.0" = GHC.Event.Manager.unregisterFd2.closure.1 @ "$wgo.s55120.0" dt12.s55081.1{- value -} g.s55112.0
                    letS ww3.s55138.0 = "$wgo.s55120.0" @ ipv6.s55111.0
                    case ww3.s55138.0{- value -} of
                      ("GHC.Prim.(#,,#)" ww4.s55139.0 ww5.s55140.0 ww6.s55141.0) ->
                          let "$s$j.s55142.0" = GHC.Event.Manager.unregisterFd2.closure.5 @ bModifyFd.s55077.1 bState.s55075.1 ds3.s55078.1 dt12.s55081.1{- value -} ww2.s55097.0
                          letS wild7.s55195.0 = ww5.s55140.0
                          case wild7.s55195.0 of
                            (GHC.Maybe.Nothing) ->
                                ["GHC.Prim.Unit#" GHC.Types.False]
                            (GHC.Maybe.Just ipv7.s55196.0) ->
                                letS "s1#.s55197.0" = "writeArray#" @ dt14.s55103.0 "n#.s55106.0"{- value -} ww6.s55141.0
                                case "s1#.s55197.0"{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS wild8.s55198.0 = ww4.s55139.0
                                      case wild8.s55198.0 of
                                        (GHC.Types.False) ->
                                            "$s$j.s55142.0" @ ipv7.s55196.0 #"GHC.Prim.void#"
                                        (GHC.Types.True) ->
                                            letS ds9.s55199.0 = "readIntOffAddr#" @ dt15.s55104.0{- value -} 0
                                            case ds9.s55199.0{- value -} of
                                              ("GHC.Prim.Unit#" ipv9.s55201.0) ->
                                                  letS sat.s55202.0 = "-#" @ ipv9.s55201.0{- value -} 1
                                                       s2.s55203.0 = "writeIntOffAddr#" @ dt15.s55104.0{- value -} 0 sat.s55202.0{- value -}
                                                  case s2.s55203.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS s'.s55204.0 = "touch#" @ dt16.s55105.0
                                                        case s'.s55204.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              "$s$j.s55142.0" @ ipv7.s55196.0 #"GHC.Prim.void#"

GHC.Event.Manager.unregisterFd2.closure.7 "$wio.s55096.1" w.s55206.0 void.040.781 =
  letS ww2.s55208.0 = w.s55206.0
  case ww2.s55208.0 of
    (GHC.STRef.STRef ww3.s55209.0) ->
        "$wio.s55096.1" @ ww3.s55209.0 #"GHC.Prim.void#"

GHC.Event.Manager.unregisterFd2.closure.8 ipv4.s55213.1 ww1.s55095.1 e1.s55216.0 void.040.782 =
  letS "s2#.s55218.0" = "putMVar#" @ ww1.s55095.1 ipv4.s55213.1
  case "s2#.s55218.0"{- value -} of
    ("GHC.Prim.(##)") ->
        "raiseIO#" @ e1.s55216.0

GHC.Event.Manager.unregisterFd2.closure.9 io.s55205.1 ipv4.s55213.2 void.040.783 =
  io.s55205.1 @ ipv4.s55213.2 #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1 close.s57295.0 fd.s57296.0 void.040.852 =
  letS wild.s57298.0 = GHC.Event.Thread.eventManager
  case wild.s57298.0 of
    (GHC.STRef.STRef "var#.s57299.0") ->
        letS ds1.s57300.0 = "readMutVar#" @ "var#.s57299.0"
        case ds1.s57300.0 of
          ("GHC.Prim.Unit#" ipv1.s57302.0) ->
              letS wild1.s57303.0 = ipv1.s57302.0
              case wild1.s57303.0 of
                (GHC.Arr.STArray l.s57304.0 u.s57305.0 dt.s57306.0 ds2.s57307.0) ->
                    letS wild2.s57308.0 = l.s57304.0
                    case wild2.s57308.0 of
                      ("GHC.Types.I#" x.s57309.0) ->
                          letS wild3.s57310.0 = u.s57305.0
                          case wild3.s57310.0 of
                            ("GHC.Types.I#" y.s57311.0) ->
                                letS lwild.s57312.0 = ">#" @ x.s57309.0{- value -} y.s57311.0{- value -}
                                case lwild.s57312.0{- value -} of
                                  _ ->
                                      letrec go1.s57313.0 = GHC.Event.Thread.closeFdWith1.closure.0 @ ds2.s57307.0 go1.s57313.0 wild2.s57308.0 wild3.s57310.0 x.s57309.0{- value -} y.s57311.0{- value -}
                                      letS ds3.s57360.0 = go1.s57313.0 @ x.s57309.0{- value -} #"GHC.Prim.void#"
                                      case ds3.s57360.0 of
                                        ("GHC.Prim.Unit#" ipv3.s57362.0) ->
                                            letS ds.s57363.0 = "getMaskingState#" @
                                            case ds.s57363.0{- value -} of
                                              ("GHC.Prim.Unit#" ipv5.s57365.0) ->
                                                  let io.s57366.0 = GHC.Event.Thread.closeFdWith1.closure.25 @ close.s57295.0 fd.s57296.0 ipv3.s57362.0
                                                  letS ds4.s57644.0 = ipv5.s57365.0{- value -}
                                                  case ds4.s57644.0{- value -} of
                                                    _ ->
                                                        io.s57366.0 @ #"GHC.Prim.void#"
                                                    0 ->
                                                        io.s57366.0 @ #"GHC.Prim.void#"
                                  1 ->
                                      letS ds.s57645.0 = "getMaskingState#" @
                                      case ds.s57645.0{- value -} of
                                        ("GHC.Prim.Unit#" ipv3.s57647.0) ->
                                            let io.s57648.0 = GHC.Event.Thread.closeFdWith1.closure.37 @ close.s57295.0 fd.s57296.0
                                            letS ds3.s57735.0 = ipv3.s57647.0{- value -}
                                            case ds3.s57735.0{- value -} of
                                              _ ->
                                                  io.s57648.0 @ #"GHC.Prim.void#"
                                              0 ->
                                                  io.s57648.0 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.0 ds2.s57307.1 go1.s57313.1 wild2.s57308.1 wild3.s57310.1 x.s57309.1 y.s57311.1 x1.s57314.0 void.040.853 =
  letS lwild1.s57316.0 = "<=#" @ x.s57309.1{- value -} x1.s57314.0{- value -}
  case lwild1.s57316.0{- value -} of
    _ ->
        GHC.Event.Thread.getSystemEventManager2 @ x1.s57314.0{- value -} wild2.s57308.1 wild3.s57310.1
    1 ->
        letS lwild2.s57318.0 = "<=#" @ x1.s57314.0{- value -} y.s57311.1{- value -}
        case lwild2.s57318.0{- value -} of
          _ ->
              GHC.Event.Thread.getSystemEventManager2 @ x1.s57314.0{- value -} wild2.s57308.1 wild3.s57310.1
          1 ->
              letS sat.s57320.0 = "-#" @ x1.s57314.0{- value -} x.s57309.1{- value -}
                   ds3.s57321.0 = "readArray#" @ ds2.s57307.1 sat.s57320.0{- value -}
              case ds3.s57321.0 of
                ("GHC.Prim.Unit#" ipv3.s57323.0) ->
                    letS wild4.s57324.0 = ipv3.s57323.0
                    case wild4.s57324.0 of
                      (GHC.Maybe.Nothing) ->
                          letS ds4.s57325.0 = GHC.Event.Thread.lvl36 @ #"GHC.Prim.void#"
                          case ds4.s57325.0 of
                            ("GHC.Prim.Unit#" ipv5.s57327.0) ->
                                letS lwild3.s57328.0 = "==#" @ x1.s57314.0{- value -} y.s57311.1{- value -}
                                case lwild3.s57328.0{- value -} of
                                  _ ->
                                      letS sat.s57329.0 = "+#" @ x1.s57314.0{- value -} 1
                                           ds5.s57330.0 = go1.s57313.1 @ sat.s57329.0{- value -} #"GHC.Prim.void#"
                                      case ds5.s57330.0 of
                                        ("GHC.Prim.Unit#" ipv7.s57332.0) ->
                                            let sat.s57333.0 = [GHC.Types.: ipv5.s57327.0 ipv7.s57332.0]
                                            ["GHC.Prim.Unit#" sat.s57333.0]
                                  1 ->
                                      let sat.s57334.0 = [GHC.Types.: ipv5.s57327.0 "GHC.Types.[]"]
                                      ["GHC.Prim.Unit#" sat.s57334.0]
                      (GHC.Maybe.Just ds.s57335.0) ->
                          letS wild5.s57336.0 = ds.s57335.0
                          case wild5.s57336.0 of
                            ("GHC.Tuple.(,)" ds4.s57337.0 mgr.s57338.0) ->
                                letS mgr1.s57339.0 = mgr.s57338.0
                                case mgr1.s57339.0 of
                                  (GHC.Event.Manager.EventManager ipv4.s57340.0 ipv5.s57341.0 ipv6.s57342.0 ipv7.s57343.0 ipv8.s57344.0 ipv9.s57345.0 ipv10.s57346.0 ipv11.s57347.0 ipv12.s57348.0 ipv13.s57349.0 ipv14.s57350.0 ipv15.s57351.0 ipv16.s57352.0) ->
                                      letS lwild3.s57353.0 = "==#" @ x1.s57314.0{- value -} y.s57311.1{- value -}
                                      case lwild3.s57353.0{- value -} of
                                        _ ->
                                            letS sat.s57354.0 = "+#" @ x1.s57314.0{- value -} 1
                                                 ds5.s57355.0 = go1.s57313.1 @ sat.s57354.0{- value -} #"GHC.Prim.void#"
                                            case ds5.s57355.0 of
                                              ("GHC.Prim.Unit#" ipv18.s57357.0) ->
                                                  let sat.s57358.0 = [GHC.Types.: mgr1.s57339.0 ipv18.s57357.0]
                                                  ["GHC.Prim.Unit#" sat.s57358.0]
                                        1 ->
                                            let sat.s57359.0 = [GHC.Types.: mgr1.s57339.0 "GHC.Types.[]"]
                                            ["GHC.Prim.Unit#" sat.s57359.0]

GHC.Event.Thread.closeFdWith1.closure.1 fd.s57296.2 mgr.s57373.0 table.s57374.0 cbApp.s57375.0 void.X137.1 =
  letS wild5.s57377.0 = mgr.s57373.0
  case wild5.s57377.0 of
    (GHC.Event.Manager.EventManager ds5.s57378.0 dt1.s57379.0 dt2.s57380.0 dt3.s57381.0 dt4.s57382.0 dt5.s57383.0 dt6.s57384.0 dt7.s57385.0 dt8.s57386.0 dt9.s57387.0 dt10.s57388.0 dt11.s57389.0 dt12.s57390.0) ->
        letS wild6.s57391.0 = dt1.s57379.0
        case wild6.s57391.0 of
          ("GHC.Types.I#" m.s57392.0) ->
              letS wild7.s57393.0 = dt2.s57380.0
              case wild7.s57393.0 of
                ("GHC.Types.I#" n.s57394.0) ->
                    letS wild8.s57395.0 = fd.s57296.2
                    case wild8.s57395.0 of
                      ("GHC.Int.I32#" "x#.s57396.0") ->
                          letS i1.s57397.0 = "andI#" @ "x#.s57396.0"{- value -} 31
                               lwild1.s57398.0 = "<=#" @ m.s57392.0{- value -} i1.s57397.0{- value -}
                          case lwild1.s57398.0{- value -} of
                            _ ->
                                GHC.Event.Thread.getSystemEventManager2 @ i1.s57397.0{- value -} wild6.s57391.0 wild7.s57393.0
                            1 ->
                                letS lwild2.s57400.0 = "<=#" @ i1.s57397.0{- value -} n.s57394.0{- value -}
                                case lwild2.s57400.0{- value -} of
                                  _ ->
                                      GHC.Event.Thread.getSystemEventManager2 @ i1.s57397.0{- value -} wild6.s57391.0 wild7.s57393.0
                                  1 ->
                                      letS sat.s57402.0 = "-#" @ i1.s57397.0{- value -} m.s57392.0{- value -}
                                           ds6.s57403.0 = "indexArray#" @ dt4.s57382.0 sat.s57402.0{- value -}
                                      case ds6.s57403.0 of
                                        ("GHC.Prim.Unit#" ipv8.s57404.0) ->
                                            letS wild9.s57405.0 = ipv8.s57404.0
                                            case wild9.s57405.0 of
                                              (GHC.MVar.MVar "mvar#.s57406.0") ->
                                                  letS "s2#.s57407.0" = "putMVar#" @ "mvar#.s57406.0" table.s57374.0
                                                  case "s2#.s57407.0"{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        cbApp.s57375.0 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.10 close.s57295.5 fd.s57296.6 =
  close.s57295.5 @ fd.s57296.6

GHC.Event.Thread.closeFdWith1.closure.11 sat.s57440.1 void.X139.8 =
  sat.s57440.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.12 go2.s57489.1 i1.s57476.1 ds7.s57490.0 void.X165.0 =
  letS wild10.s57492.0 = ds7.s57490.0
  case wild10.s57492.0 of
    ("GHC.Types.[]") ->
        ["GHC.Prim.Unit#" "GHC.Types.[]"]
    (GHC.Types.: y2.s57493.0 ys1.s57494.0) ->
        letS wild11.s57495.0 = y2.s57493.0
        case wild11.s57495.0 of
          (GHC.Event.Manager.EventManager ds8.s57496.0 dt13.s57497.0 dt14.s57498.0 dt15.s57499.0 dt16.s57500.0 dt17.s57501.0 dt18.s57502.0 dt19.s57503.0 dt20.s57504.0 dt21.s57505.0 dt22.s57506.0 dt23.s57507.0 dt24.s57508.0) ->
              letS wild12.s57509.0 = dt13.s57497.0
              case wild12.s57509.0 of
                ("GHC.Types.I#" m1.s57510.0) ->
                    letS wild13.s57511.0 = dt14.s57498.0
                    case wild13.s57511.0 of
                      ("GHC.Types.I#" n1.s57512.0) ->
                          letS lwild3.s57513.0 = "<=#" @ m1.s57510.0{- value -} i1.s57476.1{- value -}
                          case lwild3.s57513.0{- value -} of
                            _ ->
                                GHC.Event.Thread.getSystemEventManager2 @ i1.s57476.1{- value -} wild12.s57509.0 wild13.s57511.0
                            1 ->
                                letS lwild4.s57515.0 = "<=#" @ i1.s57476.1{- value -} n1.s57512.0{- value -}
                                case lwild4.s57515.0{- value -} of
                                  _ ->
                                      GHC.Event.Thread.getSystemEventManager2 @ i1.s57476.1{- value -} wild12.s57509.0 wild13.s57511.0
                                  1 ->
                                      letS sat.s57517.0 = "-#" @ i1.s57476.1{- value -} m1.s57510.0{- value -}
                                           ds9.s57518.0 = "indexArray#" @ dt16.s57500.0 sat.s57517.0{- value -}
                                      case ds9.s57518.0 of
                                        ("GHC.Prim.Unit#" ipv9.s57519.0) ->
                                            letS wild14.s57520.0 = ipv9.s57519.0
                                            case wild14.s57520.0 of
                                              (GHC.MVar.MVar "mvar#1.s57521.0") ->
                                                  letS ds10.s57522.0 = "takeMVar#" @ "mvar#1.s57521.0"
                                                  case ds10.s57522.0 of
                                                    ("GHC.Prim.Unit#" ipv11.s57524.0) ->
                                                        letS ds11.s57525.0 = go2.s57489.1 @ ys1.s57494.0 #"GHC.Prim.void#"
                                                        case ds11.s57525.0 of
                                                          ("GHC.Prim.Unit#" ipv13.s57527.0) ->
                                                              let sat.s57528.0 = [GHC.Types.: ipv11.s57524.0 ipv13.s57527.0]
                                                              ["GHC.Prim.Unit#" sat.s57528.0]

GHC.Event.Thread.closeFdWith1.closure.13 go3.s57537.1 "x#.s57475.1" ds9.s57538.0 _ys.s57539.0 void.X173.0 =
  letS wild10.s57541.0 = ds9.s57538.0
  case wild10.s57541.0 of
    ("GHC.Types.[]") ->
        ["GHC.Prim.Unit#" "GHC.Types.[]"]
    (GHC.Types.: ipv13.s57542.0 ipv14.s57543.0) ->
        letS wild11.s57544.0 = _ys.s57539.0
        case wild11.s57544.0 of
          ("GHC.Types.[]") ->
              ["GHC.Prim.Unit#" "GHC.Types.[]"]
          (GHC.Types.: ipv15.s57545.0 ipv16.s57546.0) ->
              letS ww2.s57547.0 = ipv15.s57545.0
              case ww2.s57547.0 of
                (GHC.STRef.STRef ww3.s57548.0) ->
                    letS ds10.s57549.0 = "GHC.Event.Manager.$wcloseFd_" @ ipv13.s57542.0 ww3.s57548.0 "x#.s57475.1"{- value -} #"GHC.Prim.void#"
                    case ds10.s57549.0 of
                      ("GHC.Prim.Unit#" ipv18.s57551.0) ->
                          letS ds11.s57552.0 = go3.s57537.1 @ ipv14.s57543.0 ipv16.s57546.0 #"GHC.Prim.void#"
                          case ds11.s57552.0 of
                            ("GHC.Prim.Unit#" ipv20.s57554.0) ->
                                let sat.s57555.0 = [GHC.Types.: ipv18.s57551.0 ipv20.s57554.0]
                                ["GHC.Prim.Unit#" sat.s57555.0]

GHC.Event.Thread.closeFdWith1.closure.14 "x#.s57475.2" mgr.s57563.0 table.s57564.0 cbApp.s57565.0 void.X181.0 =
  letS wild10.s57567.0 = mgr.s57563.0
  case wild10.s57567.0 of
    (GHC.Event.Manager.EventManager ds11.s57568.0 dt13.s57569.0 dt14.s57570.0 dt15.s57571.0 dt16.s57572.0 dt17.s57573.0 dt18.s57574.0 dt19.s57575.0 dt20.s57576.0 dt21.s57577.0 dt22.s57578.0 dt23.s57579.0 dt24.s57580.0) ->
        letS wild11.s57581.0 = dt13.s57569.0
        case wild11.s57581.0 of
          ("GHC.Types.I#" m1.s57582.0) ->
              letS wild12.s57583.0 = dt14.s57570.0
              case wild12.s57583.0 of
                ("GHC.Types.I#" n1.s57584.0) ->
                    letS i2.s57585.0 = "andI#" @ "x#.s57475.2"{- value -} 31
                         lwild3.s57586.0 = "<=#" @ m1.s57582.0{- value -} i2.s57585.0{- value -}
                    case lwild3.s57586.0{- value -} of
                      _ ->
                          GHC.Event.Thread.getSystemEventManager2 @ i2.s57585.0{- value -} wild11.s57581.0 wild12.s57583.0
                      1 ->
                          letS lwild4.s57588.0 = "<=#" @ i2.s57585.0{- value -} n1.s57584.0{- value -}
                          case lwild4.s57588.0{- value -} of
                            _ ->
                                GHC.Event.Thread.getSystemEventManager2 @ i2.s57585.0{- value -} wild11.s57581.0 wild12.s57583.0
                            1 ->
                                letS sat.s57590.0 = "-#" @ i2.s57585.0{- value -} m1.s57582.0{- value -}
                                     ds12.s57591.0 = "indexArray#" @ dt16.s57572.0 sat.s57590.0{- value -}
                                case ds12.s57591.0 of
                                  ("GHC.Prim.Unit#" ipv17.s57592.0) ->
                                      letS wild13.s57593.0 = ipv17.s57592.0
                                      case wild13.s57593.0 of
                                        (GHC.MVar.MVar "mvar#1.s57594.0") ->
                                            letS "s2#.s57595.0" = "putMVar#" @ "mvar#1.s57594.0" table.s57564.0
                                            case "s2#.s57595.0"{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  cbApp.s57565.0 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.15 sequel.s57562.1 e1.s57602.0 void.X182.0 =
  letS ds12.s57604.0 = GHC.Event.Thread.go @ sequel.s57562.1 #"GHC.Prim.void#"
  case ds12.s57604.0 of
    ("GHC.Prim.Unit#" ipv18.s57606.0) ->
        "raiseIO#" @ e1.s57602.0

GHC.Event.Thread.closeFdWith1.closure.16 close.s57295.6 wild8.s57474.1 =
  close.s57295.6 @ wild8.s57474.1

GHC.Event.Thread.closeFdWith1.closure.17 sat.s57600.1 void.X183.0 =
  sat.s57600.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.18 sequel.s57562.3 e1.s57617.0 void.X184.0 =
  letS ds12.s57619.0 = GHC.Event.Thread.go @ sequel.s57562.3 #"GHC.Prim.void#"
  case ds12.s57619.0 of
    ("GHC.Prim.Unit#" ipv18.s57621.0) ->
        "raiseIO#" @ e1.s57617.0

GHC.Event.Thread.closeFdWith1.closure.19 close.s57295.8 wild8.s57474.3 =
  close.s57295.8 @ wild8.s57474.3

GHC.Event.Thread.closeFdWith1.closure.2 sequel.s57372.1 e1.s57412.0 void.X138.1 =
  letS ds6.s57414.0 = GHC.Event.Thread.go @ sequel.s57372.1 #"GHC.Prim.void#"
  case ds6.s57414.0 of
    ("GHC.Prim.Unit#" ipv9.s57416.0) ->
        "raiseIO#" @ e1.s57412.0

GHC.Event.Thread.closeFdWith1.closure.20 sat.s57615.1 void.X185.0 =
  sat.s57615.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.21 close.s57295.7 sequel.s57562.2 wild8.s57474.2 void.X181.1 =
  let sat.s57622.0 = GHC.Event.Thread.closeFdWith1.closure.18 @ sequel.s57562.2
      sat.s57615.0 = GHC.Event.Thread.closeFdWith1.closure.19 @ close.s57295.7 wild8.s57474.2
      sat.s57616.0 = GHC.Event.Thread.closeFdWith1.closure.20 @ sat.s57615.0
  letS ds12.s57623.0 = sat.s57616.0 @ #"GHC.Prim.void#"
  case ds12.s57623.0 of
    ("GHC.Prim.Unit#" ipv18.s57625.0) ->
        letS ds13.s57626.0 = GHC.Event.Thread.go @ sequel.s57562.2 #"GHC.Prim.void#"
        case ds13.s57626.0 of
          ("GHC.Prim.Unit#" ipv20.s57628.0) ->
              ["GHC.Prim.Unit#" ipv18.s57625.0]

GHC.Event.Thread.closeFdWith1.closure.22 sequel.s57562.4 e1.s57632.0 void.X182.1 =
  letS ds12.s57634.0 = GHC.Event.Thread.go @ sequel.s57562.4 #"GHC.Prim.void#"
  case ds12.s57634.0 of
    ("GHC.Prim.Unit#" ipv18.s57636.0) ->
        "raiseIO#" @ e1.s57632.0

GHC.Event.Thread.closeFdWith1.closure.23 close.s57295.9 wild8.s57474.4 =
  close.s57295.9 @ wild8.s57474.4

GHC.Event.Thread.closeFdWith1.closure.24 sat.s57630.1 void.X183.1 =
  sat.s57630.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.25 close.s57295.1 fd.s57296.1 ipv3.s57362.1 void.040.854 =
  letS wild4.s57368.0 = ipv3.s57362.1
  case wild4.s57368.0 of
    ("GHC.Types.[]") ->
        letS ds4.s57369.0 = "getMaskingState#" @
        case ds4.s57369.0{- value -} of
          ("GHC.Prim.Unit#" ipv7.s57371.0) ->
              let sat.s57408.0 = GHC.Event.Thread.closeFdWith1.closure.1 @ fd.s57296.1
              letS sequel.s57372.0 = GHC.List.zipWith3 @ sat.s57408.0 "GHC.Types.[]" "GHC.Types.[]" "GHC.Types.[]"
                   ds5.s57409.0 = ipv7.s57371.0{- value -}
              case ds5.s57409.0{- value -} of
                _ ->
                    let sat.s57417.0 = GHC.Event.Thread.closeFdWith1.closure.2 @ sequel.s57372.0
                        sat.s57410.0 = GHC.Event.Thread.closeFdWith1.closure.3 @ close.s57295.1 fd.s57296.1
                        sat.s57411.0 = GHC.Event.Thread.closeFdWith1.closure.4 @ sat.s57410.0
                    letS ds6.s57418.0 = sat.s57411.0 @ #"GHC.Prim.void#"
                    case ds6.s57418.0 of
                      ("GHC.Prim.Unit#" ipv9.s57420.0) ->
                          letS ds7.s57421.0 = GHC.Event.Thread.go @ sequel.s57372.0 #"GHC.Prim.void#"
                          case ds7.s57421.0 of
                            ("GHC.Prim.Unit#" ipv11.s57423.0) ->
                                ["GHC.Prim.Unit#" ipv9.s57420.0]
                0 ->
                    let sat.s57439.0 = GHC.Event.Thread.closeFdWith1.closure.8 @ close.s57295.1 fd.s57296.1 sequel.s57372.0
                    sat.s57439.0 @ #"GHC.Prim.void#"
                1 ->
                    let sat.s57447.0 = GHC.Event.Thread.closeFdWith1.closure.9 @ sequel.s57372.0
                        sat.s57440.0 = GHC.Event.Thread.closeFdWith1.closure.10 @ close.s57295.1 fd.s57296.1
                        sat.s57441.0 = GHC.Event.Thread.closeFdWith1.closure.11 @ sat.s57440.0
                    letS ds6.s57448.0 = sat.s57441.0 @ #"GHC.Prim.void#"
                    case ds6.s57448.0 of
                      ("GHC.Prim.Unit#" ipv9.s57450.0) ->
                          letS ds7.s57451.0 = GHC.Event.Thread.go @ sequel.s57372.0 #"GHC.Prim.void#"
                          case ds7.s57451.0 of
                            ("GHC.Prim.Unit#" ipv11.s57453.0) ->
                                ["GHC.Prim.Unit#" ipv9.s57450.0]
    (GHC.Types.: y1.s57454.0 ys.s57455.0) ->
        letS wild5.s57456.0 = y1.s57454.0
        case wild5.s57456.0 of
          (GHC.Event.Manager.EventManager ds4.s57457.0 dt1.s57458.0 dt2.s57459.0 dt3.s57460.0 dt4.s57461.0 dt5.s57462.0 dt6.s57463.0 dt7.s57464.0 dt8.s57465.0 dt9.s57466.0 dt10.s57467.0 dt11.s57468.0 dt12.s57469.0) ->
              letS wild6.s57470.0 = dt1.s57458.0
              case wild6.s57470.0 of
                ("GHC.Types.I#" m.s57471.0) ->
                    letS wild7.s57472.0 = dt2.s57459.0
                    case wild7.s57472.0 of
                      ("GHC.Types.I#" n.s57473.0) ->
                          letS wild8.s57474.0 = fd.s57296.1
                          case wild8.s57474.0 of
                            ("GHC.Int.I32#" "x#.s57475.0") ->
                                letS i1.s57476.0 = "andI#" @ "x#.s57475.0"{- value -} 31
                                     lwild1.s57477.0 = "<=#" @ m.s57471.0{- value -} i1.s57476.0{- value -}
                                case lwild1.s57477.0{- value -} of
                                  _ ->
                                      GHC.Event.Thread.getSystemEventManager2 @ i1.s57476.0{- value -} wild6.s57470.0 wild7.s57472.0
                                  1 ->
                                      letS lwild2.s57479.0 = "<=#" @ i1.s57476.0{- value -} n.s57473.0{- value -}
                                      case lwild2.s57479.0{- value -} of
                                        _ ->
                                            GHC.Event.Thread.getSystemEventManager2 @ i1.s57476.0{- value -} wild6.s57470.0 wild7.s57472.0
                                        1 ->
                                            letS sat.s57481.0 = "-#" @ i1.s57476.0{- value -} m.s57471.0{- value -}
                                                 ds5.s57482.0 = "indexArray#" @ dt4.s57461.0 sat.s57481.0{- value -}
                                            case ds5.s57482.0 of
                                              ("GHC.Prim.Unit#" ipv6.s57483.0) ->
                                                  letS wild9.s57484.0 = ipv6.s57483.0
                                                  case wild9.s57484.0 of
                                                    (GHC.MVar.MVar "mvar#.s57485.0") ->
                                                        letS ds6.s57486.0 = "takeMVar#" @ "mvar#.s57485.0"
                                                        case ds6.s57486.0 of
                                                          ("GHC.Prim.Unit#" ipv8.s57488.0) ->
                                                              letrec go2.s57489.0 = GHC.Event.Thread.closeFdWith1.closure.12 @ go2.s57489.0 i1.s57476.0{- value -}
                                                              letS ds7.s57529.0 = go2.s57489.0 @ ys.s57455.0 #"GHC.Prim.void#"
                                                              case ds7.s57529.0 of
                                                                ("GHC.Prim.Unit#" ipv10.s57531.0) ->
                                                                    letS ww.s57532.0 = ipv8.s57488.0
                                                                    case ww.s57532.0 of
                                                                      (GHC.STRef.STRef ww1.s57533.0) ->
                                                                          letS ds8.s57534.0 = "GHC.Event.Manager.$wcloseFd_" @ wild5.s57456.0 ww1.s57533.0 "x#.s57475.0"{- value -} #"GHC.Prim.void#"
                                                                          case ds8.s57534.0 of
                                                                            ("GHC.Prim.Unit#" ipv12.s57536.0) ->
                                                                                letrec go3.s57537.0 = GHC.Event.Thread.closeFdWith1.closure.13 @ go3.s57537.0 "x#.s57475.0"{- value -}
                                                                                letS ds9.s57556.0 = go3.s57537.0 @ ys.s57455.0 ipv10.s57531.0 #"GHC.Prim.void#"
                                                                                case ds9.s57556.0 of
                                                                                  ("GHC.Prim.Unit#" ipv14.s57558.0) ->
                                                                                      letS ds10.s57559.0 = "getMaskingState#" @
                                                                                      case ds10.s57559.0{- value -} of
                                                                                        ("GHC.Prim.Unit#" ipv16.s57561.0) ->
                                                                                            let sat.s57598.0 = [GHC.Types.: ipv12.s57536.0 ipv14.s57558.0]
                                                                                                sat.s57597.0 = [GHC.Types.: ww.s57532.0 ipv10.s57531.0]
                                                                                                sat.s57596.0 = GHC.Event.Thread.closeFdWith1.closure.14 @ "x#.s57475.0"{- value -}
                                                                                            letS sequel.s57562.0 = GHC.List.zipWith3 @ sat.s57596.0 wild4.s57368.0 sat.s57597.0 sat.s57598.0
                                                                                                 ds11.s57599.0 = ipv16.s57561.0{- value -}
                                                                                            case ds11.s57599.0{- value -} of
                                                                                              _ ->
                                                                                                  let sat.s57607.0 = GHC.Event.Thread.closeFdWith1.closure.15 @ sequel.s57562.0
                                                                                                      sat.s57600.0 = GHC.Event.Thread.closeFdWith1.closure.16 @ close.s57295.1 wild8.s57474.0
                                                                                                      sat.s57601.0 = GHC.Event.Thread.closeFdWith1.closure.17 @ sat.s57600.0
                                                                                                  letS ds12.s57608.0 = sat.s57601.0 @ #"GHC.Prim.void#"
                                                                                                  case ds12.s57608.0 of
                                                                                                    ("GHC.Prim.Unit#" ipv18.s57610.0) ->
                                                                                                        letS ds13.s57611.0 = GHC.Event.Thread.go @ sequel.s57562.0 #"GHC.Prim.void#"
                                                                                                        case ds13.s57611.0 of
                                                                                                          ("GHC.Prim.Unit#" ipv20.s57613.0) ->
                                                                                                              ["GHC.Prim.Unit#" ipv18.s57610.0]
                                                                                              0 ->
                                                                                                  let sat.s57629.0 = GHC.Event.Thread.closeFdWith1.closure.21 @ close.s57295.1 sequel.s57562.0 wild8.s57474.0
                                                                                                  sat.s57629.0 @ #"GHC.Prim.void#"
                                                                                              1 ->
                                                                                                  let sat.s57637.0 = GHC.Event.Thread.closeFdWith1.closure.22 @ sequel.s57562.0
                                                                                                      sat.s57630.0 = GHC.Event.Thread.closeFdWith1.closure.23 @ close.s57295.1 wild8.s57474.0
                                                                                                      sat.s57631.0 = GHC.Event.Thread.closeFdWith1.closure.24 @ sat.s57630.0
                                                                                                  letS ds12.s57638.0 = sat.s57631.0 @ #"GHC.Prim.void#"
                                                                                                  case ds12.s57638.0 of
                                                                                                    ("GHC.Prim.Unit#" ipv18.s57640.0) ->
                                                                                                        letS ds13.s57641.0 = GHC.Event.Thread.go @ sequel.s57562.0 #"GHC.Prim.void#"
                                                                                                        case ds13.s57641.0 of
                                                                                                          ("GHC.Prim.Unit#" ipv20.s57643.0) ->
                                                                                                              ["GHC.Prim.Unit#" ipv18.s57640.0]

GHC.Event.Thread.closeFdWith1.closure.26 fd.s57296.8 mgr.s57654.0 table.s57655.0 cbApp.s57656.0 void.X133.2 =
  letS wild4.s57658.0 = mgr.s57654.0
  case wild4.s57658.0 of
    (GHC.Event.Manager.EventManager ds4.s57659.0 dt1.s57660.0 dt2.s57661.0 dt3.s57662.0 dt4.s57663.0 dt5.s57664.0 dt6.s57665.0 dt7.s57666.0 dt8.s57667.0 dt9.s57668.0 dt10.s57669.0 dt11.s57670.0 dt12.s57671.0) ->
        letS wild5.s57672.0 = dt1.s57660.0
        case wild5.s57672.0 of
          ("GHC.Types.I#" m.s57673.0) ->
              letS wild6.s57674.0 = dt2.s57661.0
              case wild6.s57674.0 of
                ("GHC.Types.I#" n.s57675.0) ->
                    letS wild7.s57676.0 = fd.s57296.8
                    case wild7.s57676.0 of
                      ("GHC.Int.I32#" "x#.s57677.0") ->
                          letS i1.s57678.0 = "andI#" @ "x#.s57677.0"{- value -} 31
                               lwild1.s57679.0 = "<=#" @ m.s57673.0{- value -} i1.s57678.0{- value -}
                          case lwild1.s57679.0{- value -} of
                            _ ->
                                GHC.Event.Thread.getSystemEventManager2 @ i1.s57678.0{- value -} wild5.s57672.0 wild6.s57674.0
                            1 ->
                                letS lwild2.s57681.0 = "<=#" @ i1.s57678.0{- value -} n.s57675.0{- value -}
                                case lwild2.s57681.0{- value -} of
                                  _ ->
                                      GHC.Event.Thread.getSystemEventManager2 @ i1.s57678.0{- value -} wild5.s57672.0 wild6.s57674.0
                                  1 ->
                                      letS sat.s57683.0 = "-#" @ i1.s57678.0{- value -} m.s57673.0{- value -}
                                           ds5.s57684.0 = "indexArray#" @ dt4.s57663.0 sat.s57683.0{- value -}
                                      case ds5.s57684.0 of
                                        ("GHC.Prim.Unit#" ipv6.s57685.0) ->
                                            letS wild8.s57686.0 = ipv6.s57685.0
                                            case wild8.s57686.0 of
                                              (GHC.MVar.MVar "mvar#.s57687.0") ->
                                                  letS "s2#.s57688.0" = "putMVar#" @ "mvar#.s57687.0" table.s57655.0
                                                  case "s2#.s57688.0"{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        cbApp.s57656.0 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.27 sequel.s57653.1 e1.s57693.0 void.X134.1 =
  letS ds5.s57695.0 = GHC.Event.Thread.go @ sequel.s57653.1 #"GHC.Prim.void#"
  case ds5.s57695.0 of
    ("GHC.Prim.Unit#" ipv7.s57697.0) ->
        "raiseIO#" @ e1.s57693.0

GHC.Event.Thread.closeFdWith1.closure.28 close.s57295.11 fd.s57296.9 =
  close.s57295.11 @ fd.s57296.9

GHC.Event.Thread.closeFdWith1.closure.29 sat.s57691.1 void.X135.3 =
  sat.s57691.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.3 close.s57295.2 fd.s57296.3 =
  close.s57295.2 @ fd.s57296.3

GHC.Event.Thread.closeFdWith1.closure.30 sequel.s57653.3 e1.s57708.0 void.X136.2 =
  letS ds5.s57710.0 = GHC.Event.Thread.go @ sequel.s57653.3 #"GHC.Prim.void#"
  case ds5.s57710.0 of
    ("GHC.Prim.Unit#" ipv7.s57712.0) ->
        "raiseIO#" @ e1.s57708.0

GHC.Event.Thread.closeFdWith1.closure.31 close.s57295.13 fd.s57296.11 =
  close.s57295.13 @ fd.s57296.11

GHC.Event.Thread.closeFdWith1.closure.32 sat.s57706.1 void.X137.3 =
  sat.s57706.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.33 close.s57295.12 fd.s57296.10 sequel.s57653.2 void.X133.3 =
  let sat.s57713.0 = GHC.Event.Thread.closeFdWith1.closure.30 @ sequel.s57653.2
      sat.s57706.0 = GHC.Event.Thread.closeFdWith1.closure.31 @ close.s57295.12 fd.s57296.10
      sat.s57707.0 = GHC.Event.Thread.closeFdWith1.closure.32 @ sat.s57706.0
  letS ds5.s57714.0 = sat.s57707.0 @ #"GHC.Prim.void#"
  case ds5.s57714.0 of
    ("GHC.Prim.Unit#" ipv7.s57716.0) ->
        letS ds6.s57717.0 = GHC.Event.Thread.go @ sequel.s57653.2 #"GHC.Prim.void#"
        case ds6.s57717.0 of
          ("GHC.Prim.Unit#" ipv9.s57719.0) ->
              ["GHC.Prim.Unit#" ipv7.s57716.0]

GHC.Event.Thread.closeFdWith1.closure.34 sequel.s57653.4 e1.s57723.0 void.X134.2 =
  letS ds5.s57725.0 = GHC.Event.Thread.go @ sequel.s57653.4 #"GHC.Prim.void#"
  case ds5.s57725.0 of
    ("GHC.Prim.Unit#" ipv7.s57727.0) ->
        "raiseIO#" @ e1.s57723.0

GHC.Event.Thread.closeFdWith1.closure.35 close.s57295.14 fd.s57296.12 =
  close.s57295.14 @ fd.s57296.12

GHC.Event.Thread.closeFdWith1.closure.36 sat.s57721.1 void.X135.4 =
  sat.s57721.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.37 close.s57295.10 fd.s57296.7 void.040.855 =
  letS ds3.s57650.0 = "getMaskingState#" @
  case ds3.s57650.0{- value -} of
    ("GHC.Prim.Unit#" ipv5.s57652.0) ->
        let sat.s57689.0 = GHC.Event.Thread.closeFdWith1.closure.26 @ fd.s57296.7
        letS sequel.s57653.0 = GHC.List.zipWith3 @ sat.s57689.0 "GHC.Types.[]" "GHC.Types.[]" "GHC.Types.[]"
             ds4.s57690.0 = ipv5.s57652.0{- value -}
        case ds4.s57690.0{- value -} of
          _ ->
              let sat.s57698.0 = GHC.Event.Thread.closeFdWith1.closure.27 @ sequel.s57653.0
                  sat.s57691.0 = GHC.Event.Thread.closeFdWith1.closure.28 @ close.s57295.10 fd.s57296.7
                  sat.s57692.0 = GHC.Event.Thread.closeFdWith1.closure.29 @ sat.s57691.0
              letS ds5.s57699.0 = sat.s57692.0 @ #"GHC.Prim.void#"
              case ds5.s57699.0 of
                ("GHC.Prim.Unit#" ipv7.s57701.0) ->
                    letS ds6.s57702.0 = GHC.Event.Thread.go @ sequel.s57653.0 #"GHC.Prim.void#"
                    case ds6.s57702.0 of
                      ("GHC.Prim.Unit#" ipv9.s57704.0) ->
                          ["GHC.Prim.Unit#" ipv7.s57701.0]
          0 ->
              let sat.s57720.0 = GHC.Event.Thread.closeFdWith1.closure.33 @ close.s57295.10 fd.s57296.7 sequel.s57653.0
              sat.s57720.0 @ #"GHC.Prim.void#"
          1 ->
              let sat.s57728.0 = GHC.Event.Thread.closeFdWith1.closure.34 @ sequel.s57653.0
                  sat.s57721.0 = GHC.Event.Thread.closeFdWith1.closure.35 @ close.s57295.10 fd.s57296.7
                  sat.s57722.0 = GHC.Event.Thread.closeFdWith1.closure.36 @ sat.s57721.0
              letS ds5.s57729.0 = sat.s57722.0 @ #"GHC.Prim.void#"
              case ds5.s57729.0 of
                ("GHC.Prim.Unit#" ipv7.s57731.0) ->
                    letS ds6.s57732.0 = GHC.Event.Thread.go @ sequel.s57653.0 #"GHC.Prim.void#"
                    case ds6.s57732.0 of
                      ("GHC.Prim.Unit#" ipv9.s57734.0) ->
                          ["GHC.Prim.Unit#" ipv7.s57731.0]

GHC.Event.Thread.closeFdWith1.closure.4 sat.s57410.1 void.X139.7 =
  sat.s57410.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.5 sequel.s57372.3 e1.s57427.0 void.X140.2 =
  letS ds6.s57429.0 = GHC.Event.Thread.go @ sequel.s57372.3 #"GHC.Prim.void#"
  case ds6.s57429.0 of
    ("GHC.Prim.Unit#" ipv9.s57431.0) ->
        "raiseIO#" @ e1.s57427.0

GHC.Event.Thread.closeFdWith1.closure.6 close.s57295.4 fd.s57296.5 =
  close.s57295.4 @ fd.s57296.5

GHC.Event.Thread.closeFdWith1.closure.7 sat.s57425.1 void.X141.5 =
  sat.s57425.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.closeFdWith1.closure.8 close.s57295.3 fd.s57296.4 sequel.s57372.2 void.X137.2 =
  let sat.s57432.0 = GHC.Event.Thread.closeFdWith1.closure.5 @ sequel.s57372.2
      sat.s57425.0 = GHC.Event.Thread.closeFdWith1.closure.6 @ close.s57295.3 fd.s57296.4
      sat.s57426.0 = GHC.Event.Thread.closeFdWith1.closure.7 @ sat.s57425.0
  letS ds6.s57433.0 = sat.s57426.0 @ #"GHC.Prim.void#"
  case ds6.s57433.0 of
    ("GHC.Prim.Unit#" ipv9.s57435.0) ->
        letS ds7.s57436.0 = GHC.Event.Thread.go @ sequel.s57372.2 #"GHC.Prim.void#"
        case ds7.s57436.0 of
          ("GHC.Prim.Unit#" ipv11.s57438.0) ->
              ["GHC.Prim.Unit#" ipv9.s57435.0]

GHC.Event.Thread.closeFdWith1.closure.9 sequel.s57372.4 e1.s57442.0 void.X138.2 =
  letS ds6.s57444.0 = GHC.Event.Thread.go @ sequel.s57372.4 #"GHC.Prim.void#"
  case ds6.s57444.0 of
    ("GHC.Prim.Unit#" ipv9.s57446.0) ->
        "raiseIO#" @ e1.s57442.0

GHC.Event.Thread.eventManager =
  letS ds.s56186.0 = GHC.Event.Thread.lvl8 @ #"GHC.Prim.realWorld#"
  case ds.s56186.0 of
    ("GHC.Prim.Unit#" ipv1.s56188.0) ->
        ipv1.s56188.0

GHC.Event.Thread.getSystemEventManager1 void.040.837 =
  letS ds.s56595.0 = "myThreadId#" @
  case ds.s56595.0 of
    ("GHC.Prim.Unit#" ipv1.s56597.0) ->
        letS ds1.s56598.0 = "threadStatus#" @ ipv1.s56597.0
        case ds1.s56598.0{- value -} of
          ("GHC.Prim.(#,,#)" ipv3.s56600.0 ipv4.s56601.0 ipv5.s56602.0) ->
              letS wild.s56603.0 = GHC.Event.Thread.eventManager
              case wild.s56603.0 of
                (GHC.STRef.STRef "var#.s56604.0") ->
                    letS ds2.s56605.0 = "readMutVar#" @ "var#.s56604.0"
                    case ds2.s56605.0 of
                      ("GHC.Prim.Unit#" ipv7.s56607.0) ->
                          letS wild1.s56608.0 = ipv7.s56607.0
                          case wild1.s56608.0 of
                            (GHC.Arr.STArray l.s56609.0 u.s56610.0 dt.s56611.0 ds3.s56612.0) ->
                                letS wild2.s56613.0 = l.s56609.0
                                case wild2.s56613.0 of
                                  ("GHC.Types.I#" m.s56614.0) ->
                                      letS wild3.s56615.0 = u.s56610.0
                                      case wild3.s56615.0 of
                                        ("GHC.Types.I#" n.s56616.0) ->
                                            letS lwild.s56617.0 = "<=#" @ m.s56614.0{- value -} ipv4.s56601.0{- value -}
                                            case lwild.s56617.0{- value -} of
                                              _ ->
                                                  GHC.Event.Thread.getSystemEventManager2 @ ipv4.s56601.0{- value -} wild2.s56613.0 wild3.s56615.0
                                              1 ->
                                                  letS lwild1.s56619.0 = "<=#" @ ipv4.s56601.0{- value -} n.s56616.0{- value -}
                                                  case lwild1.s56619.0{- value -} of
                                                    _ ->
                                                        GHC.Event.Thread.getSystemEventManager2 @ ipv4.s56601.0{- value -} wild2.s56613.0 wild3.s56615.0
                                                    1 ->
                                                        letS sat.s56621.0 = "-#" @ ipv4.s56601.0{- value -} m.s56614.0{- value -}
                                                             ds4.s56622.0 = "readArray#" @ ds3.s56612.0 sat.s56621.0{- value -}
                                                        case ds4.s56622.0 of
                                                          ("GHC.Prim.Unit#" ipv9.s56624.0) ->
                                                              let sat.s56628.0 = GHC.Event.Thread.getSystemEventManager1.closure.1 @ ipv9.s56624.0
                                                              ["GHC.Prim.Unit#" sat.s56628.0]

GHC.Event.Thread.getSystemEventManager1.closure.0 a1.s56626.1 =
  Data.Tuple.snd @ a1.s56626.1

GHC.Event.Thread.getSystemEventManager1.closure.1 ipv9.s56624.1 =
  letS wild4.s56625.0 = ipv9.s56624.1
  case wild4.s56625.0 of
    (GHC.Maybe.Nothing) ->
        [GHC.Maybe.Nothing]
    (GHC.Maybe.Just a1.s56626.0) ->
        let sat.s56627.1 = GHC.Event.Thread.getSystemEventManager1.closure.0 @ a1.s56626.0
        [GHC.Maybe.Just sat.s56627.1]

GHC.Event.Thread.getSystemEventManager2 ipv2.s56590.0 l.s56591.0 u.s56592.0 =
  let sat.s56593.0 = ["GHC.Types.I#" ipv2.s56590.0{- value -}]
  "GHC.Arr.$windexError" @ GHC.Show.showSignedInt l.s56591.0 u.s56592.0 sat.s56593.0 GHC.Event.Thread.lvl4

GHC.Event.Thread.go ds.s57287.0 void.040.851 =
  letS wild.s57289.0 = ds.s57287.0
  case wild.s57289.0 of
    ("GHC.Types.[]") ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]
    (GHC.Types.: y.s57290.0 ys.s57291.0) ->
        letS ds1.s57292.0 = y.s57290.0 @ #"GHC.Prim.void#"
        case ds1.s57292.0 of
          ("GHC.Prim.Unit#" ipv1.s57294.0) ->
              GHC.Event.Thread.go @ ys.s57291.0 #"GHC.Prim.void#"

GHC.Event.Thread.lvl1 =
  ["GHC.Types.I#" 0]

GHC.Event.Thread.lvl21 =
  ["GHC.Tuple.(,)" GHC.Types.False GHC.Types.True]

GHC.Event.Thread.lvl22 =
  ["GHC.Tuple.(,)" GHC.Types.False GHC.Types.False]

GHC.Event.Thread.lvl23 =
  ["GHC.Tuple.(,)" GHC.Types.True GHC.Types.True]

GHC.Event.Thread.lvl24 =
  #"Pattern match failure in do expression at libraries/base/GHC/Event/Thread.hs:183:3-10"

GHC.Event.Thread.lvl25 =
  "GHC.CString.unpackCString#" @ GHC.Event.Thread.lvl24{- value -}

GHC.Event.Thread.lvl26 =
  GHC.IO.failIO1 @ GHC.Event.Thread.lvl25

GHC.Event.Thread.lvl27 ww.s56629.0 ww1.s56630.0 i1.s56631.0 =
  let sat.s56633.0 = ["GHC.Types.I#" ww.s56629.0{- value -}]
      sat.s56632.0 = ["GHC.Types.I#" ww1.s56630.0{- value -}]
  GHC.Event.Thread.getSystemEventManager2 @ i1.s56631.0{- value -} sat.s56632.0 sat.s56633.0

GHC.Event.Thread.lvl28 =
  #"ww Bool"

GHC.Event.Thread.lvl29 =
  Control.Exception.Base.absentError @ GHC.Event.Thread.lvl28{- value -}

GHC.Event.Thread.lvl3 =
  #"Int"

GHC.Event.Thread.lvl30 =
  #"threadWait"

GHC.Event.Thread.lvl31 =
  "GHC.CString.unpackCString#" @ GHC.Event.Thread.lvl30{- value -}

GHC.Event.Thread.lvl32 =
  "Foreign.C.Error.$werrnoToIOError" @ GHC.Event.Thread.lvl31 9 GHC.Maybe.Nothing GHC.Maybe.Nothing

GHC.Event.Thread.lvl33 =
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ GHC.Event.Thread.lvl32

GHC.Event.Thread.lvl34 =
  #"Pattern match failure in do expression at libraries/base/GHC/Event/Thread.hs:104:5-17"

GHC.Event.Thread.lvl35 =
  "GHC.CString.unpackCString#" @ GHC.Event.Thread.lvl34{- value -}

GHC.Event.Thread.lvl36 =
  GHC.IO.failIO1 @ GHC.Event.Thread.lvl35

GHC.Event.Thread.lvl4 =
  "GHC.CString.unpackCString#" @ GHC.Event.Thread.lvl3{- value -}

GHC.Event.Thread.lvl8 void.040.820 =
  letS s'.s56138.0 = "noDuplicate#" @
  case s'.s56138.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS ds2.s56139.0 = "readInt32OffAddr#" @ #@"enabled_capabilities" 0
        case ds2.s56139.0{- value -} of
          ("GHC.Prim.Unit#" ipv1.s56141.1) ->
              letS u.s56142.0 = "-#" @ ipv1.s56141.1{- value -} 1
              let "$j.s56143.0" = GHC.Event.Thread.lvl8.closure.1 @ u.s56142.0{- value -}
              letS lwild.s56184.0 = "<=#" @ 0 u.s56142.0{- value -}
              case lwild.s56184.0{- value -} of
                _ ->
                    "$j.s56143.0" @ 0
                1 ->
                    letS sat.s56185.0 = "+#" @ u.s56142.0{- value -} 1
                    "$j.s56143.0" @ sat.s56185.0{- value -}

GHC.Event.Thread.lvl8.closure.0 ipv8.s56157.1 void.040.821 =
  letS ds6.s56171.0 = "makeStablePtr#" @ ipv8.s56157.1
  case ds6.s56171.0{- value -} of
    ("GHC.Prim.Unit#" ipv10.s56173.0) ->
        letS wild.s56175.0 = getOrSetSystemEventThreadEventManagerStore @ ipv10.s56173.0{- value -}
        case wild.s56175.0{- value -} of
          ("GHC.Prim.Unit#" ds8.s56177.0) ->
              letS lwild1.s56178.0 = "eqAddr#" @ ipv10.s56173.0{- value -} ds8.s56177.0{- value -}
              case lwild1.s56178.0{- value -} of
                _ ->
                    letS wild1.s56180.0 = hs_free_stable_ptr @ ipv10.s56173.0{- value -}
                    case wild1.s56180.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          "deRefStablePtr#" @ ds8.s56177.0{- value -}
                1 ->
                    ["GHC.Prim.Unit#" ipv8.s56157.1]

GHC.Event.Thread.lvl8.closure.1 u.s56142.1 x.s56144.0 =
  letS lwild.s56145.0 = "<#" @ x.s56144.0{- value -} 0
  case lwild.s56145.0{- value -} of
    _ ->
        letS ds1.s56146.0 = "newArray#" @ x.s56144.0{- value -} GHC.Maybe.Nothing
        case ds1.s56146.0 of
          ("GHC.Prim.Unit#" ipv3.s56148.0) ->
              let sat.s56149.0 = ["GHC.Types.I#" u.s56142.1{- value -}]
                  sat.s56150.0 = [GHC.Arr.STArray GHC.Event.Thread.lvl1 sat.s56149.0 x.s56144.0{- value -} ipv3.s56148.0]
              letS ds.s56151.0 = "newMutVar#" @ sat.s56150.0
              case ds.s56151.0 of
                ("GHC.Prim.Unit#" ipv5.s56153.0) ->
                    letS ds4.s56154.0 = "getMaskingState#" @
                    case ds4.s56154.0{- value -} of
                      ("GHC.Prim.Unit#" ipv7.s56156.0) ->
                          let ipv8.s56157.0 = [GHC.STRef.STRef ipv5.s56153.0]
                          letS ds5.s56158.0 = ipv7.s56156.0{- value -}
                          case ds5.s56158.0{- value -} of
                            _ ->
                                letS ds6.s56159.0 = "makeStablePtr#" @ ipv8.s56157.0
                                case ds6.s56159.0{- value -} of
                                  ("GHC.Prim.Unit#" ipv10.s56161.0) ->
                                      letS wild.s56163.0 = getOrSetSystemEventThreadEventManagerStore @ ipv10.s56161.0{- value -}
                                      case wild.s56163.0{- value -} of
                                        ("GHC.Prim.Unit#" ds8.s56165.0) ->
                                            letS lwild1.s56166.0 = "eqAddr#" @ ipv10.s56161.0{- value -} ds8.s56165.0{- value -}
                                            case lwild1.s56166.0{- value -} of
                                              _ ->
                                                  letS wild1.s56168.0 = hs_free_stable_ptr @ ipv10.s56161.0{- value -}
                                                  case wild1.s56168.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        "deRefStablePtr#" @ ds8.s56165.0{- value -}
                                              1 ->
                                                  ["GHC.Prim.Unit#" ipv8.s56157.0]
                            0 ->
                                let sat.s56182.1 = GHC.Event.Thread.lvl8.closure.0 @ ipv8.s56157.0
                                sat.s56182.1 @ #"GHC.Prim.void#"
    1 ->
        GHC.Arr.negRange

GHC.Event.Thread.threadWaitRead1 evt.s56972.0 fd.s56973.0 void.040.845 =
  letS ds.s56975.0 = "getMaskingState#" @
  case ds.s56975.0{- value -} of
    ("GHC.Prim.Unit#" ipv1.s56977.0) ->
        let io.s56978.0 = GHC.Event.Thread.threadWaitRead1.closure.20 @ evt.s56972.0 fd.s56973.0
        letS ds1.s57286.0 = ipv1.s56977.0{- value -}
        case ds1.s57286.0{- value -} of
          _ ->
              io.s56978.0 @ #"GHC.Prim.void#"
          0 ->
              io.s56978.0 @ #"GHC.Prim.void#"

GHC.Event.Thread.threadWaitRead1.closure.0 ipv3.s56982.3 ds9.s57026.0 e.s57027.0 void.X147.1 =
  letS "s2#.s57029.0" = "putMVar#" @ ipv3.s56982.3 e.s57027.0
  case "s2#.s57029.0"{- value -} of
    ("GHC.Prim.(##)") ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.Event.Thread.threadWaitRead1.closure.1 "$wgo.s57063.1" dt1.s57006.3 w2.s57064.0 =
  letS wild3.s57065.0 = w2.s57064.0
  case wild3.s57065.0 of
    (GHC.Event.IntTable.Empty) ->
        ["GHC.Prim.(#,,#)" GHC.Types.False GHC.Maybe.Nothing GHC.Event.IntTable.Empty]
    (GHC.Event.IntTable.Bucket dt7.s57066.0 ds13.s57067.0 ds14.s57068.0) ->
        letS lwild3.s57069.0 = "==#" @ dt7.s57066.0{- value -} dt1.s57006.3{- value -}
        case lwild3.s57069.0{- value -} of
          _ ->
              letS ww11.s57070.0 = "$wgo.s57063.1" @ ds14.s57068.0
              case ww11.s57070.0{- value -} of
                ("GHC.Prim.(#,,#)" ww12.s57071.0 ww13.s57072.0 ww14.s57073.0) ->
                    let sat.s57074.0 = [GHC.Event.IntTable.Bucket dt7.s57066.0{- value -} ds13.s57067.0 ww14.s57073.0]
                    ["GHC.Prim.(#,,#)" ww12.s57071.0 ww13.s57072.0 sat.s57074.0]
          1 ->
              let sat.s57075.0 = [GHC.Maybe.Just ds13.s57067.0]
              ["GHC.Prim.(#,,#)" GHC.Types.True sat.s57075.0 ds14.s57068.0]

GHC.Event.Thread.threadWaitRead1.closure.10 io1.s57148.1 ipv12.s57176.2 void.X149.1 =
  io1.s57148.1 @ ipv12.s57176.2 #"GHC.Prim.void#"

GHC.Event.Thread.threadWaitRead1.closure.11 sat.s57177.1 void.X150.4 =
  sat.s57177.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.threadWaitRead1.closure.12 ipv12.s57199.1 ww9.s57021.3 e1.s57202.0 void.X151.0 =
  letS "s2#.s57204.0" = "putMVar#" @ ww9.s57021.3 ipv12.s57199.1
  case "s2#.s57204.0"{- value -} of
    ("GHC.Prim.(##)") ->
        "raiseIO#" @ e1.s57202.0

GHC.Event.Thread.threadWaitRead1.closure.13 io1.s57148.3 ipv12.s57199.2 void.X151.1 =
  io1.s57148.3 @ ipv12.s57199.2 #"GHC.Prim.void#"

GHC.Event.Thread.threadWaitRead1.closure.14 sat.s57200.1 void.X152.2 =
  sat.s57200.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.threadWaitRead1.closure.15 io1.s57148.2 ww9.s57021.2 void.X146.2 =
  letS ds10.s57197.0 = "takeMVar#" @ ww9.s57021.2
  case ds10.s57197.0 of
    ("GHC.Prim.Unit#" ipv12.s57199.0) ->
        let sat.s57205.0 = GHC.Event.Thread.threadWaitRead1.closure.12 @ ipv12.s57199.0 ww9.s57021.2
            sat.s57200.0 = GHC.Event.Thread.threadWaitRead1.closure.13 @ io1.s57148.2 ipv12.s57199.0
            sat.s57201.0 = GHC.Event.Thread.threadWaitRead1.closure.14 @ sat.s57200.0
        letS ds11.s57206.0 = sat.s57201.0 @ #"GHC.Prim.void#"
        case ds11.s57206.0 of
          ("GHC.Prim.Unit#" ipv14.s57208.0) ->
              letS "s2#.s57209.0" = "putMVar#" @ ww9.s57021.2 ipv12.s57199.0
              case "s2#.s57209.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    ["GHC.Prim.Unit#" ipv14.s57208.0]

GHC.Event.Thread.threadWaitRead1.closure.16 ipv12.s57225.1 ww9.s57021.4 e1.s57228.0 void.X149.2 =
  letS "s2#.s57230.0" = "putMVar#" @ ww9.s57021.4 ipv12.s57225.1
  case "s2#.s57230.0"{- value -} of
    ("GHC.Prim.(##)") ->
        "raiseIO#" @ e1.s57228.0

GHC.Event.Thread.threadWaitRead1.closure.17 io1.s57148.4 ipv12.s57225.2 void.X149.3 =
  io1.s57148.4 @ ipv12.s57225.2 #"GHC.Prim.void#"

GHC.Event.Thread.threadWaitRead1.closure.18 sat.s57226.1 void.X150.5 =
  sat.s57226.1 @ #"GHC.Prim.void#"

GHC.Event.Thread.threadWaitRead1.closure.19 evt.s56972.2 fd.s56973.2 ipv3.s56982.1 void.X110.0 ww.s56988.0 ww1.s56989.0 ww2.s56990.0 ww3.s56991.0 ww4.s56992.0 ww5.s56993.0 ww6.s56994.0 ww7.s56995.0 =
  letS wild5.s56996.0 = ww.s56988.0
  case wild5.s56996.0 of
    (GHC.Event.Internal.Backend bState.s56997.0 ds3.s56998.0 bModifyFd.s56999.0 ds4.s57000.0 ds5.s57001.0) ->
        letS ds6.s57002.0 = "fetchAddIntArray#" @ ww5.s56993.0 0 1
        case ds6.s57002.0{- value -} of
          ("GHC.Prim.Unit#" ipv7.s57004.0) ->
              letS dt.s57005.0 = fd.s56973.2
              case dt.s57005.0 of
                ("GHC.Int.I32#" dt1.s57006.0) ->
                    letS dt2.s57007.0 = evt.s56972.2
                    case dt2.s57007.0 of
                      ("GHC.Types.I#" dt3.s57008.0) ->
                          letS ds7.s57009.0 = "getMaskingState#" @
                          case ds7.s57009.0{- value -} of
                            ("GHC.Prim.Unit#" ipv9.s57011.0) ->
                                letS i1.s57012.0 = "andI#" @ dt1.s57006.0{- value -} 31
                                     lwild.s57013.0 = "<=#" @ ww1.s56989.0{- value -} i1.s57012.0{- value -}
                                case lwild.s57013.0{- value -} of
                                  _ ->
                                      GHC.Event.Thread.lvl27 @ ww2.s56990.0{- value -} ww1.s56989.0{- value -} i1.s57012.0{- value -}
                                  1 ->
                                      letS lwild1.s57015.0 = "<=#" @ i1.s57012.0{- value -} ww2.s56990.0{- value -}
                                      case lwild1.s57015.0{- value -} of
                                        _ ->
                                            GHC.Event.Thread.lvl27 @ ww2.s56990.0{- value -} ww1.s56989.0{- value -} i1.s57012.0{- value -}
                                        1 ->
                                            letS sat.s57017.0 = "-#" @ i1.s57012.0{- value -} ww1.s56989.0{- value -}
                                                 ds8.s57018.0 = "indexArray#" @ ww3.s56991.0 sat.s57017.0{- value -}
                                            case ds8.s57018.0 of
                                              ("GHC.Prim.Unit#" ipv10.s57019.0) ->
                                                  letS ww8.s57020.0 = ipv10.s57019.0
                                                  case ww8.s57020.0 of
                                                    (GHC.MVar.MVar ww9.s57021.0) ->
                                                        let "$wio.s57022.0" = GHC.Event.Thread.threadWaitRead1.closure.4 @ bModifyFd.s56999.0 bState.s56997.0 ds4.s57000.0 dt.s57005.0 dt1.s57006.0{- value -} dt3.s57008.0{- value -} ipv3.s56982.1 ipv7.s57004.0{- value -}
                                                            io1.s57148.0 = GHC.Event.Thread.threadWaitRead1.closure.5 @ "$wio.s57022.0"
                                                            "$j.s57153.0" = GHC.Event.Thread.threadWaitRead1.closure.8 @ ipv3.s56982.1 wild5.s56996.0 ww1.s56989.0{- value -} ww2.s56990.0{- value -} ww3.s56991.0 ww4.s56992.0 ww5.s56993.0 ww6.s56994.0 ww7.s56995.0
                                                        letS ds9.s57173.0 = ipv9.s57011.0{- value -}
                                                        case ds9.s57173.0{- value -} of
                                                          _ ->
                                                              letS ds10.s57174.0 = "takeMVar#" @ ww9.s57021.0
                                                              case ds10.s57174.0 of
                                                                ("GHC.Prim.Unit#" ipv12.s57176.0) ->
                                                                    let sat.s57182.0 = GHC.Event.Thread.threadWaitRead1.closure.9 @ ipv12.s57176.0 ww9.s57021.0
                                                                        sat.s57177.0 = GHC.Event.Thread.threadWaitRead1.closure.10 @ io1.s57148.0 ipv12.s57176.0
                                                                        sat.s57178.0 = GHC.Event.Thread.threadWaitRead1.closure.11 @ sat.s57177.0
                                                                    letS ds11.s57183.0 = sat.s57178.0 @ #"GHC.Prim.void#"
                                                                    case ds11.s57183.0 of
                                                                      ("GHC.Prim.Unit#" ipv14.s57185.0) ->
                                                                          letS "s2#.s57186.0" = "putMVar#" @ ww9.s57021.0 ipv12.s57176.0
                                                                          case "s2#.s57186.0"{- value -} of
                                                                            ("GHC.Prim.(##)") ->
                                                                                letS wild2.s57187.0 = ipv14.s57185.0
                                                                                case wild2.s57187.0 of
                                                                                  ("GHC.Tuple.(,)" modify.s57188.0 ok.s57189.0) ->
                                                                                      letS wild3.s57190.0 = ok.s57189.0
                                                                                      case wild3.s57190.0 of
                                                                                        (GHC.Types.False) ->
                                                                                            letS "s2#1.s57191.0" = "putMVar#" @ ipv3.s56982.1 dt2.s57007.0
                                                                                            case "s2#1.s57191.0"{- value -} of
                                                                                              ("GHC.Prim.(##)") ->
                                                                                                  letS wild4.s57192.0 = modify.s57188.0
                                                                                                  let sat.s57193.0 = [GHC.Event.Manager.FdKey dt1.s57006.0{- value -} ipv7.s57004.0{- value -}]
                                                                                                  "$j.s57153.0" @ #"GHC.Prim.void#" sat.s57193.0
                                                                                        (GHC.Types.True) ->
                                                                                            letS wild4.s57194.0 = modify.s57188.0
                                                                                            let sat.s57195.0 = [GHC.Event.Manager.FdKey dt1.s57006.0{- value -} ipv7.s57004.0{- value -}]
                                                                                            "$j.s57153.0" @ #"GHC.Prim.void#" sat.s57195.0
                                                          0 ->
                                                              let sat.s57210.0 = GHC.Event.Thread.threadWaitRead1.closure.15 @ io1.s57148.0 ww9.s57021.0
                                                              letS ds10.s57211.0 = sat.s57210.0 @ #"GHC.Prim.void#"
                                                              case ds10.s57211.0 of
                                                                ("GHC.Prim.Unit#" ipv12.s57213.0) ->
                                                                    letS wild1.s57214.0 = ipv12.s57213.0
                                                                    case wild1.s57214.0 of
                                                                      ("GHC.Tuple.(,)" modify.s57215.0 ok.s57216.0) ->
                                                                          letS wild2.s57217.0 = ok.s57216.0
                                                                          case wild2.s57217.0 of
                                                                            (GHC.Types.False) ->
                                                                                letS "s2#.s57218.0" = "putMVar#" @ ipv3.s56982.1 dt2.s57007.0
                                                                                case "s2#.s57218.0"{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      letS wild3.s57219.0 = modify.s57215.0
                                                                                      let sat.s57220.0 = [GHC.Event.Manager.FdKey dt1.s57006.0{- value -} ipv7.s57004.0{- value -}]
                                                                                      "$j.s57153.0" @ #"GHC.Prim.void#" sat.s57220.0
                                                                            (GHC.Types.True) ->
                                                                                letS wild3.s57221.0 = modify.s57215.0
                                                                                let sat.s57222.0 = [GHC.Event.Manager.FdKey dt1.s57006.0{- value -} ipv7.s57004.0{- value -}]
                                                                                "$j.s57153.0" @ #"GHC.Prim.void#" sat.s57222.0
                                                          1 ->
                                                              letS ds10.s57223.0 = "takeMVar#" @ ww9.s57021.0
                                                              case ds10.s57223.0 of
                                                                ("GHC.Prim.Unit#" ipv12.s57225.0) ->
                                                                    let sat.s57231.0 = GHC.Event.Thread.threadWaitRead1.closure.16 @ ipv12.s57225.0 ww9.s57021.0
                                                                        sat.s57226.0 = GHC.Event.Thread.threadWaitRead1.closure.17 @ io1.s57148.0 ipv12.s57225.0
                                                                        sat.s57227.0 = GHC.Event.Thread.threadWaitRead1.closure.18 @ sat.s57226.0
                                                                    letS ds11.s57232.0 = sat.s57227.0 @ #"GHC.Prim.void#"
                                                                    case ds11.s57232.0 of
                                                                      ("GHC.Prim.Unit#" ipv14.s57234.0) ->
                                                                          letS "s2#.s57235.0" = "putMVar#" @ ww9.s57021.0 ipv12.s57225.0
                                                                          case "s2#.s57235.0"{- value -} of
                                                                            ("GHC.Prim.(##)") ->
                                                                                letS wild2.s57236.0 = ipv14.s57234.0
                                                                                case wild2.s57236.0 of
                                                                                  ("GHC.Tuple.(,)" modify.s57237.0 ok.s57238.0) ->
                                                                                      letS wild3.s57239.0 = ok.s57238.0
                                                                                      case wild3.s57239.0 of
                                                                                        (GHC.Types.False) ->
                                                                                            letS "s2#1.s57240.0" = "putMVar#" @ ipv3.s56982.1 dt2.s57007.0
                                                                                            case "s2#1.s57240.0"{- value -} of
                                                                                              ("GHC.Prim.(##)") ->
                                                                                                  letS wild4.s57241.0 = modify.s57237.0
                                                                                                  let sat.s57242.0 = [GHC.Event.Manager.FdKey dt1.s57006.0{- value -} ipv7.s57004.0{- value -}]
                                                                                                  "$j.s57153.0" @ #"GHC.Prim.void#" sat.s57242.0
                                                                                        (GHC.Types.True) ->
                                                                                            letS wild4.s57243.0 = modify.s57237.0
                                                                                            let sat.s57244.0 = [GHC.Event.Manager.FdKey dt1.s57006.0{- value -} ipv7.s57004.0{- value -}]
                                                                                            "$j.s57153.0" @ #"GHC.Prim.void#" sat.s57244.0

GHC.Event.Thread.threadWaitRead1.closure.2 "$wgo.s57114.1" dt1.s57006.4 w2.s57115.0 =
  letS wild4.s57116.0 = w2.s57115.0
  case wild4.s57116.0 of
    (GHC.Event.IntTable.Empty) ->
        ["GHC.Prim.(#,,#)" GHC.Types.False GHC.Maybe.Nothing GHC.Event.IntTable.Empty]
    (GHC.Event.IntTable.Bucket dt7.s57117.0 ds13.s57118.0 ds14.s57119.0) ->
        letS lwild2.s57120.0 = "==#" @ dt7.s57117.0{- value -} dt1.s57006.4{- value -}
        case lwild2.s57120.0{- value -} of
          _ ->
              letS ww11.s57121.0 = "$wgo.s57114.1" @ ds14.s57119.0
              case ww11.s57121.0{- value -} of
                ("GHC.Prim.(#,,#)" ww12.s57122.0 ww13.s57123.0 ww14.s57124.0) ->
                    let sat.s57125.0 = [GHC.Event.IntTable.Bucket dt7.s57117.0{- value -} ds13.s57118.0 ww14.s57124.0]
                    ["GHC.Prim.(#,,#)" ww12.s57122.0 ww13.s57123.0 sat.s57125.0]
          1 ->
              let sat.s57126.0 = [GHC.Maybe.Just ds13.s57118.0]
              ["GHC.Prim.(#,,#)" GHC.Types.True sat.s57126.0 ds14.s57119.0]

GHC.Event.Thread.threadWaitRead1.closure.20 evt.s56972.1 fd.s56973.1 void.040.846 =
  letS ds1.s56980.0 = "newMVar#" @
  case ds1.s56980.0 of
    ("GHC.Prim.Unit#" ipv3.s56982.0) ->
        letS ds2.s56983.0 = GHC.Event.Thread.getSystemEventManager1 @ #"GHC.Prim.void#"
        case ds2.s56983.0 of
          ("GHC.Prim.Unit#" ipv5.s56985.0) ->
              let "$w$j.s56986.0" = GHC.Event.Thread.threadWaitRead1.closure.19 @ evt.s56972.1 fd.s56973.1 ipv3.s56982.0
              letS wild.s57245.0 = ipv5.s56985.0
              case wild.s57245.0 of
                (GHC.Maybe.Nothing) ->
                    letS ds3.s57246.0 = GHC.Event.Thread.lvl26 @ #"GHC.Prim.void#"
                    case ds3.s57246.0 of
                      ("GHC.Prim.Unit#" ipv7.s57248.0) ->
                          letS ww.s57249.0 = ipv7.s57248.0
                          case ww.s57249.0 of
                            (GHC.Event.Manager.EventManager ww1.s57250.0 ww2.s57251.0 ww3.s57252.0 ww4.s57253.0 ww5.s57254.0 ww6.s57255.0 ww7.s57256.0 ww8.s57257.0 ww9.s57258.0 ww10.s57259.0 ww11.s57260.0 ww12.s57261.0 ww13.s57262.0) ->
                                letS ww14.s57263.0 = ww2.s57251.0
                                case ww14.s57263.0 of
                                  ("GHC.Types.I#" ww15.s57264.0) ->
                                      letS ww16.s57265.0 = ww3.s57252.0
                                      case ww16.s57265.0 of
                                        ("GHC.Types.I#" ww17.s57266.0) ->
                                            "$w$j.s56986.0" @ #"GHC.Prim.void#" ww1.s57250.0 ww15.s57264.0{- value -} ww17.s57266.0{- value -} ww5.s57254.0 ww6.s57255.0 ww7.s57256.0 ww12.s57261.0 ww13.s57262.0
                (GHC.Maybe.Just mgr.s57267.0) ->
                    letS ww.s57268.0 = mgr.s57267.0
                    case ww.s57268.0 of
                      (GHC.Event.Manager.EventManager ww1.s57269.0 ww2.s57270.0 ww3.s57271.0 ww4.s57272.0 ww5.s57273.0 ww6.s57274.0 ww7.s57275.0 ww8.s57276.0 ww9.s57277.0 ww10.s57278.0 ww11.s57279.0 ww12.s57280.0 ww13.s57281.0) ->
                          letS ww14.s57282.0 = ww2.s57270.0
                          case ww14.s57282.0 of
                            ("GHC.Types.I#" ww15.s57283.0) ->
                                letS ww16.s57284.0 = ww3.s57271.0
                                case ww16.s57284.0 of
                                  ("GHC.Types.I#" ww17.s57285.0) ->
                                      "$w$j.s56986.0" @ #"GHC.Prim.void#" ww1.s57269.0 ww15.s57283.0{- value -} ww17.s57285.0{- value -} ww5.s57273.0 ww6.s57274.0 ww7.s57275.0 ww12.s57280.0 ww13.s57281.0

GHC.Event.Thread.threadWaitRead1.closure.3 bModifyFd.s56999.2 bState.s56997.2 ds4.s57000.2 dt.s57005.2 dt1.s57006.2 dt3.s57008.2 ipv12.s57034.1 ww10.s57023.1 sc.s57036.0 sc1.s57037.0 =
  letS "x#1.s57038.0" = "orI#" @ sc1.s57037.0{- value -} dt3.s57008.2{- value -}
       wild.s57039.0 = "andI#" @ "x#1.s57038.0"{- value -} 8
  case wild.s57039.0{- value -} of
    _ ->
        letS lwild2.s57040.0 = "/=#" @ sc.s57036.0{- value -} "x#1.s57038.0"{- value -}
        case lwild2.s57040.0{- value -} of
          _ ->
              ["GHC.Prim.Unit#" GHC.Event.Thread.lvl21]
          1 ->
              letS sat.s57043.0 = "andI#" @ "x#1.s57038.0"{- value -} 7
              let sat.s57044.0 = ["GHC.Types.I#" sat.s57043.0{- value -}]
              letS sat.s57041.1 = "andI#" @ sc1.s57037.0{- value -} 7
              let sat.s57042.0 = ["GHC.Types.I#" sat.s57041.1{- value -}]
              letS ds10.s57045.0 = bModifyFd.s56999.2 @ bState.s56997.2 dt.s57005.2 sat.s57042.0 sat.s57044.0 #"GHC.Prim.void#"
              case ds10.s57045.0 of
                ("GHC.Prim.Unit#" ipv14.s57047.0) ->
                    letS wild6.s57048.0 = ipv14.s57047.0
                    case wild6.s57048.0 of
                      (GHC.Types.False) ->
                          letS wild1.s57049.0 = ipv12.s57034.1
                          case wild1.s57049.0 of
                            (GHC.Maybe.Nothing) ->
                                letS ds11.s57050.0 = "readMutVar#" @ ww10.s57023.1
                                case ds11.s57050.0 of
                                  ("GHC.Prim.Unit#" ipv16.s57052.0) ->
                                      letS wild2.s57053.0 = ipv16.s57052.0
                                      case wild2.s57053.0 of
                                        (GHC.Event.IntTable.IT dt4.s57054.0 dt5.s57055.0 dt6.s57056.0) ->
                                            letS sat.s57058.0 = "sizeofMutableArray#" @ dt4.s57054.0
                                                 sat.s57059.1 = "-#" @ sat.s57058.0{- value -} 1
                                                 "n#.s57057.0" = "andI#" @ dt1.s57006.2{- value -} sat.s57059.1{- value -}
                                                 ds12.s57060.0 = "readArray#" @ dt4.s57054.0 "n#.s57057.0"{- value -}
                                            case ds12.s57060.0 of
                                              ("GHC.Prim.Unit#" ipv18.s57062.0) ->
                                                  letrec "$wgo.s57063.0" = GHC.Event.Thread.threadWaitRead1.closure.1 @ "$wgo.s57063.0" dt1.s57006.2{- value -}
                                                  letS ww11.s57076.0 = "$wgo.s57063.0" @ ipv18.s57062.0
                                                  case ww11.s57076.0{- value -} of
                                                    ("GHC.Prim.(#,,#)" ww12.s57077.0 ww13.s57078.0 ww14.s57079.0) ->
                                                        letS wild3.s57080.0 = ww13.s57078.0
                                                        case wild3.s57080.0 of
                                                          (GHC.Maybe.Nothing) ->
                                                              ["GHC.Prim.Unit#" GHC.Event.Thread.lvl22]
                                                          (GHC.Maybe.Just ipv19.s57081.0) ->
                                                              letS "s1#.s57082.0" = "writeArray#" @ dt4.s57054.0 "n#.s57057.0"{- value -} ww14.s57079.0
                                                              case "s1#.s57082.0"{- value -} of
                                                                ("GHC.Prim.(##)") ->
                                                                    letS wild4.s57083.0 = ww12.s57077.0
                                                                    case wild4.s57083.0 of
                                                                      (GHC.Types.False) ->
                                                                          ["GHC.Prim.Unit#" GHC.Event.Thread.lvl22]
                                                                      (GHC.Types.True) ->
                                                                          letS ds13.s57084.0 = "readIntOffAddr#" @ dt5.s57055.0{- value -} 0
                                                                          case ds13.s57084.0{- value -} of
                                                                            ("GHC.Prim.Unit#" ipv21.s57086.0) ->
                                                                                letS sat.s57087.0 = "-#" @ ipv21.s57086.0{- value -} 1
                                                                                     s2.s57088.0 = "writeIntOffAddr#" @ dt5.s57055.0{- value -} 0 sat.s57087.0{- value -}
                                                                                case s2.s57088.0{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      letS s'.s57089.0 = "touch#" @ dt6.s57056.0
                                                                                      case s'.s57089.0{- value -} of
                                                                                        ("GHC.Prim.(##)") ->
                                                                                            ["GHC.Prim.Unit#" GHC.Event.Thread.lvl22]
                            (GHC.Maybe.Just v.s57090.0) ->
                                letS ds11.s57091.0 = "GHC.Event.IntTable.$winsertWith" @ GHC.Base.const dt1.s57006.2{- value -} v.s57090.0 ww10.s57023.1 #"GHC.Prim.void#"
                                case ds11.s57091.0 of
                                  ("GHC.Prim.Unit#" ipv16.s57093.0) ->
                                      ["GHC.Prim.Unit#" GHC.Event.Thread.lvl22]
                      (GHC.Types.True) ->
                          ["GHC.Prim.Unit#" GHC.Event.Thread.lvl23]
    0 ->
        letS sat.s57094.0 = "andI#" @ "x#1.s57038.0"{- value -} 7
        let sat.s57095.0 = ["GHC.Types.I#" sat.s57094.0{- value -}]
        letS ds10.s57096.0 = ds4.s57000.2 @ bState.s56997.2 dt.s57005.2 sat.s57095.0 #"GHC.Prim.void#"
        case ds10.s57096.0 of
          ("GHC.Prim.Unit#" ipv14.s57098.0) ->
              letS wild1.s57099.0 = ipv14.s57098.0
              case wild1.s57099.0 of
                (GHC.Types.False) ->
                    letS wild2.s57100.0 = ipv12.s57034.1
                    case wild2.s57100.0 of
                      (GHC.Maybe.Nothing) ->
                          letS ds11.s57101.0 = "readMutVar#" @ ww10.s57023.1
                          case ds11.s57101.0 of
                            ("GHC.Prim.Unit#" ipv16.s57103.0) ->
                                letS wild3.s57104.0 = ipv16.s57103.0
                                case wild3.s57104.0 of
                                  (GHC.Event.IntTable.IT dt4.s57105.0 dt5.s57106.0 dt6.s57107.0) ->
                                      letS sat.s57109.0 = "sizeofMutableArray#" @ dt4.s57105.0
                                           sat.s57110.0 = "-#" @ sat.s57109.0{- value -} 1
                                           "n#.s57108.0" = "andI#" @ dt1.s57006.2{- value -} sat.s57110.0{- value -}
                                           ds12.s57111.0 = "readArray#" @ dt4.s57105.0 "n#.s57108.0"{- value -}
                                      case ds12.s57111.0 of
                                        ("GHC.Prim.Unit#" ipv18.s57113.0) ->
                                            letrec "$wgo.s57114.0" = GHC.Event.Thread.threadWaitRead1.closure.2 @ "$wgo.s57114.0" dt1.s57006.2{- value -}
                                            letS ww11.s57127.0 = "$wgo.s57114.0" @ ipv18.s57113.0
                                            case ww11.s57127.0{- value -} of
                                              ("GHC.Prim.(#,,#)" ww12.s57128.0 ww13.s57129.0 ww14.s57130.0) ->
                                                  letS wild4.s57131.0 = ww13.s57129.0
                                                  case wild4.s57131.0 of
                                                    (GHC.Maybe.Nothing) ->
                                                        ["GHC.Prim.Unit#" GHC.Event.Thread.lvl22]
                                                    (GHC.Maybe.Just ipv19.s57132.0) ->
                                                        letS "s1#.s57133.0" = "writeArray#" @ dt4.s57105.0 "n#.s57108.0"{- value -} ww14.s57130.0
                                                        case "s1#.s57133.0"{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS wild6.s57134.0 = ww12.s57128.0
                                                              case wild6.s57134.0 of
                                                                (GHC.Types.False) ->
                                                                    ["GHC.Prim.Unit#" GHC.Event.Thread.lvl22]
                                                                (GHC.Types.True) ->
                                                                    letS ds13.s57135.0 = "readIntOffAddr#" @ dt5.s57106.0{- value -} 0
                                                                    case ds13.s57135.0{- value -} of
                                                                      ("GHC.Prim.Unit#" ipv21.s57137.0) ->
                                                                          letS sat.s57138.0 = "-#" @ ipv21.s57137.0{- value -} 1
                                                                               s2.s57139.0 = "writeIntOffAddr#" @ dt5.s57106.0{- value -} 0 sat.s57138.0{- value -}
                                                                          case s2.s57139.0{- value -} of
                                                                            ("GHC.Prim.(##)") ->
                                                                                letS s'.s57140.0 = "touch#" @ dt6.s57107.0
                                                                                case s'.s57140.0{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      ["GHC.Prim.Unit#" GHC.Event.Thread.lvl22]
                      (GHC.Maybe.Just v.s57141.0) ->
                          letS ds11.s57142.0 = "GHC.Event.IntTable.$winsertWith" @ GHC.Base.const dt1.s57006.2{- value -} v.s57141.0 ww10.s57023.1 #"GHC.Prim.void#"
                          case ds11.s57142.0 of
                            ("GHC.Prim.Unit#" ipv16.s57144.0) ->
                                ["GHC.Prim.Unit#" GHC.Event.Thread.lvl22]
                (GHC.Types.True) ->
                    ["GHC.Prim.Unit#" GHC.Event.Thread.lvl21]

GHC.Event.Thread.threadWaitRead1.closure.4 bModifyFd.s56999.1 bState.s56997.1 ds4.s57000.1 dt.s57005.1 dt1.s57006.1 dt3.s57008.1 ipv3.s56982.2 ipv7.s57004.1 ww10.s57023.0 void.X143.3 =
  let lvl37.s57025.0 = GHC.Event.Thread.threadWaitRead1.closure.0 @ ipv3.s56982.2
      sat.s57030.0 = [GHC.Event.Manager.FdData dt1.s57006.1{- value -} ipv7.s57004.1{- value -} dt3.s57008.1{- value -} lvl37.s57025.0]
      sat.s57031.0 = [GHC.Types.: sat.s57030.0 "GHC.Types.[]"]
  letS ds9.s57032.0 = "GHC.Event.IntTable.$winsertWith" @ "GHC.Base.++" dt1.s57006.1{- value -} sat.s57031.0 ww10.s57023.0 #"GHC.Prim.void#"
  case ds9.s57032.0 of
    ("GHC.Prim.Unit#" ipv12.s57034.0) ->
        let "$s$j.s57035.0" = GHC.Event.Thread.threadWaitRead1.closure.3 @ bModifyFd.s56999.1 bState.s56997.1 ds4.s57000.1 dt.s57005.1 dt1.s57006.1{- value -} dt3.s57008.1{- value -} ipv12.s57034.0 ww10.s57023.0
        letS wild1.s57145.0 = ipv12.s57034.0
        case wild1.s57145.0 of
          (GHC.Maybe.Nothing) ->
              "$s$j.s57035.0" @ 0 0
          (GHC.Maybe.Just x1.s57146.0) ->
              letS ww11.s57147.0 = "GHC.Event.Manager.$weventsOf" @ x1.s57146.0
              "$s$j.s57035.0" @ ww11.s57147.0{- value -} ww11.s57147.0{- value -}

GHC.Event.Thread.threadWaitRead1.closure.5 "$wio.s57022.1" w1.s57149.0 void.X144.3 =
  letS ww10.s57151.0 = w1.s57149.0
  case ww10.s57151.0 of
    (GHC.STRef.STRef ww11.s57152.0) ->
        "$wio.s57022.1" @ ww11.s57152.0 #"GHC.Prim.void#"

GHC.Event.Thread.threadWaitRead1.closure.6 ipv12.s57155.1 wild5.s56996.2 ww1.s56989.2 ww2.s56990.2 ww3.s56991.2 ww4.s56992.2 ww5.s56993.2 ww6.s56994.2 ww7.s56995.2 e.s57158.0 void.X148.0 =
  let sat.s57161.0 = ["GHC.Types.I#" ww2.s56990.2{- value -}]
      sat.s57160.0 = ["GHC.Types.I#" ww1.s56989.2{- value -}]
      sat.s57162.0 = [GHC.Event.Manager.EventManager wild5.s56996.2 sat.s57160.0 sat.s57161.0 0 ww3.s56991.2 ww4.s56992.2 ww5.s56993.2 0 0 0 GHC.Event.Thread.lvl29 ww6.s56994.2 ww7.s56995.2]
  letS ds9.s57163.0 = GHC.Event.Manager.unregisterFd2 @ sat.s57162.0 ipv12.s57155.1 #"GHC.Prim.void#"
  case ds9.s57163.0 of
    ("GHC.Prim.Unit#" ipv14.s57165.0) ->
        "raiseIO#" @ e.s57158.0

GHC.Event.Thread.threadWaitRead1.closure.7 ipv3.s56982.5 void.X148.1 =
  "takeMVar#" @ ipv3.s56982.5

GHC.Event.Thread.threadWaitRead1.closure.8 ipv3.s56982.4 wild5.s56996.1 ww1.s56989.1 ww2.s56990.1 ww3.s56991.1 ww4.s56992.1 ww5.s56993.1 ww6.s56994.1 ww7.s56995.1 void.X144.4 ipv12.s57155.0 =
  let sat.s57166.0 = GHC.Event.Thread.threadWaitRead1.closure.6 @ ipv12.s57155.0 wild5.s56996.1 ww1.s56989.1{- value -} ww2.s56990.1{- value -} ww3.s56991.1 ww4.s56992.1 ww5.s56993.1 ww6.s56994.1 ww7.s56995.1
      sat.s57157.0 = GHC.Event.Thread.threadWaitRead1.closure.7 @ ipv3.s56982.4
  letS ds9.s57167.0 = sat.s57157.0 @ #"GHC.Prim.void#"
  case ds9.s57167.0 of
    ("GHC.Prim.Unit#" ipv14.s57169.0) ->
        letS wild.s57170.0 = ipv14.s57169.0
        case wild.s57170.0 of
          ("GHC.Types.I#" "x#.s57171.0") ->
              letS wild2.s57172.0 = "andI#" @ "x#.s57171.0"{- value -} 4
              case wild2.s57172.0{- value -} of
                _ ->
                    "raiseIO#" @ GHC.Event.Thread.lvl33
                0 ->
                    ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.Event.Thread.threadWaitRead1.closure.9 ipv12.s57176.1 ww9.s57021.1 e1.s57179.0 void.X149.0 =
  letS "s2#.s57181.0" = "putMVar#" @ ww9.s57021.1 ipv12.s57176.1
  case "s2#.s57181.0"{- value -} of
    ("GHC.Prim.(##)") ->
        "raiseIO#" @ e1.s57179.0

"GHC.Exception.$fExceptionErrorCall" =
  [GHC.Exception.Type.C:Exception "GHC.Exception.$fExceptionErrorCall3" "GHC.Exception.$fShowErrorCall" "GHC.Exception.$fExceptionErrorCall_$ctoException" "GHC.Exception.$fExceptionErrorCall_$cfromException" "GHC.Exception.$fExceptionErrorCall_$cshow"]

"GHC.Exception.$fExceptionErrorCall2" =
  ["GHC.Types.C#" #'\n']

"GHC.Exception.$fExceptionErrorCall3" =
  letS ww7.s15997.0 = "Data.Typeable.Internal.$wmkTrCon" @ 4106747399780464988u 1398564497631027702u "GHC.Exception.$trModule" "GHC.Exception.$fExceptionErrorCall4" 0 "GHC.Types.krep$*" "GHC.Types.[]"
  case ww7.s15997.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww8.s15998.0 ww9.s15999.0 ww10.s16000.0 ww11.s16001.0 ww12.s16002.0) ->
        [Data.Typeable.Internal.TrTyCon ww8.s15998.0{- value -} ww9.s15999.0{- value -} ww10.s16000.0 ww11.s16001.0 ww12.s16002.0]

"GHC.Exception.$fExceptionErrorCall4" =
  [GHC.Types.TrNameS "GHC.Exception.$fExceptionErrorCall5"{- value -}]

"GHC.Exception.$fExceptionErrorCall5" =
  #"ErrorCall"

"GHC.Exception.$fExceptionErrorCall_$cfromException" ds.s16003.0 =
  letS wild.s16004.0 = ds.s16003.0
  case wild.s16004.0 of
    (GHC.Exception.Type.SomeException "$dException1.s16005.0" e2.s16006.0) ->
        letS sat.s16007.0 = "GHC.Exception.Type.$p1Exception" @ "$dException1.s16005.0"
             wild1.s16008.0 = Data.Typeable.Internal.sameTypeRep @ sat.s16007.0 "GHC.Exception.$fExceptionErrorCall3"
        case wild1.s16008.0 of
          (GHC.Types.False) ->
              [GHC.Maybe.Nothing]
          (GHC.Types.True) ->
              [GHC.Maybe.Just e2.s16006.0]

"GHC.Exception.$fExceptionErrorCall_$cshow" x.s15865.0 =
  letS ww.s15866.0 = x.s15865.0
  case ww.s15866.0 of
    (GHC.Exception.ErrorCallWithLocation ww1.s15867.0 ww2.s15868.0) ->
        "GHC.Exception.$w$cshowsPrec" @ ww1.s15867.0 ww2.s15868.0 "GHC.Types.[]"

"GHC.Exception.$fExceptionErrorCall_$cshowsPrec" w.s15859.0 w1.s15860.0 w2.s15861.0 =
  letS ww.s15862.0 = w1.s15860.0
  case ww.s15862.0 of
    (GHC.Exception.ErrorCallWithLocation ww1.s15863.0 ww2.s15864.0) ->
        "GHC.Exception.$w$cshowsPrec" @ ww1.s15863.0 ww2.s15864.0 w2.s15861.0

"GHC.Exception.$fExceptionErrorCall_$ctoException" eta.B1.478 =
  [GHC.Exception.Type.SomeException "GHC.Exception.$fExceptionErrorCall" eta.B1.478]

"GHC.Exception.$fShowErrorCall" =
  [GHC.Show.C:Show "GHC.Exception.$fExceptionErrorCall_$cshowsPrec" "GHC.Exception.$fExceptionErrorCall_$cshow" "GHC.Exception.$fShowErrorCall_$cshowList"]

"GHC.Exception.$fShowErrorCall1" w.s15869.0 w1.s15870.0 =
  letS ww.s15871.0 = w.s15869.0
  case ww.s15871.0 of
    (GHC.Exception.ErrorCallWithLocation ww1.s15872.0 ww2.s15873.0) ->
        "GHC.Exception.$w$cshowsPrec" @ ww1.s15872.0 ww2.s15873.0 w1.s15870.0

"GHC.Exception.$fShowErrorCall_$cshowList" ls.s15874.0 s.s15875.0 =
  GHC.Show.showList__ @ "GHC.Exception.$fShowErrorCall1" ls.s15874.0 s.s15875.0

"GHC.Exception.$trModule" =
  [GHC.Types.Module "GHC.Exception.$trModule3" "GHC.Exception.$trModule1"]

"GHC.Exception.$trModule1" =
  [GHC.Types.TrNameS "GHC.Exception.$trModule2"{- value -}]

"GHC.Exception.$trModule2" =
  #"GHC.Exception"

"GHC.Exception.$trModule3" =
  [GHC.Types.TrNameS "GHC.Exception.$trModule4"{- value -}]

"GHC.Exception.$trModule4" =
  #"base"

"GHC.Exception.$w$cshowsPrec" ww.s15851.0 ww1.s15852.0 w.s15853.0 =
  letS wild.s15854.0 = ww1.s15852.0
  case wild.s15854.0 of
    ("GHC.Types.[]") ->
        "GHC.Base.++" @ ww.s15851.0 w.s15853.0
    (GHC.Types.: ipv.s15855.0 ipv1.s15856.0) ->
        let sat.s15857.0 = "GHC.Exception.$w$cshowsPrec.closure.0" @ ipv.s15855.0 ipv1.s15856.0 w.s15853.0
            sat.s15858.0 = [GHC.Types.: "GHC.Exception.$fExceptionErrorCall2" sat.s15857.0]
        "GHC.Base.++" @ ww.s15851.0 sat.s15858.0

"GHC.Exception.$w$cshowsPrec.closure.0" ipv.s15855.1 ipv1.s15856.1 w.s15853.1 =
  "GHC.Base.++_$s++" @ w.s15853.1 ipv.s15855.1 ipv1.s15856.1

"GHC.Exception.$wprettySrcLoc" ww.s16011.0 ww1.s16012.0 ww2.s16013.0 ww3.s16014.0 ww4.s16015.0 =
  let sat.s16032.0 = "GHC.Exception.$wprettySrcLoc.closure.6" @ ww.s16011.0 ww1.s16012.0 ww3.s16014.0 ww4.s16015.0
  "GHC.Base.++" @ ww2.s16013.0 sat.s16032.0

"GHC.Exception.$wprettySrcLoc.closure.0" ww1.s16012.7 =
  "GHC.CString.unpackAppendCString#" @ GHC.Exception.errorCallWithCallStackException3{- value -} ww1.s16012.7

"GHC.Exception.$wprettySrcLoc.closure.1" ww.s16011.6 ww1.s16012.6 =
  let sat.s16026.0 = "GHC.Exception.$wprettySrcLoc.closure.0" @ ww1.s16012.6
  "GHC.Base.++" @ ww.s16011.6 sat.s16026.0

"GHC.Exception.$wprettySrcLoc.closure.2" ww.s16011.5 ww1.s16012.5 =
  let sat.s16027.0 = "GHC.Exception.$wprettySrcLoc.closure.1" @ ww.s16011.5 ww1.s16012.5
  "GHC.CString.unpackAppendCString#" @ GHC.Exception.errorCallWithCallStackException2{- value -} sat.s16027.0

"GHC.Exception.$wprettySrcLoc.closure.3" ww.s16011.4 ww1.s16012.4 ww4.s16015.4 =
  letS ww10.s16021.0 = ww4.s16015.4
  case ww10.s16021.0 of
    ("GHC.Types.I#" ww11.s16022.0) ->
        letS ww12.s16023.0 = "GHC.Show.$wshowSignedInt" @ 0 ww11.s16022.0{- value -} "GHC.Types.[]"
        case ww12.s16023.0{- value -} of
          ("GHC.Prim.(#,#)" ww13.s16024.0 ww14.s16025.0) ->
              let sat.s16028.0 = "GHC.Exception.$wprettySrcLoc.closure.2" @ ww.s16011.4 ww1.s16012.4
              "GHC.Base.++_$s++" @ sat.s16028.0 ww13.s16024.0 ww14.s16025.0

"GHC.Exception.$wprettySrcLoc.closure.4" ww.s16011.3 ww1.s16012.3 ww4.s16015.3 =
  let sat.s16029.0 = "GHC.Exception.$wprettySrcLoc.closure.3" @ ww.s16011.3 ww1.s16012.3 ww4.s16015.3
  "GHC.CString.unpackAppendCString#" @ GHC.Exception.errorCallWithCallStackException3{- value -} sat.s16029.0

"GHC.Exception.$wprettySrcLoc.closure.5" ww.s16011.2 ww1.s16012.2 ww3.s16014.2 ww4.s16015.2 =
  letS ww5.s16016.0 = ww3.s16014.2
  case ww5.s16016.0 of
    ("GHC.Types.I#" ww6.s16017.0) ->
        letS ww7.s16018.0 = "GHC.Show.$wshowSignedInt" @ 0 ww6.s16017.0{- value -} "GHC.Types.[]"
        case ww7.s16018.0{- value -} of
          ("GHC.Prim.(#,#)" ww8.s16019.0 ww9.s16020.0) ->
              let sat.s16030.0 = "GHC.Exception.$wprettySrcLoc.closure.4" @ ww.s16011.2 ww1.s16012.2 ww4.s16015.2
              "GHC.Base.++_$s++" @ sat.s16030.0 ww8.s16019.0 ww9.s16020.0

"GHC.Exception.$wprettySrcLoc.closure.6" ww.s16011.1 ww1.s16012.1 ww3.s16014.1 ww4.s16015.1 =
  let sat.s16031.0 = "GHC.Exception.$wprettySrcLoc.closure.5" @ ww.s16011.1 ww1.s16012.1 ww3.s16014.1 ww4.s16015.1
  "GHC.CString.unpackAppendCString#" @ GHC.Exception.errorCallWithCallStackException3{- value -} sat.s16031.0

"GHC.Exception.Type.$p1Exception" v.s15911.0 =
  letS v.s15912.0 = v.s15911.0
  case v.s15912.0 of
    (GHC.Exception.Type.C:Exception v.s15913.0 v.s15914.0 v.s15915.0 v.s15916.0 v.s15917.0) ->
        v.s15913.0

"GHC.Exception.Type.$p2Exception" v.s15918.0 =
  letS v.s15919.0 = v.s15918.0
  case v.s15919.0 of
    (GHC.Exception.Type.C:Exception v.s15920.0 v.s15921.0 v.s15922.0 v.s15923.0 v.s15924.0) ->
        v.s15921.0

GHC.Exception.Type.toException v.s15925.0 =
  letS v.s15926.0 = v.s15925.0
  case v.s15926.0 of
    (GHC.Exception.Type.C:Exception v.s15927.0 v.s15928.0 v.s15929.0 v.s15930.0 v.s15931.0) ->
        v.s15929.0

GHC.Exception.errorCallException s.s16009.0 =
  let sat.s16010.0 = [GHC.Exception.ErrorCallWithLocation s.s16009.0 "GHC.Types.[]"]
  "GHC.Exception.$fExceptionErrorCall_$ctoException" @ sat.s16010.0

GHC.Exception.errorCallWithCallStackException s.s16068.0 stk.s16069.0 =
  letS ds1.s16103.0 = letS ds1.s16070.0 = GHC.Stack.CCS.currentCallStack @ #"GHC.Prim.realWorld#"
       case ds1.s16070.0 of
         ("GHC.Prim.Unit#" ipv1.s16072.0) ->
             let sat.s16102.0 = GHC.Exception.errorCallWithCallStackException.closure.11 @ ipv1.s16072.0 s.s16068.0 stk.s16069.0
             ["GHC.Prim.Unit#" sat.s16102.0]
  case ds1.s16103.0 of
    ("GHC.Prim.Unit#" ipv1.s16105.0) ->
        ipv1.s16105.0

GHC.Exception.errorCallWithCallStackException.closure.0 wild.s16074.1 =
  letS sat.s16077.0 = GHC.List.reverse1 @ wild.s16074.1 "GHC.Types.[]"
  GHC.Base.map @ GHC.Exception.errorCallWithCallStackException9 sat.s16077.0

GHC.Exception.errorCallWithCallStackException.closure.1 ipv1.s16072.3 =
  letS wild.s16074.0 = ipv1.s16072.3
  case wild.s16074.0 of
    ("GHC.Types.[]") ->
        ["GHC.Types.[]"]
    (GHC.Types.: ipv2.s16075.0 ipv3.s16076.0) ->
        let sat.s16078.0 = GHC.Exception.errorCallWithCallStackException.closure.0 @ wild.s16074.0
        [GHC.Types.: GHC.Exception.errorCallWithCallStackException11 sat.s16078.0]

GHC.Exception.errorCallWithCallStackException.closure.10 ipv1.s16072.2 stk.s16069.2 =
  let n.s16073.0 = GHC.Exception.errorCallWithCallStackException.closure.1 @ ipv1.s16072.2
  letS wild.s16079.0 = GHC.Stack.Types.getCallStack @ stk.s16069.2
  case wild.s16079.0 of
    ("GHC.Types.[]") ->
        letS wild1.s16080.0 = n.s16073.0
        case wild1.s16080.0 of
          ("GHC.Types.[]") ->
              ["GHC.Types.[]"]
          (GHC.Types.: x.s16081.0 xs1.s16082.0) ->
              let sat.s16083.0 = GHC.Exception.errorCallWithCallStackException.closure.2 @ xs1.s16082.0
              "Data.OldList.intercalate_$spoly_go" @ x.s16081.0 sat.s16083.0
    (GHC.Types.: ipv2.s16084.0 ipv3.s16085.0) ->
        let sat.s16099.0 = GHC.Exception.errorCallWithCallStackException.closure.9 @ ipv2.s16084.0 ipv3.s16085.0 n.s16073.0
        "Data.OldList.intercalate_$spoly_go" @ GHC.Exception.errorCallWithCallStackException6 sat.s16099.0

GHC.Exception.errorCallWithCallStackException.closure.11 ipv1.s16072.1 s.s16068.1 stk.s16069.1 =
  let sat.s16100.0 = GHC.Exception.errorCallWithCallStackException.closure.10 @ ipv1.s16072.1 stk.s16069.1
      sat.s16101.0 = [GHC.Exception.ErrorCallWithLocation s.s16068.1 sat.s16100.0]
  "GHC.Exception.$fExceptionErrorCall_$ctoException" @ sat.s16101.0

GHC.Exception.errorCallWithCallStackException.closure.2 xs1.s16082.1 =
  Data.OldList.prependToAll @ GHC.Exception.errorCallWithCallStackException_xs xs1.s16082.1

GHC.Exception.errorCallWithCallStackException.closure.3 go.s16087.2 ys.s16095.1 =
  go.s16087.2 @ ys.s16095.1

GHC.Exception.errorCallWithCallStackException.closure.4 y.s16094.1 =
  GHC.Exception.errorCallWithCallStackException1 @ y.s16094.1

GHC.Exception.errorCallWithCallStackException.closure.5 go.s16087.1 n.s16073.2 ds.s16092.0 =
  letS wild1.s16093.0 = ds.s16092.0
  case wild1.s16093.0 of
    ("GHC.Types.[]") ->
        n.s16073.2
    (GHC.Types.: y.s16094.0 ys.s16095.0) ->
        let sat.s16097.0 = GHC.Exception.errorCallWithCallStackException.closure.3 @ go.s16087.1 ys.s16095.0
            sat.s16096.0 = GHC.Exception.errorCallWithCallStackException.closure.4 @ y.s16094.0
        [GHC.Types.: sat.s16096.0 sat.s16097.0]

GHC.Exception.errorCallWithCallStackException.closure.6 go.s16087.4 sc1.s16089.1 =
  go.s16087.4 @ sc1.s16089.1

GHC.Exception.errorCallWithCallStackException.closure.7 sc.s16088.1 =
  GHC.Exception.errorCallWithCallStackException1 @ sc.s16088.1

GHC.Exception.errorCallWithCallStackException.closure.8 go.s16087.3 sc.s16088.0 sc1.s16089.0 =
  let sat.s16091.0 = GHC.Exception.errorCallWithCallStackException.closure.6 @ go.s16087.3 sc1.s16089.0
      sat.s16090.0 = GHC.Exception.errorCallWithCallStackException.closure.7 @ sc.s16088.0
  [GHC.Types.: sat.s16090.0 sat.s16091.0]

GHC.Exception.errorCallWithCallStackException.closure.9 ipv2.s16084.1 ipv3.s16085.1 n.s16073.1 =
  letrec go.s16087.0 = GHC.Exception.errorCallWithCallStackException.closure.5 @ go.s16087.0 n.s16073.1
  let "$sgo.s16086.0" = GHC.Exception.errorCallWithCallStackException.closure.8 @ go.s16087.0
  letS sat.s16098.0 = "$sgo.s16086.0" @ ipv2.s16084.1 ipv3.s16085.1
  Data.OldList.prependToAll @ GHC.Exception.errorCallWithCallStackException_xs sat.s16098.0

GHC.Exception.errorCallWithCallStackException1 x.s16042.0 =
  let sat.s16056.0 = GHC.Exception.errorCallWithCallStackException1.closure.2 @ x.s16042.0
  "GHC.CString.unpackAppendCString#" @ GHC.Exception.errorCallWithCallStackException5{- value -} sat.s16056.0

GHC.Exception.errorCallWithCallStackException1.closure.0 loc.s16045.2 =
  letS ww.s16046.0 = loc.s16045.2
  case ww.s16046.0 of
    (GHC.Stack.Types.SrcLoc ww1.s16047.0 ww2.s16048.0 ww3.s16049.0 ww4.s16050.0 ww5.s16051.0 ww6.s16052.0 ww7.s16053.0) ->
        "GHC.Exception.$wprettySrcLoc" @ ww1.s16047.0 ww2.s16048.0 ww3.s16049.0 ww4.s16050.0 ww5.s16051.0

GHC.Exception.errorCallWithCallStackException1.closure.1 loc.s16045.1 =
  let sat.s16054.0 = GHC.Exception.errorCallWithCallStackException1.closure.0 @ loc.s16045.1
  "GHC.CString.unpackAppendCString#" @ GHC.Exception.errorCallWithCallStackException4{- value -} sat.s16054.0

GHC.Exception.errorCallWithCallStackException1.closure.2 x.s16042.1 =
  letS wild.s16043.0 = x.s16042.1
  case wild.s16043.0 of
    ("GHC.Tuple.(,)" f.s16044.0 loc.s16045.0) ->
        let sat.s16055.0 = GHC.Exception.errorCallWithCallStackException1.closure.1 @ loc.s16045.0
        "GHC.Base.++" @ f.s16044.0 sat.s16055.0

GHC.Exception.errorCallWithCallStackException10 =
  "GHC.CString.unpackCString#" @ GHC.Exception.errorCallWithCallStackException5{- value -}

GHC.Exception.errorCallWithCallStackException11 =
  "GHC.CString.unpackCString#" @ GHC.Exception.errorCallWithCallStackException12{- value -}

GHC.Exception.errorCallWithCallStackException12 =
  #"CallStack (from -prof):"

GHC.Exception.errorCallWithCallStackException2 =
  #" in "

GHC.Exception.errorCallWithCallStackException3 =
  #":"

GHC.Exception.errorCallWithCallStackException4 =
  #", called at "

GHC.Exception.errorCallWithCallStackException5 =
  #"  "

GHC.Exception.errorCallWithCallStackException6 =
  "GHC.CString.unpackCString#" @ GHC.Exception.errorCallWithCallStackException7{- value -}

GHC.Exception.errorCallWithCallStackException7 =
  #"CallStack (from HasCallStack):"

GHC.Exception.errorCallWithCallStackException8 =
  #"\n"

GHC.Exception.errorCallWithCallStackException9 eta.B1.477 =
  "GHC.Base.++" @ GHC.Exception.errorCallWithCallStackException10 eta.B1.477

GHC.Exception.errorCallWithCallStackException_xs =
  "GHC.CString.unpackCString#" @ GHC.Exception.errorCallWithCallStackException8{- value -}

"GHC.Fingerprint.$wfingerprintData" ww.s25419.0 ww1.s25420.0 void.040.908 =
  let sat.s25441.0 = "GHC.Fingerprint.$wfingerprintData.closure.1" @ ww.s25419.0{- value -} ww1.s25420.0{- value -}
  Foreign.Marshal.Alloc.allocaBytes @ GHC.Fingerprint.fingerprintData3 sat.s25441.0 #"GHC.Prim.void#"

"GHC.Fingerprint.$wfingerprintData.closure.0" ds1.s25425.1 pdigest.s25433.0 void.X65.1 =
  letS ds4.s25435.0 = pdigest.s25433.0
  case ds4.s25435.0 of
    (GHC.Ptr.Ptr ds5.s25436.0) ->
        letS wild2.s25438.0 = __hsbase_MD5Final @ ds5.s25436.0{- value -} ds1.s25425.1{- value -}
        case wild2.s25438.0{- value -} of
          ("GHC.Prim.(##)") ->
              "Foreign.Storable.$fStorableFingerprint2" @ ds4.s25435.0 #"GHC.Prim.void#"

"GHC.Fingerprint.$wfingerprintData.closure.1" ww.s25419.1 ww1.s25420.1 pctxt.s25422.0 void.040.909 =
  letS ds.s25424.0 = pctxt.s25422.0
  case ds.s25424.0 of
    (GHC.Ptr.Ptr ds1.s25425.0) ->
        letS wild.s25427.0 = __hsbase_MD5Init @ ds1.s25425.0{- value -}
        case wild.s25427.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS sat.s25430.0 = "narrow32Int#" @ ww1.s25420.1{- value -}
                   wild1.s25431.0 = __hsbase_MD5Update @ ds1.s25425.0{- value -} ww.s25419.1{- value -} sat.s25430.0{- value -}
              case wild1.s25431.0{- value -} of
                ("GHC.Prim.(##)") ->
                    let sat.s25440.0 = "GHC.Fingerprint.$wfingerprintData.closure.0" @ ds1.s25425.0{- value -}
                    Foreign.Marshal.Alloc.allocaBytes @ GHC.Fingerprint.fingerprintData2 sat.s25440.0 #"GHC.Prim.void#"

"GHC.Fingerprint.Type.$WFingerprint" dt.s14430.0 dt.s14431.0 =
  letS dt.s14432.0 = dt.s14430.0
  case dt.s14432.0 of
    ("GHC.Word.W64#" dt.s14433.0) ->
        letS dt.s14434.0 = dt.s14431.0
        case dt.s14434.0 of
          ("GHC.Word.W64#" dt.s14435.0) ->
              [GHC.Fingerprint.Type.Fingerprint dt.s14433.0{- value -} dt.s14435.0{- value -}]

GHC.Fingerprint.fingerprintData2 =
  ["GHC.Types.I#" 16]

GHC.Fingerprint.fingerprintData3 =
  ["GHC.Types.I#" 88]

GHC.Fingerprint.fingerprintFingerprints fs.s25515.0 =
  letS ds1.s25574.0 = letS ww2.s25516.0 = "GHC.List.$wlenAcc" @ fs.s25515.0 0
       let sat.s25573.0 = GHC.Fingerprint.fingerprintFingerprints.closure.2 @ fs.s25515.0 ww2.s25516.0{- value -}
       letS sat.s25517.0 = "*#" @ ww2.s25516.0{- value -} 16
       let sat.s25518.0 = ["GHC.Types.I#" sat.s25517.0{- value -}]
       Foreign.Marshal.Alloc.allocaBytesAligned @ sat.s25518.0 "Foreign.Storable.$fStorableDouble5" sat.s25573.0 #"GHC.Prim.realWorld#"
  case ds1.s25574.0 of
    ("GHC.Prim.Unit#" ipv1.s25576.0) ->
        ipv1.s25576.0

GHC.Fingerprint.fingerprintFingerprints.closure.0 ptr.s25519.1 ww2.s25516.2 void.X65.3 =
  letS ww.s25523.0 = ptr.s25519.1
  case ww.s25523.0 of
    (GHC.Ptr.Ptr ww1.s25524.0) ->
        letS sat.s25525.0 = "*#" @ ww2.s25516.2{- value -} 16
        "GHC.Fingerprint.$wfingerprintData" @ ww1.s25524.0{- value -} sat.s25525.0{- value -} #"GHC.Prim.void#"

GHC.Fingerprint.fingerprintFingerprints.closure.1 addr.s25533.1 exit.s25521.1 go.s25547.1 ds.s25548.0 ds4.s25549.0 void.X87.2 =
  letS wild2.s25551.0 = ds.s25548.0
  case wild2.s25551.0 of
    ("GHC.Types.[]") ->
        exit.s25521.1 @ #"GHC.Prim.void#"
    (GHC.Types.: val1.s25552.0 vals1.s25553.0) ->
        letS ww5.s25554.0 = val1.s25552.0
        case ww5.s25554.0 of
          (GHC.Fingerprint.Type.Fingerprint ww6.s25555.0 ww7.s25556.0) ->
              letS sat.s25558.0 = "*#" @ ds4.s25549.0{- value -} 16
                   a.s25557.0 = "plusAddr#" @ addr.s25533.1{- value -} sat.s25558.0{- value -}
                   sat.s25559.0 = "narrow8Word#" @ ww6.s25555.0{- value -}
                   s4.s25560.0 = "writeWord8OffAddr#" @ a.s25557.0{- value -} 7 sat.s25559.0{- value -}
              case s4.s25560.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS sat.s25561.0 = "uncheckedShiftRL#" @ ww6.s25555.0{- value -} 8
                         ds5.s25562.0 = "Foreign.Storable.$fStorableFingerprint_$s$wpokeW64" @ #"GHC.Prim.void#" sat.s25561.0{- value -} 7 a.s25557.0{- value -}
                    case ds5.s25562.0 of
                      ("GHC.Prim.Unit#" ipv5.s25564.0) ->
                          letS a2.s25565.0 = "plusAddr#" @ a.s25557.0{- value -} 8
                               sat.s25566.0 = "narrow8Word#" @ ww7.s25556.0{- value -}
                               s5.s25567.0 = "writeWord8OffAddr#" @ a2.s25565.0{- value -} 7 sat.s25566.0{- value -}
                          case s5.s25567.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s25568.0 = "uncheckedShiftRL#" @ ww7.s25556.0{- value -} 8
                                     ds6.s25569.0 = "Foreign.Storable.$fStorableFingerprint_$s$wpokeW64" @ #"GHC.Prim.void#" sat.s25568.0{- value -} 7 a2.s25565.0{- value -}
                                case ds6.s25569.0 of
                                  ("GHC.Prim.Unit#" ipv7.s25571.0) ->
                                      letS sat.s25572.0 = "+#" @ ds4.s25549.0{- value -} 1
                                      go.s25547.1 @ vals1.s25553.0 sat.s25572.0{- value -} #"GHC.Prim.void#"

GHC.Fingerprint.fingerprintFingerprints.closure.2 fs.s25515.1 ww2.s25516.1 ptr.s25519.0 void.040.913 =
  let exit.s25521.0 = GHC.Fingerprint.fingerprintFingerprints.closure.0 @ ptr.s25519.0 ww2.s25516.1{- value -}
  letS wild.s25526.0 = fs.s25515.1
  case wild.s25526.0 of
    ("GHC.Types.[]") ->
        exit.s25521.0 @ #"GHC.Prim.void#"
    (GHC.Types.: val.s25527.0 vals.s25528.0) ->
        letS ww.s25529.0 = val.s25527.0
        case ww.s25529.0 of
          (GHC.Fingerprint.Type.Fingerprint ww1.s25530.0 ww4.s25531.0) ->
              letS wild1.s25532.0 = ptr.s25519.0
              case wild1.s25532.0 of
                (GHC.Ptr.Ptr addr.s25533.0) ->
                    letS sat.s25534.0 = "narrow8Word#" @ ww1.s25530.0{- value -}
                         s2.s25535.0 = "writeWord8OffAddr#" @ addr.s25533.0{- value -} 7 sat.s25534.0{- value -}
                    case s2.s25535.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s25536.0 = "uncheckedShiftRL#" @ ww1.s25530.0{- value -} 8
                               ds1.s25537.0 = "Foreign.Storable.$fStorableFingerprint_$s$wpokeW64" @ #"GHC.Prim.void#" sat.s25536.0{- value -} 7 addr.s25533.0{- value -}
                          case ds1.s25537.0 of
                            ("GHC.Prim.Unit#" ipv1.s25539.0) ->
                                letS a1.s25540.0 = "plusAddr#" @ addr.s25533.0{- value -} 8
                                     sat.s25541.0 = "narrow8Word#" @ ww4.s25531.0{- value -}
                                     s1.s25542.0 = "writeWord8OffAddr#" @ a1.s25540.0{- value -} 7 sat.s25541.0{- value -}
                                case s1.s25542.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s25543.0 = "uncheckedShiftRL#" @ ww4.s25531.0{- value -} 8
                                           ds2.s25544.0 = "Foreign.Storable.$fStorableFingerprint_$s$wpokeW64" @ #"GHC.Prim.void#" sat.s25543.0{- value -} 7 a1.s25540.0{- value -}
                                      case ds2.s25544.0 of
                                        ("GHC.Prim.Unit#" ipv3.s25546.0) ->
                                            letrec go.s25547.0 = GHC.Fingerprint.fingerprintFingerprints.closure.1 @ addr.s25533.0{- value -} exit.s25521.0 go.s25547.0
                                            go.s25547.0 @ vals.s25528.0 1 #"GHC.Prim.void#"

GHC.Fingerprint.fingerprintString str.s25482.0 =
  letS vals.s25483.0 = GHC.Fingerprint.fingerprintString_go @ str.s25482.0
       ds1.s25512.0 = letS ww2.s25484.0 = "GHC.List.$wlenAcc" @ vals.s25483.0 0
       let sat.s25511.0 = GHC.Fingerprint.fingerprintString.closure.2 @ vals.s25483.0 ww2.s25484.0{- value -}
           sat.s25485.0 = ["GHC.Types.I#" ww2.s25484.0{- value -}]
       Foreign.Marshal.Alloc.allocaBytesAligned @ sat.s25485.0 "Foreign.Storable.$fStorable()7" sat.s25511.0 #"GHC.Prim.realWorld#"
  case ds1.s25512.0 of
    ("GHC.Prim.Unit#" ipv1.s25514.0) ->
        ipv1.s25514.0

GHC.Fingerprint.fingerprintString.closure.0 ptr.s25486.1 ww2.s25484.2 void.X65.2 =
  letS ww.s25490.0 = ptr.s25486.1
  case ww.s25490.0 of
    (GHC.Ptr.Ptr ww1.s25491.0) ->
        "GHC.Fingerprint.$wfingerprintData" @ ww1.s25491.0{- value -} ww2.s25484.2{- value -} #"GHC.Prim.void#"

GHC.Fingerprint.fingerprintString.closure.1 a.s25496.1 exit.s25488.1 go.s25500.1 ds.s25501.0 ds1.s25502.0 void.X76.0 =
  letS wild3.s25504.0 = ds.s25501.0
  case wild3.s25504.0 of
    ("GHC.Types.[]") ->
        exit.s25488.1 @ #"GHC.Prim.void#"
    (GHC.Types.: val1.s25505.0 vals2.s25506.0) ->
        letS wild4.s25507.0 = val1.s25505.0
        case wild4.s25507.0 of
          ("GHC.Word.W8#" x1.s25508.0) ->
              letS s1.s25509.0 = "writeWord8OffAddr#" @ a.s25496.1{- value -} ds1.s25502.0{- value -} x1.s25508.0{- value -}
              case s1.s25509.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS sat.s25510.0 = "+#" @ ds1.s25502.0{- value -} 1
                    go.s25500.1 @ vals2.s25506.0 sat.s25510.0{- value -} #"GHC.Prim.void#"

GHC.Fingerprint.fingerprintString.closure.2 vals.s25483.1 ww2.s25484.1 ptr.s25486.0 void.040.912 =
  let exit.s25488.0 = GHC.Fingerprint.fingerprintString.closure.0 @ ptr.s25486.0 ww2.s25484.1{- value -}
  letS wild.s25492.0 = vals.s25483.1
  case wild.s25492.0 of
    ("GHC.Types.[]") ->
        exit.s25488.0 @ #"GHC.Prim.void#"
    (GHC.Types.: val.s25493.0 vals1.s25494.0) ->
        letS wild1.s25495.0 = ptr.s25486.0
        case wild1.s25495.0 of
          (GHC.Ptr.Ptr a.s25496.0) ->
              letS wild2.s25497.0 = val.s25493.0
              case wild2.s25497.0 of
                ("GHC.Word.W8#" x.s25498.0) ->
                    letS s2.s25499.0 = "writeWord8OffAddr#" @ a.s25496.0{- value -} 0 x.s25498.0{- value -}
                    case s2.s25499.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letrec go.s25500.0 = GHC.Fingerprint.fingerprintString.closure.1 @ a.s25496.0{- value -} exit.s25488.0 go.s25500.0
                          go.s25500.0 @ vals1.s25494.0 1 #"GHC.Prim.void#"

GHC.Fingerprint.fingerprintString_go ds.s25449.0 =
  letS wild.s25450.0 = ds.s25449.0
  case wild.s25450.0 of
    ("GHC.Types.[]") ->
        ["GHC.Types.[]"]
    (GHC.Types.: y.s25451.0 ys.s25452.0) ->
        let w32.s25453.0 = GHC.Fingerprint.fingerprintString_go.closure.0 @ y.s25451.0
            sat.s25478.0 = GHC.Fingerprint.fingerprintString_go.closure.1 @ ys.s25452.0
            sat.s25477.0 = GHC.Fingerprint.fingerprintString_go.closure.2 @ w32.s25453.0
            sat.s25479.0 = [GHC.Types.: sat.s25477.0 sat.s25478.0]
            sat.s25473.0 = GHC.Fingerprint.fingerprintString_go.closure.3 @ w32.s25453.0
            sat.s25480.0 = [GHC.Types.: sat.s25473.0 sat.s25479.0]
            sat.s25468.0 = GHC.Fingerprint.fingerprintString_go.closure.4 @ w32.s25453.0
            sat.s25481.0 = [GHC.Types.: sat.s25468.0 sat.s25480.0]
            sat.s25463.0 = GHC.Fingerprint.fingerprintString_go.closure.5 @ w32.s25453.0
        [GHC.Types.: sat.s25463.0 sat.s25481.0]

GHC.Fingerprint.fingerprintString_go.closure.0 y.s25451.1 =
  letS wild1.s25454.0 = y.s25451.1
  case wild1.s25454.0 of
    ("GHC.Types.C#" "c#.s25455.0") ->
        letS sat.s25456.0 = "ord#" @ "c#.s25455.0"{- value -}
             sat.s25457.0 = "int2Word#" @ sat.s25456.0{- value -}
             sat.s25458.0 = "narrow32Word#" @ sat.s25457.0{- value -}
        ["GHC.Word.W32#" sat.s25458.0{- value -}]

GHC.Fingerprint.fingerprintString_go.closure.1 ys.s25452.1 =
  GHC.Fingerprint.fingerprintString_go @ ys.s25452.1

GHC.Fingerprint.fingerprintString_go.closure.2 w32.s25453.1 =
  letS wild1.s25474.0 = w32.s25453.1
  case wild1.s25474.0 of
    ("GHC.Word.W32#" "x#.s25475.0") ->
        letS sat.s25476.0 = "narrow8Word#" @ "x#.s25475.0"{- value -}
        ["GHC.Word.W8#" sat.s25476.0{- value -}]

GHC.Fingerprint.fingerprintString_go.closure.3 w32.s25453.2 =
  letS wild1.s25469.0 = w32.s25453.2
  case wild1.s25469.0 of
    ("GHC.Word.W32#" "x#.s25470.0") ->
        letS sat.s25471.0 = "uncheckedShiftRL#" @ "x#.s25470.0"{- value -} 8
             sat.s25472.0 = "narrow8Word#" @ sat.s25471.0{- value -}
        ["GHC.Word.W8#" sat.s25472.0{- value -}]

GHC.Fingerprint.fingerprintString_go.closure.4 w32.s25453.3 =
  letS wild1.s25464.0 = w32.s25453.3
  case wild1.s25464.0 of
    ("GHC.Word.W32#" "x#.s25465.0") ->
        letS sat.s25466.0 = "uncheckedShiftRL#" @ "x#.s25465.0"{- value -} 16
             sat.s25467.0 = "narrow8Word#" @ sat.s25466.0{- value -}
        ["GHC.Word.W8#" sat.s25467.0{- value -}]

GHC.Fingerprint.fingerprintString_go.closure.5 w32.s25453.4 =
  letS wild1.s25459.0 = w32.s25453.4
  case wild1.s25459.0 of
    ("GHC.Word.W32#" "x#.s25460.0") ->
        letS sat.s25461.0 = "uncheckedShiftRL#" @ "x#.s25460.0"{- value -} 24
             sat.s25462.0 = "narrow8Word#" @ sat.s25461.0{- value -}
        ["GHC.Word.W8#" sat.s25462.0{- value -}]

"GHC.Foreign.$wpeekCString" w.s35465.0 ww.s35466.0 void.040.965 =
  let exit.s35468.0 = "GHC.Foreign.$wpeekCString.closure.25" @ w.s35465.0 ww.s35466.0{- value -}
  letrec "$sloop.s35825.0" = "GHC.Foreign.$wpeekCString.closure.26" @ "$sloop.s35825.0" exit.s35468.0 ww.s35466.0{- value -}
  "$sloop.s35825.0" @ #"GHC.Prim.void#" 0

"GHC.Foreign.$wpeekCString.closure.0" ipv17.s35564.1 ipv19.s35568.1 w9.s35560.1 =
  let sat.s35569.0 = ["GHC.Types.C#" ipv17.s35564.1{- value -}]
  "GHC.Base.++_$s++" @ ipv19.s35568.1 sat.s35569.0 w9.s35560.1

"GHC.Foreign.$wpeekCString.closure.1" "$wgo.s35532.3" ww7.s35552.1 ww8.s35553.1 ww9.s35554.1 w9.s35560.0 void.X151.2 =
  letS ds16.s35562.0 = "readWideCharOffAddr#" @ ww8.s35553.1{- value -} 0
  case ds16.s35562.0{- value -} of
    ("GHC.Prim.Unit#" ipv17.s35564.0) ->
        letS s'1.s35565.0 = "touch#" @ ww9.s35554.1
        case s'1.s35565.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS ds17.s35566.0 = "$wgo.s35532.3" @ ww7.s35552.1 #"GHC.Prim.void#"
              case ds17.s35566.0 of
                ("GHC.Prim.Unit#" ipv19.s35568.0) ->
                    let sat.s35570.0 = "GHC.Foreign.$wpeekCString.closure.0" @ ipv17.s35564.0{- value -} ipv19.s35568.0 w9.s35560.0
                    ["GHC.Prim.Unit#" sat.s35570.0]

"GHC.Foreign.$wpeekCString.closure.10" "$wf.s35645.1" exit1.s35525.1 ww2.s35519.2 ww7.s35646.0 w3.s35647.0 void.X120.0 =
  letS ds13.s35649.0 = ww7.s35646.0{- value -}
  case ds13.s35649.0{- value -} of
    _ ->
        letS ds14.s35650.0 = "readWideCharOffAddr#" @ ww2.s35519.2{- value -} ds13.s35649.0{- value -}
        case ds14.s35650.0{- value -} of
          ("GHC.Prim.Unit#" ipv13.s35652.0) ->
              let sat.s35654.0 = ["GHC.Types.C#" ipv13.s35652.0{- value -}]
                  sat.s35655.0 = [GHC.Types.: sat.s35654.0 w3.s35647.0]
              letS sat.s35653.0 = "-#" @ ds13.s35649.0{- value -} 1
              "$wf.s35645.1" @ sat.s35653.0{- value -} sat.s35655.0 #"GHC.Prim.void#"
    0 ->
        exit1.s35525.1 @ w3.s35647.0 #"GHC.Prim.void#"

"GHC.Foreign.$wpeekCString.closure.11" ipv15.s35690.1 ipv17.s35694.1 w6.s35686.1 =
  let sat.s35695.0 = ["GHC.Types.C#" ipv15.s35690.1{- value -}]
  "GHC.Base.++_$s++" @ ipv17.s35694.1 sat.s35695.0 w6.s35686.1

"GHC.Foreign.$wpeekCString.closure.12" "$wgo.s35658.3" ww7.s35678.1 ww8.s35679.1 ww9.s35680.1 w6.s35686.0 void.X145.2 =
  letS ds15.s35688.0 = "readWideCharOffAddr#" @ ww8.s35679.1{- value -} 0
  case ds15.s35688.0{- value -} of
    ("GHC.Prim.Unit#" ipv15.s35690.0) ->
        letS s'1.s35691.0 = "touch#" @ ww9.s35680.1
        case s'1.s35691.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS ds16.s35692.0 = "$wgo.s35658.3" @ ww7.s35678.1 #"GHC.Prim.void#"
              case ds16.s35692.0 of
                ("GHC.Prim.Unit#" ipv17.s35694.0) ->
                    let sat.s35696.0 = "GHC.Foreign.$wpeekCString.closure.11" @ ipv15.s35690.0{- value -} ipv17.s35694.0 w6.s35686.0
                    ["GHC.Prim.Unit#" sat.s35696.0]

"GHC.Foreign.$wpeekCString.closure.13" "$wf.s35697.1" exit1.s35685.1 ww8.s35679.2 ww13.s35698.0 w6.s35699.0 void.X147.2 =
  letS ds15.s35701.0 = ww13.s35698.0{- value -}
  case ds15.s35701.0{- value -} of
    _ ->
        letS ds16.s35702.0 = "readWideCharOffAddr#" @ ww8.s35679.2{- value -} ds15.s35701.0{- value -}
        case ds16.s35702.0{- value -} of
          ("GHC.Prim.Unit#" ipv15.s35704.0) ->
              let sat.s35706.0 = ["GHC.Types.C#" ipv15.s35704.0{- value -}]
                  sat.s35707.0 = [GHC.Types.: sat.s35706.0 w6.s35699.0]
              letS sat.s35705.0 = "-#" @ ds15.s35701.0{- value -} 1
              "$wf.s35697.1" @ sat.s35705.0{- value -} sat.s35707.0 #"GHC.Prim.void#"
    0 ->
        exit1.s35685.1 @ w6.s35699.0 #"GHC.Prim.void#"

"GHC.Foreign.$wpeekCString.closure.14" ipv15.s35712.1 =
  "GHC.Base.++" @ "GHC.Types.[]" ipv15.s35712.1

"GHC.Foreign.$wpeekCString.closure.15" "$wgo.s35658.2" void.X134.4 ww7.s35678.0 ww8.s35679.0 ww9.s35680.0 ww10.s35681.0 ww11.s35682.0 =
  letS ww12.s35683.0 = "-#" @ ww11.s35682.0{- value -} ww10.s35681.0{- value -}
       lwild4.s35684.0 = "<=#" @ ww12.s35683.0{- value -} 0
  case lwild4.s35684.0{- value -} of
    _ ->
        letS sat.s35708.0 = "-#" @ ww12.s35683.0{- value -} 1
        let exit1.s35685.0 = "GHC.Foreign.$wpeekCString.closure.12" @ "$wgo.s35658.2" ww7.s35678.0 ww8.s35679.0{- value -} ww9.s35680.0
        letrec "$wf.s35697.0" = "GHC.Foreign.$wpeekCString.closure.13" @ "$wf.s35697.0" exit1.s35685.0 ww8.s35679.0{- value -}
        "$wf.s35697.0" @ sat.s35708.0{- value -} "GHC.Types.[]" #"GHC.Prim.void#"
    1 ->
        letS s'1.s35709.0 = "touch#" @ ww9.s35680.0
        case s'1.s35709.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS ds15.s35710.0 = "$wgo.s35658.2" @ ww7.s35678.0 #"GHC.Prim.void#"
              case ds15.s35710.0 of
                ("GHC.Prim.Unit#" ipv15.s35712.0) ->
                    let sat.s35713.0 = "GHC.Foreign.$wpeekCString.closure.14" @ ipv15.s35712.0
                    ["GHC.Prim.Unit#" sat.s35713.0]

"GHC.Foreign.$wpeekCString.closure.16" dt12.s35736.1 dt13.s35737.1 w5.s35745.0 void.X145.3 =
  letS ds16.s35747.0 = "readWideCharOffAddr#" @ dt12.s35736.1{- value -} 0
  case ds16.s35747.0{- value -} of
    ("GHC.Prim.Unit#" ipv15.s35749.0) ->
        letS s'1.s35750.0 = "touch#" @ dt13.s35737.1
        case s'1.s35750.0{- value -} of
          ("GHC.Prim.(##)") ->
              let sat.s35751.0 = ["GHC.Types.C#" ipv15.s35749.0{- value -}]
                  sat.s35752.0 = [GHC.Types.: sat.s35751.0 w5.s35745.0]
              ["GHC.Prim.Unit#" sat.s35752.0]

"GHC.Foreign.$wpeekCString.closure.17" "$wf.s35753.1" dt12.s35736.2 exit1.s35744.1 ww8.s35754.0 w5.s35755.0 void.X147.3 =
  letS ds16.s35757.0 = ww8.s35754.0{- value -}
  case ds16.s35757.0{- value -} of
    _ ->
        letS ds17.s35758.0 = "readWideCharOffAddr#" @ dt12.s35736.2{- value -} ds16.s35757.0{- value -}
        case ds17.s35758.0{- value -} of
          ("GHC.Prim.Unit#" ipv15.s35760.0) ->
              let sat.s35762.0 = ["GHC.Types.C#" ipv15.s35760.0{- value -}]
                  sat.s35763.0 = [GHC.Types.: sat.s35762.0 w5.s35755.0]
              letS sat.s35761.0 = "-#" @ ds16.s35757.0{- value -} 1
              "$wf.s35753.1" @ sat.s35761.0{- value -} sat.s35763.0 #"GHC.Prim.void#"
    0 ->
        exit1.s35744.1 @ w5.s35755.0 #"GHC.Prim.void#"

"GHC.Foreign.$wpeekCString.closure.18" "$wgo.s35658.1" ds6.s35494.4 ds7.s35495.4 ipv9.s35492.4 w3.s35659.0 void.X118.2 =
  letS ds13.s35661.0 = ds6.s35494.4 @ w3.s35659.0 ipv9.s35492.4 #"GHC.Prim.void#"
  case ds13.s35661.0 of
    ("GHC.Prim.Unit#" ipv13.s35663.0) ->
        letS wild4.s35664.0 = ipv13.s35663.0
        case wild4.s35664.0 of
          ("GHC.Tuple.(,,)" why1.s35665.0 from'1.s35666.0 to'1.s35667.0) ->
              letS wild5.s35668.0 = from'1.s35666.0
              case wild5.s35668.0 of
                (GHC.IO.Buffer.Buffer dt7.s35669.0 dt8.s35670.0 ds14.s35671.0 dt9.s35672.0 dt10.s35673.0 dt11.s35674.0) ->
                    letS lwild3.s35675.0 = "==#" @ dt10.s35673.0{- value -} dt11.s35674.0{- value -}
                    case lwild3.s35675.0{- value -} of
                      _ ->
                          let "$w$j1.s35676.0" = "GHC.Foreign.$wpeekCString.closure.15" @ "$wgo.s35658.1"
                          letS wild6.s35714.0 = why1.s35665.0
                          case wild6.s35714.0 of
                            _ ->
                                letS ds15.s35715.0 = ds7.s35495.4 @ wild5.s35668.0 to'1.s35667.0 #"GHC.Prim.void#"
                                case ds15.s35715.0 of
                                  ("GHC.Prim.Unit#" ipv15.s35717.0) ->
                                      letS ww7.s35718.0 = ipv15.s35717.0
                                      case ww7.s35718.0 of
                                        ("GHC.Tuple.(,)" ww8.s35719.0 ww9.s35720.0) ->
                                            letS ww10.s35721.0 = ww9.s35720.0
                                            case ww10.s35721.0 of
                                              (GHC.IO.Buffer.Buffer ww11.s35722.0 ww12.s35723.0 ww13.s35724.0 ww14.s35725.0 ww15.s35726.0 ww16.s35727.0) ->
                                                  "$w$j1.s35676.0" @ #"GHC.Prim.void#" ww8.s35719.0 ww11.s35722.0{- value -} ww12.s35723.0 ww15.s35726.0{- value -} ww16.s35727.0{- value -}
                            (GHC.IO.Encoding.Types.OutputUnderflow) ->
                                letS ww7.s35728.0 = to'1.s35667.0
                                case ww7.s35728.0 of
                                  (GHC.IO.Buffer.Buffer ww8.s35729.0 ww9.s35730.0 ww10.s35731.0 ww11.s35732.0 ww12.s35733.0 ww13.s35734.0) ->
                                      "$w$j1.s35676.0" @ #"GHC.Prim.void#" wild5.s35668.0 ww8.s35729.0{- value -} ww9.s35730.0 ww12.s35733.0{- value -} ww13.s35734.0{- value -}
                      1 ->
                          letS wild6.s35735.0 = to'1.s35667.0
                          case wild6.s35735.0 of
                            (GHC.IO.Buffer.Buffer dt12.s35736.0 dt13.s35737.0 ds15.s35738.0 dt14.s35739.0 dt15.s35740.0 dt16.s35741.0) ->
                                letS ww7.s35742.0 = "-#" @ dt16.s35741.0{- value -} dt15.s35740.0{- value -}
                                     lwild4.s35743.0 = "<=#" @ ww7.s35742.0{- value -} 0
                                case lwild4.s35743.0{- value -} of
                                  _ ->
                                      letS sat.s35764.0 = "-#" @ ww7.s35742.0{- value -} 1
                                      let exit1.s35744.0 = "GHC.Foreign.$wpeekCString.closure.16" @ dt12.s35736.0{- value -} dt13.s35737.0
                                      letrec "$wf.s35753.0" = "GHC.Foreign.$wpeekCString.closure.17" @ "$wf.s35753.0" dt12.s35736.0{- value -} exit1.s35744.0
                                      "$wf.s35753.0" @ sat.s35764.0{- value -} "GHC.Types.[]" #"GHC.Prim.void#"
                                  1 ->
                                      letS s'1.s35765.0 = "touch#" @ dt13.s35737.0
                                      case s'1.s35765.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Types.[]"]

"GHC.Foreign.$wpeekCString.closure.19" ipv13.s35768.1 =
  "GHC.Base.++" @ "GHC.Types.[]" ipv13.s35768.1

"GHC.Foreign.$wpeekCString.closure.2" "$wf.s35571.1" exit2.s35559.1 ww8.s35553.2 ww13.s35572.0 w9.s35573.0 void.X153.1 =
  letS ds16.s35575.0 = ww13.s35572.0{- value -}
  case ds16.s35575.0{- value -} of
    _ ->
        letS ds17.s35576.0 = "readWideCharOffAddr#" @ ww8.s35553.2{- value -} ds16.s35575.0{- value -}
        case ds17.s35576.0{- value -} of
          ("GHC.Prim.Unit#" ipv17.s35578.0) ->
              let sat.s35580.1 = ["GHC.Types.C#" ipv17.s35578.0{- value -}]
                  sat.s35581.0 = [GHC.Types.: sat.s35580.1 w9.s35573.0]
              letS sat.s35579.0 = "-#" @ ds16.s35575.0{- value -} 1
              "$wf.s35571.1" @ sat.s35579.0{- value -} sat.s35581.0 #"GHC.Prim.void#"
    0 ->
        exit2.s35559.1 @ w9.s35573.0 #"GHC.Prim.void#"

"GHC.Foreign.$wpeekCString.closure.20" ds6.s35494.1 ds7.s35495.1 ipv9.s35492.1 void.X107.1 ww1.s35518.0 ww2.s35519.0 ww3.s35520.0 ww4.s35521.0 ww5.s35522.0 =
  letS ww6.s35523.0 = "-#" @ ww5.s35522.0{- value -} ww4.s35521.0{- value -}
       lwild2.s35524.0 = "<=#" @ ww6.s35523.0{- value -} 0
  case lwild2.s35524.0{- value -} of
    _ ->
        letS sat.s35656.0 = "-#" @ ww6.s35523.0{- value -} 1
        let exit1.s35525.0 = "GHC.Foreign.$wpeekCString.closure.9" @ ds6.s35494.1 ds7.s35495.1 ipv9.s35492.1 ww1.s35518.0 ww2.s35519.0{- value -} ww3.s35520.0
        letrec "$wf.s35645.0" = "GHC.Foreign.$wpeekCString.closure.10" @ "$wf.s35645.0" exit1.s35525.0 ww2.s35519.0{- value -}
        "$wf.s35645.0" @ sat.s35656.0{- value -} "GHC.Types.[]" #"GHC.Prim.void#"
    1 ->
        letS s'.s35657.0 = "touch#" @ ww3.s35520.0
        case s'.s35657.0{- value -} of
          ("GHC.Prim.(##)") ->
              letrec "$wgo.s35658.0" = "GHC.Foreign.$wpeekCString.closure.18" @ "$wgo.s35658.0" ds6.s35494.1 ds7.s35495.1 ipv9.s35492.1
              letS ds13.s35766.0 = "$wgo.s35658.0" @ ww1.s35518.0 #"GHC.Prim.void#"
              case ds13.s35766.0 of
                ("GHC.Prim.Unit#" ipv13.s35768.0) ->
                    let sat.s35769.0 = "GHC.Foreign.$wpeekCString.closure.19" @ ipv13.s35768.0
                    ["GHC.Prim.Unit#" sat.s35769.0]

"GHC.Foreign.$wpeekCString.closure.21" dt7.s35792.1 dt8.s35793.1 w3.s35801.0 void.X118.3 =
  letS ds14.s35803.0 = "readWideCharOffAddr#" @ dt7.s35792.1{- value -} 0
  case ds14.s35803.0{- value -} of
    ("GHC.Prim.Unit#" ipv13.s35805.0) ->
        letS s'.s35806.0 = "touch#" @ dt8.s35793.1
        case s'.s35806.0{- value -} of
          ("GHC.Prim.(##)") ->
              let sat.s35807.0 = ["GHC.Types.C#" ipv13.s35805.0{- value -}]
                  sat.s35808.0 = [GHC.Types.: sat.s35807.0 w3.s35801.0]
              ["GHC.Prim.Unit#" sat.s35808.0]

"GHC.Foreign.$wpeekCString.closure.22" "$wf.s35809.1" dt7.s35792.2 exit1.s35800.1 ww2.s35810.0 w3.s35811.0 void.X120.1 =
  letS ds14.s35813.0 = ww2.s35810.0{- value -}
  case ds14.s35813.0{- value -} of
    _ ->
        letS ds15.s35814.0 = "readWideCharOffAddr#" @ dt7.s35792.2{- value -} ds14.s35813.0{- value -}
        case ds15.s35814.0{- value -} of
          ("GHC.Prim.Unit#" ipv13.s35816.0) ->
              let sat.s35818.0 = ["GHC.Types.C#" ipv13.s35816.0{- value -}]
                  sat.s35819.0 = [GHC.Types.: sat.s35818.0 w3.s35811.0]
              letS sat.s35817.0 = "-#" @ ds14.s35813.0{- value -} 1
              "$wf.s35809.1" @ sat.s35817.0{- value -} sat.s35819.0 #"GHC.Prim.void#"
    0 ->
        exit1.s35800.1 @ w3.s35811.0 #"GHC.Prim.void#"

"GHC.Foreign.$wpeekCString.closure.23" decoder.s35475.1 ipv2.s35479.1 sc1.s35469.2 ww.s35466.3 x.s35481.0 =
  letS x1.s35482.0 = "*#" @ x.s35481.0{- value -} 4
       lwild.s35483.0 = "<#" @ x1.s35482.0{- value -} 0
  case lwild.s35483.0{- value -} of
    _ ->
        letS ds4.s35484.0 = "newMutVar#" @ GHC.ForeignPtr.NoFinalizers
        case ds4.s35484.0 of
          ("GHC.Prim.Unit#" ipv4.s35486.0) ->
              letS ds5.s35487.0 = "newPinnedByteArray#" @ x1.s35482.0{- value -}
              case ds5.s35487.0 of
                ("GHC.Prim.Unit#" ipv6.s35489.0) ->
                    letS ipv7.s35490.0 = "byteArrayContents#" @ ipv6.s35489.0
                    let ipv8.s35491.0 = [GHC.ForeignPtr.MallocPtr ipv6.s35489.0 ipv4.s35486.0]
                        ipv9.s35492.0 = [GHC.IO.Buffer.Buffer ipv7.s35490.0{- value -} ipv8.s35491.0 GHC.IO.Buffer.WriteBuffer x.s35481.0{- value -} 0 0]
                    letS wild1.s35493.0 = decoder.s35475.1
                    case wild1.s35493.0 of
                      (GHC.IO.Encoding.Types.BufferCodec ds6.s35494.0 ds7.s35495.0 ds8.s35496.0 ds9.s35497.0 ds10.s35498.0) ->
                          let sat.s35499.0 = [GHC.ForeignPtr.PlainForeignPtr ipv2.s35479.1]
                              sat.s35500.0 = [GHC.IO.Buffer.Buffer ww.s35466.3{- value -} sat.s35499.0 GHC.IO.Buffer.ReadBuffer sc1.s35469.2{- value -} 0 sc1.s35469.2{- value -}]
                          letS ds11.s35501.0 = ds6.s35494.0 @ sat.s35500.0 ipv9.s35492.0 #"GHC.Prim.void#"
                          case ds11.s35501.0 of
                            ("GHC.Prim.Unit#" ipv11.s35503.0) ->
                                letS wild2.s35504.0 = ipv11.s35503.0
                                case wild2.s35504.0 of
                                  ("GHC.Tuple.(,,)" why.s35505.0 from'.s35506.0 to'.s35507.0) ->
                                      letS wild3.s35508.0 = from'.s35506.0
                                      case wild3.s35508.0 of
                                        (GHC.IO.Buffer.Buffer dt.s35509.0 dt1.s35510.0 ds12.s35511.0 dt2.s35512.0 dt3.s35513.0 dt4.s35514.0) ->
                                            letS lwild1.s35515.0 = "==#" @ dt3.s35513.0{- value -} dt4.s35514.0{- value -}
                                            case lwild1.s35515.0{- value -} of
                                              _ ->
                                                  let "$w$j.s35516.0" = "GHC.Foreign.$wpeekCString.closure.20" @ ds6.s35494.0 ds7.s35495.0 ipv9.s35492.0
                                                  letS wild4.s35770.0 = why.s35505.0
                                                  case wild4.s35770.0 of
                                                    _ ->
                                                        letS ds13.s35771.0 = ds7.s35495.0 @ wild3.s35508.0 to'.s35507.0 #"GHC.Prim.void#"
                                                        case ds13.s35771.0 of
                                                          ("GHC.Prim.Unit#" ipv13.s35773.0) ->
                                                              letS ww1.s35774.0 = ipv13.s35773.0
                                                              case ww1.s35774.0 of
                                                                ("GHC.Tuple.(,)" ww2.s35775.0 ww3.s35776.0) ->
                                                                    letS ww4.s35777.0 = ww3.s35776.0
                                                                    case ww4.s35777.0 of
                                                                      (GHC.IO.Buffer.Buffer ww5.s35778.0 ww6.s35779.0 ww7.s35780.0 ww8.s35781.0 ww9.s35782.0 ww10.s35783.0) ->
                                                                          "$w$j.s35516.0" @ #"GHC.Prim.void#" ww2.s35775.0 ww5.s35778.0{- value -} ww6.s35779.0 ww9.s35782.0{- value -} ww10.s35783.0{- value -}
                                                    (GHC.IO.Encoding.Types.OutputUnderflow) ->
                                                        letS ww1.s35784.0 = to'.s35507.0
                                                        case ww1.s35784.0 of
                                                          (GHC.IO.Buffer.Buffer ww2.s35785.0 ww3.s35786.0 ww4.s35787.0 ww5.s35788.0 ww6.s35789.0 ww7.s35790.0) ->
                                                              "$w$j.s35516.0" @ #"GHC.Prim.void#" wild3.s35508.0 ww2.s35785.0{- value -} ww3.s35786.0 ww6.s35789.0{- value -} ww7.s35790.0{- value -}
                                              1 ->
                                                  letS wild4.s35791.0 = to'.s35507.0
                                                  case wild4.s35791.0 of
                                                    (GHC.IO.Buffer.Buffer dt7.s35792.0 dt8.s35793.0 ds13.s35794.0 dt9.s35795.0 dt10.s35796.0 dt11.s35797.0) ->
                                                        letS ww1.s35798.0 = "-#" @ dt11.s35797.0{- value -} dt10.s35796.0{- value -}
                                                             lwild2.s35799.0 = "<=#" @ ww1.s35798.0{- value -} 0
                                                        case lwild2.s35799.0{- value -} of
                                                          _ ->
                                                              letS sat.s35820.1 = "-#" @ ww1.s35798.0{- value -} 1
                                                              let exit1.s35800.0 = "GHC.Foreign.$wpeekCString.closure.21" @ dt7.s35792.0{- value -} dt8.s35793.0
                                                              letrec "$wf.s35809.0" = "GHC.Foreign.$wpeekCString.closure.22" @ "$wf.s35809.0" dt7.s35792.0{- value -} exit1.s35800.0
                                                              "$wf.s35809.0" @ sat.s35820.1{- value -} "GHC.Types.[]" #"GHC.Prim.void#"
                                                          1 ->
                                                              letS s'.s35821.0 = "touch#" @ dt8.s35793.0
                                                              case s'.s35821.0{- value -} of
                                                                ("GHC.Prim.(##)") ->
                                                                    ["GHC.Prim.Unit#" "GHC.Types.[]"]
    1 ->
        GHC.ForeignPtr.mallocForeignPtrBytes2

"GHC.Foreign.$wpeekCString.closure.24" sc1.s35469.1 ww.s35466.2 decoder.s35475.0 void.X70.2 =
  letS ds3.s35477.0 = "newMutVar#" @ GHC.ForeignPtr.NoFinalizers
  case ds3.s35477.0 of
    ("GHC.Prim.Unit#" ipv2.s35479.0) ->
        let "$j.s35480.0" = "GHC.Foreign.$wpeekCString.closure.23" @ decoder.s35475.0 ipv2.s35479.0 sc1.s35469.1{- value -} ww.s35466.2{- value -}
        letS lwild.s35823.0 = "<=#" @ sc1.s35469.1{- value -} 1
        case lwild.s35823.0{- value -} of
          _ ->
              "$j.s35480.0" @ sc1.s35469.1{- value -}
          1 ->
              "$j.s35480.0" @ 1

"GHC.Foreign.$wpeekCString.closure.25" w.s35465.1 ww.s35466.1 sc1.s35469.0 void.040.966 =
  letS wild.s35471.1 = w.s35465.1
  case wild.s35471.1 of
    (GHC.IO.Encoding.Types.TextEncoding ds.s35472.0 ds1.s35473.0 ds2.s35474.0) ->
        let sat.s35824.0 = "GHC.Foreign.$wpeekCString.closure.24" @ sc1.s35469.0{- value -} ww.s35466.1{- value -}
        GHC.IO.bracket1 @ ds1.s35473.0 GHC.IO.Encoding.Types.close sat.s35824.0 #"GHC.Prim.void#"

"GHC.Foreign.$wpeekCString.closure.26" "$sloop.s35825.1" exit.s35468.1 ww.s35466.4 void.040.967 sc1.s35827.0 =
  letS ds2.s35828.0 = "readInt8OffAddr#" @ ww.s35466.4{- value -} sc1.s35827.0{- value -}
  case ds2.s35828.0{- value -} of
    ("GHC.Prim.Unit#" ipv1.s35830.0) ->
        letS wild.s35831.0 = ipv1.s35830.0{- value -}
        case wild.s35831.0{- value -} of
          _ ->
              letS sat.s35832.0 = "+#" @ sc1.s35827.0{- value -} 1
              "$sloop.s35825.1" @ #"GHC.Prim.void#" sat.s35832.0{- value -}
          0 ->
              exit.s35468.1 @ sc1.s35827.0{- value -} #"GHC.Prim.void#"

"GHC.Foreign.$wpeekCString.closure.3" ipv17.s35586.1 =
  "GHC.Base.++" @ "GHC.Types.[]" ipv17.s35586.1

"GHC.Foreign.$wpeekCString.closure.4" "$wgo.s35532.2" void.X140.4 ww7.s35552.0 ww8.s35553.0 ww9.s35554.0 ww10.s35555.0 ww11.s35556.0 =
  letS ww12.s35557.0 = "-#" @ ww11.s35556.0{- value -} ww10.s35555.0{- value -}
       lwild4.s35558.0 = "<=#" @ ww12.s35557.0{- value -} 0
  case lwild4.s35558.0{- value -} of
    _ ->
        letS sat.s35582.0 = "-#" @ ww12.s35557.0{- value -} 1
        let exit2.s35559.0 = "GHC.Foreign.$wpeekCString.closure.1" @ "$wgo.s35532.2" ww7.s35552.0 ww8.s35553.0{- value -} ww9.s35554.0
        letrec "$wf.s35571.0" = "GHC.Foreign.$wpeekCString.closure.2" @ "$wf.s35571.0" exit2.s35559.0 ww8.s35553.0{- value -}
        "$wf.s35571.0" @ sat.s35582.0{- value -} "GHC.Types.[]" #"GHC.Prim.void#"
    1 ->
        letS s'1.s35583.0 = "touch#" @ ww9.s35554.0
        case s'1.s35583.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS ds16.s35584.0 = "$wgo.s35532.2" @ ww7.s35552.0 #"GHC.Prim.void#"
              case ds16.s35584.0 of
                ("GHC.Prim.Unit#" ipv17.s35586.0) ->
                    let sat.s35587.0 = "GHC.Foreign.$wpeekCString.closure.3" @ ipv17.s35586.0
                    ["GHC.Prim.Unit#" sat.s35587.0]

"GHC.Foreign.$wpeekCString.closure.5" dt12.s35610.1 dt13.s35611.1 w8.s35619.0 void.X151.3 =
  letS ds17.s35621.0 = "readWideCharOffAddr#" @ dt12.s35610.1{- value -} 0
  case ds17.s35621.0{- value -} of
    ("GHC.Prim.Unit#" ipv17.s35623.0) ->
        letS s'1.s35624.0 = "touch#" @ dt13.s35611.1
        case s'1.s35624.0{- value -} of
          ("GHC.Prim.(##)") ->
              let sat.s35625.0 = ["GHC.Types.C#" ipv17.s35623.0{- value -}]
                  sat.s35626.0 = [GHC.Types.: sat.s35625.0 w8.s35619.0]
              ["GHC.Prim.Unit#" sat.s35626.0]

"GHC.Foreign.$wpeekCString.closure.6" "$wf.s35627.1" dt12.s35610.2 exit2.s35618.1 ww8.s35628.0 w8.s35629.0 void.X153.2 =
  letS ds17.s35631.0 = ww8.s35628.0{- value -}
  case ds17.s35631.0{- value -} of
    _ ->
        letS ds18.s35632.0 = "readWideCharOffAddr#" @ dt12.s35610.2{- value -} ds17.s35631.0{- value -}
        case ds18.s35632.0{- value -} of
          ("GHC.Prim.Unit#" ipv17.s35634.0) ->
              let sat.s35636.0 = ["GHC.Types.C#" ipv17.s35634.0{- value -}]
                  sat.s35637.0 = [GHC.Types.: sat.s35636.0 w8.s35629.0]
              letS sat.s35635.0 = "-#" @ ds17.s35631.0{- value -} 1
              "$wf.s35627.1" @ sat.s35635.0{- value -} sat.s35637.0 #"GHC.Prim.void#"
    0 ->
        exit2.s35618.1 @ w8.s35629.0 #"GHC.Prim.void#"

"GHC.Foreign.$wpeekCString.closure.7" "$wgo.s35532.1" ds6.s35494.3 ds7.s35495.3 ipv9.s35492.3 w6.s35533.0 void.X124.1 =
  letS ds14.s35535.0 = ds6.s35494.3 @ w6.s35533.0 ipv9.s35492.3 #"GHC.Prim.void#"
  case ds14.s35535.0 of
    ("GHC.Prim.Unit#" ipv15.s35537.0) ->
        letS wild4.s35538.0 = ipv15.s35537.0
        case wild4.s35538.0 of
          ("GHC.Tuple.(,,)" why1.s35539.0 from'1.s35540.0 to'1.s35541.0) ->
              letS wild5.s35542.0 = from'1.s35540.0
              case wild5.s35542.0 of
                (GHC.IO.Buffer.Buffer dt7.s35543.0 dt8.s35544.0 ds15.s35545.0 dt9.s35546.0 dt10.s35547.0 dt11.s35548.0) ->
                    letS lwild3.s35549.0 = "==#" @ dt10.s35547.0{- value -} dt11.s35548.0{- value -}
                    case lwild3.s35549.0{- value -} of
                      _ ->
                          let "$w$j1.s35550.0" = "GHC.Foreign.$wpeekCString.closure.4" @ "$wgo.s35532.1"
                          letS wild6.s35588.0 = why1.s35539.0
                          case wild6.s35588.0 of
                            _ ->
                                letS ds16.s35589.0 = ds7.s35495.3 @ wild5.s35542.0 to'1.s35541.0 #"GHC.Prim.void#"
                                case ds16.s35589.0 of
                                  ("GHC.Prim.Unit#" ipv17.s35591.0) ->
                                      letS ww7.s35592.0 = ipv17.s35591.0
                                      case ww7.s35592.0 of
                                        ("GHC.Tuple.(,)" ww8.s35593.0 ww9.s35594.0) ->
                                            letS ww10.s35595.0 = ww9.s35594.0
                                            case ww10.s35595.0 of
                                              (GHC.IO.Buffer.Buffer ww11.s35596.0 ww12.s35597.0 ww13.s35598.0 ww14.s35599.0 ww15.s35600.0 ww16.s35601.0) ->
                                                  "$w$j1.s35550.0" @ #"GHC.Prim.void#" ww8.s35593.0 ww11.s35596.0{- value -} ww12.s35597.0 ww15.s35600.0{- value -} ww16.s35601.0{- value -}
                            (GHC.IO.Encoding.Types.OutputUnderflow) ->
                                letS ww7.s35602.0 = to'1.s35541.0
                                case ww7.s35602.0 of
                                  (GHC.IO.Buffer.Buffer ww8.s35603.0 ww9.s35604.0 ww10.s35605.0 ww11.s35606.0 ww12.s35607.0 ww13.s35608.0) ->
                                      "$w$j1.s35550.0" @ #"GHC.Prim.void#" wild5.s35542.0 ww8.s35603.0{- value -} ww9.s35604.0 ww12.s35607.0{- value -} ww13.s35608.0{- value -}
                      1 ->
                          letS wild6.s35609.0 = to'1.s35541.0
                          case wild6.s35609.0 of
                            (GHC.IO.Buffer.Buffer dt12.s35610.0 dt13.s35611.0 ds16.s35612.0 dt14.s35613.0 dt15.s35614.0 dt16.s35615.0) ->
                                letS ww7.s35616.0 = "-#" @ dt16.s35615.0{- value -} dt15.s35614.0{- value -}
                                     lwild4.s35617.0 = "<=#" @ ww7.s35616.0{- value -} 0
                                case lwild4.s35617.0{- value -} of
                                  _ ->
                                      letS sat.s35638.0 = "-#" @ ww7.s35616.0{- value -} 1
                                      let exit2.s35618.0 = "GHC.Foreign.$wpeekCString.closure.5" @ dt12.s35610.0{- value -} dt13.s35611.0
                                      letrec "$wf.s35627.0" = "GHC.Foreign.$wpeekCString.closure.6" @ "$wf.s35627.0" dt12.s35610.0{- value -} exit2.s35618.0
                                      "$wf.s35627.0" @ sat.s35638.0{- value -} "GHC.Types.[]" #"GHC.Prim.void#"
                                  1 ->
                                      letS s'1.s35639.0 = "touch#" @ dt13.s35611.0
                                      case s'1.s35639.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Types.[]"]

"GHC.Foreign.$wpeekCString.closure.8" ipv13.s35530.1 ipv15.s35642.1 w3.s35526.1 =
  let sat.s35643.0 = ["GHC.Types.C#" ipv13.s35530.1{- value -}]
  "GHC.Base.++_$s++" @ ipv15.s35642.1 sat.s35643.0 w3.s35526.1

"GHC.Foreign.$wpeekCString.closure.9" ds6.s35494.2 ds7.s35495.2 ipv9.s35492.2 ww1.s35518.1 ww2.s35519.1 ww3.s35520.1 w3.s35526.0 void.X118.1 =
  letS ds13.s35528.0 = "readWideCharOffAddr#" @ ww2.s35519.1{- value -} 0
  case ds13.s35528.0{- value -} of
    ("GHC.Prim.Unit#" ipv13.s35530.0) ->
        letS s'.s35531.0 = "touch#" @ ww3.s35520.1
        case s'.s35531.0{- value -} of
          ("GHC.Prim.(##)") ->
              letrec "$wgo.s35532.0" = "GHC.Foreign.$wpeekCString.closure.7" @ "$wgo.s35532.0" ds6.s35494.2 ds7.s35495.2 ipv9.s35492.2
              letS ds14.s35640.0 = "$wgo.s35532.0" @ ww1.s35518.1 #"GHC.Prim.void#"
              case ds14.s35640.0 of
                ("GHC.Prim.Unit#" ipv15.s35642.0) ->
                    let sat.s35644.0 = "GHC.Foreign.$wpeekCString.closure.8" @ ipv13.s35530.0{- value -} ipv15.s35642.0 w3.s35526.0
                    ["GHC.Prim.Unit#" sat.s35644.0]

GHC.Foreign.charIsRepresentable1 enc.s35845.0 c.s35846.0 void.040.971 =
  letS enc1.s35848.0 = enc.s35845.0
  case enc1.s35848.0 of
    (GHC.IO.Encoding.Types.TextEncoding ipv2.s35849.0 ipv3.s35850.0 ipv4.s35851.0) ->
        let sat.s35871.0 = GHC.Foreign.charIsRepresentable1.closure.0 @ c.s35846.0 enc1.s35848.0
            sat.s35852.0 = [GHC.Types.: c.s35846.0 "GHC.Types.[]"]
            sat.s35872.0 = GHC.Foreign.charIsRepresentable1.closure.1 @ enc1.s35848.0 sat.s35852.0 sat.s35871.0
        sat.s35872.0 @ #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable1.closure.0 c.s35846.1 enc1.s35848.1 cstr.s35853.0 void.040.972 =
  letS ww.s35855.0 = cstr.s35853.0
  case ww.s35855.0 of
    (GHC.Ptr.Ptr ww1.s35856.0) ->
        letS ds1.s35857.0 = "GHC.Foreign.$wpeekCString" @ enc1.s35848.1 ww1.s35856.0{- value -} #"GHC.Prim.void#"
        case ds1.s35857.0 of
          ("GHC.Prim.Unit#" ipv6.s35859.0) ->
              letS wild.s35860.0 = ipv6.s35859.0
              case wild.s35860.0 of
                ("GHC.Types.[]") ->
                    ["GHC.Prim.Unit#" GHC.Types.False]
                (GHC.Types.: ch.s35861.0 ds.s35862.0) ->
                    letS wild1.s35863.1 = ds.s35862.0
                    case wild1.s35863.1 of
                      ("GHC.Types.[]") ->
                          letS wild2.s35864.0 = ch.s35861.0
                          case wild2.s35864.0 of
                            ("GHC.Types.C#" x.s35865.0) ->
                                letS wild3.s35866.0 = c.s35846.1
                                case wild3.s35866.0 of
                                  ("GHC.Types.C#" y.s35867.0) ->
                                      letS lwild.s35868.0 = "eqChar#" @ x.s35865.0{- value -} y.s35867.0{- value -}
                                      case lwild.s35868.0{- value -} of
                                        _ ->
                                            ["GHC.Prim.Unit#" GHC.Types.False]
                                        1 ->
                                            ["GHC.Prim.Unit#" GHC.Types.True]
                      (GHC.Types.: ipv7.s35869.0 ipv8.s35870.0) ->
                          ["GHC.Prim.Unit#" GHC.Types.False]

GHC.Foreign.charIsRepresentable1.closure.1 enc1.s35848.2 sat.s35852.1 sat.s35871.1 void.040.973 =
  GHC.Foreign.charIsRepresentable3 @ enc1.s35848.2 sat.s35852.1 sat.s35871.1 #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3 enc.s34820.0 s.s34821.0 act.s34822.0 void.040.951 =
  letS wild.s34824.0 = enc.s34820.0
  case wild.s34824.0 of
    (GHC.IO.Encoding.Types.TextEncoding ds.s34825.0 ds1.s34826.0 ds2.s34827.0) ->
        let sat.s35051.0 = GHC.Foreign.charIsRepresentable3.closure.17 @ act.s34822.0 s.s34821.0
        GHC.IO.bracket1 @ ds2.s34827.0 GHC.IO.Encoding.Types.close sat.s35051.0 #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.0 "$wgo.s34861.3" ww10.s34862.2 void.X101.0 =
  letS sat.s34874.0 = "*#" @ ww10.s34862.2{- value -} 2
  "$wgo.s34861.3" @ sat.s34874.0{- value -} #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.1 "$wgo.s34861.4" act.s34822.8 ww10.s34862.3 void.X102.5 to'.s34877.0 =
  letS wild2.s34878.0 = to'.s34877.0
  case wild2.s34878.0 of
    (GHC.IO.Buffer.Buffer dt.s34879.0 dt1.s34880.0 ds6.s34881.0 dt2.s34882.0 dt3.s34883.0 dt4.s34884.0) ->
        letS wild3.s34885.0 = "-#" @ dt2.s34882.0{- value -} dt4.s34884.0{- value -}
        case wild3.s34885.0{- value -} of
          _ ->
              letS s4.s34886.0 = "writeWord8OffAddr#" @ dt.s34879.0{- value -} dt4.s34884.0{- value -} 0u
              case s4.s34886.0{- value -} of
                ("GHC.Prim.(##)") ->
                    let sat.s34887.0 = [GHC.Ptr.Ptr dt.s34879.0{- value -}]
                    letS ds7.s34888.0 = act.s34822.8 @ sat.s34887.0 #"GHC.Prim.void#"
                    case ds7.s34888.0 of
                      ("GHC.Prim.Unit#" ipv11.s34890.0) ->
                          letS s'.s34891.0 = "touch#" @ dt1.s34880.0
                          case s'.s34891.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                ["GHC.Prim.Unit#" ipv11.s34890.0]
          0 ->
              letS sat.s34892.0 = "*#" @ ww10.s34862.3{- value -} 2
              "$wgo.s34861.4" @ sat.s34892.0{- value -} #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.10 "$wgo.s34940.1" act.s34822.10 ipv3.s34843.6 ww3.s34849.6 ww4.s34850.6 ww10.s34941.0 void.X100.2 =
  let sat.s35000.0 = GHC.Foreign.charIsRepresentable3.closure.9 @ "$wgo.s34940.1" act.s34822.10 ipv3.s34843.6 ww10.s34941.0{- value -} ww3.s34849.6 ww4.s34850.6
      sat.s34943.0 = ["GHC.Types.I#" ww10.s34941.0{- value -}]
  Foreign.Marshal.Alloc.allocaBytes @ sat.s34943.0 sat.s35000.0 #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.11 act.s34822.9 ipv3.s34843.5 ww.s34844.3 ww3.s34849.5 ww4.s34850.5 void.X88.1 to'.s34925.0 =
  letS wild2.s34926.0 = to'.s34925.0
  case wild2.s34926.0 of
    (GHC.IO.Buffer.Buffer dt.s34927.0 dt1.s34928.0 ds5.s34929.0 dt2.s34930.0 dt3.s34931.0 dt4.s34932.0) ->
        letS wild3.s34933.0 = "-#" @ dt2.s34930.0{- value -} dt4.s34932.0{- value -}
        case wild3.s34933.0{- value -} of
          _ ->
              letS s3.s34934.0 = "writeWord8OffAddr#" @ dt.s34927.0{- value -} dt4.s34932.0{- value -} 0u
              case s3.s34934.0{- value -} of
                ("GHC.Prim.(##)") ->
                    let sat.s34935.0 = [GHC.Ptr.Ptr dt.s34927.0{- value -}]
                    letS ds6.s34936.0 = act.s34822.9 @ sat.s34935.0 #"GHC.Prim.void#"
                    case ds6.s34936.0 of
                      ("GHC.Prim.Unit#" ipv8.s34938.0) ->
                          letS s'.s34939.0 = "touch#" @ dt1.s34928.0
                          case s'.s34939.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                ["GHC.Prim.Unit#" ipv8.s34938.0]
          0 ->
              letrec "$wgo.s34940.0" = GHC.Foreign.charIsRepresentable3.closure.10 @ "$wgo.s34940.0" act.s34822.9 ipv3.s34843.5 ww3.s34849.5 ww4.s34850.5
              letS sat.s35001.0 = "*#" @ ww.s34844.3{- value -} 2
              "$wgo.s34940.0" @ sat.s35001.0{- value -} #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.12 "$wgo.s35002.1" exit.s34859.1 exit1.s34923.1 ww3.s34849.9 ww4.s34850.9 ww10.s35003.0 ww11.s35004.0 void.X91.3 =
  letS ds5.s35006.0 = ww3.s34849.9 @ ww10.s35003.0 ww11.s35004.0 #"GHC.Prim.void#"
  case ds5.s35006.0 of
    ("GHC.Prim.Unit#" ipv7.s35008.0) ->
        letS wild2.s35009.0 = ipv7.s35008.0
        case wild2.s35009.0 of
          ("GHC.Tuple.(,,)" why.s35010.0 from'.s35011.0 to'.s35012.0) ->
              letS wild3.s35013.0 = from'.s35011.0
              case wild3.s35013.0 of
                (GHC.IO.Buffer.Buffer dt.s35014.0 dt1.s35015.0 ds6.s35016.0 dt2.s35017.0 dt3.s35018.0 dt4.s35019.0) ->
                    letS lwild.s35020.0 = "==#" @ dt3.s35018.0{- value -} dt4.s35019.0{- value -}
                    case lwild.s35020.0{- value -} of
                      _ ->
                          letS wild4.s35021.0 = why.s35010.0
                          case wild4.s35021.0 of
                            _ ->
                                letS ds7.s35022.0 = ww4.s34850.9 @ wild3.s35013.0 to'.s35012.0 #"GHC.Prim.void#"
                                case ds7.s35022.0 of
                                  ("GHC.Prim.Unit#" ipv9.s35024.0) ->
                                      letS ww12.s35025.0 = ipv9.s35024.0
                                      case ww12.s35025.0 of
                                        ("GHC.Tuple.(,)" ww13.s35026.0 ww14.s35027.0) ->
                                            "$wgo.s35002.1" @ ww13.s35026.0 ww14.s35027.0 #"GHC.Prim.void#"
                            (GHC.IO.Encoding.Types.OutputUnderflow) ->
                                exit.s34859.1 @ #"GHC.Prim.void#"
                      1 ->
                          exit1.s34923.1 @ #"GHC.Prim.void#" to'.s35012.0

GHC.Foreign.charIsRepresentable3.closure.13 act.s34822.4 encoder.s34828.3 ipv3.s34843.1 ww.s34844.1 to_p.s34846.0 void.X73.1 =
  letS ww1.s34848.0 = encoder.s34828.3
  case ww1.s34848.0 of
    (GHC.IO.Encoding.Types.BufferCodec ww3.s34849.0 ww4.s34850.0 ww5.s34851.0 ww6.s34852.0 ww7.s34853.0) ->
        letS ww8.s34854.0 = to_p.s34846.0
        case ww8.s34854.0 of
          (GHC.Ptr.Ptr ww9.s34855.0) ->
              letS ds4.s34856.0 = "newMutVar#" @ GHC.ForeignPtr.NoFinalizers
              case ds4.s34856.0 of
                ("GHC.Prim.Unit#" ipv5.s34858.0) ->
                    let sat.s35028.0 = [GHC.ForeignPtr.PlainForeignPtr ipv5.s34858.0]
                        sat.s35029.0 = [GHC.IO.Buffer.Buffer ww9.s34855.0{- value -} sat.s35028.0 GHC.IO.Buffer.WriteBuffer ww.s34844.1{- value -} 0 0]
                        exit.s34859.0 = GHC.Foreign.charIsRepresentable3.closure.5 @ act.s34822.4 ipv3.s34843.1 ww.s34844.1{- value -} ww3.s34849.0 ww4.s34850.0
                        exit1.s34923.0 = GHC.Foreign.charIsRepresentable3.closure.11 @ act.s34822.4 ipv3.s34843.1 ww.s34844.1{- value -} ww3.s34849.0 ww4.s34850.0
                    letrec "$wgo.s35002.0" = GHC.Foreign.charIsRepresentable3.closure.12 @ "$wgo.s35002.0" exit.s34859.0 exit1.s34923.0 ww3.s34849.0 ww4.s34850.0
                    "$wgo.s35002.0" @ ipv3.s34843.1 sat.s35029.0 #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.14 act.s34822.3 encoder.s34828.2 ptr.s34833.1 ww2.s34830.2 void.X63.1 =
  letS wild1.s34837.0 = ptr.s34833.1
  case wild1.s34837.0 of
    (GHC.Ptr.Ptr obj.s34838.0) ->
        letS ds3.s34839.0 = "newMutVar#" @ GHC.ForeignPtr.NoFinalizers
        case ds3.s34839.0 of
          ("GHC.Prim.Unit#" ipv1.s34841.0) ->
              let ipv2.s34842.0 = [GHC.ForeignPtr.PlainForeignPtr ipv1.s34841.0]
                  ipv3.s34843.0 = [GHC.IO.Buffer.Buffer obj.s34838.0{- value -} ipv2.s34842.0 GHC.IO.Buffer.ReadBuffer ww2.s34830.2{- value -} 0 ww2.s34830.2{- value -}]
              letS ww.s34844.0 = "+#" @ ww2.s34830.2{- value -} 1
              let sat.s35030.0 = GHC.Foreign.charIsRepresentable3.closure.13 @ act.s34822.3 encoder.s34828.2 ipv3.s34843.0 ww.s34844.0{- value -}
                  sat.s34845.0 = ["GHC.Types.I#" ww.s34844.0{- value -}]
              Foreign.Marshal.Alloc.allocaBytes @ sat.s34845.0 sat.s35030.0 #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.15 "$w$j.s34835.1" a1.s35035.1 go.s35039.1 ds3.s35040.0 ds4.s35041.0 void.X74.1 =
  letS wild4.s35043.0 = ds3.s35040.0
  case wild4.s35043.0 of
    ("GHC.Types.[]") ->
        "$w$j.s34835.1" @ #"GHC.Prim.void#"
    (GHC.Types.: val1.s35044.0 vals1.s35045.0) ->
        letS wild5.s35046.0 = val1.s35044.0
        case wild5.s35046.0 of
          ("GHC.Types.C#" x1.s35047.0) ->
              letS s3.s35048.0 = "writeWideCharOffAddr#" @ a1.s35035.1{- value -} ds4.s35041.0{- value -} x1.s35047.0{- value -}
              case s3.s35048.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS sat.s35049.0 = "+#" @ ds4.s35041.0{- value -} 1
                    go.s35039.1 @ vals1.s35045.0 sat.s35049.0{- value -} #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.16 act.s34822.2 encoder.s34828.1 s.s34821.2 ww2.s34830.1 ptr.s34833.0 void.X61.3 =
  let "$w$j.s34835.0" = GHC.Foreign.charIsRepresentable3.closure.14 @ act.s34822.2 encoder.s34828.1 ptr.s34833.0 ww2.s34830.1{- value -}
  letS wild1.s35031.0 = s.s34821.2
  case wild1.s35031.0 of
    ("GHC.Types.[]") ->
        "$w$j.s34835.0" @ #"GHC.Prim.void#"
    (GHC.Types.: val.s35032.0 vals.s35033.0) ->
        letS wild2.s35034.0 = ptr.s34833.0
        case wild2.s35034.0 of
          (GHC.Ptr.Ptr a1.s35035.0) ->
              letS wild3.s35036.0 = val.s35032.0
              case wild3.s35036.0 of
                ("GHC.Types.C#" x.s35037.0) ->
                    letS s2.s35038.0 = "writeWideCharOffAddr#" @ a1.s35035.0{- value -} 0 x.s35037.0{- value -}
                    case s2.s35038.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letrec go.s35039.0 = GHC.Foreign.charIsRepresentable3.closure.15 @ "$w$j.s34835.0" a1.s35035.0{- value -} go.s35039.0
                          go.s35039.0 @ vals.s35033.0 1 #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.17 act.s34822.1 s.s34821.1 encoder.s34828.0 void.040.952 =
  letS ww2.s34830.0 = "GHC.List.$wlenAcc" @ s.s34821.1 0
  let sat.s35050.0 = GHC.Foreign.charIsRepresentable3.closure.16 @ act.s34822.1 encoder.s34828.0 s.s34821.1 ww2.s34830.0{- value -}
  letS sat.s34831.0 = "*#" @ ww2.s34830.0{- value -} 4
  let sat.s34832.0 = ["GHC.Types.I#" sat.s34831.0{- value -}]
  Foreign.Marshal.Alloc.allocaBytesAligned @ sat.s34832.0 "Foreign.Storable.$fStorableBool7" sat.s35050.0 #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.2 "$wgo1.s34893.1" exit1.s34872.1 exit2.s34875.1 ww3.s34849.4 ww4.s34850.4 ww13.s34894.0 ww14.s34895.0 void.X105.0 =
  letS ds6.s34897.0 = ww3.s34849.4 @ ww13.s34894.0 ww14.s34895.0 #"GHC.Prim.void#"
  case ds6.s34897.0 of
    ("GHC.Prim.Unit#" ipv10.s34899.0) ->
        letS wild2.s34900.0 = ipv10.s34899.0
        case wild2.s34900.0 of
          ("GHC.Tuple.(,,)" why.s34901.0 from'.s34902.0 to'.s34903.0) ->
              letS wild3.s34904.0 = from'.s34902.0
              case wild3.s34904.0 of
                (GHC.IO.Buffer.Buffer dt.s34905.0 dt1.s34906.0 ds7.s34907.0 dt2.s34908.0 dt3.s34909.0 dt4.s34910.0) ->
                    letS lwild.s34911.0 = "==#" @ dt3.s34909.0{- value -} dt4.s34910.0{- value -}
                    case lwild.s34911.0{- value -} of
                      _ ->
                          letS wild4.s34912.0 = why.s34901.0
                          case wild4.s34912.0 of
                            _ ->
                                letS ds8.s34913.0 = ww4.s34850.4 @ wild3.s34904.0 to'.s34903.0 #"GHC.Prim.void#"
                                case ds8.s34913.0 of
                                  ("GHC.Prim.Unit#" ipv12.s34915.0) ->
                                      letS ww15.s34916.0 = ipv12.s34915.0
                                      case ww15.s34916.0 of
                                        ("GHC.Tuple.(,)" ww16.s34917.0 ww17.s34918.0) ->
                                            "$wgo1.s34893.1" @ ww16.s34917.0 ww17.s34918.0 #"GHC.Prim.void#"
                            (GHC.IO.Encoding.Types.OutputUnderflow) ->
                                exit1.s34872.1 @ #"GHC.Prim.void#"
                      1 ->
                          exit2.s34875.1 @ #"GHC.Prim.void#" to'.s34903.0

GHC.Foreign.charIsRepresentable3.closure.3 "$wgo.s34861.2" act.s34822.7 ipv3.s34843.4 ww10.s34862.1 ww3.s34849.3 ww4.s34850.3 to_p1.s34865.0 void.X93.0 =
  letS ww11.s34867.0 = to_p1.s34865.0
  case ww11.s34867.0 of
    (GHC.Ptr.Ptr ww12.s34868.0) ->
        letS ds5.s34869.0 = "newMutVar#" @ GHC.ForeignPtr.NoFinalizers
        case ds5.s34869.0 of
          ("GHC.Prim.Unit#" ipv8.s34871.0) ->
              let sat.s34919.0 = [GHC.ForeignPtr.PlainForeignPtr ipv8.s34871.0]
                  sat.s34920.0 = [GHC.IO.Buffer.Buffer ww12.s34868.0{- value -} sat.s34919.0 GHC.IO.Buffer.WriteBuffer ww10.s34862.1{- value -} 0 0]
                  exit1.s34872.0 = GHC.Foreign.charIsRepresentable3.closure.0 @ "$wgo.s34861.2" ww10.s34862.1{- value -}
                  exit2.s34875.0 = GHC.Foreign.charIsRepresentable3.closure.1 @ "$wgo.s34861.2" act.s34822.7 ww10.s34862.1{- value -}
              letrec "$wgo1.s34893.0" = GHC.Foreign.charIsRepresentable3.closure.2 @ "$wgo1.s34893.0" exit1.s34872.0 exit2.s34875.0 ww3.s34849.3 ww4.s34850.3
              "$wgo1.s34893.0" @ ipv3.s34843.4 sat.s34920.0 #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.4 "$wgo.s34861.1" act.s34822.6 ipv3.s34843.3 ww3.s34849.2 ww4.s34850.2 ww10.s34862.0 void.X90.1 =
  let sat.s34921.0 = GHC.Foreign.charIsRepresentable3.closure.3 @ "$wgo.s34861.1" act.s34822.6 ipv3.s34843.3 ww10.s34862.0{- value -} ww3.s34849.2 ww4.s34850.2
      sat.s34864.0 = ["GHC.Types.I#" ww10.s34862.0{- value -}]
  Foreign.Marshal.Alloc.allocaBytes @ sat.s34864.0 sat.s34921.0 #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.5 act.s34822.5 ipv3.s34843.2 ww.s34844.2 ww3.s34849.1 ww4.s34850.1 void.X87.3 =
  letrec "$wgo.s34861.0" = GHC.Foreign.charIsRepresentable3.closure.4 @ "$wgo.s34861.0" act.s34822.5 ipv3.s34843.2 ww3.s34849.1 ww4.s34850.1
  letS sat.s34922.0 = "*#" @ ww.s34844.2{- value -} 2
  "$wgo.s34861.0" @ sat.s34922.0{- value -} #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.6 "$wgo.s34940.3" ww10.s34941.2 void.X111.2 =
  letS sat.s34953.0 = "*#" @ ww10.s34941.2{- value -} 2
  "$wgo.s34940.3" @ sat.s34953.0{- value -} #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.7 "$wgo.s34940.4" act.s34822.12 ww10.s34941.3 void.X112.0 to'1.s34956.0 =
  letS wild4.s34957.0 = to'1.s34956.0
  case wild4.s34957.0 of
    (GHC.IO.Buffer.Buffer dt7.s34958.0 dt8.s34959.0 ds7.s34960.0 dt9.s34961.0 dt10.s34962.0 dt11.s34963.0) ->
        letS wild5.s34964.0 = "-#" @ dt9.s34961.0{- value -} dt11.s34963.0{- value -}
        case wild5.s34964.0{- value -} of
          _ ->
              letS s4.s34965.0 = "writeWord8OffAddr#" @ dt7.s34958.0{- value -} dt11.s34963.0{- value -} 0u
              case s4.s34965.0{- value -} of
                ("GHC.Prim.(##)") ->
                    let sat.s34966.0 = [GHC.Ptr.Ptr dt7.s34958.0{- value -}]
                    letS ds8.s34967.0 = act.s34822.12 @ sat.s34966.0 #"GHC.Prim.void#"
                    case ds8.s34967.0 of
                      ("GHC.Prim.Unit#" ipv11.s34969.0) ->
                          letS s'.s34970.0 = "touch#" @ dt8.s34959.0
                          case s'.s34970.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                ["GHC.Prim.Unit#" ipv11.s34969.0]
          0 ->
              letS sat.s34971.0 = "*#" @ ww10.s34941.3{- value -} 2
              "$wgo.s34940.4" @ sat.s34971.0{- value -} #"GHC.Prim.void#"

GHC.Foreign.charIsRepresentable3.closure.8 "$wgo1.s34972.1" exit2.s34951.1 exit3.s34954.1 ww3.s34849.8 ww4.s34850.8 ww13.s34973.0 ww14.s34974.0 void.X115.0 =
  letS ds7.s34976.0 = ww3.s34849.8 @ ww13.s34973.0 ww14.s34974.0 #"GHC.Prim.void#"
  case ds7.s34976.0 of
    ("GHC.Prim.Unit#" ipv10.s34978.0) ->
        letS wild4.s34979.0 = ipv10.s34978.0
        case wild4.s34979.0 of
          ("GHC.Tuple.(,,)" why.s34980.0 from'.s34981.0 to'1.s34982.0) ->
              letS wild5.s34983.0 = from'.s34981.0
              case wild5.s34983.0 of
                (GHC.IO.Buffer.Buffer dt7.s34984.0 dt8.s34985.0 ds8.s34986.0 dt9.s34987.0 dt10.s34988.0 dt11.s34989.0) ->
                    letS lwild.s34990.0 = "==#" @ dt10.s34988.0{- value -} dt11.s34989.0{- value -}
                    case lwild.s34990.0{- value -} of
                      _ ->
                          letS wild6.s34991.0 = why.s34980.0
                          case wild6.s34991.0 of
                            _ ->
                                letS ds9.s34992.0 = ww4.s34850.8 @ wild5.s34983.0 to'1.s34982.0 #"GHC.Prim.void#"
                                case ds9.s34992.0 of
                                  ("GHC.Prim.Unit#" ipv12.s34994.0) ->
                                      letS ww15.s34995.0 = ipv12.s34994.0
                                      case ww15.s34995.0 of
                                        ("GHC.Tuple.(,)" ww16.s34996.0 ww17.s34997.0) ->
                                            "$wgo1.s34972.1" @ ww16.s34996.0 ww17.s34997.0 #"GHC.Prim.void#"
                            (GHC.IO.Encoding.Types.OutputUnderflow) ->
                                exit2.s34951.1 @ #"GHC.Prim.void#"
                      1 ->
                          exit3.s34954.1 @ #"GHC.Prim.void#" to'1.s34982.0

GHC.Foreign.charIsRepresentable3.closure.9 "$wgo.s34940.2" act.s34822.11 ipv3.s34843.7 ww10.s34941.1 ww3.s34849.7 ww4.s34850.7 to_p1.s34944.0 void.X103.3 =
  letS ww11.s34946.0 = to_p1.s34944.0
  case ww11.s34946.0 of
    (GHC.Ptr.Ptr ww12.s34947.0) ->
        letS ds6.s34948.0 = "newMutVar#" @ GHC.ForeignPtr.NoFinalizers
        case ds6.s34948.0 of
          ("GHC.Prim.Unit#" ipv8.s34950.0) ->
              let sat.s34998.0 = [GHC.ForeignPtr.PlainForeignPtr ipv8.s34950.0]
                  sat.s34999.0 = [GHC.IO.Buffer.Buffer ww12.s34947.0{- value -} sat.s34998.0 GHC.IO.Buffer.WriteBuffer ww10.s34941.1{- value -} 0 0]
                  exit2.s34951.0 = GHC.Foreign.charIsRepresentable3.closure.6 @ "$wgo.s34940.2" ww10.s34941.1{- value -}
                  exit3.s34954.0 = GHC.Foreign.charIsRepresentable3.closure.7 @ "$wgo.s34940.2" act.s34822.11 ww10.s34941.1{- value -}
              letrec "$wgo1.s34972.0" = GHC.Foreign.charIsRepresentable3.closure.8 @ "$wgo1.s34972.0" exit2.s34951.0 exit3.s34954.0 ww3.s34849.7 ww4.s34850.7
              "$wgo1.s34972.0" @ ipv3.s34843.7 sat.s34999.0 #"GHC.Prim.void#"

GHC.ForeignPtr.NoFinalizers =
  [GHC.ForeignPtr.NoFinalizers]

GHC.ForeignPtr.lvl17 =
  #"mallocForeignPtrBytes: size must be >= 0"

GHC.ForeignPtr.mallocForeignPtrBytes2 =
  letS sat.s24791.0 = "GHC.CString.unpackCString#" @ GHC.ForeignPtr.lvl17{- value -}
  GHC.Err.errorWithoutStackTrace @ sat.s24791.0

GHC.IO.Buffer.ReadBuffer =
  [GHC.IO.Buffer.ReadBuffer]

GHC.IO.Buffer.WriteBuffer =
  [GHC.IO.Buffer.WriteBuffer]

GHC.IO.BufferedIO.emptyWriteBuffer v.s9506.0 =
  letS v.s9507.0 = v.s9506.0
  case v.s9507.0 of
    (GHC.IO.BufferedIO.C:BufferedIO v.s9508.0 v.s9509.0 v.s9510.0 v.s9511.0 v.s9512.0 v.s9513.0) ->
        v.s9511.0

GHC.IO.BufferedIO.flushWriteBuffer v.s9514.0 =
  letS v.s9515.0 = v.s9514.0
  case v.s9515.0 of
    (GHC.IO.BufferedIO.C:BufferedIO v.s9516.0 v.s9517.0 v.s9518.0 v.s9519.0 v.s9520.0 v.s9521.0) ->
        v.s9520.0

GHC.IO.BufferedIO.newBuffer v.s9482.0 =
  letS v.s9483.0 = v.s9482.0
  case v.s9483.0 of
    (GHC.IO.BufferedIO.C:BufferedIO v.s9484.0 v.s9485.0 v.s9486.0 v.s9487.0 v.s9488.0 v.s9489.0) ->
        v.s9484.0

GHC.IO.Device.Directory =
  [GHC.IO.Device.Directory]

GHC.IO.Device.RawDevice =
  [GHC.IO.Device.RawDevice]

GHC.IO.Device.RegularFile =
  [GHC.IO.Device.RegularFile]

GHC.IO.Device.RelativeSeek =
  [GHC.IO.Device.RelativeSeek]

GHC.IO.Device.Stream =
  [GHC.IO.Device.Stream]

GHC.IO.Device.isSeekable v.s25751.0 =
  letS v.s25752.0 = v.s25751.0
  case v.s25752.0 of
    (GHC.IO.Device.C:IODevice v.s25753.0 v.s25754.0 v.s25755.0 v.s25756.0 v.s25757.0 v.s25758.0 v.s25759.0 v.s25760.0 v.s25761.0 v.s25762.0 v.s25763.0 v.s25764.0 v.s25765.0 v.s25766.0) ->
        v.s25756.0

GHC.IO.Device.isTerminal v.s25735.0 =
  letS v.s25736.0 = v.s25735.0
  case v.s25736.0 of
    (GHC.IO.Device.C:IODevice v.s25737.0 v.s25738.0 v.s25739.0 v.s25740.0 v.s25741.0 v.s25742.0 v.s25743.0 v.s25744.0 v.s25745.0 v.s25746.0 v.s25747.0 v.s25748.0 v.s25749.0 v.s25750.0) ->
        v.s25739.0

GHC.IO.Device.seek v.s25767.0 =
  letS v.s25768.0 = v.s25767.0
  case v.s25768.0 of
    (GHC.IO.Device.C:IODevice v.s25769.0 v.s25770.0 v.s25771.0 v.s25772.0 v.s25773.0 v.s25774.0 v.s25775.0 v.s25776.0 v.s25777.0 v.s25778.0 v.s25779.0 v.s25780.0 v.s25781.0 v.s25782.0) ->
        v.s25773.0

GHC.IO.Encoding.Failure.ErrorOnCodingFailure =
  [GHC.IO.Encoding.Failure.ErrorOnCodingFailure]

GHC.IO.Encoding.Failure.IgnoreCodingFailure =
  [GHC.IO.Encoding.Failure.IgnoreCodingFailure]

GHC.IO.Encoding.Failure.codingFailureModeSuffix1 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Failure.codingFailureModeSuffix2{- value -}

GHC.IO.Encoding.Failure.codingFailureModeSuffix2 =
  #"//ROUNDTRIP"

GHC.IO.Encoding.Failure.codingFailureModeSuffix3 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Failure.codingFailureModeSuffix4{- value -}

GHC.IO.Encoding.Failure.codingFailureModeSuffix4 =
  #"//TRANSLIT"

GHC.IO.Encoding.Failure.codingFailureModeSuffix5 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Failure.codingFailureModeSuffix6{- value -}

GHC.IO.Encoding.Failure.codingFailureModeSuffix6 =
  #"//IGNORE"

GHC.IO.Encoding.Failure.recoverDecode1 cfm.s21071.0 input.s21072.0 output.s21073.0 void.040.1175 =
  letS wild.s21075.1 = input.s21072.0
  case wild.s21075.1 of
    (GHC.IO.Buffer.Buffer dt.s21076.0 dt1.s21077.0 ds.s21078.0 dt2.s21079.0 dt3.s21080.0 dt4.s21081.0) ->
        letS wild1.s21082.0 = output.s21073.0
        case wild1.s21082.0 of
          (GHC.IO.Buffer.Buffer dt5.s21083.0 dt6.s21084.0 ds1.s21085.0 dt7.s21086.0 dt8.s21087.0 dt9.s21088.0) ->
              letS wild2.s21089.0 = cfm.s21071.0
              case wild2.s21089.0 of
                (GHC.IO.Encoding.Failure.ErrorOnCodingFailure) ->
                    "raiseIO#" @ GHC.IO.Encoding.Failure.recoverDecode2
                (GHC.IO.Encoding.Failure.IgnoreCodingFailure) ->
                    letS sat.s21090.0 = "+#" @ dt3.s21080.0{- value -} 1
                    let sat.s21091.0 = [GHC.IO.Buffer.Buffer dt.s21076.0{- value -} dt1.s21077.0 ds.s21078.0 dt2.s21079.0{- value -} sat.s21090.0{- value -} dt4.s21081.0{- value -}]
                        sat.s21092.1 = ["GHC.Tuple.(,)" sat.s21091.0 wild1.s21082.0]
                    ["GHC.Prim.Unit#" sat.s21092.1]
                (GHC.IO.Encoding.Failure.TransliterateCodingFailure) ->
                    letS s2.s21093.0 = "writeWideCharOffAddr#" @ dt5.s21083.0{- value -} dt9.s21088.0{- value -} #'\65533'
                    case s2.s21093.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'.s21094.0 = "touch#" @ dt6.s21084.0
                          case s'.s21094.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s21097.0 = "+#" @ dt9.s21088.0{- value -} 1
                                let sat.s21098.0 = [GHC.IO.Buffer.Buffer dt5.s21083.0{- value -} dt6.s21084.0 ds1.s21085.0 dt7.s21086.0{- value -} dt8.s21087.0{- value -} sat.s21097.0{- value -}]
                                letS sat.s21095.0 = "+#" @ dt3.s21080.0{- value -} 1
                                let sat.s21096.0 = [GHC.IO.Buffer.Buffer dt.s21076.0{- value -} dt1.s21077.0 ds.s21078.0 dt2.s21079.0{- value -} sat.s21095.0{- value -} dt4.s21081.0{- value -}]
                                    sat.s21099.1 = ["GHC.Tuple.(,)" sat.s21096.0 sat.s21098.0]
                                ["GHC.Prim.Unit#" sat.s21099.1]
                (GHC.IO.Encoding.Failure.RoundtripFailure) ->
                    letS sat.s21100.0 = "plusAddr#" @ dt.s21076.0{- value -} dt3.s21080.0{- value -}
                         ds2.s21101.1 = "readWord8OffAddr#" @ sat.s21100.0{- value -} 0
                    case ds2.s21101.1{- value -} of
                      ("GHC.Prim.Unit#" ipv1.s21103.0) ->
                          letS s'.s21104.0 = "touch#" @ dt1.s21077.0
                          case s'.s21104.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS lwild.s21105.0 = "ltWord#" @ ipv1.s21103.0{- value -} 128u
                                case lwild.s21105.0{- value -} of
                                  _ ->
                                      letS sat.s21107.0 = "word2Int#" @ ipv1.s21103.0{- value -}
                                           "i#.s21106.0" = "+#" @ 56320 sat.s21107.0{- value -}
                                           sat.s21108.0 = "int2Word#" @ "i#.s21106.0"{- value -}
                                           lwild1.s21109.0 = "leWord#" @ sat.s21108.0{- value -} 1114111u
                                      case lwild1.s21109.0{- value -} of
                                        _ ->
                                            "GHC.Char.$wlvl" @ "i#.s21106.0"{- value -}
                                        1 ->
                                            letS sat.s21111.0 = "chr#" @ "i#.s21106.0"{- value -}
                                                 s2.s21112.0 = "writeWideCharOffAddr#" @ dt5.s21083.0{- value -} dt9.s21088.0{- value -} sat.s21111.0{- value -}
                                            case s2.s21112.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s21113.0 = "touch#" @ dt6.s21084.0
                                                  case s'1.s21113.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s21116.0 = "+#" @ dt9.s21088.0{- value -} 1
                                                        let sat.s21117.0 = [GHC.IO.Buffer.Buffer dt5.s21083.0{- value -} dt6.s21084.0 ds1.s21085.0 dt7.s21086.0{- value -} dt8.s21087.0{- value -} sat.s21116.0{- value -}]
                                                        letS sat.s21114.2 = "+#" @ dt3.s21080.0{- value -} 1
                                                        let sat.s21115.1 = [GHC.IO.Buffer.Buffer dt.s21076.0{- value -} dt1.s21077.0 ds.s21078.0 dt2.s21079.0{- value -} sat.s21114.2{- value -} dt4.s21081.0{- value -}]
                                                            sat.s21118.0 = ["GHC.Tuple.(,)" sat.s21115.1 sat.s21117.0]
                                                        ["GHC.Prim.Unit#" sat.s21118.0]
                                  1 ->
                                      letS "i#.s21119.0" = "word2Int#" @ ipv1.s21103.0{- value -}
                                           sat.s21120.2 = "int2Word#" @ "i#.s21119.0"{- value -}
                                           lwild1.s21121.0 = "leWord#" @ sat.s21120.2{- value -} 1114111u
                                      case lwild1.s21121.0{- value -} of
                                        _ ->
                                            "GHC.Char.$wlvl" @ "i#.s21119.0"{- value -}
                                        1 ->
                                            letS sat.s21123.0 = "chr#" @ "i#.s21119.0"{- value -}
                                                 s2.s21124.0 = "writeWideCharOffAddr#" @ dt5.s21083.0{- value -} dt9.s21088.0{- value -} sat.s21123.0{- value -}
                                            case s2.s21124.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s21125.0 = "touch#" @ dt6.s21084.0
                                                  case s'1.s21125.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s21128.0 = "+#" @ dt9.s21088.0{- value -} 1
                                                        let sat.s21129.0 = [GHC.IO.Buffer.Buffer dt5.s21083.0{- value -} dt6.s21084.0 ds1.s21085.0 dt7.s21086.0{- value -} dt8.s21087.0{- value -} sat.s21128.0{- value -}]
                                                        letS sat.s21126.0 = "+#" @ dt3.s21080.0{- value -} 1
                                                        let sat.s21127.0 = [GHC.IO.Buffer.Buffer dt.s21076.0{- value -} dt1.s21077.0 ds.s21078.0 dt2.s21079.0{- value -} sat.s21126.0{- value -} dt4.s21081.0{- value -}]
                                                            sat.s21130.0 = ["GHC.Tuple.(,)" sat.s21127.0 sat.s21129.0]
                                                        ["GHC.Prim.Unit#" sat.s21130.0]

GHC.IO.Encoding.Failure.recoverDecode2 =
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ GHC.IO.Encoding.Failure.recoverDecode3

GHC.IO.Encoding.Failure.recoverDecode3 =
  [GHC.IO.Exception.IOError GHC.Maybe.Nothing GHC.IO.Exception.InvalidArgument GHC.IO.Encoding.Failure.recoverDecode6 GHC.IO.Encoding.Failure.recoverDecode4 GHC.Maybe.Nothing GHC.Maybe.Nothing]

GHC.IO.Encoding.Failure.recoverDecode4 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Failure.recoverDecode5{- value -}

GHC.IO.Encoding.Failure.recoverDecode5 =
  #"invalid byte sequence"

GHC.IO.Encoding.Failure.recoverDecode6 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Failure.recoverDecode7{- value -}

GHC.IO.Encoding.Failure.recoverDecode7 =
  #"recoverDecode"

GHC.IO.Encoding.Failure.recoverEncode1 cfm.s21131.0 input.s21132.0 output.s21133.0 void.040.1177 =
  letS wild.s21135.1 = input.s21132.0
  case wild.s21135.1 of
    (GHC.IO.Buffer.Buffer dt.s21136.0 dt1.s21137.0 ds.s21138.0 dt2.s21139.0 dt3.s21140.0 dt4.s21141.0) ->
        letS wild1.s21142.0 = output.s21133.0
        case wild1.s21142.0 of
          (GHC.IO.Buffer.Buffer dt5.s21143.0 dt6.s21144.0 ds1.s21145.1 dt7.s21146.0 dt8.s21147.0 dt9.s21148.0) ->
              letS ds2.s21149.1 = "readWideCharOffAddr#" @ dt.s21136.0{- value -} dt3.s21140.0{- value -}
              case ds2.s21149.1{- value -} of
                ("GHC.Prim.Unit#" ipv1.s21151.0) ->
                    letS s'.s21152.0 = "touch#" @ dt1.s21137.0
                    case s'.s21152.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS wild2.s21153.0 = cfm.s21131.0
                          case wild2.s21153.0 of
                            (GHC.IO.Encoding.Failure.ErrorOnCodingFailure) ->
                                "raiseIO#" @ GHC.IO.Encoding.Failure.recoverEncode2
                            (GHC.IO.Encoding.Failure.IgnoreCodingFailure) ->
                                letS sat.s21154.1 = "+#" @ dt3.s21140.0{- value -} 1
                                let sat.s21155.1 = [GHC.IO.Buffer.Buffer dt.s21136.0{- value -} dt1.s21137.0 ds.s21138.0 dt2.s21139.0{- value -} sat.s21154.1{- value -} dt4.s21141.0{- value -}]
                                    sat.s21156.0 = ["GHC.Tuple.(,)" sat.s21155.1 wild1.s21142.0]
                                ["GHC.Prim.Unit#" sat.s21156.0]
                            (GHC.IO.Encoding.Failure.TransliterateCodingFailure) ->
                                letS wild3.s21157.0 = ipv1.s21151.0{- value -}
                                case wild3.s21157.0{- value -} of
                                  _ ->
                                      letS s2.s21158.0 = "writeWideCharOffAddr#" @ dt.s21136.0{- value -} dt3.s21140.0{- value -} #'?'
                                      case s2.s21158.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s21159.0 = "touch#" @ dt1.s21137.0
                                            case s'1.s21159.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  let sat.s21160.0 = ["GHC.Tuple.(,)" wild.s21135.1 wild1.s21142.0]
                                                  ["GHC.Prim.Unit#" sat.s21160.0]
                                  #'?' ->
                                      letS sat.s21161.0 = "+#" @ dt3.s21140.0{- value -} 1
                                      let sat.s21162.0 = [GHC.IO.Buffer.Buffer dt.s21136.0{- value -} dt1.s21137.0 ds.s21138.0 dt2.s21139.0{- value -} sat.s21161.0{- value -} dt4.s21141.0{- value -}]
                                          sat.s21163.0 = ["GHC.Tuple.(,)" sat.s21162.0 wild1.s21142.0]
                                      ["GHC.Prim.Unit#" sat.s21163.0]
                            (GHC.IO.Encoding.Failure.RoundtripFailure) ->
                                letS x.s21164.0 = "ord#" @ ipv1.s21151.0{- value -}
                                     lwild.s21165.0 = "<=#" @ 56448 x.s21164.0{- value -}
                                case lwild.s21165.0{- value -} of
                                  _ ->
                                      "raiseIO#" @ GHC.IO.Encoding.Failure.recoverEncode2
                                  1 ->
                                      letS lwild1.s21166.0 = "<#" @ x.s21164.0{- value -} 56576
                                      case lwild1.s21166.0{- value -} of
                                        _ ->
                                            "raiseIO#" @ GHC.IO.Encoding.Failure.recoverEncode2
                                        1 ->
                                            letS sat.s21168.0 = "int2Word#" @ x.s21164.0{- value -}
                                                 sat.s21169.1 = "narrow8Word#" @ sat.s21168.0{- value -}
                                                 sat.s21167.0 = "plusAddr#" @ dt5.s21143.0{- value -} dt9.s21148.0{- value -}
                                                 s2.s21170.0 = "writeWord8OffAddr#" @ sat.s21167.0{- value -} 0 sat.s21169.1{- value -}
                                            case s2.s21170.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s21171.0 = "touch#" @ dt6.s21144.0
                                                  case s'1.s21171.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s21174.0 = "+#" @ dt9.s21148.0{- value -} 1
                                                        let sat.s21175.0 = [GHC.IO.Buffer.Buffer dt5.s21143.0{- value -} dt6.s21144.0 ds1.s21145.1 dt7.s21146.0{- value -} dt8.s21147.0{- value -} sat.s21174.0{- value -}]
                                                        letS sat.s21172.0 = "+#" @ dt3.s21140.0{- value -} 1
                                                        let sat.s21173.0 = [GHC.IO.Buffer.Buffer dt.s21136.0{- value -} dt1.s21137.0 ds.s21138.0 dt2.s21139.0{- value -} sat.s21172.0{- value -} dt4.s21141.0{- value -}]
                                                            sat.s21176.0 = ["GHC.Tuple.(,)" sat.s21173.0 sat.s21175.0]
                                                        ["GHC.Prim.Unit#" sat.s21176.0]

GHC.IO.Encoding.Failure.recoverEncode2 =
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ GHC.IO.Encoding.Failure.recoverEncode3

GHC.IO.Encoding.Failure.recoverEncode3 =
  [GHC.IO.Exception.IOError GHC.Maybe.Nothing GHC.IO.Exception.InvalidArgument GHC.IO.Encoding.Failure.recoverEncode6 GHC.IO.Encoding.Failure.recoverEncode4 GHC.Maybe.Nothing GHC.Maybe.Nothing]

GHC.IO.Encoding.Failure.recoverEncode4 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Failure.recoverEncode5{- value -}

GHC.IO.Encoding.Failure.recoverEncode5 =
  #"invalid character"

GHC.IO.Encoding.Failure.recoverEncode6 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Failure.recoverEncode7{- value -}

GHC.IO.Encoding.Failure.recoverEncode7 =
  #"recoverEncode"

GHC.IO.Encoding.Iconv.char_shift =
  ["GHC.Types.I#" 2]

GHC.IO.Encoding.Iconv.haskellChar =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Iconv.iconvEncoding14{- value -}

GHC.IO.Encoding.Iconv.iconvEncoding10 =
  #"mkTextEncoding"

GHC.IO.Encoding.Iconv.iconvEncoding11 ds.s26128.0 void.040.1181 =
  ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.Iconv.iconvEncoding12 void.040.1180 =
  ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.Iconv.iconvEncoding13 void.040.1179 ds3.s26125.0 =
  letS sat.s26126.0 = "narrow32Int#" @ ds3.s26125.0{- value -}
  "Foreign.C.Error.$wlvl" @ #"GHC.Prim.void#" sat.s26126.0{- value -} GHC.IO.Encoding.Iconv.lvl1

GHC.IO.Encoding.Iconv.iconvEncoding14 =
  #"UTF-32LE"

GHC.IO.Encoding.Iconv.iconvEncoding15 ds.s26333.0 =
  letS wild.s26334.0 = ds.s26333.0
  case wild.s26334.0 of
    ("GHC.Types.C#" x.s26335.0) ->
        letS wild1.s26336.0 = x.s26335.0{- value -}
        case wild1.s26336.0{- value -} of
          _ ->
              [GHC.Types.True]
          #'/' ->
              [GHC.Types.False]

GHC.IO.Encoding.Iconv.iconvEncoding2 cfm.s26337.0 charset.s26338.0 void.040.1189 =
  let ds.s26340.0 = GHC.IO.Encoding.Iconv.iconvEncoding2.closure.0 @ charset.s26338.0
      raw_charset.s26344.0 = GHC.IO.Encoding.Iconv.iconvEncoding2.closure.1 @ ds.s26340.0
      enc.s26348.0 = GHC.IO.Encoding.Iconv.iconvEncoding2.closure.3 @ ds.s26340.0
      enc1.s26353.0 = GHC.IO.Encoding.Iconv.iconvEncoding2.closure.4 @ cfm.s26337.0
      enc2.s26354.0 = GHC.IO.Encoding.Iconv.iconvEncoding2.closure.5 @ enc.s26348.0 enc1.s26353.0 raw_charset.s26344.0
      enc3.s26355.0 = GHC.IO.Encoding.Iconv.iconvEncoding2.closure.6 @ cfm.s26337.0
      enc4.s26356.0 = GHC.IO.Encoding.Iconv.iconvEncoding2.closure.7 @ charset.s26338.0 enc3.s26355.0
      enc5.s26357.0 = [GHC.IO.Encoding.Types.TextEncoding charset.s26338.0 enc2.s26354.0 enc4.s26356.0]
  letS ds1.s26358.0 = GHC.Foreign.charIsRepresentable1 @ enc5.s26357.0 GHC.IO.Encoding.Iconv.iconvEncoding3 #"GHC.Prim.void#"
  case ds1.s26358.0 of
    ("GHC.Prim.Unit#" ipv1.s26360.0) ->
        let sat.s26362.1 = GHC.IO.Encoding.Iconv.iconvEncoding2.closure.8 @ enc5.s26357.0 ipv1.s26360.0
        ["GHC.Prim.Unit#" sat.s26362.1]

GHC.IO.Encoding.Iconv.iconvEncoding2.closure.0 charset.s26338.1 =
  letS ww.s26341.0 = "GHC.List.$wspan" @ GHC.IO.Encoding.Iconv.iconvEncoding15 charset.s26338.1
  case ww.s26341.0{- value -} of
    ("GHC.Prim.(#,#)" ww1.s26342.0 ww2.s26343.0) ->
        ["GHC.Tuple.(,)" ww1.s26342.0 ww2.s26343.0]

GHC.IO.Encoding.Iconv.iconvEncoding2.closure.1 ds.s26340.1 =
  letS wild.s26345.0 = ds.s26340.1
  case wild.s26345.0 of
    ("GHC.Tuple.(,)" raw_charset1.s26346.0 suffix.s26347.0) ->
        raw_charset1.s26346.0

GHC.IO.Encoding.Iconv.iconvEncoding2.closure.2 ds.s26340.3 =
  letS wild.s26349.0 = ds.s26340.3
  case wild.s26349.0 of
    ("GHC.Tuple.(,)" raw_charset1.s26350.0 suffix.s26351.0) ->
        suffix.s26351.0

GHC.IO.Encoding.Iconv.iconvEncoding2.closure.3 ds.s26340.2 =
  let sat.s26352.1 = GHC.IO.Encoding.Iconv.iconvEncoding2.closure.2 @ ds.s26340.2
  "GHC.Base.++" @ GHC.IO.Encoding.Iconv.haskellChar sat.s26352.1

GHC.IO.Encoding.Iconv.iconvEncoding2.closure.4 cfm.s26337.1 eta.B3.300 eta.B2.747 void.040.1190 =
  GHC.IO.Encoding.Failure.recoverDecode1 @ cfm.s26337.1 eta.B3.300 eta.B2.747 #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.iconvEncoding2.closure.5 enc.s26348.1 enc1.s26353.1 raw_charset.s26344.1 void.040.1191 =
  GHC.IO.Encoding.Iconv.iconvEncoding8 @ raw_charset.s26344.1 enc.s26348.1 enc1.s26353.1 GHC.IO.Encoding.Iconv.iconvEncoding7 #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.iconvEncoding2.closure.6 cfm.s26337.2 eta.B3.301 eta.B2.748 void.040.1192 =
  GHC.IO.Encoding.Failure.recoverEncode1 @ cfm.s26337.2 eta.B3.301 eta.B2.748 #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.iconvEncoding2.closure.7 charset.s26338.2 enc3.s26355.1 void.040.1193 =
  GHC.IO.Encoding.Iconv.iconvEncoding8 @ GHC.IO.Encoding.Iconv.haskellChar charset.s26338.2 enc3.s26355.1 GHC.IO.Encoding.Iconv.iconvEncoding4 #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.iconvEncoding2.closure.8 enc5.s26357.1 ipv1.s26360.1 =
  letS wild.s26361.0 = ipv1.s26360.1
  case wild.s26361.0 of
    (GHC.Types.False) ->
        [GHC.Maybe.Nothing]
    (GHC.Types.True) ->
        [GHC.Maybe.Just enc5.s26357.1]

GHC.IO.Encoding.Iconv.iconvEncoding3 =
  ["GHC.Types.C#" #'a']

GHC.IO.Encoding.Iconv.iconvEncoding4 iconv_t.s26329.0 ibuf.s26330.0 obuf.s26331.0 void.040.1188 =
  GHC.IO.Encoding.Iconv.iconvEncoding6 @ iconv_t.s26329.0 ibuf.s26330.0 GHC.IO.Encoding.Iconv.char_shift obuf.s26331.0 GHC.IO.Encoding.Iconv.iconvEncoding5 #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.iconvEncoding5 =
  ["GHC.Types.I#" 0]

GHC.IO.Encoding.Iconv.iconvEncoding6 iconv_t.s26193.0 input.s26194.0 iscale.s26195.0 output.s26196.0 oscale.s26197.0 void.040.1185 =
  letS wild.s26199.0 = input.s26194.0
  case wild.s26199.0 of
    (GHC.IO.Buffer.Buffer dt.s26200.0 dt1.s26201.0 ds.s26202.0 dt2.s26203.0 dt3.s26204.0 dt4.s26205.0) ->
        letS wild1.s26206.0 = output.s26196.0
        case wild1.s26206.0 of
          (GHC.IO.Buffer.Buffer dt5.s26207.0 dt6.s26208.0 ds1.s26209.0 dt7.s26210.0 dt8.s26211.0 dt9.s26212.0) ->
              let sat.s26319.0 = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.14 @ ds.s26202.0 ds1.s26209.0 dt.s26200.0{- value -} dt1.s26201.0 dt2.s26203.0{- value -} dt3.s26204.0{- value -} dt4.s26205.0{- value -} dt5.s26207.0{- value -} dt6.s26208.0 dt7.s26210.0{- value -} dt8.s26211.0{- value -} dt9.s26212.0{- value -} iconv_t.s26193.0 iscale.s26195.0 oscale.s26197.0
              letS ds2.s26320.0 = Foreign.Marshal.Alloc.allocaBytesAligned @ "Foreign.Storable.$fStorableDouble5" "Foreign.Storable.$fStorableDouble5" sat.s26319.0 #"GHC.Prim.void#"
              case ds2.s26320.0 of
                ("GHC.Prim.Unit#" ipv1.s26322.0) ->
                    letS s'.s26323.0 = "touch#" @ dt6.s26208.0
                    case s'.s26323.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'1.s26324.0 = "touch#" @ dt1.s26201.0
                          case s'1.s26324.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                ["GHC.Prim.Unit#" ipv1.s26322.0]

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.0 "i#1.s26228.6" ipv3.s26260.1 =
  letS lwild.s26262.0 = ">=#" @ "i#1.s26228.6"{- value -} 64
  case lwild.s26262.0{- value -} of
    _ ->
        letS sat.s26263.1 = "word2Int#" @ ipv3.s26260.1{- value -}
             sat.s26264.0 = "uncheckedIShiftRA#" @ sat.s26263.1{- value -} "i#1.s26228.6"{- value -}
        ["GHC.Types.I#" sat.s26264.0{- value -}]
    1 ->
        letS sat.s26265.0 = "word2Int#" @ ipv3.s26260.1{- value -}
             lwild1.s26266.1 = "<#" @ sat.s26265.0{- value -} 0
        case lwild1.s26266.1{- value -} of
          _ ->
              GHC.IO.Encoding.Iconv.iconvEncoding5
          1 ->
              GHC.IO.Encoding.Iconv.lvl3

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.1 ds.s26202.9 dt.s26200.9 dt1.s26201.9 dt2.s26203.9 dt4.s26205.9 "i#.s26218.8" ipv1.s26257.1 =
  letS wild9.s26268.0 = ipv1.s26257.1{- value -}
  case wild9.s26268.0{- value -} of
    _ ->
        letS lwild.s26269.0 = ">=#" @ "i#.s26218.8"{- value -} 64
        case lwild.s26269.0{- value -} of
          _ ->
              letS sat.s26270.2 = "word2Int#" @ wild9.s26268.0{- value -}
                   sat.s26271.0 = "uncheckedIShiftRA#" @ sat.s26270.2{- value -} "i#.s26218.8"{- value -}
                   sat.s26272.0 = "-#" @ dt4.s26205.9{- value -} sat.s26271.0{- value -}
              [GHC.IO.Buffer.Buffer dt.s26200.9{- value -} dt1.s26201.9 ds.s26202.9 dt2.s26203.9{- value -} sat.s26272.0{- value -} dt4.s26205.9{- value -}]
          1 ->
              letS sat.s26273.1 = "word2Int#" @ wild9.s26268.0{- value -}
                   lwild1.s26274.0 = "<#" @ sat.s26273.1{- value -} 0
              case lwild1.s26274.0{- value -} of
                _ ->
                    [GHC.IO.Buffer.Buffer dt.s26200.9{- value -} dt1.s26201.9 ds.s26202.9 dt2.s26203.9{- value -} dt4.s26205.9{- value -} dt4.s26205.9{- value -}]
                1 ->
                    letS sat.s26275.0 = "-#" @ dt4.s26205.9{- value -} -1
                    [GHC.IO.Buffer.Buffer dt.s26200.9{- value -} dt1.s26201.9 ds.s26202.9 dt2.s26203.9{- value -} sat.s26275.0{- value -} dt4.s26205.9{- value -}]
    0u ->
        [GHC.IO.Buffer.Buffer dt.s26200.9{- value -} dt1.s26201.9 ds.s26202.9 dt2.s26203.9{- value -} 0 0]

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.10 a1.s26216.4 a2.s26226.2 ds.s26202.5 ds1.s26209.5 dt.s26200.5 dt1.s26201.5 dt2.s26203.5 dt3.s26204.5 dt4.s26205.5 dt5.s26207.5 dt6.s26208.5 dt7.s26210.5 dt8.s26211.5 dt9.s26212.5 "i#.s26218.4" "i#1.s26228.2" iconv_t.s26193.5 ptr2.s26233.0 void.X95.2 =
  letS wild6.s26235.0 = ptr2.s26233.0
  case wild6.s26235.0 of
    (GHC.Ptr.Ptr a3.s26236.0) ->
        let "$j2.s26237.0" = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.9 @ a1.s26216.4{- value -} a2.s26226.2{- value -} a3.s26236.0{- value -} ds.s26202.5 ds1.s26209.5 dt.s26200.5{- value -} dt1.s26201.5 dt2.s26203.5{- value -} dt4.s26205.5{- value -} dt5.s26207.5{- value -} dt6.s26208.5 dt7.s26210.5{- value -} dt8.s26211.5{- value -} dt9.s26212.5{- value -} "i#.s26218.4"{- value -} "i#1.s26228.2"{- value -} iconv_t.s26193.5
        letS lwild.s26310.0 = ">=#" @ "i#.s26218.4"{- value -} 64
        case lwild.s26310.0{- value -} of
          _ ->
              letS sat.s26311.0 = "-#" @ dt4.s26205.5{- value -} dt3.s26204.5{- value -}
                   sat.s26312.1 = "uncheckedIShiftL#" @ sat.s26311.0{- value -} "i#.s26218.4"{- value -}
              "$j2.s26237.0" @ sat.s26312.1{- value -}
          1 ->
              "$j2.s26237.0" @ 0

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.11 a1.s26216.3 a2.s26226.1 ds.s26202.4 ds1.s26209.4 dt.s26200.4 dt1.s26201.4 dt2.s26203.4 dt3.s26204.4 dt4.s26205.4 dt5.s26207.4 dt6.s26208.4 dt7.s26210.4 dt8.s26211.4 dt9.s26212.4 "i#.s26218.3" "i#1.s26228.1" iconv_t.s26193.4 d1.s26230.0 =
  letS sat.s26231.0 = "plusAddr#" @ dt5.s26207.4{- value -} d1.s26230.0{- value -}
       s3.s26232.0 = "writeAddrOffAddr#" @ a2.s26226.1{- value -} 0 sat.s26231.0{- value -}
  case s3.s26232.0{- value -} of
    ("GHC.Prim.(##)") ->
        let sat.s26313.1 = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.10 @ a1.s26216.3{- value -} a2.s26226.1{- value -} ds.s26202.4 ds1.s26209.4 dt.s26200.4{- value -} dt1.s26201.4 dt2.s26203.4{- value -} dt3.s26204.4{- value -} dt4.s26205.4{- value -} dt5.s26207.4{- value -} dt6.s26208.4 dt7.s26210.4{- value -} dt8.s26211.4{- value -} dt9.s26212.4{- value -} "i#.s26218.3"{- value -} "i#1.s26228.1"{- value -} iconv_t.s26193.4
        Foreign.Marshal.Alloc.allocaBytesAligned @ "Foreign.Storable.$fStorableDouble5" "Foreign.Storable.$fStorableDouble5" sat.s26313.1 #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.12 a1.s26216.2 ds.s26202.3 ds1.s26209.3 dt.s26200.3 dt1.s26201.3 dt2.s26203.3 dt3.s26204.3 dt4.s26205.3 dt5.s26207.3 dt6.s26208.3 dt7.s26210.3 dt8.s26211.3 dt9.s26212.3 "i#.s26218.2" iconv_t.s26193.3 oscale.s26197.3 ptr1.s26223.0 void.X84.1 =
  letS wild4.s26225.0 = ptr1.s26223.0
  case wild4.s26225.0 of
    (GHC.Ptr.Ptr a2.s26226.0) ->
        letS wild5.s26227.0 = oscale.s26197.3
        case wild5.s26227.0 of
          ("GHC.Types.I#" "i#1.s26228.0") ->
              let "$j1.s26229.0" = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.11 @ a1.s26216.2{- value -} a2.s26226.0{- value -} ds.s26202.3 ds1.s26209.3 dt.s26200.3{- value -} dt1.s26201.3 dt2.s26203.3{- value -} dt3.s26204.3{- value -} dt4.s26205.3{- value -} dt5.s26207.3{- value -} dt6.s26208.3 dt7.s26210.3{- value -} dt8.s26211.3{- value -} dt9.s26212.3{- value -} "i#.s26218.2"{- value -} "i#1.s26228.0"{- value -} iconv_t.s26193.3
              letS lwild.s26314.0 = ">=#" @ "i#1.s26228.0"{- value -} 64
              case lwild.s26314.0{- value -} of
                _ ->
                    letS sat.s26315.0 = "uncheckedIShiftL#" @ dt9.s26212.3{- value -} "i#1.s26228.0"{- value -}
                    "$j1.s26229.0" @ sat.s26315.0{- value -}
                1 ->
                    "$j1.s26229.0" @ 0

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.13 a1.s26216.1 ds.s26202.2 ds1.s26209.2 dt.s26200.2 dt1.s26201.2 dt2.s26203.2 dt3.s26204.2 dt4.s26205.2 dt5.s26207.2 dt6.s26208.2 dt7.s26210.2 dt8.s26211.2 dt9.s26212.2 "i#.s26218.1" iconv_t.s26193.2 oscale.s26197.2 d.s26220.0 =
  letS sat.s26221.1 = "plusAddr#" @ dt.s26200.2{- value -} d.s26220.0{- value -}
       s2.s26222.0 = "writeAddrOffAddr#" @ a1.s26216.1{- value -} 0 sat.s26221.1{- value -}
  case s2.s26222.0{- value -} of
    ("GHC.Prim.(##)") ->
        let sat.s26316.0 = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.12 @ a1.s26216.1{- value -} ds.s26202.2 ds1.s26209.2 dt.s26200.2{- value -} dt1.s26201.2 dt2.s26203.2{- value -} dt3.s26204.2{- value -} dt4.s26205.2{- value -} dt5.s26207.2{- value -} dt6.s26208.2 dt7.s26210.2{- value -} dt8.s26211.2{- value -} dt9.s26212.2{- value -} "i#.s26218.1"{- value -} iconv_t.s26193.2 oscale.s26197.2
        Foreign.Marshal.Alloc.allocaBytesAligned @ "Foreign.Storable.$fStorableDouble5" "Foreign.Storable.$fStorableDouble5" sat.s26316.0 #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.14 ds.s26202.1 ds1.s26209.1 dt.s26200.1 dt1.s26201.1 dt2.s26203.1 dt3.s26204.1 dt4.s26205.1 dt5.s26207.1 dt6.s26208.1 dt7.s26210.1 dt8.s26211.1 dt9.s26212.1 iconv_t.s26193.1 iscale.s26195.1 oscale.s26197.1 ptr.s26213.0 void.040.1186 =
  letS wild2.s26215.0 = ptr.s26213.0
  case wild2.s26215.0 of
    (GHC.Ptr.Ptr a1.s26216.0) ->
        letS wild3.s26217.0 = iscale.s26195.1
        case wild3.s26217.0 of
          ("GHC.Types.I#" "i#.s26218.0") ->
              let "$j.s26219.0" = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.13 @ a1.s26216.0{- value -} ds.s26202.1 ds1.s26209.1 dt.s26200.1{- value -} dt1.s26201.1 dt2.s26203.1{- value -} dt3.s26204.1{- value -} dt4.s26205.1{- value -} dt5.s26207.1{- value -} dt6.s26208.1 dt7.s26210.1{- value -} dt8.s26211.1{- value -} dt9.s26212.1{- value -} "i#.s26218.0"{- value -} iconv_t.s26193.1 oscale.s26197.1
              letS lwild.s26317.0 = ">=#" @ "i#.s26218.0"{- value -} 64
              case lwild.s26317.0{- value -} of
                _ ->
                    letS sat.s26318.0 = "uncheckedIShiftL#" @ dt3.s26204.1{- value -} "i#.s26218.0"{- value -}
                    "$j.s26219.0" @ sat.s26318.0{- value -}
                1 ->
                    "$j.s26219.0" @ 0

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.2 ds1.s26209.9 dt5.s26207.9 dt6.s26208.9 dt7.s26210.9 dt8.s26211.9 new_outleft'.s26261.1 =
  letS wild10.s26277.0 = new_outleft'.s26261.1
  case wild10.s26277.0 of
    ("GHC.Types.I#" y.s26278.0) ->
        letS sat.s26279.0 = "-#" @ dt7.s26210.9{- value -} y.s26278.0{- value -}
        [GHC.IO.Buffer.Buffer dt5.s26207.9{- value -} dt6.s26208.9 ds1.s26209.9 dt7.s26210.9{- value -} dt8.s26211.9{- value -} sat.s26279.0{- value -}]

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.3 ds1.s26209.10 dt5.s26207.10 dt6.s26208.10 dt7.s26210.10 dt8.s26211.10 new_outleft'.s26261.2 =
  letS wild12.s26287.0 = new_outleft'.s26261.2
  case wild12.s26287.0 of
    ("GHC.Types.I#" y.s26288.0) ->
        letS sat.s26289.0 = "-#" @ dt7.s26210.10{- value -} y.s26288.0{- value -}
        [GHC.IO.Buffer.Buffer dt5.s26207.10{- value -} dt6.s26208.10 ds1.s26209.10 dt7.s26210.10{- value -} dt8.s26211.10{- value -} sat.s26289.0{- value -}]

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.4 ds1.s26209.11 dt5.s26207.11 dt6.s26208.11 dt7.s26210.11 dt8.s26211.11 new_outleft'.s26261.3 =
  letS wild12.s26292.0 = new_outleft'.s26261.3
  case wild12.s26292.0 of
    ("GHC.Types.I#" y.s26293.0) ->
        letS sat.s26294.0 = "-#" @ dt7.s26210.11{- value -} y.s26293.0{- value -}
        [GHC.IO.Buffer.Buffer dt5.s26207.11{- value -} dt6.s26208.11 ds1.s26209.11 dt7.s26210.11{- value -} dt8.s26211.11{- value -} sat.s26294.0{- value -}]

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.5 ds1.s26209.12 dt5.s26207.12 dt6.s26208.12 dt7.s26210.12 dt8.s26211.12 new_outleft'.s26261.4 =
  letS wild12.s26301.0 = new_outleft'.s26261.4
  case wild12.s26301.0 of
    ("GHC.Types.I#" y.s26302.0) ->
        letS sat.s26303.0 = "-#" @ dt7.s26210.12{- value -} y.s26302.0{- value -}
        [GHC.IO.Buffer.Buffer dt5.s26207.12{- value -} dt6.s26208.12 ds1.s26209.12 dt7.s26210.12{- value -} dt8.s26211.12{- value -} sat.s26303.0{- value -}]

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.6 new_outleft'.s26261.5 =
  letS wild12.s26297.0 = new_outleft'.s26261.5
  case wild12.s26297.0 of
    ("GHC.Types.I#" x.s26298.0) ->
        letS wild13.s26299.0 = x.s26298.0{- value -}
        case wild13.s26299.0{- value -} of
          _ ->
              [GHC.IO.Encoding.Types.InvalidSequence]
          0 ->
              [GHC.IO.Encoding.Types.OutputUnderflow]

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.7 a1.s26216.7 a2.s26226.5 a3.s26236.3 a4.s26244.1 ds.s26202.8 ds1.s26209.8 dt.s26200.8 dt1.s26201.8 dt2.s26203.8 dt4.s26205.8 dt5.s26207.8 dt6.s26208.8 dt7.s26210.8 dt8.s26211.8 "i#.s26218.7" "i#1.s26228.5" iconv_t.s26193.8 "x#1.s26246.0" =
  letS sat.s26247.0 = "int2Word#" @ "x#1.s26246.0"{- value -}
       s7.s26248.0 = "writeWord64OffAddr#" @ a4.s26244.1{- value -} 0 sat.s26247.0{- value -}
  case s7.s26248.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS ds2.s26249.0 = iconv_t.s26193.8
        case ds2.s26249.0 of
          ("GHC.Int.I64#" ds3.s26250.0) ->
              letS wild8.s26252.0 = hs_iconv @ ds3.s26250.0{- value -} a1.s26216.7{- value -} a3.s26236.3{- value -} a2.s26226.5{- value -} a4.s26244.1{- value -}
              case wild8.s26252.0{- value -} of
                ("GHC.Prim.Unit#" ds5.s26254.0) ->
                    letS ds6.s26255.0 = "readWord64OffAddr#" @ a3.s26236.3{- value -} 0
                    case ds6.s26255.0{- value -} of
                      ("GHC.Prim.Unit#" ipv1.s26257.0) ->
                          letS ds7.s26258.0 = "readWord64OffAddr#" @ a4.s26244.1{- value -} 0
                          case ds7.s26258.0{- value -} of
                            ("GHC.Prim.Unit#" ipv3.s26260.0) ->
                                let new_outleft'.s26261.0 = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.0 @ "i#1.s26228.5"{- value -} ipv3.s26260.0{- value -}
                                    new_input.s26267.0 = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.1 @ ds.s26202.8 dt.s26200.8{- value -} dt1.s26201.8 dt2.s26203.8{- value -} dt4.s26205.8{- value -} "i#.s26218.7"{- value -} ipv1.s26257.0{- value -}
                                letS wild9.s26276.0 = ds5.s26254.0{- value -}
                                case wild9.s26276.0{- value -} of
                                  _ ->
                                      let sat.s26280.0 = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.2 @ ds1.s26209.8 dt5.s26207.8{- value -} dt6.s26208.8 dt7.s26210.8{- value -} dt8.s26211.8{- value -} new_outleft'.s26261.0
                                          sat.s26281.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow new_input.s26267.0 sat.s26280.0]
                                      ["GHC.Prim.Unit#" sat.s26281.0]
                                  18446744073709551615u ->
                                      letS wild10.s26283.0 = __hscore_get_errno @
                                      case wild10.s26283.0{- value -} of
                                        ("GHC.Prim.Unit#" ds9.s26285.0) ->
                                            letS wild11.s26286.0 = "narrow32Int#" @ ds9.s26285.0{- value -}
                                            case wild11.s26286.0{- value -} of
                                              _ ->
                                                  Foreign.C.Error.throwErrno1 @ GHC.IO.Encoding.Iconv.lvl5 #"GHC.Prim.void#"
                                              7 ->
                                                  let sat.s26290.1 = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.3 @ ds1.s26209.8 dt5.s26207.8{- value -} dt6.s26208.8 dt7.s26210.8{- value -} dt8.s26211.8{- value -} new_outleft'.s26261.0
                                                      sat.s26291.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow new_input.s26267.0 sat.s26290.1]
                                                  ["GHC.Prim.Unit#" sat.s26291.0]
                                              22 ->
                                                  let sat.s26295.0 = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.4 @ ds1.s26209.8 dt5.s26207.8{- value -} dt6.s26208.8 dt7.s26210.8{- value -} dt8.s26211.8{- value -} new_outleft'.s26261.0
                                                      sat.s26296.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow new_input.s26267.0 sat.s26295.0]
                                                  ["GHC.Prim.Unit#" sat.s26296.0]
                                              84 ->
                                                  let sat.s26304.0 = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.5 @ ds1.s26209.8 dt5.s26207.8{- value -} dt6.s26208.8 dt7.s26210.8{- value -} dt8.s26211.8{- value -} new_outleft'.s26261.0
                                                      sat.s26300.0 = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.6 @ new_outleft'.s26261.0
                                                      sat.s26305.0 = ["GHC.Tuple.(,,)" sat.s26300.0 new_input.s26267.0 sat.s26304.0]
                                                  ["GHC.Prim.Unit#" sat.s26305.0]

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.8 a1.s26216.6 a2.s26226.4 a3.s26236.2 ds.s26202.7 ds1.s26209.7 dt.s26200.7 dt1.s26201.7 dt2.s26203.7 dt4.s26205.7 dt5.s26207.7 dt6.s26208.7 dt7.s26210.7 dt8.s26211.7 dt9.s26212.7 "i#.s26218.6" "i#1.s26228.4" iconv_t.s26193.7 ptr3.s26241.0 void.X104.3 =
  letS wild7.s26243.0 = ptr3.s26241.0
  case wild7.s26243.0 of
    (GHC.Ptr.Ptr a4.s26244.0) ->
        let "$j3.s26245.0" = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.7 @ a1.s26216.6{- value -} a2.s26226.4{- value -} a3.s26236.2{- value -} a4.s26244.0{- value -} ds.s26202.7 ds1.s26209.7 dt.s26200.7{- value -} dt1.s26201.7 dt2.s26203.7{- value -} dt4.s26205.7{- value -} dt5.s26207.7{- value -} dt6.s26208.7 dt7.s26210.7{- value -} dt8.s26211.7{- value -} "i#.s26218.6"{- value -} "i#1.s26228.4"{- value -} iconv_t.s26193.7
        letS lwild.s26306.0 = ">=#" @ "i#1.s26228.4"{- value -} 64
        case lwild.s26306.0{- value -} of
          _ ->
              letS sat.s26307.1 = "-#" @ dt7.s26210.7{- value -} dt9.s26212.7{- value -}
                   sat.s26308.1 = "uncheckedIShiftL#" @ sat.s26307.1{- value -} "i#1.s26228.4"{- value -}
              "$j3.s26245.0" @ sat.s26308.1{- value -}
          1 ->
              "$j3.s26245.0" @ 0

GHC.IO.Encoding.Iconv.iconvEncoding6.closure.9 a1.s26216.5 a2.s26226.3 a3.s26236.1 ds.s26202.6 ds1.s26209.6 dt.s26200.6 dt1.s26201.6 dt2.s26203.6 dt4.s26205.6 dt5.s26207.6 dt6.s26208.6 dt7.s26210.6 dt8.s26211.6 dt9.s26212.6 "i#.s26218.5" "i#1.s26228.3" iconv_t.s26193.6 "x#.s26238.0" =
  letS sat.s26239.0 = "int2Word#" @ "x#.s26238.0"{- value -}
       s5.s26240.0 = "writeWord64OffAddr#" @ a3.s26236.1{- value -} 0 sat.s26239.0{- value -}
  case s5.s26240.0{- value -} of
    ("GHC.Prim.(##)") ->
        let sat.s26309.1 = GHC.IO.Encoding.Iconv.iconvEncoding6.closure.8 @ a1.s26216.5{- value -} a2.s26226.3{- value -} a3.s26236.1{- value -} ds.s26202.6 ds1.s26209.6 dt.s26200.6{- value -} dt1.s26201.6 dt2.s26203.6{- value -} dt4.s26205.6{- value -} dt5.s26207.6{- value -} dt6.s26208.6 dt7.s26210.6{- value -} dt8.s26211.6{- value -} dt9.s26212.6{- value -} "i#.s26218.5"{- value -} "i#1.s26228.3"{- value -} iconv_t.s26193.6
        Foreign.Marshal.Alloc.allocaBytesAligned @ "Foreign.Storable.$fStorableDouble5" "Foreign.Storable.$fStorableDouble5" sat.s26309.1 #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.iconvEncoding7 iconv_t.s26325.0 ibuf.s26326.0 obuf.s26327.0 void.040.1187 =
  GHC.IO.Encoding.Iconv.iconvEncoding6 @ iconv_t.s26325.0 ibuf.s26326.0 GHC.IO.Encoding.Iconv.iconvEncoding5 obuf.s26327.0 GHC.IO.Encoding.Iconv.char_shift #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.iconvEncoding8 from.s26130.0 to.s26131.0 rec.s26132.0 fn.s26133.0 void.040.1182 =
  let sat.s26183.0 = GHC.IO.Encoding.Iconv.iconvEncoding8.closure.5 @ fn.s26133.0 rec.s26132.0 to.s26131.0
  Foreign.C.String.withCAString1 @ from.s26130.0 sat.s26183.0 #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.iconvEncoding8.closure.0 wild1.s26147.1 void.X63.2 =
  letS wild2.s26152.0 = hs_iconv_close @ wild1.s26147.1{- value -}
  case wild2.s26152.0{- value -} of
    ("GHC.Prim.Unit#" ds7.s26154.0) ->
        letS wild3.s26155.0 = "narrow32Int#" @ ds7.s26154.0{- value -}
        case wild3.s26155.0{- value -} of
          _ ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]
          -1 ->
              letS wild4.s26157.0 = __hscore_get_errno @
              case wild4.s26157.0{- value -} of
                ("GHC.Prim.Unit#" ds9.s26159.0) ->
                    GHC.IO.Encoding.Iconv.iconvEncoding13 @ #"GHC.Prim.void#" ds9.s26159.0{- value -}

GHC.IO.Encoding.Iconv.iconvEncoding8.closure.1 fn.s26133.3 wild1.s26147.2 =
  let sat.s26148.0 = ["GHC.Int.I64#" wild1.s26147.2{- value -}]
  fn.s26133.3 @ sat.s26148.0

GHC.IO.Encoding.Iconv.iconvEncoding8.closure.2 ipv1.s26165.1 void.X65.4 =
  letS ds7.s26168.0 = ipv1.s26165.1
  case ds7.s26168.0 of
    ("GHC.Int.I64#" ds8.s26169.0) ->
        letS wild2.s26171.0 = hs_iconv_close @ ds8.s26169.0{- value -}
        case wild2.s26171.0{- value -} of
          ("GHC.Prim.Unit#" ds10.s26173.0) ->
              letS wild3.s26174.0 = "narrow32Int#" @ ds10.s26173.0{- value -}
              case wild3.s26174.0{- value -} of
                _ ->
                    ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                -1 ->
                    letS wild4.s26176.0 = __hscore_get_errno @
                    case wild4.s26176.0{- value -} of
                      ("GHC.Prim.Unit#" ds12.s26178.0) ->
                          GHC.IO.Encoding.Iconv.iconvEncoding13 @ #"GHC.Prim.void#" ds12.s26178.0{- value -}

GHC.IO.Encoding.Iconv.iconvEncoding8.closure.3 fn.s26133.4 ipv1.s26165.2 =
  fn.s26133.4 @ ipv1.s26165.2

GHC.IO.Encoding.Iconv.iconvEncoding8.closure.4 fn.s26133.2 from_str.s26135.1 rec.s26132.2 to_str.s26137.0 void.X54.0 =
  letS ds.s26139.0 = to_str.s26137.0
  case ds.s26139.0 of
    (GHC.Ptr.Ptr ds1.s26140.0) ->
        letS ds2.s26141.0 = from_str.s26135.1
        case ds2.s26141.0 of
          (GHC.Ptr.Ptr ds3.s26142.0) ->
              letS wild.s26144.0 = hs_iconv_open @ ds1.s26140.0{- value -} ds3.s26142.0{- value -}
              case wild.s26144.0{- value -} of
                ("GHC.Prim.Unit#" ds5.s26146.0) ->
                    letS wild1.s26147.0 = ds5.s26146.0{- value -}
                    case wild1.s26147.0{- value -} of
                      _ ->
                          let sat.s26161.0 = GHC.IO.Encoding.Iconv.iconvEncoding8.closure.0 @ wild1.s26147.0{- value -}
                              sat.s26149.0 = GHC.IO.Encoding.Iconv.iconvEncoding8.closure.1 @ fn.s26133.2 wild1.s26147.0{- value -}
                              sat.s26162.0 = [GHC.IO.Encoding.Types.BufferCodec sat.s26149.0 rec.s26132.2 sat.s26161.0 GHC.IO.Encoding.Iconv.iconvEncoding12 GHC.IO.Encoding.Iconv.iconvEncoding11]
                          ["GHC.Prim.Unit#" sat.s26162.0]
                      -1 ->
                          letS ds6.s26163.0 = Foreign.C.Error.throwErrno1 @ GHC.IO.Encoding.Iconv.iconvEncoding9 #"GHC.Prim.void#"
                          case ds6.s26163.0 of
                            ("GHC.Prim.Unit#" ipv1.s26165.0) ->
                                let sat.s26180.1 = GHC.IO.Encoding.Iconv.iconvEncoding8.closure.2 @ ipv1.s26165.0
                                    sat.s26166.0 = GHC.IO.Encoding.Iconv.iconvEncoding8.closure.3 @ fn.s26133.2 ipv1.s26165.0
                                    sat.s26181.1 = [GHC.IO.Encoding.Types.BufferCodec sat.s26166.0 rec.s26132.2 sat.s26180.1 GHC.IO.Encoding.Iconv.iconvEncoding12 GHC.IO.Encoding.Iconv.iconvEncoding11]
                                ["GHC.Prim.Unit#" sat.s26181.1]

GHC.IO.Encoding.Iconv.iconvEncoding8.closure.5 fn.s26133.1 rec.s26132.1 to.s26131.1 from_str.s26135.0 void.040.1183 =
  let sat.s26182.0 = GHC.IO.Encoding.Iconv.iconvEncoding8.closure.4 @ fn.s26133.1 from_str.s26135.0 rec.s26132.1
  Foreign.C.String.withCAString1 @ to.s26131.1 sat.s26182.0 #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.iconvEncoding9 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Iconv.iconvEncoding10{- value -}

GHC.IO.Encoding.Iconv.localeEncodingName =
  letS ds.s26190.0 = GHC.IO.Encoding.Iconv.lvl2 @ #"GHC.Prim.realWorld#"
  case ds.s26190.0 of
    ("GHC.Prim.Unit#" ipv1.s26192.0) ->
        ipv1.s26192.0

GHC.IO.Encoding.Iconv.lvl =
  #"Iconv.close"

GHC.IO.Encoding.Iconv.lvl1 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Iconv.lvl{- value -}

GHC.IO.Encoding.Iconv.lvl2 void.040.1184 =
  letS s'.s26185.0 = "noDuplicate#" @
  case s'.s26185.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS wild.s26187.0 = localeEncoding @
        case wild.s26187.0{- value -} of
          ("GHC.Prim.Unit#" ds1.s26189.0) ->
              "Foreign.C.String.$wpeekCAString" @ ds1.s26189.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.Iconv.lvl3 =
  ["GHC.Types.I#" -1]

GHC.IO.Encoding.Iconv.lvl4 =
  #"iconvRecoder"

GHC.IO.Encoding.Iconv.lvl5 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Iconv.lvl4{- value -}

GHC.IO.Encoding.Latin1.ascii3 input.s19534.0 output.s19535.0 void.040.1213 =
  letS wild.s19537.0 = input.s19534.0
  case wild.s19537.0 of
    (GHC.IO.Buffer.Buffer dt.s19538.0 dt1.s19539.0 ds.s19540.0 dt2.s19541.0 dt3.s19542.0 dt4.s19543.0) ->
        letS wild1.s19544.0 = output.s19535.0
        case wild1.s19544.0 of
          (GHC.IO.Buffer.Buffer dt5.s19545.0 dt6.s19546.0 ds1.s19547.0 dt7.s19548.0 dt8.s19549.0 dt9.s19550.0) ->
              let lvl6.s19551.0 = [GHC.IO.Buffer.Buffer dt.s19538.0{- value -} dt1.s19539.0 ds.s19540.0 dt2.s19541.0{- value -} 0 0]
                  exit.s19552.0 = GHC.IO.Encoding.Latin1.ascii3.closure.1 @ ds.s19540.0 ds1.s19547.0 dt.s19538.0{- value -} dt1.s19539.0 dt2.s19541.0{- value -} dt4.s19543.0{- value -} dt5.s19545.0{- value -} dt6.s19546.0 dt7.s19548.0{- value -} dt8.s19549.0{- value -} lvl6.s19551.0
                  exit1.s19560.0 = GHC.IO.Encoding.Latin1.ascii3.closure.3 @ ds.s19540.0 ds1.s19547.0 dt.s19538.0{- value -} dt1.s19539.0 dt2.s19541.0{- value -} dt4.s19543.0{- value -} dt5.s19545.0{- value -} dt6.s19546.0 dt7.s19548.0{- value -} dt8.s19549.0{- value -} lvl6.s19551.0
                  exit2.s19568.0 = GHC.IO.Encoding.Latin1.ascii3.closure.5 @ ds.s19540.0 ds1.s19547.0 dt.s19538.0{- value -} dt1.s19539.0 dt2.s19541.0{- value -} dt4.s19543.0{- value -} dt5.s19545.0{- value -} dt6.s19546.0 dt7.s19548.0{- value -} dt8.s19549.0{- value -} lvl6.s19551.0
              letrec "$wloop.s19576.0" = GHC.IO.Encoding.Latin1.ascii3.closure.6 @ "$wloop.s19576.0" dt.s19538.0{- value -} dt1.s19539.0 dt4.s19543.0{- value -} dt5.s19545.0{- value -} dt6.s19546.0 dt7.s19548.0{- value -} exit.s19552.0 exit1.s19560.0 exit2.s19568.0
              "$wloop.s19576.0" @ dt3.s19542.0{- value -} dt9.s19550.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.ascii3.closure.0 ds.s19540.2 dt.s19538.2 dt1.s19539.2 dt2.s19541.2 dt4.s19543.2 lvl6.s19551.2 ww.s19553.1 =
  letS lwild.s19556.0 = "==#" @ ww.s19553.1{- value -} dt4.s19543.2{- value -}
  case lwild.s19556.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19538.2{- value -} dt1.s19539.2 ds.s19540.2 dt2.s19541.2{- value -} ww.s19553.1{- value -} dt4.s19543.2{- value -}]
    1 ->
        lvl6.s19551.2

GHC.IO.Encoding.Latin1.ascii3.closure.1 ds.s19540.1 ds1.s19547.1 dt.s19538.1 dt1.s19539.1 dt2.s19541.1 dt4.s19543.1 dt5.s19545.1 dt6.s19546.1 dt7.s19548.1 dt8.s19549.1 lvl6.s19551.1 ww.s19553.0 ww1.s19554.0 void.040.1214 =
  let sat.s19558.0 = [GHC.IO.Buffer.Buffer dt5.s19545.1{- value -} dt6.s19546.1 ds1.s19547.1 dt7.s19548.1{- value -} dt8.s19549.1{- value -} ww1.s19554.0{- value -}]
      sat.s19557.0 = GHC.IO.Encoding.Latin1.ascii3.closure.0 @ ds.s19540.1 dt.s19538.1{- value -} dt1.s19539.1 dt2.s19541.1{- value -} dt4.s19543.1{- value -} lvl6.s19551.1 ww.s19553.0{- value -}
      sat.s19559.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s19557.0 sat.s19558.0]
  ["GHC.Prim.Unit#" sat.s19559.0]

GHC.IO.Encoding.Latin1.ascii3.closure.2 ds.s19540.4 dt.s19538.4 dt1.s19539.4 dt2.s19541.4 dt4.s19543.4 lvl6.s19551.4 ww.s19561.1 =
  letS lwild.s19564.0 = "==#" @ ww.s19561.1{- value -} dt4.s19543.4{- value -}
  case lwild.s19564.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19538.4{- value -} dt1.s19539.4 ds.s19540.4 dt2.s19541.4{- value -} ww.s19561.1{- value -} dt4.s19543.4{- value -}]
    1 ->
        lvl6.s19551.4

GHC.IO.Encoding.Latin1.ascii3.closure.3 ds.s19540.3 ds1.s19547.2 dt.s19538.3 dt1.s19539.3 dt2.s19541.3 dt4.s19543.3 dt5.s19545.2 dt6.s19546.2 dt7.s19548.2 dt8.s19549.2 lvl6.s19551.3 ww.s19561.0 ww1.s19562.0 void.040.1215 =
  let sat.s19566.0 = [GHC.IO.Buffer.Buffer dt5.s19545.2{- value -} dt6.s19546.2 ds1.s19547.2 dt7.s19548.2{- value -} dt8.s19549.2{- value -} ww1.s19562.0{- value -}]
      sat.s19565.0 = GHC.IO.Encoding.Latin1.ascii3.closure.2 @ ds.s19540.3 dt.s19538.3{- value -} dt1.s19539.3 dt2.s19541.3{- value -} dt4.s19543.3{- value -} lvl6.s19551.3 ww.s19561.0{- value -}
      sat.s19567.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s19565.0 sat.s19566.0]
  ["GHC.Prim.Unit#" sat.s19567.0]

GHC.IO.Encoding.Latin1.ascii3.closure.4 ds.s19540.6 dt.s19538.6 dt1.s19539.6 dt2.s19541.6 dt4.s19543.6 lvl6.s19551.6 ww.s19569.1 =
  letS lwild.s19572.0 = "==#" @ ww.s19569.1{- value -} dt4.s19543.6{- value -}
  case lwild.s19572.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19538.6{- value -} dt1.s19539.6 ds.s19540.6 dt2.s19541.6{- value -} ww.s19569.1{- value -} dt4.s19543.6{- value -}]
    1 ->
        lvl6.s19551.6

GHC.IO.Encoding.Latin1.ascii3.closure.5 ds.s19540.5 ds1.s19547.3 dt.s19538.5 dt1.s19539.5 dt2.s19541.5 dt4.s19543.5 dt5.s19545.3 dt6.s19546.3 dt7.s19548.3 dt8.s19549.3 lvl6.s19551.5 ww.s19569.0 ww1.s19570.0 void.040.1216 =
  let sat.s19574.0 = [GHC.IO.Buffer.Buffer dt5.s19545.3{- value -} dt6.s19546.3 ds1.s19547.3 dt7.s19548.3{- value -} dt8.s19549.3{- value -} ww1.s19570.0{- value -}]
      sat.s19573.0 = GHC.IO.Encoding.Latin1.ascii3.closure.4 @ ds.s19540.5 dt.s19538.5{- value -} dt1.s19539.5 dt2.s19541.5{- value -} dt4.s19543.5{- value -} lvl6.s19551.5 ww.s19569.0{- value -}
      sat.s19575.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s19573.0 sat.s19574.0]
  ["GHC.Prim.Unit#" sat.s19575.0]

GHC.IO.Encoding.Latin1.ascii3.closure.6 "$wloop.s19576.1" dt.s19538.7 dt1.s19539.7 dt4.s19543.7 dt5.s19545.4 dt6.s19546.4 dt7.s19548.4 exit.s19552.1 exit1.s19560.1 exit2.s19568.1 ww.s19577.0 ww1.s19578.0 void.040.1217 =
  letS lwild.s19580.0 = ">=#" @ ww1.s19578.0{- value -} dt7.s19548.4{- value -}
  case lwild.s19580.0{- value -} of
    _ ->
        letS lwild1.s19581.0 = ">=#" @ ww.s19577.0{- value -} dt4.s19543.7{- value -}
        case lwild1.s19581.0{- value -} of
          _ ->
              letS ds2.s19582.0 = "readWideCharOffAddr#" @ dt.s19538.7{- value -} ww.s19577.0{- value -}
              case ds2.s19582.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s19584.0) ->
                    letS s'.s19585.0 = "touch#" @ dt1.s19539.7
                    case s'.s19585.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s19586.0 = "ord#" @ ipv1.s19584.0{- value -}
                               lwild2.s19587.0 = ">#" @ sat.s19586.0{- value -} 127
                          case lwild2.s19587.0{- value -} of
                            _ ->
                                letS sat.s19589.0 = "ord#" @ ipv1.s19584.0{- value -}
                                     sat.s19590.0 = "int2Word#" @ sat.s19589.0{- value -}
                                     sat.s19591.0 = "narrow8Word#" @ sat.s19590.0{- value -}
                                     sat.s19588.0 = "plusAddr#" @ dt5.s19545.4{- value -} ww1.s19578.0{- value -}
                                     s2.s19592.0 = "writeWord8OffAddr#" @ sat.s19588.0{- value -} 0 sat.s19591.0{- value -}
                                case s2.s19592.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'1.s19593.0 = "touch#" @ dt6.s19546.4
                                      case s'1.s19593.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s19595.0 = "+#" @ ww1.s19578.0{- value -} 1
                                                 sat.s19594.0 = "+#" @ ww.s19577.0{- value -} 1
                                            "$wloop.s19576.1" @ sat.s19594.0{- value -} sat.s19595.0{- value -} #"GHC.Prim.void#"
                            1 ->
                                exit.s19552.1 @ ww.s19577.0{- value -} ww1.s19578.0{- value -} #"GHC.Prim.void#"
          1 ->
              exit1.s19560.1 @ ww.s19577.0{- value -} ww1.s19578.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit2.s19568.1 @ ww.s19577.0{- value -} ww1.s19578.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.ascii5 input.s19422.0 output.s19423.0 void.040.1202 =
  letS wild.s19425.0 = input.s19422.0
  case wild.s19425.0 of
    (GHC.IO.Buffer.Buffer dt.s19426.0 dt1.s19427.0 ds.s19428.0 dt2.s19429.0 dt3.s19430.0 dt4.s19431.0) ->
        letS wild1.s19432.0 = output.s19423.0
        case wild1.s19432.0 of
          (GHC.IO.Buffer.Buffer dt5.s19433.0 dt6.s19434.0 ds1.s19435.0 dt7.s19436.0 dt8.s19437.0 dt9.s19438.0) ->
              let lvl6.s19439.0 = [GHC.IO.Buffer.Buffer dt.s19426.0{- value -} dt1.s19427.0 ds.s19428.0 dt2.s19429.0{- value -} 0 0]
                  exit.s19440.0 = GHC.IO.Encoding.Latin1.ascii5.closure.1 @ ds.s19428.0 ds1.s19435.0 dt.s19426.0{- value -} dt1.s19427.0 dt2.s19429.0{- value -} dt4.s19431.0{- value -} dt5.s19433.0{- value -} dt6.s19434.0 dt7.s19436.0{- value -} dt8.s19437.0{- value -} lvl6.s19439.0
                  exit1.s19448.0 = GHC.IO.Encoding.Latin1.ascii5.closure.3 @ ds.s19428.0 ds1.s19435.0 dt.s19426.0{- value -} dt1.s19427.0 dt2.s19429.0{- value -} dt4.s19431.0{- value -} dt5.s19433.0{- value -} dt6.s19434.0 dt7.s19436.0{- value -} dt8.s19437.0{- value -} lvl6.s19439.0
                  exit2.s19456.0 = GHC.IO.Encoding.Latin1.ascii5.closure.5 @ ds.s19428.0 ds1.s19435.0 dt.s19426.0{- value -} dt1.s19427.0 dt2.s19429.0{- value -} dt4.s19431.0{- value -} dt5.s19433.0{- value -} dt6.s19434.0 dt7.s19436.0{- value -} dt8.s19437.0{- value -} lvl6.s19439.0
              letrec "$wloop.s19464.0" = GHC.IO.Encoding.Latin1.ascii5.closure.6 @ "$wloop.s19464.0" dt.s19426.0{- value -} dt1.s19427.0 dt4.s19431.0{- value -} dt5.s19433.0{- value -} dt6.s19434.0 dt7.s19436.0{- value -} exit.s19440.0 exit1.s19448.0 exit2.s19456.0
              "$wloop.s19464.0" @ dt3.s19430.0{- value -} dt9.s19438.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.ascii5.closure.0 ds.s19428.2 dt.s19426.2 dt1.s19427.2 dt2.s19429.2 dt4.s19431.2 lvl6.s19439.2 ww.s19441.1 =
  letS lwild.s19444.0 = "==#" @ ww.s19441.1{- value -} dt4.s19431.2{- value -}
  case lwild.s19444.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19426.2{- value -} dt1.s19427.2 ds.s19428.2 dt2.s19429.2{- value -} ww.s19441.1{- value -} dt4.s19431.2{- value -}]
    1 ->
        lvl6.s19439.2

GHC.IO.Encoding.Latin1.ascii5.closure.1 ds.s19428.1 ds1.s19435.1 dt.s19426.1 dt1.s19427.1 dt2.s19429.1 dt4.s19431.1 dt5.s19433.1 dt6.s19434.1 dt7.s19436.1 dt8.s19437.1 lvl6.s19439.1 ww.s19441.0 ww1.s19442.0 void.040.1203 =
  let sat.s19446.0 = [GHC.IO.Buffer.Buffer dt5.s19433.1{- value -} dt6.s19434.1 ds1.s19435.1 dt7.s19436.1{- value -} dt8.s19437.1{- value -} ww1.s19442.0{- value -}]
      sat.s19445.0 = GHC.IO.Encoding.Latin1.ascii5.closure.0 @ ds.s19428.1 dt.s19426.1{- value -} dt1.s19427.1 dt2.s19429.1{- value -} dt4.s19431.1{- value -} lvl6.s19439.1 ww.s19441.0{- value -}
      sat.s19447.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s19445.0 sat.s19446.0]
  ["GHC.Prim.Unit#" sat.s19447.0]

GHC.IO.Encoding.Latin1.ascii5.closure.2 ds.s19428.4 dt.s19426.4 dt1.s19427.4 dt2.s19429.4 dt4.s19431.4 lvl6.s19439.4 ww.s19449.1 =
  letS lwild.s19452.0 = "==#" @ ww.s19449.1{- value -} dt4.s19431.4{- value -}
  case lwild.s19452.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19426.4{- value -} dt1.s19427.4 ds.s19428.4 dt2.s19429.4{- value -} ww.s19449.1{- value -} dt4.s19431.4{- value -}]
    1 ->
        lvl6.s19439.4

GHC.IO.Encoding.Latin1.ascii5.closure.3 ds.s19428.3 ds1.s19435.2 dt.s19426.3 dt1.s19427.3 dt2.s19429.3 dt4.s19431.3 dt5.s19433.2 dt6.s19434.2 dt7.s19436.2 dt8.s19437.2 lvl6.s19439.3 ww.s19449.0 ww1.s19450.0 void.040.1204 =
  let sat.s19454.0 = [GHC.IO.Buffer.Buffer dt5.s19433.2{- value -} dt6.s19434.2 ds1.s19435.2 dt7.s19436.2{- value -} dt8.s19437.2{- value -} ww1.s19450.0{- value -}]
      sat.s19453.0 = GHC.IO.Encoding.Latin1.ascii5.closure.2 @ ds.s19428.3 dt.s19426.3{- value -} dt1.s19427.3 dt2.s19429.3{- value -} dt4.s19431.3{- value -} lvl6.s19439.3 ww.s19449.0{- value -}
      sat.s19455.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s19453.0 sat.s19454.0]
  ["GHC.Prim.Unit#" sat.s19455.0]

GHC.IO.Encoding.Latin1.ascii5.closure.4 ds.s19428.6 dt.s19426.6 dt1.s19427.6 dt2.s19429.6 dt4.s19431.6 lvl6.s19439.6 ww.s19457.1 =
  letS lwild.s19460.0 = "==#" @ ww.s19457.1{- value -} dt4.s19431.6{- value -}
  case lwild.s19460.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19426.6{- value -} dt1.s19427.6 ds.s19428.6 dt2.s19429.6{- value -} ww.s19457.1{- value -} dt4.s19431.6{- value -}]
    1 ->
        lvl6.s19439.6

GHC.IO.Encoding.Latin1.ascii5.closure.5 ds.s19428.5 ds1.s19435.3 dt.s19426.5 dt1.s19427.5 dt2.s19429.5 dt4.s19431.5 dt5.s19433.3 dt6.s19434.3 dt7.s19436.3 dt8.s19437.3 lvl6.s19439.5 ww.s19457.0 ww1.s19458.0 void.040.1205 =
  let sat.s19462.0 = [GHC.IO.Buffer.Buffer dt5.s19433.3{- value -} dt6.s19434.3 ds1.s19435.3 dt7.s19436.3{- value -} dt8.s19437.3{- value -} ww1.s19458.0{- value -}]
      sat.s19461.0 = GHC.IO.Encoding.Latin1.ascii5.closure.4 @ ds.s19428.5 dt.s19426.5{- value -} dt1.s19427.5 dt2.s19429.5{- value -} dt4.s19431.5{- value -} lvl6.s19439.5 ww.s19457.0{- value -}
      sat.s19463.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s19461.0 sat.s19462.0]
  ["GHC.Prim.Unit#" sat.s19463.0]

GHC.IO.Encoding.Latin1.ascii5.closure.6 "$wloop.s19464.1" dt.s19426.7 dt1.s19427.7 dt4.s19431.7 dt5.s19433.4 dt6.s19434.4 dt7.s19436.4 exit.s19440.1 exit1.s19448.1 exit2.s19456.1 ww.s19465.0 ww1.s19466.0 void.040.1206 =
  letS lwild.s19468.0 = ">=#" @ ww1.s19466.0{- value -} dt7.s19436.4{- value -}
  case lwild.s19468.0{- value -} of
    _ ->
        letS lwild1.s19469.0 = ">=#" @ ww.s19465.0{- value -} dt4.s19431.7{- value -}
        case lwild1.s19469.0{- value -} of
          _ ->
              letS sat.s19470.0 = "plusAddr#" @ dt.s19426.7{- value -} ww.s19465.0{- value -}
                   ds2.s19471.0 = "readWord8OffAddr#" @ sat.s19470.0{- value -} 0
              case ds2.s19471.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s19473.0) ->
                    letS s'.s19474.0 = "touch#" @ dt1.s19427.7
                    case s'.s19474.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS lwild2.s19475.0 = "gtWord#" @ ipv1.s19473.0{- value -} 127u
                          case lwild2.s19475.0{- value -} of
                            _ ->
                                letS sat.s19476.0 = "word2Int#" @ ipv1.s19473.0{- value -}
                                     sat.s19477.0 = "chr#" @ sat.s19476.0{- value -}
                                     s2.s19478.0 = "writeWideCharOffAddr#" @ dt5.s19433.4{- value -} ww1.s19466.0{- value -} sat.s19477.0{- value -}
                                case s2.s19478.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'1.s19479.0 = "touch#" @ dt6.s19434.4
                                      case s'1.s19479.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s19481.0 = "+#" @ ww1.s19466.0{- value -} 1
                                                 sat.s19480.0 = "+#" @ ww.s19465.0{- value -} 1
                                            "$wloop.s19464.1" @ sat.s19480.0{- value -} sat.s19481.0{- value -} #"GHC.Prim.void#"
                            1 ->
                                exit.s19440.1 @ ww.s19465.0{- value -} ww1.s19466.0{- value -} #"GHC.Prim.void#"
          1 ->
              exit1.s19448.1 @ ww.s19465.0{- value -} ww1.s19466.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit2.s19456.1 @ ww.s19465.0{- value -} ww1.s19466.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.ascii6 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Latin1.ascii7{- value -}

GHC.IO.Encoding.Latin1.ascii7 =
  #"ASCII"

GHC.IO.Encoding.Latin1.latin1_checked2 input.s19596.0 output.s19597.0 void.040.1219 =
  letS wild.s19599.0 = input.s19596.0
  case wild.s19599.0 of
    (GHC.IO.Buffer.Buffer dt.s19600.0 dt1.s19601.0 ds.s19602.0 dt2.s19603.0 dt3.s19604.0 dt4.s19605.0) ->
        letS wild1.s19606.0 = output.s19597.0
        case wild1.s19606.0 of
          (GHC.IO.Buffer.Buffer dt5.s19607.0 dt6.s19608.0 ds1.s19609.0 dt7.s19610.0 dt8.s19611.0 dt9.s19612.0) ->
              let lvl6.s19613.0 = [GHC.IO.Buffer.Buffer dt.s19600.0{- value -} dt1.s19601.0 ds.s19602.0 dt2.s19603.0{- value -} 0 0]
                  exit.s19614.0 = GHC.IO.Encoding.Latin1.latin1_checked2.closure.1 @ ds.s19602.0 ds1.s19609.0 dt.s19600.0{- value -} dt1.s19601.0 dt2.s19603.0{- value -} dt4.s19605.0{- value -} dt5.s19607.0{- value -} dt6.s19608.0 dt7.s19610.0{- value -} dt8.s19611.0{- value -} lvl6.s19613.0
                  exit1.s19622.0 = GHC.IO.Encoding.Latin1.latin1_checked2.closure.3 @ ds.s19602.0 ds1.s19609.0 dt.s19600.0{- value -} dt1.s19601.0 dt2.s19603.0{- value -} dt4.s19605.0{- value -} dt5.s19607.0{- value -} dt6.s19608.0 dt7.s19610.0{- value -} dt8.s19611.0{- value -} lvl6.s19613.0
                  exit2.s19630.0 = GHC.IO.Encoding.Latin1.latin1_checked2.closure.5 @ ds.s19602.0 ds1.s19609.0 dt.s19600.0{- value -} dt1.s19601.0 dt2.s19603.0{- value -} dt4.s19605.0{- value -} dt5.s19607.0{- value -} dt6.s19608.0 dt7.s19610.0{- value -} dt8.s19611.0{- value -} lvl6.s19613.0
              letrec "$wloop.s19638.0" = GHC.IO.Encoding.Latin1.latin1_checked2.closure.6 @ "$wloop.s19638.0" dt.s19600.0{- value -} dt1.s19601.0 dt4.s19605.0{- value -} dt5.s19607.0{- value -} dt6.s19608.0 dt7.s19610.0{- value -} exit.s19614.0 exit1.s19622.0 exit2.s19630.0
              "$wloop.s19638.0" @ dt3.s19604.0{- value -} dt9.s19612.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.latin1_checked2.closure.0 ds.s19602.2 dt.s19600.2 dt1.s19601.2 dt2.s19603.2 dt4.s19605.2 lvl6.s19613.2 ww.s19615.1 =
  letS lwild.s19618.0 = "==#" @ ww.s19615.1{- value -} dt4.s19605.2{- value -}
  case lwild.s19618.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19600.2{- value -} dt1.s19601.2 ds.s19602.2 dt2.s19603.2{- value -} ww.s19615.1{- value -} dt4.s19605.2{- value -}]
    1 ->
        lvl6.s19613.2

GHC.IO.Encoding.Latin1.latin1_checked2.closure.1 ds.s19602.1 ds1.s19609.1 dt.s19600.1 dt1.s19601.1 dt2.s19603.1 dt4.s19605.1 dt5.s19607.1 dt6.s19608.1 dt7.s19610.1 dt8.s19611.1 lvl6.s19613.1 ww.s19615.0 ww1.s19616.0 void.040.1220 =
  let sat.s19620.0 = [GHC.IO.Buffer.Buffer dt5.s19607.1{- value -} dt6.s19608.1 ds1.s19609.1 dt7.s19610.1{- value -} dt8.s19611.1{- value -} ww1.s19616.0{- value -}]
      sat.s19619.0 = GHC.IO.Encoding.Latin1.latin1_checked2.closure.0 @ ds.s19602.1 dt.s19600.1{- value -} dt1.s19601.1 dt2.s19603.1{- value -} dt4.s19605.1{- value -} lvl6.s19613.1 ww.s19615.0{- value -}
      sat.s19621.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s19619.0 sat.s19620.0]
  ["GHC.Prim.Unit#" sat.s19621.0]

GHC.IO.Encoding.Latin1.latin1_checked2.closure.2 ds.s19602.4 dt.s19600.4 dt1.s19601.4 dt2.s19603.4 dt4.s19605.4 lvl6.s19613.4 ww.s19623.1 =
  letS lwild.s19626.0 = "==#" @ ww.s19623.1{- value -} dt4.s19605.4{- value -}
  case lwild.s19626.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19600.4{- value -} dt1.s19601.4 ds.s19602.4 dt2.s19603.4{- value -} ww.s19623.1{- value -} dt4.s19605.4{- value -}]
    1 ->
        lvl6.s19613.4

GHC.IO.Encoding.Latin1.latin1_checked2.closure.3 ds.s19602.3 ds1.s19609.2 dt.s19600.3 dt1.s19601.3 dt2.s19603.3 dt4.s19605.3 dt5.s19607.2 dt6.s19608.2 dt7.s19610.2 dt8.s19611.2 lvl6.s19613.3 ww.s19623.0 ww1.s19624.0 void.040.1221 =
  let sat.s19628.0 = [GHC.IO.Buffer.Buffer dt5.s19607.2{- value -} dt6.s19608.2 ds1.s19609.2 dt7.s19610.2{- value -} dt8.s19611.2{- value -} ww1.s19624.0{- value -}]
      sat.s19627.0 = GHC.IO.Encoding.Latin1.latin1_checked2.closure.2 @ ds.s19602.3 dt.s19600.3{- value -} dt1.s19601.3 dt2.s19603.3{- value -} dt4.s19605.3{- value -} lvl6.s19613.3 ww.s19623.0{- value -}
      sat.s19629.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s19627.0 sat.s19628.0]
  ["GHC.Prim.Unit#" sat.s19629.0]

GHC.IO.Encoding.Latin1.latin1_checked2.closure.4 ds.s19602.6 dt.s19600.6 dt1.s19601.6 dt2.s19603.6 dt4.s19605.6 lvl6.s19613.6 ww.s19631.1 =
  letS lwild.s19634.0 = "==#" @ ww.s19631.1{- value -} dt4.s19605.6{- value -}
  case lwild.s19634.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19600.6{- value -} dt1.s19601.6 ds.s19602.6 dt2.s19603.6{- value -} ww.s19631.1{- value -} dt4.s19605.6{- value -}]
    1 ->
        lvl6.s19613.6

GHC.IO.Encoding.Latin1.latin1_checked2.closure.5 ds.s19602.5 ds1.s19609.3 dt.s19600.5 dt1.s19601.5 dt2.s19603.5 dt4.s19605.5 dt5.s19607.3 dt6.s19608.3 dt7.s19610.3 dt8.s19611.3 lvl6.s19613.5 ww.s19631.0 ww1.s19632.0 void.040.1222 =
  let sat.s19636.0 = [GHC.IO.Buffer.Buffer dt5.s19607.3{- value -} dt6.s19608.3 ds1.s19609.3 dt7.s19610.3{- value -} dt8.s19611.3{- value -} ww1.s19632.0{- value -}]
      sat.s19635.0 = GHC.IO.Encoding.Latin1.latin1_checked2.closure.4 @ ds.s19602.5 dt.s19600.5{- value -} dt1.s19601.5 dt2.s19603.5{- value -} dt4.s19605.5{- value -} lvl6.s19613.5 ww.s19631.0{- value -}
      sat.s19637.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s19635.0 sat.s19636.0]
  ["GHC.Prim.Unit#" sat.s19637.0]

GHC.IO.Encoding.Latin1.latin1_checked2.closure.6 "$wloop.s19638.1" dt.s19600.7 dt1.s19601.7 dt4.s19605.7 dt5.s19607.4 dt6.s19608.4 dt7.s19610.4 exit.s19614.1 exit1.s19622.1 exit2.s19630.1 ww.s19639.0 ww1.s19640.0 void.040.1223 =
  letS lwild.s19642.0 = ">=#" @ ww1.s19640.0{- value -} dt7.s19610.4{- value -}
  case lwild.s19642.0{- value -} of
    _ ->
        letS lwild1.s19643.0 = ">=#" @ ww.s19639.0{- value -} dt4.s19605.7{- value -}
        case lwild1.s19643.0{- value -} of
          _ ->
              letS ds2.s19644.0 = "readWideCharOffAddr#" @ dt.s19600.7{- value -} ww.s19639.0{- value -}
              case ds2.s19644.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s19646.0) ->
                    letS s'.s19647.0 = "touch#" @ dt1.s19601.7
                    case s'.s19647.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s19648.0 = "ord#" @ ipv1.s19646.0{- value -}
                               lwild2.s19649.0 = ">#" @ sat.s19648.0{- value -} 255
                          case lwild2.s19649.0{- value -} of
                            _ ->
                                letS sat.s19651.0 = "ord#" @ ipv1.s19646.0{- value -}
                                     sat.s19652.0 = "int2Word#" @ sat.s19651.0{- value -}
                                     sat.s19653.0 = "narrow8Word#" @ sat.s19652.0{- value -}
                                     sat.s19650.0 = "plusAddr#" @ dt5.s19607.4{- value -} ww1.s19640.0{- value -}
                                     s2.s19654.0 = "writeWord8OffAddr#" @ sat.s19650.0{- value -} 0 sat.s19653.0{- value -}
                                case s2.s19654.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'1.s19655.0 = "touch#" @ dt6.s19608.4
                                      case s'1.s19655.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s19657.0 = "+#" @ ww1.s19640.0{- value -} 1
                                                 sat.s19656.0 = "+#" @ ww.s19639.0{- value -} 1
                                            "$wloop.s19638.1" @ sat.s19656.0{- value -} sat.s19657.0{- value -} #"GHC.Prim.void#"
                            1 ->
                                exit.s19614.1 @ ww.s19639.0{- value -} ww1.s19640.0{- value -} #"GHC.Prim.void#"
          1 ->
              exit1.s19622.1 @ ww.s19639.0{- value -} ww1.s19640.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit2.s19630.1 @ ww.s19639.0{- value -} ww1.s19640.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.latin3 input.s19482.0 output.s19483.0 void.040.1208 =
  letS wild.s19485.0 = input.s19482.0
  case wild.s19485.0 of
    (GHC.IO.Buffer.Buffer dt.s19486.0 dt1.s19487.0 ds.s19488.0 dt2.s19489.0 dt3.s19490.0 dt4.s19491.0) ->
        letS wild1.s19492.0 = output.s19483.0
        case wild1.s19492.0 of
          (GHC.IO.Buffer.Buffer dt5.s19493.0 dt6.s19494.0 ds1.s19495.0 dt7.s19496.0 dt8.s19497.0 dt9.s19498.0) ->
              let lvl6.s19499.0 = [GHC.IO.Buffer.Buffer dt.s19486.0{- value -} dt1.s19487.0 ds.s19488.0 dt2.s19489.0{- value -} 0 0]
                  exit.s19500.0 = GHC.IO.Encoding.Latin1.latin3.closure.1 @ ds.s19488.0 ds1.s19495.0 dt.s19486.0{- value -} dt1.s19487.0 dt2.s19489.0{- value -} dt4.s19491.0{- value -} dt5.s19493.0{- value -} dt6.s19494.0 dt7.s19496.0{- value -} dt8.s19497.0{- value -} lvl6.s19499.0
                  exit1.s19508.0 = GHC.IO.Encoding.Latin1.latin3.closure.3 @ ds.s19488.0 ds1.s19495.0 dt.s19486.0{- value -} dt1.s19487.0 dt2.s19489.0{- value -} dt4.s19491.0{- value -} dt5.s19493.0{- value -} dt6.s19494.0 dt7.s19496.0{- value -} dt8.s19497.0{- value -} lvl6.s19499.0
              letrec "$wloop.s19516.0" = GHC.IO.Encoding.Latin1.latin3.closure.4 @ "$wloop.s19516.0" dt.s19486.0{- value -} dt1.s19487.0 dt4.s19491.0{- value -} dt5.s19493.0{- value -} dt6.s19494.0 dt7.s19496.0{- value -} exit.s19500.0 exit1.s19508.0
              "$wloop.s19516.0" @ dt3.s19490.0{- value -} dt9.s19498.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.latin3.closure.0 ds.s19488.2 dt.s19486.2 dt1.s19487.2 dt2.s19489.2 dt4.s19491.2 lvl6.s19499.2 ww.s19501.1 =
  letS lwild.s19504.0 = "==#" @ ww.s19501.1{- value -} dt4.s19491.2{- value -}
  case lwild.s19504.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19486.2{- value -} dt1.s19487.2 ds.s19488.2 dt2.s19489.2{- value -} ww.s19501.1{- value -} dt4.s19491.2{- value -}]
    1 ->
        lvl6.s19499.2

GHC.IO.Encoding.Latin1.latin3.closure.1 ds.s19488.1 ds1.s19495.1 dt.s19486.1 dt1.s19487.1 dt2.s19489.1 dt4.s19491.1 dt5.s19493.1 dt6.s19494.1 dt7.s19496.1 dt8.s19497.1 lvl6.s19499.1 ww.s19501.0 ww1.s19502.0 void.040.1209 =
  let sat.s19506.0 = [GHC.IO.Buffer.Buffer dt5.s19493.1{- value -} dt6.s19494.1 ds1.s19495.1 dt7.s19496.1{- value -} dt8.s19497.1{- value -} ww1.s19502.0{- value -}]
      sat.s19505.0 = GHC.IO.Encoding.Latin1.latin3.closure.0 @ ds.s19488.1 dt.s19486.1{- value -} dt1.s19487.1 dt2.s19489.1{- value -} dt4.s19491.1{- value -} lvl6.s19499.1 ww.s19501.0{- value -}
      sat.s19507.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s19505.0 sat.s19506.0]
  ["GHC.Prim.Unit#" sat.s19507.0]

GHC.IO.Encoding.Latin1.latin3.closure.2 ds.s19488.4 dt.s19486.4 dt1.s19487.4 dt2.s19489.4 dt4.s19491.4 lvl6.s19499.4 ww.s19509.1 =
  letS lwild.s19512.0 = "==#" @ ww.s19509.1{- value -} dt4.s19491.4{- value -}
  case lwild.s19512.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19486.4{- value -} dt1.s19487.4 ds.s19488.4 dt2.s19489.4{- value -} ww.s19509.1{- value -} dt4.s19491.4{- value -}]
    1 ->
        lvl6.s19499.4

GHC.IO.Encoding.Latin1.latin3.closure.3 ds.s19488.3 ds1.s19495.2 dt.s19486.3 dt1.s19487.3 dt2.s19489.3 dt4.s19491.3 dt5.s19493.2 dt6.s19494.2 dt7.s19496.2 dt8.s19497.2 lvl6.s19499.3 ww.s19509.0 ww1.s19510.0 void.040.1210 =
  let sat.s19514.0 = [GHC.IO.Buffer.Buffer dt5.s19493.2{- value -} dt6.s19494.2 ds1.s19495.2 dt7.s19496.2{- value -} dt8.s19497.2{- value -} ww1.s19510.0{- value -}]
      sat.s19513.0 = GHC.IO.Encoding.Latin1.latin3.closure.2 @ ds.s19488.3 dt.s19486.3{- value -} dt1.s19487.3 dt2.s19489.3{- value -} dt4.s19491.3{- value -} lvl6.s19499.3 ww.s19509.0{- value -}
      sat.s19515.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s19513.0 sat.s19514.0]
  ["GHC.Prim.Unit#" sat.s19515.0]

GHC.IO.Encoding.Latin1.latin3.closure.4 "$wloop.s19516.1" dt.s19486.5 dt1.s19487.5 dt4.s19491.5 dt5.s19493.3 dt6.s19494.3 dt7.s19496.3 exit.s19500.1 exit1.s19508.1 ww.s19517.0 ww1.s19518.0 void.040.1211 =
  letS lwild.s19520.0 = ">=#" @ ww1.s19518.0{- value -} dt7.s19496.3{- value -}
  case lwild.s19520.0{- value -} of
    _ ->
        letS lwild1.s19521.0 = ">=#" @ ww.s19517.0{- value -} dt4.s19491.5{- value -}
        case lwild1.s19521.0{- value -} of
          _ ->
              letS ds2.s19522.0 = "readWideCharOffAddr#" @ dt.s19486.5{- value -} ww.s19517.0{- value -}
              case ds2.s19522.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s19524.0) ->
                    letS s'.s19525.0 = "touch#" @ dt1.s19487.5
                    case s'.s19525.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s19527.0 = "ord#" @ ipv1.s19524.0{- value -}
                               sat.s19528.0 = "int2Word#" @ sat.s19527.0{- value -}
                               sat.s19529.0 = "narrow8Word#" @ sat.s19528.0{- value -}
                               sat.s19526.0 = "plusAddr#" @ dt5.s19493.3{- value -} ww1.s19518.0{- value -}
                               s2.s19530.0 = "writeWord8OffAddr#" @ sat.s19526.0{- value -} 0 sat.s19529.0{- value -}
                          case s2.s19530.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'1.s19531.0 = "touch#" @ dt6.s19494.3
                                case s'1.s19531.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s19533.0 = "+#" @ ww1.s19518.0{- value -} 1
                                           sat.s19532.0 = "+#" @ ww.s19517.0{- value -} 1
                                      "$wloop.s19516.1" @ sat.s19532.0{- value -} sat.s19533.0{- value -} #"GHC.Prim.void#"
          1 ->
              exit.s19500.1 @ ww.s19517.0{- value -} ww1.s19518.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit1.s19508.1 @ ww.s19517.0{- value -} ww1.s19518.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.latin5 input.s19371.0 output.s19372.0 void.040.1197 =
  letS wild.s19374.0 = input.s19371.0
  case wild.s19374.0 of
    (GHC.IO.Buffer.Buffer dt.s19375.0 dt1.s19376.0 ds.s19377.0 dt2.s19378.0 dt3.s19379.0 dt4.s19380.0) ->
        letS wild1.s19381.0 = output.s19372.0
        case wild1.s19381.0 of
          (GHC.IO.Buffer.Buffer dt5.s19382.0 dt6.s19383.0 ds1.s19384.0 dt7.s19385.0 dt8.s19386.0 dt9.s19387.0) ->
              let lvl6.s19388.0 = [GHC.IO.Buffer.Buffer dt.s19375.0{- value -} dt1.s19376.0 ds.s19377.0 dt2.s19378.0{- value -} 0 0]
                  exit.s19389.0 = GHC.IO.Encoding.Latin1.latin5.closure.1 @ ds.s19377.0 ds1.s19384.0 dt.s19375.0{- value -} dt1.s19376.0 dt2.s19378.0{- value -} dt4.s19380.0{- value -} dt5.s19382.0{- value -} dt6.s19383.0 dt7.s19385.0{- value -} dt8.s19386.0{- value -} lvl6.s19388.0
                  exit1.s19397.0 = GHC.IO.Encoding.Latin1.latin5.closure.3 @ ds.s19377.0 ds1.s19384.0 dt.s19375.0{- value -} dt1.s19376.0 dt2.s19378.0{- value -} dt4.s19380.0{- value -} dt5.s19382.0{- value -} dt6.s19383.0 dt7.s19385.0{- value -} dt8.s19386.0{- value -} lvl6.s19388.0
              letrec "$wloop.s19405.0" = GHC.IO.Encoding.Latin1.latin5.closure.4 @ "$wloop.s19405.0" dt.s19375.0{- value -} dt1.s19376.0 dt4.s19380.0{- value -} dt5.s19382.0{- value -} dt6.s19383.0 dt7.s19385.0{- value -} exit.s19389.0 exit1.s19397.0
              "$wloop.s19405.0" @ dt3.s19379.0{- value -} dt9.s19387.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.latin5.closure.0 ds.s19377.2 dt.s19375.2 dt1.s19376.2 dt2.s19378.2 dt4.s19380.2 lvl6.s19388.2 ww.s19390.1 =
  letS lwild.s19393.0 = "==#" @ ww.s19390.1{- value -} dt4.s19380.2{- value -}
  case lwild.s19393.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19375.2{- value -} dt1.s19376.2 ds.s19377.2 dt2.s19378.2{- value -} ww.s19390.1{- value -} dt4.s19380.2{- value -}]
    1 ->
        lvl6.s19388.2

GHC.IO.Encoding.Latin1.latin5.closure.1 ds.s19377.1 ds1.s19384.1 dt.s19375.1 dt1.s19376.1 dt2.s19378.1 dt4.s19380.1 dt5.s19382.1 dt6.s19383.1 dt7.s19385.1 dt8.s19386.1 lvl6.s19388.1 ww.s19390.0 ww1.s19391.0 void.040.1198 =
  let sat.s19395.0 = [GHC.IO.Buffer.Buffer dt5.s19382.1{- value -} dt6.s19383.1 ds1.s19384.1 dt7.s19385.1{- value -} dt8.s19386.1{- value -} ww1.s19391.0{- value -}]
      sat.s19394.0 = GHC.IO.Encoding.Latin1.latin5.closure.0 @ ds.s19377.1 dt.s19375.1{- value -} dt1.s19376.1 dt2.s19378.1{- value -} dt4.s19380.1{- value -} lvl6.s19388.1 ww.s19390.0{- value -}
      sat.s19396.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s19394.0 sat.s19395.0]
  ["GHC.Prim.Unit#" sat.s19396.0]

GHC.IO.Encoding.Latin1.latin5.closure.2 ds.s19377.4 dt.s19375.4 dt1.s19376.4 dt2.s19378.4 dt4.s19380.4 lvl6.s19388.4 ww.s19398.1 =
  letS lwild.s19401.0 = "==#" @ ww.s19398.1{- value -} dt4.s19380.4{- value -}
  case lwild.s19401.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s19375.4{- value -} dt1.s19376.4 ds.s19377.4 dt2.s19378.4{- value -} ww.s19398.1{- value -} dt4.s19380.4{- value -}]
    1 ->
        lvl6.s19388.4

GHC.IO.Encoding.Latin1.latin5.closure.3 ds.s19377.3 ds1.s19384.2 dt.s19375.3 dt1.s19376.3 dt2.s19378.3 dt4.s19380.3 dt5.s19382.2 dt6.s19383.2 dt7.s19385.2 dt8.s19386.2 lvl6.s19388.3 ww.s19398.0 ww1.s19399.0 void.040.1199 =
  let sat.s19403.0 = [GHC.IO.Buffer.Buffer dt5.s19382.2{- value -} dt6.s19383.2 ds1.s19384.2 dt7.s19385.2{- value -} dt8.s19386.2{- value -} ww1.s19399.0{- value -}]
      sat.s19402.0 = GHC.IO.Encoding.Latin1.latin5.closure.2 @ ds.s19377.3 dt.s19375.3{- value -} dt1.s19376.3 dt2.s19378.3{- value -} dt4.s19380.3{- value -} lvl6.s19388.3 ww.s19398.0{- value -}
      sat.s19404.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s19402.0 sat.s19403.0]
  ["GHC.Prim.Unit#" sat.s19404.0]

GHC.IO.Encoding.Latin1.latin5.closure.4 "$wloop.s19405.1" dt.s19375.5 dt1.s19376.5 dt4.s19380.5 dt5.s19382.3 dt6.s19383.3 dt7.s19385.3 exit.s19389.1 exit1.s19397.1 ww.s19406.0 ww1.s19407.0 void.040.1200 =
  letS lwild.s19409.0 = ">=#" @ ww1.s19407.0{- value -} dt7.s19385.3{- value -}
  case lwild.s19409.0{- value -} of
    _ ->
        letS lwild1.s19410.0 = ">=#" @ ww.s19406.0{- value -} dt4.s19380.5{- value -}
        case lwild1.s19410.0{- value -} of
          _ ->
              letS sat.s19411.0 = "plusAddr#" @ dt.s19375.5{- value -} ww.s19406.0{- value -}
                   ds2.s19412.0 = "readWord8OffAddr#" @ sat.s19411.0{- value -} 0
              case ds2.s19412.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s19414.0) ->
                    letS s'.s19415.0 = "touch#" @ dt1.s19376.5
                    case s'.s19415.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s19416.0 = "word2Int#" @ ipv1.s19414.0{- value -}
                               sat.s19417.0 = "chr#" @ sat.s19416.0{- value -}
                               s2.s19418.0 = "writeWideCharOffAddr#" @ dt5.s19382.3{- value -} ww1.s19407.0{- value -} sat.s19417.0{- value -}
                          case s2.s19418.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'1.s19419.0 = "touch#" @ dt6.s19383.3
                                case s'1.s19419.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s19421.0 = "+#" @ ww1.s19407.0{- value -} 1
                                           sat.s19420.0 = "+#" @ ww.s19406.0{- value -} 1
                                      "$wloop.s19405.1" @ sat.s19420.0{- value -} sat.s19421.0{- value -} #"GHC.Prim.void#"
          1 ->
              exit.s19389.1 @ ww.s19406.0{- value -} ww1.s19407.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit1.s19397.1 @ ww.s19406.0{- value -} ww1.s19407.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.latin6 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.Latin1.latin7{- value -}

GHC.IO.Encoding.Latin1.latin7 =
  #"ISO-8859-1"

GHC.IO.Encoding.Latin1.mkAscii cfm.s19661.0 =
  let sat.s19669.0 = GHC.IO.Encoding.Latin1.mkAscii.closure.1 @ cfm.s19661.0
      sat.s19665.0 = GHC.IO.Encoding.Latin1.mkAscii.closure.3 @ cfm.s19661.0
  [GHC.IO.Encoding.Types.TextEncoding GHC.IO.Encoding.Latin1.ascii6 sat.s19665.0 sat.s19669.0]

GHC.IO.Encoding.Latin1.mkAscii.closure.0 cfm.s19661.2 eta.B3.308 eta.B2.757 void.X62.3 =
  GHC.IO.Encoding.Failure.recoverEncode1 @ cfm.s19661.2 eta.B3.308 eta.B2.757 #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.mkAscii.closure.1 cfm.s19661.1 void.040.1227 =
  let sat.s19667.0 = GHC.IO.Encoding.Latin1.mkAscii.closure.0 @ cfm.s19661.1
      sat.s19668.0 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.Latin1.ascii3 sat.s19667.0 GHC.IO.Encoding.Latin1.mkAscii2 GHC.IO.Encoding.Latin1.mkAscii2 GHC.IO.Encoding.Latin1.mkAscii1]
  ["GHC.Prim.Unit#" sat.s19668.0]

GHC.IO.Encoding.Latin1.mkAscii.closure.2 cfm.s19661.4 eta.B3.309 eta.B2.758 void.X63.3 =
  GHC.IO.Encoding.Failure.recoverDecode1 @ cfm.s19661.4 eta.B3.309 eta.B2.758 #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.mkAscii.closure.3 cfm.s19661.3 void.040.1228 =
  let sat.s19663.0 = GHC.IO.Encoding.Latin1.mkAscii.closure.2 @ cfm.s19661.3
      sat.s19664.0 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.Latin1.ascii5 sat.s19663.0 GHC.IO.Encoding.Latin1.mkAscii2 GHC.IO.Encoding.Latin1.mkAscii2 GHC.IO.Encoding.Latin1.mkAscii1]
  ["GHC.Prim.Unit#" sat.s19664.0]

GHC.IO.Encoding.Latin1.mkAscii1 ds.s19659.0 void.040.1226 =
  ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.Latin1.mkAscii2 void.040.1225 =
  ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.Latin1.mkLatin1_checked cfm.s19710.0 =
  let sat.s19718.0 = GHC.IO.Encoding.Latin1.mkLatin1_checked.closure.1 @ cfm.s19710.0
      sat.s19714.0 = GHC.IO.Encoding.Latin1.mkLatin1_checked.closure.3 @ cfm.s19710.0
  [GHC.IO.Encoding.Types.TextEncoding GHC.IO.Encoding.Latin1.latin6 sat.s19714.0 sat.s19718.0]

GHC.IO.Encoding.Latin1.mkLatin1_checked.closure.0 cfm.s19710.2 eta.B3.310 eta.B2.759 void.X71.1 =
  GHC.IO.Encoding.Failure.recoverEncode1 @ cfm.s19710.2 eta.B3.310 eta.B2.759 #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.mkLatin1_checked.closure.1 cfm.s19710.1 void.040.1233 =
  let sat.s19716.0 = GHC.IO.Encoding.Latin1.mkLatin1_checked.closure.0 @ cfm.s19710.1
      sat.s19717.0 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.Latin1.latin1_checked2 sat.s19716.0 GHC.IO.Encoding.Latin1.mkAscii2 GHC.IO.Encoding.Latin1.mkAscii2 GHC.IO.Encoding.Latin1.mkAscii1]
  ["GHC.Prim.Unit#" sat.s19717.0]

GHC.IO.Encoding.Latin1.mkLatin1_checked.closure.2 cfm.s19710.4 eta.B3.311 eta.B2.760 void.X72.2 =
  GHC.IO.Encoding.Failure.recoverDecode1 @ cfm.s19710.4 eta.B3.311 eta.B2.760 #"GHC.Prim.void#"

GHC.IO.Encoding.Latin1.mkLatin1_checked.closure.3 cfm.s19710.3 void.040.1234 =
  let sat.s19712.0 = GHC.IO.Encoding.Latin1.mkLatin1_checked.closure.2 @ cfm.s19710.3
      sat.s19713.0 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.Latin1.latin5 sat.s19712.0 GHC.IO.Encoding.Latin1.mkAscii2 GHC.IO.Encoding.Latin1.mkAscii2 GHC.IO.Encoding.Latin1.mkAscii1]
  ["GHC.Prim.Unit#" sat.s19713.0]

GHC.IO.Encoding.Types.InputUnderflow =
  [GHC.IO.Encoding.Types.InputUnderflow]

GHC.IO.Encoding.Types.InvalidSequence =
  [GHC.IO.Encoding.Types.InvalidSequence]

GHC.IO.Encoding.Types.OutputUnderflow =
  [GHC.IO.Encoding.Types.OutputUnderflow]

GHC.IO.Encoding.Types.close ds.s12914.0 =
  letS wild.s12915.0 = ds.s12914.0
  case wild.s12915.0 of
    (GHC.IO.Encoding.Types.BufferCodec ds1.s12916.0 ds2.s12917.0 ds3.s12918.0 ds4.s12919.0 ds5.s12920.0) ->
        ds3.s12918.0

"GHC.IO.Encoding.UTF16.$wutf16_decode" ww.s26380.0 ww1.s26381.0 ww2.s26382.0 ww3.s26383.0 ww4.s26384.0 ww5.s26385.0 ww6.s26386.0 w.s26387.0 void.040.1291 =
  letS ds1.s26389.1 = "readMutVar#" @ ww.s26380.0
  case ds1.s26389.1 of
    ("GHC.Prim.Unit#" ipv1.s26391.0) ->
        letS wild.s26392.0 = ipv1.s26391.0
        case wild.s26392.0 of
          (GHC.Maybe.Nothing) ->
              letS sat.s26393.0 = "-#" @ ww6.s26386.0{- value -} ww5.s26385.0{- value -}
                   lwild.s26394.0 = "<#" @ sat.s26393.0{- value -} 2
              case lwild.s26394.0{- value -} of
                _ ->
                    letS sat.s26395.0 = "plusAddr#" @ ww1.s26381.0{- value -} ww5.s26385.0{- value -}
                         ds2.s26396.0 = "readWord8OffAddr#" @ sat.s26395.0{- value -} 0
                    case ds2.s26396.0{- value -} of
                      ("GHC.Prim.Unit#" ipv3.s26398.0) ->
                          letS s'.s26399.0 = "touch#" @ ww2.s26382.0
                          case s'.s26399.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s26400.0 = "+#" @ ww5.s26385.0{- value -} 1
                                     sat.s26401.0 = "plusAddr#" @ ww1.s26381.0{- value -} sat.s26400.0{- value -}
                                     ds4.s26402.0 = "readWord8OffAddr#" @ sat.s26401.0{- value -} 0
                                case ds4.s26402.0{- value -} of
                                  ("GHC.Prim.Unit#" ipv5.s26404.0) ->
                                      letS s'1.s26405.0 = "touch#" @ ww2.s26382.0
                                      case s'1.s26405.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            let "$j.s26406.0" = "GHC.IO.Encoding.UTF16.$wutf16_decode.closure.0" @ ipv3.s26398.0{- value -} ipv5.s26404.0{- value -} w.s26387.0 ww.s26380.0 ww1.s26381.0{- value -} ww2.s26382.0 ww3.s26383.0 ww4.s26384.0{- value -} ww5.s26385.0{- value -} ww6.s26386.0{- value -}
                                            letS wild1.s26416.0 = ipv3.s26398.0{- value -}
                                            case wild1.s26416.0{- value -} of
                                              _ ->
                                                  "$j.s26406.0"
                                              254u ->
                                                  letS wild2.s26417.0 = ipv5.s26404.0{- value -}
                                                  case wild2.s26417.0{- value -} of
                                                    _ ->
                                                        "$j.s26406.0"
                                                    255u ->
                                                        letS "s2#.s26418.0" = "writeMutVar#" @ ww.s26380.0 GHC.IO.Encoding.UTF16.mkUTF6
                                                        case "s2#.s26418.0"{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS sat.s26419.1 = "+#" @ ww5.s26385.0{- value -} 2
                                                              let sat.s26420.2 = [GHC.IO.Buffer.Buffer ww1.s26381.0{- value -} ww2.s26382.0 ww3.s26383.0 ww4.s26384.0{- value -} sat.s26419.1{- value -} ww6.s26386.0{- value -}]
                                                              GHC.IO.Encoding.UTF16.mkUTF5 @ sat.s26420.2 w.s26387.0 #"GHC.Prim.void#"
                1 ->
                    let sat.s26421.1 = [GHC.IO.Buffer.Buffer ww1.s26381.0{- value -} ww2.s26382.0 ww3.s26383.0 ww4.s26384.0{- value -} ww5.s26385.0{- value -} ww6.s26386.0{- value -}]
                        sat.s26422.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s26421.1 w.s26387.0]
                    ["GHC.Prim.Unit#" sat.s26422.0]
          (GHC.Maybe.Just decode.s26423.0) ->
              let sat.s26424.1 = [GHC.IO.Buffer.Buffer ww1.s26381.0{- value -} ww2.s26382.0 ww3.s26383.0 ww4.s26384.0{- value -} ww5.s26385.0{- value -} ww6.s26386.0{- value -}]
              decode.s26423.0 @ sat.s26424.1 w.s26387.0 #"GHC.Prim.void#"

"GHC.IO.Encoding.UTF16.$wutf16_decode.closure.0" ipv3.s26398.1 ipv5.s26404.1 w.s26387.1 ww.s26380.1 ww1.s26381.1 ww2.s26382.1 ww3.s26383.1 ww4.s26384.1 ww5.s26385.1 ww6.s26386.1 =
  letS wild1.s26407.0 = ipv3.s26398.1{- value -}
  case wild1.s26407.0{- value -} of
    _ ->
        letS "s2#.s26408.0" = "writeMutVar#" @ ww.s26380.1 GHC.IO.Encoding.UTF16.mkUTF6
        case "s2#.s26408.0"{- value -} of
          ("GHC.Prim.(##)") ->
              let sat.s26409.1 = [GHC.IO.Buffer.Buffer ww1.s26381.1{- value -} ww2.s26382.1 ww3.s26383.1 ww4.s26384.1{- value -} ww5.s26385.1{- value -} ww6.s26386.1{- value -}]
              GHC.IO.Encoding.UTF16.mkUTF5 @ sat.s26409.1 w.s26387.1 #"GHC.Prim.void#"
    255u ->
        letS wild2.s26410.0 = ipv5.s26404.1{- value -}
        case wild2.s26410.0{- value -} of
          _ ->
              letS "s2#.s26411.0" = "writeMutVar#" @ ww.s26380.1 GHC.IO.Encoding.UTF16.mkUTF6
              case "s2#.s26411.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    let sat.s26412.0 = [GHC.IO.Buffer.Buffer ww1.s26381.1{- value -} ww2.s26382.1 ww3.s26383.1 ww4.s26384.1{- value -} ww5.s26385.1{- value -} ww6.s26386.1{- value -}]
                    GHC.IO.Encoding.UTF16.mkUTF5 @ sat.s26412.0 w.s26387.1 #"GHC.Prim.void#"
          254u ->
              letS "s2#.s26413.0" = "writeMutVar#" @ ww.s26380.1 GHC.IO.Encoding.UTF16.mkUTF4
              case "s2#.s26413.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    letS sat.s26414.0 = "+#" @ ww5.s26385.1{- value -} 2
                    let sat.s26415.0 = [GHC.IO.Buffer.Buffer ww1.s26381.1{- value -} ww2.s26382.1 ww3.s26383.1 ww4.s26384.1{- value -} sat.s26414.0{- value -} ww6.s26386.1{- value -}]
                    GHC.IO.Encoding.UTF16.mkUTF3 @ sat.s26415.0 w.s26387.1 #"GHC.Prim.void#"

"GHC.IO.Encoding.UTF16.$wutf16_encode" ww.s25972.0 w.s25973.0 ww1.s25974.0 ww2.s25975.0 ww3.s25976.0 ww4.s25977.0 ww5.s25978.0 ww6.s25979.0 void.040.1254 =
  letS ds1.s25981.0 = "readMutVar#" @ ww.s25972.0
  case ds1.s25981.0 of
    ("GHC.Prim.Unit#" ipv1.s25983.0) ->
        letS wild.s25984.1 = ipv1.s25983.0
        case wild.s25984.1 of
          (GHC.Types.False) ->
              letS sat.s25985.0 = "-#" @ ww4.s25977.0{- value -} ww6.s25979.0{- value -}
                   lwild.s25986.0 = "<#" @ sat.s25985.0{- value -} 2
              case lwild.s25986.0{- value -} of
                _ ->
                    letS "s2#.s25987.0" = "writeMutVar#" @ ww.s25972.0 GHC.Types.True
                    case "s2#.s25987.0"{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s25988.0 = "plusAddr#" @ ww1.s25974.0{- value -} ww6.s25979.0{- value -}
                               s2.s25989.0 = "writeWord8OffAddr#" @ sat.s25988.0{- value -} 0 254u
                          case s2.s25989.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s25990.0 = "touch#" @ ww2.s25975.0
                                case s'.s25990.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s25991.0 = "+#" @ ww6.s25979.0{- value -} 1
                                           sat.s25992.0 = "plusAddr#" @ ww1.s25974.0{- value -} sat.s25991.0{- value -}
                                           s1.s25993.0 = "writeWord8OffAddr#" @ sat.s25992.0{- value -} 0 255u
                                      case s1.s25993.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s25994.0 = "touch#" @ ww2.s25975.0
                                            case s'1.s25994.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s25995.0 = "+#" @ ww6.s25979.0{- value -} 2
                                                  let sat.s25996.0 = [GHC.IO.Buffer.Buffer ww1.s25974.0{- value -} ww2.s25975.0 ww3.s25976.0 ww4.s25977.0{- value -} ww5.s25978.0{- value -} sat.s25995.0{- value -}]
                                                  GHC.IO.Encoding.UTF16.mkUTF1 @ w.s25973.0 sat.s25996.0 #"GHC.Prim.void#"
                1 ->
                    let sat.s25997.0 = [GHC.IO.Buffer.Buffer ww1.s25974.0{- value -} ww2.s25975.0 ww3.s25976.0 ww4.s25977.0{- value -} ww5.s25978.0{- value -} ww6.s25979.0{- value -}]
                        sat.s25998.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow w.s25973.0 sat.s25997.0]
                    ["GHC.Prim.Unit#" sat.s25998.0]
          (GHC.Types.True) ->
              let sat.s25999.0 = [GHC.IO.Buffer.Buffer ww1.s25974.0{- value -} ww2.s25975.0 ww3.s25976.0 ww4.s25977.0{- value -} ww5.s25978.0{- value -} ww6.s25979.0{- value -}]
              GHC.IO.Encoding.UTF16.mkUTF1 @ w.s25973.0 sat.s25999.0 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF1 input.s25710.0 output.s25711.0 void.040.1240 =
  letS wild.s25713.0 = input.s25710.0
  case wild.s25713.0 of
    (GHC.IO.Buffer.Buffer dt.s25714.0 dt1.s25715.0 ds.s25716.0 dt2.s25717.0 dt3.s25718.0 dt4.s25719.0) ->
        letS wild1.s25720.0 = output.s25711.0
        case wild1.s25720.0 of
          (GHC.IO.Buffer.Buffer dt5.s25721.0 dt6.s25722.0 ds1.s25723.0 dt7.s25724.0 dt8.s25725.0 dt9.s25726.0) ->
              let lvl5.s25727.0 = [GHC.IO.Buffer.Buffer dt.s25714.0{- value -} dt1.s25715.0 ds.s25716.0 dt2.s25717.0{- value -} 0 0]
                  exit.s25728.0 = GHC.IO.Encoding.UTF16.mkUTF1.closure.1 @ ds.s25716.0 ds1.s25723.0 dt.s25714.0{- value -} dt1.s25715.0 dt2.s25717.0{- value -} dt4.s25719.0{- value -} dt5.s25721.0{- value -} dt6.s25722.0 dt7.s25724.0{- value -} dt8.s25725.0{- value -} lvl5.s25727.0
                  exit1.s25736.0 = GHC.IO.Encoding.UTF16.mkUTF1.closure.3 @ ds.s25716.0 ds1.s25723.0 dt.s25714.0{- value -} dt1.s25715.0 dt2.s25717.0{- value -} dt4.s25719.0{- value -} dt5.s25721.0{- value -} dt6.s25722.0 dt7.s25724.0{- value -} dt8.s25725.0{- value -} lvl5.s25727.0
                  exit2.s25744.0 = GHC.IO.Encoding.UTF16.mkUTF1.closure.5 @ ds.s25716.0 ds1.s25723.0 dt.s25714.0{- value -} dt1.s25715.0 dt2.s25717.0{- value -} dt4.s25719.0{- value -} dt5.s25721.0{- value -} dt6.s25722.0 dt7.s25724.0{- value -} dt8.s25725.0{- value -} lvl5.s25727.0
                  exit3.s25752.0 = GHC.IO.Encoding.UTF16.mkUTF1.closure.7 @ ds.s25716.0 ds1.s25723.0 dt.s25714.0{- value -} dt1.s25715.0 dt2.s25717.0{- value -} dt4.s25719.0{- value -} dt5.s25721.0{- value -} dt6.s25722.0 dt7.s25724.0{- value -} dt8.s25725.0{- value -} lvl5.s25727.0
              letrec "$wloop.s25760.0" = GHC.IO.Encoding.UTF16.mkUTF1.closure.10 @ "$wloop.s25760.0" dt.s25714.0{- value -} dt1.s25715.0 dt4.s25719.0{- value -} dt5.s25721.0{- value -} dt6.s25722.0 dt7.s25724.0{- value -} exit.s25728.0 exit1.s25736.0 exit2.s25744.0 exit3.s25752.0
              "$wloop.s25760.0" @ dt3.s25718.0{- value -} dt9.s25726.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF1.closure.0 ds.s25716.2 dt.s25714.2 dt1.s25715.2 dt2.s25717.2 dt4.s25719.2 lvl5.s25727.2 ww.s25729.1 =
  letS lwild.s25732.0 = "==#" @ ww.s25729.1{- value -} dt4.s25719.2{- value -}
  case lwild.s25732.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s25714.2{- value -} dt1.s25715.2 ds.s25716.2 dt2.s25717.2{- value -} ww.s25729.1{- value -} dt4.s25719.2{- value -}]
    1 ->
        lvl5.s25727.2

GHC.IO.Encoding.UTF16.mkUTF1.closure.1 ds.s25716.1 ds1.s25723.1 dt.s25714.1 dt1.s25715.1 dt2.s25717.1 dt4.s25719.1 dt5.s25721.1 dt6.s25722.1 dt7.s25724.1 dt8.s25725.1 lvl5.s25727.1 ww.s25729.0 ww1.s25730.0 void.040.1241 =
  let sat.s25734.0 = [GHC.IO.Buffer.Buffer dt5.s25721.1{- value -} dt6.s25722.1 ds1.s25723.1 dt7.s25724.1{- value -} dt8.s25725.1{- value -} ww1.s25730.0{- value -}]
      sat.s25733.0 = GHC.IO.Encoding.UTF16.mkUTF1.closure.0 @ ds.s25716.1 dt.s25714.1{- value -} dt1.s25715.1 dt2.s25717.1{- value -} dt4.s25719.1{- value -} lvl5.s25727.1 ww.s25729.0{- value -}
      sat.s25735.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s25733.0 sat.s25734.0]
  ["GHC.Prim.Unit#" sat.s25735.0]

GHC.IO.Encoding.UTF16.mkUTF1.closure.10 "$wloop.s25760.1" dt.s25714.9 dt1.s25715.9 dt4.s25719.9 dt5.s25721.5 dt6.s25722.5 dt7.s25724.5 exit.s25728.1 exit1.s25736.1 exit2.s25744.1 exit3.s25752.1 ww.s25761.0 ww1.s25762.0 void.040.1245 =
  letS lwild.s25764.0 = ">=#" @ ww.s25761.0{- value -} dt4.s25719.9{- value -}
  case lwild.s25764.0{- value -} of
    _ ->
        letS sat.s25765.0 = "-#" @ dt7.s25724.5{- value -} ww1.s25762.0{- value -}
             lwild1.s25766.0 = "<#" @ sat.s25765.0{- value -} 2
        case lwild1.s25766.0{- value -} of
          _ ->
              letS ds2.s25767.0 = "readWideCharOffAddr#" @ dt.s25714.9{- value -} ww.s25761.0{- value -}
              case ds2.s25767.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s25769.0) ->
                    letS s'.s25770.0 = "touch#" @ dt1.s25715.9
                    case s'.s25770.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS x.s25771.0 = "ord#" @ ipv1.s25769.0{- value -}
                               lwild2.s25772.0 = "<#" @ x.s25771.0{- value -} 65536
                          case lwild2.s25772.0{- value -} of
                            _ ->
                                letS sat.s25773.0 = "-#" @ dt7.s25724.5{- value -} ww1.s25762.0{- value -}
                                     lwild3.s25774.0 = "<#" @ sat.s25773.0{- value -} 4
                                case lwild3.s25774.0{- value -} of
                                  _ ->
                                      letS n1.s25775.0 = "-#" @ x.s25771.0{- value -} 65536
                                           sat.s25777.0 = "uncheckedIShiftRA#" @ n1.s25775.0{- value -} 18
                                           sat.s25778.0 = "+#" @ sat.s25777.0{- value -} 216
                                           sat.s25779.0 = "int2Word#" @ sat.s25778.0{- value -}
                                           sat.s25780.0 = "narrow8Word#" @ sat.s25779.0{- value -}
                                           sat.s25776.0 = "plusAddr#" @ dt5.s25721.5{- value -} ww1.s25762.0{- value -}
                                           s2.s25781.0 = "writeWord8OffAddr#" @ sat.s25776.0{- value -} 0 sat.s25780.0{- value -}
                                      case s2.s25781.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s25782.0 = "touch#" @ dt6.s25722.5
                                            case s'1.s25782.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s25785.0 = "uncheckedIShiftRA#" @ n1.s25775.0{- value -} 10
                                                       sat.s25786.0 = "int2Word#" @ sat.s25785.0{- value -}
                                                       sat.s25787.0 = "narrow8Word#" @ sat.s25786.0{- value -}
                                                       sat.s25783.0 = "+#" @ ww1.s25762.0{- value -} 1
                                                       sat.s25784.0 = "plusAddr#" @ dt5.s25721.5{- value -} sat.s25783.0{- value -}
                                                       s1.s25788.0 = "writeWord8OffAddr#" @ sat.s25784.0{- value -} 0 sat.s25787.0{- value -}
                                                  case s1.s25788.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS s'2.s25789.0 = "touch#" @ dt6.s25722.5
                                                        case s'2.s25789.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS n2.s25790.0 = "andI#" @ n1.s25775.0{- value -} 1023
                                                                   sat.s25793.0 = "uncheckedIShiftRA#" @ n2.s25790.0{- value -} 8
                                                                   sat.s25794.0 = "+#" @ sat.s25793.0{- value -} 220
                                                                   sat.s25795.0 = "int2Word#" @ sat.s25794.0{- value -}
                                                                   sat.s25796.0 = "narrow8Word#" @ sat.s25795.0{- value -}
                                                                   sat.s25791.0 = "+#" @ ww1.s25762.0{- value -} 2
                                                                   sat.s25792.0 = "plusAddr#" @ dt5.s25721.5{- value -} sat.s25791.0{- value -}
                                                                   s3.s25797.0 = "writeWord8OffAddr#" @ sat.s25792.0{- value -} 0 sat.s25796.0{- value -}
                                                              case s3.s25797.0{- value -} of
                                                                ("GHC.Prim.(##)") ->
                                                                    letS s'3.s25798.0 = "touch#" @ dt6.s25722.5
                                                                    case s'3.s25798.0{- value -} of
                                                                      ("GHC.Prim.(##)") ->
                                                                          letS sat.s25801.0 = "int2Word#" @ n2.s25790.0{- value -}
                                                                               sat.s25802.0 = "narrow8Word#" @ sat.s25801.0{- value -}
                                                                               sat.s25799.0 = "+#" @ ww1.s25762.0{- value -} 3
                                                                               sat.s25800.0 = "plusAddr#" @ dt5.s25721.5{- value -} sat.s25799.0{- value -}
                                                                               s4.s25803.0 = "writeWord8OffAddr#" @ sat.s25800.0{- value -} 0 sat.s25802.0{- value -}
                                                                          case s4.s25803.0{- value -} of
                                                                            ("GHC.Prim.(##)") ->
                                                                                letS s'4.s25804.0 = "touch#" @ dt6.s25722.5
                                                                                case s'4.s25804.0{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      letS sat.s25806.0 = "+#" @ ww1.s25762.0{- value -} 4
                                                                                           sat.s25805.0 = "+#" @ ww.s25761.0{- value -} 1
                                                                                      "$wloop.s25760.1" @ sat.s25805.0{- value -} sat.s25806.0{- value -} #"GHC.Prim.void#"
                                  1 ->
                                      exit.s25728.1 @ ww.s25761.0{- value -} ww1.s25762.0{- value -} #"GHC.Prim.void#"
                            1 ->
                                let "$j.s25807.0" = GHC.IO.Encoding.UTF16.mkUTF1.closure.8 @ exit1.s25736.1 ww.s25761.0{- value -} ww1.s25762.0{- value -}
                                    "$j1.s25808.0" = GHC.IO.Encoding.UTF16.mkUTF1.closure.9 @ "$j.s25807.0" "$wloop.s25760.1" dt5.s25721.5{- value -} dt6.s25722.5 ww.s25761.0{- value -} ww1.s25762.0{- value -} x.s25771.0{- value -}
                                letS lwild3.s25839.0 = "<=#" @ 55296 x.s25771.0{- value -}
                                case lwild3.s25839.0{- value -} of
                                  _ ->
                                      "$j1.s25808.0"
                                  1 ->
                                      letS lwild4.s25840.0 = "<=#" @ x.s25771.0{- value -} 56319
                                      case lwild4.s25840.0{- value -} of
                                        _ ->
                                            "$j1.s25808.0"
                                        1 ->
                                            "$j.s25807.0"
          1 ->
              exit2.s25744.1 @ ww.s25761.0{- value -} ww1.s25762.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit3.s25752.1 @ ww.s25761.0{- value -} ww1.s25762.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF1.closure.2 ds.s25716.4 dt.s25714.4 dt1.s25715.4 dt2.s25717.4 dt4.s25719.4 lvl5.s25727.4 ww.s25737.1 =
  letS lwild.s25740.0 = "==#" @ ww.s25737.1{- value -} dt4.s25719.4{- value -}
  case lwild.s25740.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s25714.4{- value -} dt1.s25715.4 ds.s25716.4 dt2.s25717.4{- value -} ww.s25737.1{- value -} dt4.s25719.4{- value -}]
    1 ->
        lvl5.s25727.4

GHC.IO.Encoding.UTF16.mkUTF1.closure.3 ds.s25716.3 ds1.s25723.2 dt.s25714.3 dt1.s25715.3 dt2.s25717.3 dt4.s25719.3 dt5.s25721.2 dt6.s25722.2 dt7.s25724.2 dt8.s25725.2 lvl5.s25727.3 ww.s25737.0 ww1.s25738.0 void.040.1242 =
  let sat.s25742.0 = [GHC.IO.Buffer.Buffer dt5.s25721.2{- value -} dt6.s25722.2 ds1.s25723.2 dt7.s25724.2{- value -} dt8.s25725.2{- value -} ww1.s25738.0{- value -}]
      sat.s25741.0 = GHC.IO.Encoding.UTF16.mkUTF1.closure.2 @ ds.s25716.3 dt.s25714.3{- value -} dt1.s25715.3 dt2.s25717.3{- value -} dt4.s25719.3{- value -} lvl5.s25727.3 ww.s25737.0{- value -}
      sat.s25743.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s25741.0 sat.s25742.0]
  ["GHC.Prim.Unit#" sat.s25743.0]

GHC.IO.Encoding.UTF16.mkUTF1.closure.4 ds.s25716.6 dt.s25714.6 dt1.s25715.6 dt2.s25717.6 dt4.s25719.6 lvl5.s25727.6 ww.s25745.1 =
  letS lwild.s25748.0 = "==#" @ ww.s25745.1{- value -} dt4.s25719.6{- value -}
  case lwild.s25748.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s25714.6{- value -} dt1.s25715.6 ds.s25716.6 dt2.s25717.6{- value -} ww.s25745.1{- value -} dt4.s25719.6{- value -}]
    1 ->
        lvl5.s25727.6

GHC.IO.Encoding.UTF16.mkUTF1.closure.5 ds.s25716.5 ds1.s25723.3 dt.s25714.5 dt1.s25715.5 dt2.s25717.5 dt4.s25719.5 dt5.s25721.3 dt6.s25722.3 dt7.s25724.3 dt8.s25725.3 lvl5.s25727.5 ww.s25745.0 ww1.s25746.0 void.040.1243 =
  let sat.s25750.0 = [GHC.IO.Buffer.Buffer dt5.s25721.3{- value -} dt6.s25722.3 ds1.s25723.3 dt7.s25724.3{- value -} dt8.s25725.3{- value -} ww1.s25746.0{- value -}]
      sat.s25749.0 = GHC.IO.Encoding.UTF16.mkUTF1.closure.4 @ ds.s25716.5 dt.s25714.5{- value -} dt1.s25715.5 dt2.s25717.5{- value -} dt4.s25719.5{- value -} lvl5.s25727.5 ww.s25745.0{- value -}
      sat.s25751.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s25749.0 sat.s25750.0]
  ["GHC.Prim.Unit#" sat.s25751.0]

GHC.IO.Encoding.UTF16.mkUTF1.closure.6 ds.s25716.8 dt.s25714.8 dt1.s25715.8 dt2.s25717.8 dt4.s25719.8 lvl5.s25727.8 ww.s25753.1 =
  letS lwild.s25756.0 = "==#" @ ww.s25753.1{- value -} dt4.s25719.8{- value -}
  case lwild.s25756.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s25714.8{- value -} dt1.s25715.8 ds.s25716.8 dt2.s25717.8{- value -} ww.s25753.1{- value -} dt4.s25719.8{- value -}]
    1 ->
        lvl5.s25727.8

GHC.IO.Encoding.UTF16.mkUTF1.closure.7 ds.s25716.7 ds1.s25723.4 dt.s25714.7 dt1.s25715.7 dt2.s25717.7 dt4.s25719.7 dt5.s25721.4 dt6.s25722.4 dt7.s25724.4 dt8.s25725.4 lvl5.s25727.7 ww.s25753.0 ww1.s25754.0 void.040.1244 =
  let sat.s25758.0 = [GHC.IO.Buffer.Buffer dt5.s25721.4{- value -} dt6.s25722.4 ds1.s25723.4 dt7.s25724.4{- value -} dt8.s25725.4{- value -} ww1.s25754.0{- value -}]
      sat.s25757.0 = GHC.IO.Encoding.UTF16.mkUTF1.closure.6 @ ds.s25716.7 dt.s25714.7{- value -} dt1.s25715.7 dt2.s25717.7{- value -} dt4.s25719.7{- value -} lvl5.s25727.7 ww.s25753.0{- value -}
      sat.s25759.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s25757.0 sat.s25758.0]
  ["GHC.Prim.Unit#" sat.s25759.0]

GHC.IO.Encoding.UTF16.mkUTF1.closure.8 exit1.s25736.2 ww.s25761.1 ww1.s25762.1 =
  exit1.s25736.2 @ ww.s25761.1{- value -} ww1.s25762.1{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF1.closure.9 "$j.s25807.1" "$wloop.s25760.2" dt5.s25721.6 dt6.s25722.6 ww.s25761.2 ww1.s25762.2 x.s25771.1 =
  letS lwild3.s25809.0 = "<=#" @ 56320 x.s25771.1{- value -}
  case lwild3.s25809.0{- value -} of
    _ ->
        letS sat.s25811.0 = "uncheckedIShiftRA#" @ x.s25771.1{- value -} 8
             sat.s25812.0 = "int2Word#" @ sat.s25811.0{- value -}
             sat.s25813.0 = "narrow8Word#" @ sat.s25812.0{- value -}
             sat.s25810.0 = "plusAddr#" @ dt5.s25721.6{- value -} ww1.s25762.2{- value -}
             s2.s25814.0 = "writeWord8OffAddr#" @ sat.s25810.0{- value -} 0 sat.s25813.0{- value -}
        case s2.s25814.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS s'1.s25815.0 = "touch#" @ dt6.s25722.6
              case s'1.s25815.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS sat.s25818.0 = "int2Word#" @ x.s25771.1{- value -}
                         sat.s25819.0 = "narrow8Word#" @ sat.s25818.0{- value -}
                         sat.s25816.0 = "+#" @ ww1.s25762.2{- value -} 1
                         sat.s25817.0 = "plusAddr#" @ dt5.s25721.6{- value -} sat.s25816.0{- value -}
                         s1.s25820.0 = "writeWord8OffAddr#" @ sat.s25817.0{- value -} 0 sat.s25819.0{- value -}
                    case s1.s25820.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'2.s25821.0 = "touch#" @ dt6.s25722.6
                          case s'2.s25821.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s25823.0 = "+#" @ ww1.s25762.2{- value -} 2
                                     sat.s25822.0 = "+#" @ ww.s25761.2{- value -} 1
                                "$wloop.s25760.2" @ sat.s25822.0{- value -} sat.s25823.0{- value -} #"GHC.Prim.void#"
    1 ->
        letS lwild4.s25824.0 = "<=#" @ x.s25771.1{- value -} 57343
        case lwild4.s25824.0{- value -} of
          _ ->
              letS sat.s25826.0 = "uncheckedIShiftRA#" @ x.s25771.1{- value -} 8
                   sat.s25827.0 = "int2Word#" @ sat.s25826.0{- value -}
                   sat.s25828.0 = "narrow8Word#" @ sat.s25827.0{- value -}
                   sat.s25825.0 = "plusAddr#" @ dt5.s25721.6{- value -} ww1.s25762.2{- value -}
                   s2.s25829.0 = "writeWord8OffAddr#" @ sat.s25825.0{- value -} 0 sat.s25828.0{- value -}
              case s2.s25829.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS s'1.s25830.0 = "touch#" @ dt6.s25722.6
                    case s'1.s25830.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s25833.0 = "int2Word#" @ x.s25771.1{- value -}
                               sat.s25834.0 = "narrow8Word#" @ sat.s25833.0{- value -}
                               sat.s25831.0 = "+#" @ ww1.s25762.2{- value -} 1
                               sat.s25832.0 = "plusAddr#" @ dt5.s25721.6{- value -} sat.s25831.0{- value -}
                               s1.s25835.0 = "writeWord8OffAddr#" @ sat.s25832.0{- value -} 0 sat.s25834.0{- value -}
                          case s1.s25835.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'2.s25836.0 = "touch#" @ dt6.s25722.6
                                case s'2.s25836.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s25838.0 = "+#" @ ww1.s25762.2{- value -} 2
                                           sat.s25837.0 = "+#" @ ww.s25761.2{- value -} 1
                                      "$wloop.s25760.2" @ sat.s25837.0{- value -} sat.s25838.0{- value -} #"GHC.Prim.void#"
          1 ->
              "$j.s25807.1"

GHC.IO.Encoding.UTF16.mkUTF16 cfm.s26438.0 =
  let sat.s26486.0 = GHC.IO.Encoding.UTF16.mkUTF16.closure.4 @ cfm.s26438.0
      sat.s26462.0 = GHC.IO.Encoding.UTF16.mkUTF16.closure.9 @ cfm.s26438.0
  [GHC.IO.Encoding.Types.TextEncoding GHC.IO.Encoding.UTF16.mkUTF7 sat.s26462.0 sat.s26486.0]

GHC.IO.Encoding.UTF16.mkUTF16.closure.0 ipv1.s26466.1 val.s26481.0 void.X85.0 =
  letS "s2#.s26483.0" = "writeMutVar#" @ ipv1.s26466.1 val.s26481.0
  case "s2#.s26483.0"{- value -} of
    ("GHC.Prim.(##)") ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.UTF16.mkUTF16.closure.1 ipv1.s26466.2 void.X85.1 =
  "readMutVar#" @ ipv1.s26466.2

GHC.IO.Encoding.UTF16.mkUTF16.closure.2 cfm.s26438.2 eta.B3.326 eta.B2.775 void.X88.2 =
  GHC.IO.Encoding.Failure.recoverEncode1 @ cfm.s26438.2 eta.B3.326 eta.B2.775 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF16.closure.3 ipv1.s26466.3 w.s26467.0 w1.s26468.0 void.X89.1 =
  letS ww.s26470.0 = w1.s26468.0
  case ww.s26470.0 of
    (GHC.IO.Buffer.Buffer ww1.s26471.0 ww2.s26472.0 ww3.s26473.0 ww4.s26474.0 ww5.s26475.0 ww6.s26476.0) ->
        "GHC.IO.Encoding.UTF16.$wutf16_encode" @ ipv1.s26466.3 w.s26467.0 ww1.s26471.0{- value -} ww2.s26472.0 ww3.s26473.0 ww4.s26474.0{- value -} ww5.s26475.0{- value -} ww6.s26476.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF16.closure.4 cfm.s26438.1 void.040.1294 =
  letS ds.s26464.0 = "newMutVar#" @ GHC.Types.False
  case ds.s26464.0 of
    ("GHC.Prim.Unit#" ipv1.s26466.0) ->
        let sat.s26484.0 = GHC.IO.Encoding.UTF16.mkUTF16.closure.0 @ ipv1.s26466.0
            sat.s26480.0 = GHC.IO.Encoding.UTF16.mkUTF16.closure.1 @ ipv1.s26466.0
            sat.s26478.0 = GHC.IO.Encoding.UTF16.mkUTF16.closure.2 @ cfm.s26438.1
            sat.s26477.0 = GHC.IO.Encoding.UTF16.mkUTF16.closure.3 @ ipv1.s26466.0
            sat.s26485.0 = [GHC.IO.Encoding.Types.BufferCodec sat.s26477.0 sat.s26478.0 GHC.IO.Encoding.UTF16.mkUTF2 sat.s26480.0 sat.s26484.0]
        ["GHC.Prim.Unit#" sat.s26485.0]

GHC.IO.Encoding.UTF16.mkUTF16.closure.5 ipv1.s26442.1 val.s26457.0 void.X86.1 =
  letS "s2#.s26459.0" = "writeMutVar#" @ ipv1.s26442.1 val.s26457.0
  case "s2#.s26459.0"{- value -} of
    ("GHC.Prim.(##)") ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.UTF16.mkUTF16.closure.6 ipv1.s26442.2 void.X86.2 =
  "readMutVar#" @ ipv1.s26442.2

GHC.IO.Encoding.UTF16.mkUTF16.closure.7 cfm.s26438.4 eta.B3.327 eta.B2.776 void.X89.2 =
  GHC.IO.Encoding.Failure.recoverDecode1 @ cfm.s26438.4 eta.B3.327 eta.B2.776 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF16.closure.8 ipv1.s26442.3 w.s26443.0 w1.s26444.0 void.X90.2 =
  letS ww.s26446.0 = w.s26443.0
  case ww.s26446.0 of
    (GHC.IO.Buffer.Buffer ww1.s26447.0 ww2.s26448.0 ww3.s26449.0 ww4.s26450.0 ww5.s26451.0 ww6.s26452.0) ->
        "GHC.IO.Encoding.UTF16.$wutf16_decode" @ ipv1.s26442.3 ww1.s26447.0{- value -} ww2.s26448.0 ww3.s26449.0 ww4.s26450.0{- value -} ww5.s26451.0{- value -} ww6.s26452.0{- value -} w1.s26444.0 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF16.closure.9 cfm.s26438.3 void.040.1295 =
  letS ds.s26440.0 = "newMutVar#" @ GHC.Maybe.Nothing
  case ds.s26440.0 of
    ("GHC.Prim.Unit#" ipv1.s26442.0) ->
        let sat.s26460.0 = GHC.IO.Encoding.UTF16.mkUTF16.closure.5 @ ipv1.s26442.0
            sat.s26456.0 = GHC.IO.Encoding.UTF16.mkUTF16.closure.6 @ ipv1.s26442.0
            sat.s26454.0 = GHC.IO.Encoding.UTF16.mkUTF16.closure.7 @ cfm.s26438.3
            sat.s26453.0 = GHC.IO.Encoding.UTF16.mkUTF16.closure.8 @ ipv1.s26442.0
            sat.s26461.0 = [GHC.IO.Encoding.Types.BufferCodec sat.s26453.0 sat.s26454.0 GHC.IO.Encoding.UTF16.mkUTF2 sat.s26456.0 sat.s26460.0]
        ["GHC.Prim.Unit#" sat.s26461.0]

GHC.IO.Encoding.UTF16.mkUTF16be cfm.s26369.0 =
  let sat.s26377.0 = GHC.IO.Encoding.UTF16.mkUTF16be.closure.1 @ cfm.s26369.0
      sat.s26373.0 = GHC.IO.Encoding.UTF16.mkUTF16be.closure.3 @ cfm.s26369.0
  [GHC.IO.Encoding.Types.TextEncoding GHC.IO.Encoding.UTF16.mkUTF16be2 sat.s26373.0 sat.s26377.0]

GHC.IO.Encoding.UTF16.mkUTF16be.closure.0 cfm.s26369.2 eta.B3.323 eta.B2.772 void.X72.3 =
  GHC.IO.Encoding.Failure.recoverEncode1 @ cfm.s26369.2 eta.B3.323 eta.B2.772 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF16be.closure.1 cfm.s26369.1 void.040.1287 =
  let sat.s26375.1 = GHC.IO.Encoding.UTF16.mkUTF16be.closure.0 @ cfm.s26369.1
      sat.s26376.1 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF16.mkUTF1 sat.s26375.1 GHC.IO.Encoding.UTF16.mkUTF2 GHC.IO.Encoding.UTF16.mkUTF2 GHC.IO.Encoding.UTF16.mkUTF16be1]
  ["GHC.Prim.Unit#" sat.s26376.1]

GHC.IO.Encoding.UTF16.mkUTF16be.closure.2 cfm.s26369.4 eta.B3.324 eta.B2.773 void.X73.2 =
  GHC.IO.Encoding.Failure.recoverDecode1 @ cfm.s26369.4 eta.B3.324 eta.B2.773 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF16be.closure.3 cfm.s26369.3 void.040.1288 =
  let sat.s26371.0 = GHC.IO.Encoding.UTF16.mkUTF16be.closure.2 @ cfm.s26369.3
      sat.s26372.0 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF16.mkUTF5 sat.s26371.0 GHC.IO.Encoding.UTF16.mkUTF2 GHC.IO.Encoding.UTF16.mkUTF2 GHC.IO.Encoding.UTF16.mkUTF16be1]
  ["GHC.Prim.Unit#" sat.s26372.0]

GHC.IO.Encoding.UTF16.mkUTF16be1 ds.s26166.0 void.040.1269 =
  ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.UTF16.mkUTF16be2 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.UTF16.mkUTF16be3{- value -}

GHC.IO.Encoding.UTF16.mkUTF16be3 =
  #"UTF-16BE"

GHC.IO.Encoding.UTF16.mkUTF16le cfm.s26168.0 =
  let sat.s26176.0 = GHC.IO.Encoding.UTF16.mkUTF16le.closure.1 @ cfm.s26168.0
      sat.s26172.0 = GHC.IO.Encoding.UTF16.mkUTF16le.closure.3 @ cfm.s26168.0
  [GHC.IO.Encoding.Types.TextEncoding GHC.IO.Encoding.UTF16.mkUTF16le2 sat.s26172.0 sat.s26176.0]

GHC.IO.Encoding.UTF16.mkUTF16le.closure.0 cfm.s26168.2 eta.B3.320 eta.B2.769 void.X61.4 =
  GHC.IO.Encoding.Failure.recoverEncode1 @ cfm.s26168.2 eta.B3.320 eta.B2.769 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF16le.closure.1 cfm.s26168.1 void.040.1270 =
  let sat.s26174.0 = GHC.IO.Encoding.UTF16.mkUTF16le.closure.0 @ cfm.s26168.1
      sat.s26175.0 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF16.mkUTF16le1 sat.s26174.0 GHC.IO.Encoding.UTF16.mkUTF2 GHC.IO.Encoding.UTF16.mkUTF2 GHC.IO.Encoding.UTF16.mkUTF16be1]
  ["GHC.Prim.Unit#" sat.s26175.0]

GHC.IO.Encoding.UTF16.mkUTF16le.closure.2 cfm.s26168.4 eta.B3.321 eta.B2.770 void.X62.4 =
  GHC.IO.Encoding.Failure.recoverDecode1 @ cfm.s26168.4 eta.B3.321 eta.B2.770 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF16le.closure.3 cfm.s26168.3 void.040.1271 =
  let sat.s26170.1 = GHC.IO.Encoding.UTF16.mkUTF16le.closure.2 @ cfm.s26168.3
      sat.s26171.0 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF16.mkUTF3 sat.s26170.1 GHC.IO.Encoding.UTF16.mkUTF2 GHC.IO.Encoding.UTF16.mkUTF2 GHC.IO.Encoding.UTF16.mkUTF16be1]
  ["GHC.Prim.Unit#" sat.s26171.0]

GHC.IO.Encoding.UTF16.mkUTF16le1 input.s25841.0 output.s25842.0 void.040.1247 =
  letS wild.s25844.0 = input.s25841.0
  case wild.s25844.0 of
    (GHC.IO.Buffer.Buffer dt.s25845.0 dt1.s25846.0 ds.s25847.0 dt2.s25848.0 dt3.s25849.0 dt4.s25850.0) ->
        letS wild1.s25851.0 = output.s25842.0
        case wild1.s25851.0 of
          (GHC.IO.Buffer.Buffer dt5.s25852.0 dt6.s25853.0 ds1.s25854.0 dt7.s25855.0 dt8.s25856.0 dt9.s25857.0) ->
              let lvl5.s25858.0 = [GHC.IO.Buffer.Buffer dt.s25845.0{- value -} dt1.s25846.0 ds.s25847.0 dt2.s25848.0{- value -} 0 0]
                  exit.s25859.0 = GHC.IO.Encoding.UTF16.mkUTF16le1.closure.1 @ ds.s25847.0 ds1.s25854.0 dt.s25845.0{- value -} dt1.s25846.0 dt2.s25848.0{- value -} dt4.s25850.0{- value -} dt5.s25852.0{- value -} dt6.s25853.0 dt7.s25855.0{- value -} dt8.s25856.0{- value -} lvl5.s25858.0
                  exit1.s25867.0 = GHC.IO.Encoding.UTF16.mkUTF16le1.closure.3 @ ds.s25847.0 ds1.s25854.0 dt.s25845.0{- value -} dt1.s25846.0 dt2.s25848.0{- value -} dt4.s25850.0{- value -} dt5.s25852.0{- value -} dt6.s25853.0 dt7.s25855.0{- value -} dt8.s25856.0{- value -} lvl5.s25858.0
                  exit2.s25875.0 = GHC.IO.Encoding.UTF16.mkUTF16le1.closure.5 @ ds.s25847.0 ds1.s25854.0 dt.s25845.0{- value -} dt1.s25846.0 dt2.s25848.0{- value -} dt4.s25850.0{- value -} dt5.s25852.0{- value -} dt6.s25853.0 dt7.s25855.0{- value -} dt8.s25856.0{- value -} lvl5.s25858.0
                  exit3.s25883.0 = GHC.IO.Encoding.UTF16.mkUTF16le1.closure.7 @ ds.s25847.0 ds1.s25854.0 dt.s25845.0{- value -} dt1.s25846.0 dt2.s25848.0{- value -} dt4.s25850.0{- value -} dt5.s25852.0{- value -} dt6.s25853.0 dt7.s25855.0{- value -} dt8.s25856.0{- value -} lvl5.s25858.0
              letrec "$wloop.s25891.0" = GHC.IO.Encoding.UTF16.mkUTF16le1.closure.10 @ "$wloop.s25891.0" dt.s25845.0{- value -} dt1.s25846.0 dt4.s25850.0{- value -} dt5.s25852.0{- value -} dt6.s25853.0 dt7.s25855.0{- value -} exit.s25859.0 exit1.s25867.0 exit2.s25875.0 exit3.s25883.0
              "$wloop.s25891.0" @ dt3.s25849.0{- value -} dt9.s25857.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF16le1.closure.0 ds.s25847.2 dt.s25845.2 dt1.s25846.2 dt2.s25848.2 dt4.s25850.2 lvl5.s25858.2 ww.s25860.1 =
  letS lwild.s25863.0 = "==#" @ ww.s25860.1{- value -} dt4.s25850.2{- value -}
  case lwild.s25863.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s25845.2{- value -} dt1.s25846.2 ds.s25847.2 dt2.s25848.2{- value -} ww.s25860.1{- value -} dt4.s25850.2{- value -}]
    1 ->
        lvl5.s25858.2

GHC.IO.Encoding.UTF16.mkUTF16le1.closure.1 ds.s25847.1 ds1.s25854.1 dt.s25845.1 dt1.s25846.1 dt2.s25848.1 dt4.s25850.1 dt5.s25852.1 dt6.s25853.1 dt7.s25855.1 dt8.s25856.1 lvl5.s25858.1 ww.s25860.0 ww1.s25861.0 void.040.1248 =
  let sat.s25865.0 = [GHC.IO.Buffer.Buffer dt5.s25852.1{- value -} dt6.s25853.1 ds1.s25854.1 dt7.s25855.1{- value -} dt8.s25856.1{- value -} ww1.s25861.0{- value -}]
      sat.s25864.0 = GHC.IO.Encoding.UTF16.mkUTF16le1.closure.0 @ ds.s25847.1 dt.s25845.1{- value -} dt1.s25846.1 dt2.s25848.1{- value -} dt4.s25850.1{- value -} lvl5.s25858.1 ww.s25860.0{- value -}
      sat.s25866.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s25864.0 sat.s25865.0]
  ["GHC.Prim.Unit#" sat.s25866.0]

GHC.IO.Encoding.UTF16.mkUTF16le1.closure.10 "$wloop.s25891.1" dt.s25845.9 dt1.s25846.9 dt4.s25850.9 dt5.s25852.5 dt6.s25853.5 dt7.s25855.5 exit.s25859.1 exit1.s25867.1 exit2.s25875.1 exit3.s25883.1 ww.s25892.0 ww1.s25893.0 void.040.1252 =
  letS lwild.s25895.0 = ">=#" @ ww.s25892.0{- value -} dt4.s25850.9{- value -}
  case lwild.s25895.0{- value -} of
    _ ->
        letS sat.s25896.0 = "-#" @ dt7.s25855.5{- value -} ww1.s25893.0{- value -}
             lwild1.s25897.0 = "<#" @ sat.s25896.0{- value -} 2
        case lwild1.s25897.0{- value -} of
          _ ->
              letS ds2.s25898.0 = "readWideCharOffAddr#" @ dt.s25845.9{- value -} ww.s25892.0{- value -}
              case ds2.s25898.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s25900.0) ->
                    letS s'.s25901.0 = "touch#" @ dt1.s25846.9
                    case s'.s25901.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS x.s25902.0 = "ord#" @ ipv1.s25900.0{- value -}
                               lwild2.s25903.0 = "<#" @ x.s25902.0{- value -} 65536
                          case lwild2.s25903.0{- value -} of
                            _ ->
                                letS sat.s25904.0 = "-#" @ dt7.s25855.5{- value -} ww1.s25893.0{- value -}
                                     lwild3.s25905.0 = "<#" @ sat.s25904.0{- value -} 4
                                case lwild3.s25905.0{- value -} of
                                  _ ->
                                      letS n1.s25906.0 = "-#" @ x.s25902.0{- value -} 65536
                                           sat.s25908.0 = "uncheckedIShiftRA#" @ n1.s25906.0{- value -} 10
                                           sat.s25909.0 = "int2Word#" @ sat.s25908.0{- value -}
                                           sat.s25910.0 = "narrow8Word#" @ sat.s25909.0{- value -}
                                           sat.s25907.0 = "plusAddr#" @ dt5.s25852.5{- value -} ww1.s25893.0{- value -}
                                           s2.s25911.0 = "writeWord8OffAddr#" @ sat.s25907.0{- value -} 0 sat.s25910.0{- value -}
                                      case s2.s25911.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s25912.0 = "touch#" @ dt6.s25853.5
                                            case s'1.s25912.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s25915.0 = "uncheckedIShiftRA#" @ n1.s25906.0{- value -} 18
                                                       sat.s25916.0 = "+#" @ sat.s25915.0{- value -} 216
                                                       sat.s25917.0 = "int2Word#" @ sat.s25916.0{- value -}
                                                       sat.s25918.0 = "narrow8Word#" @ sat.s25917.0{- value -}
                                                       sat.s25913.0 = "+#" @ ww1.s25893.0{- value -} 1
                                                       sat.s25914.0 = "plusAddr#" @ dt5.s25852.5{- value -} sat.s25913.0{- value -}
                                                       s1.s25919.0 = "writeWord8OffAddr#" @ sat.s25914.0{- value -} 0 sat.s25918.0{- value -}
                                                  case s1.s25919.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS s'2.s25920.0 = "touch#" @ dt6.s25853.5
                                                        case s'2.s25920.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS n2.s25921.0 = "andI#" @ n1.s25906.0{- value -} 1023
                                                                   sat.s25924.0 = "int2Word#" @ n2.s25921.0{- value -}
                                                                   sat.s25925.0 = "narrow8Word#" @ sat.s25924.0{- value -}
                                                                   sat.s25922.0 = "+#" @ ww1.s25893.0{- value -} 2
                                                                   sat.s25923.0 = "plusAddr#" @ dt5.s25852.5{- value -} sat.s25922.0{- value -}
                                                                   s3.s25926.0 = "writeWord8OffAddr#" @ sat.s25923.0{- value -} 0 sat.s25925.0{- value -}
                                                              case s3.s25926.0{- value -} of
                                                                ("GHC.Prim.(##)") ->
                                                                    letS s'3.s25927.0 = "touch#" @ dt6.s25853.5
                                                                    case s'3.s25927.0{- value -} of
                                                                      ("GHC.Prim.(##)") ->
                                                                          letS sat.s25930.0 = "uncheckedIShiftRA#" @ n2.s25921.0{- value -} 8
                                                                               sat.s25931.0 = "+#" @ sat.s25930.0{- value -} 220
                                                                               sat.s25932.0 = "int2Word#" @ sat.s25931.0{- value -}
                                                                               sat.s25933.0 = "narrow8Word#" @ sat.s25932.0{- value -}
                                                                               sat.s25928.0 = "+#" @ ww1.s25893.0{- value -} 3
                                                                               sat.s25929.0 = "plusAddr#" @ dt5.s25852.5{- value -} sat.s25928.0{- value -}
                                                                               s4.s25934.0 = "writeWord8OffAddr#" @ sat.s25929.0{- value -} 0 sat.s25933.0{- value -}
                                                                          case s4.s25934.0{- value -} of
                                                                            ("GHC.Prim.(##)") ->
                                                                                letS s'4.s25935.0 = "touch#" @ dt6.s25853.5
                                                                                case s'4.s25935.0{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      letS sat.s25937.0 = "+#" @ ww1.s25893.0{- value -} 4
                                                                                           sat.s25936.0 = "+#" @ ww.s25892.0{- value -} 1
                                                                                      "$wloop.s25891.1" @ sat.s25936.0{- value -} sat.s25937.0{- value -} #"GHC.Prim.void#"
                                  1 ->
                                      exit.s25859.1 @ ww.s25892.0{- value -} ww1.s25893.0{- value -} #"GHC.Prim.void#"
                            1 ->
                                let "$j.s25938.0" = GHC.IO.Encoding.UTF16.mkUTF16le1.closure.8 @ exit1.s25867.1 ww.s25892.0{- value -} ww1.s25893.0{- value -}
                                    "$j1.s25939.0" = GHC.IO.Encoding.UTF16.mkUTF16le1.closure.9 @ "$j.s25938.0" "$wloop.s25891.1" dt5.s25852.5{- value -} dt6.s25853.5 ww.s25892.0{- value -} ww1.s25893.0{- value -} x.s25902.0{- value -}
                                letS lwild3.s25970.0 = "<=#" @ 55296 x.s25902.0{- value -}
                                case lwild3.s25970.0{- value -} of
                                  _ ->
                                      "$j1.s25939.0"
                                  1 ->
                                      letS lwild4.s25971.0 = "<=#" @ x.s25902.0{- value -} 56319
                                      case lwild4.s25971.0{- value -} of
                                        _ ->
                                            "$j1.s25939.0"
                                        1 ->
                                            "$j.s25938.0"
          1 ->
              exit2.s25875.1 @ ww.s25892.0{- value -} ww1.s25893.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit3.s25883.1 @ ww.s25892.0{- value -} ww1.s25893.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF16le1.closure.2 ds.s25847.4 dt.s25845.4 dt1.s25846.4 dt2.s25848.4 dt4.s25850.4 lvl5.s25858.4 ww.s25868.1 =
  letS lwild.s25871.0 = "==#" @ ww.s25868.1{- value -} dt4.s25850.4{- value -}
  case lwild.s25871.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s25845.4{- value -} dt1.s25846.4 ds.s25847.4 dt2.s25848.4{- value -} ww.s25868.1{- value -} dt4.s25850.4{- value -}]
    1 ->
        lvl5.s25858.4

GHC.IO.Encoding.UTF16.mkUTF16le1.closure.3 ds.s25847.3 ds1.s25854.2 dt.s25845.3 dt1.s25846.3 dt2.s25848.3 dt4.s25850.3 dt5.s25852.2 dt6.s25853.2 dt7.s25855.2 dt8.s25856.2 lvl5.s25858.3 ww.s25868.0 ww1.s25869.0 void.040.1249 =
  let sat.s25873.0 = [GHC.IO.Buffer.Buffer dt5.s25852.2{- value -} dt6.s25853.2 ds1.s25854.2 dt7.s25855.2{- value -} dt8.s25856.2{- value -} ww1.s25869.0{- value -}]
      sat.s25872.0 = GHC.IO.Encoding.UTF16.mkUTF16le1.closure.2 @ ds.s25847.3 dt.s25845.3{- value -} dt1.s25846.3 dt2.s25848.3{- value -} dt4.s25850.3{- value -} lvl5.s25858.3 ww.s25868.0{- value -}
      sat.s25874.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s25872.0 sat.s25873.0]
  ["GHC.Prim.Unit#" sat.s25874.0]

GHC.IO.Encoding.UTF16.mkUTF16le1.closure.4 ds.s25847.6 dt.s25845.6 dt1.s25846.6 dt2.s25848.6 dt4.s25850.6 lvl5.s25858.6 ww.s25876.1 =
  letS lwild.s25879.0 = "==#" @ ww.s25876.1{- value -} dt4.s25850.6{- value -}
  case lwild.s25879.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s25845.6{- value -} dt1.s25846.6 ds.s25847.6 dt2.s25848.6{- value -} ww.s25876.1{- value -} dt4.s25850.6{- value -}]
    1 ->
        lvl5.s25858.6

GHC.IO.Encoding.UTF16.mkUTF16le1.closure.5 ds.s25847.5 ds1.s25854.3 dt.s25845.5 dt1.s25846.5 dt2.s25848.5 dt4.s25850.5 dt5.s25852.3 dt6.s25853.3 dt7.s25855.3 dt8.s25856.3 lvl5.s25858.5 ww.s25876.0 ww1.s25877.0 void.040.1250 =
  let sat.s25881.0 = [GHC.IO.Buffer.Buffer dt5.s25852.3{- value -} dt6.s25853.3 ds1.s25854.3 dt7.s25855.3{- value -} dt8.s25856.3{- value -} ww1.s25877.0{- value -}]
      sat.s25880.0 = GHC.IO.Encoding.UTF16.mkUTF16le1.closure.4 @ ds.s25847.5 dt.s25845.5{- value -} dt1.s25846.5 dt2.s25848.5{- value -} dt4.s25850.5{- value -} lvl5.s25858.5 ww.s25876.0{- value -}
      sat.s25882.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s25880.0 sat.s25881.0]
  ["GHC.Prim.Unit#" sat.s25882.0]

GHC.IO.Encoding.UTF16.mkUTF16le1.closure.6 ds.s25847.8 dt.s25845.8 dt1.s25846.8 dt2.s25848.8 dt4.s25850.8 lvl5.s25858.8 ww.s25884.1 =
  letS lwild.s25887.0 = "==#" @ ww.s25884.1{- value -} dt4.s25850.8{- value -}
  case lwild.s25887.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s25845.8{- value -} dt1.s25846.8 ds.s25847.8 dt2.s25848.8{- value -} ww.s25884.1{- value -} dt4.s25850.8{- value -}]
    1 ->
        lvl5.s25858.8

GHC.IO.Encoding.UTF16.mkUTF16le1.closure.7 ds.s25847.7 ds1.s25854.4 dt.s25845.7 dt1.s25846.7 dt2.s25848.7 dt4.s25850.7 dt5.s25852.4 dt6.s25853.4 dt7.s25855.4 dt8.s25856.4 lvl5.s25858.7 ww.s25884.0 ww1.s25885.0 void.040.1251 =
  let sat.s25889.0 = [GHC.IO.Buffer.Buffer dt5.s25852.4{- value -} dt6.s25853.4 ds1.s25854.4 dt7.s25855.4{- value -} dt8.s25856.4{- value -} ww1.s25885.0{- value -}]
      sat.s25888.0 = GHC.IO.Encoding.UTF16.mkUTF16le1.closure.6 @ ds.s25847.7 dt.s25845.7{- value -} dt1.s25846.7 dt2.s25848.7{- value -} dt4.s25850.7{- value -} lvl5.s25858.7 ww.s25884.0{- value -}
      sat.s25890.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s25888.0 sat.s25889.0]
  ["GHC.Prim.Unit#" sat.s25890.0]

GHC.IO.Encoding.UTF16.mkUTF16le1.closure.8 exit1.s25867.2 ww.s25892.1 ww1.s25893.1 =
  exit1.s25867.2 @ ww.s25892.1{- value -} ww1.s25893.1{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF16le1.closure.9 "$j.s25938.1" "$wloop.s25891.2" dt5.s25852.6 dt6.s25853.6 ww.s25892.2 ww1.s25893.2 x.s25902.1 =
  letS lwild3.s25940.0 = "<=#" @ 56320 x.s25902.1{- value -}
  case lwild3.s25940.0{- value -} of
    _ ->
        letS sat.s25942.0 = "int2Word#" @ x.s25902.1{- value -}
             sat.s25943.0 = "narrow8Word#" @ sat.s25942.0{- value -}
             sat.s25941.0 = "plusAddr#" @ dt5.s25852.6{- value -} ww1.s25893.2{- value -}
             s2.s25944.0 = "writeWord8OffAddr#" @ sat.s25941.0{- value -} 0 sat.s25943.0{- value -}
        case s2.s25944.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS s'1.s25945.0 = "touch#" @ dt6.s25853.6
              case s'1.s25945.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS sat.s25948.0 = "uncheckedIShiftRA#" @ x.s25902.1{- value -} 8
                         sat.s25949.0 = "int2Word#" @ sat.s25948.0{- value -}
                         sat.s25950.0 = "narrow8Word#" @ sat.s25949.0{- value -}
                         sat.s25946.0 = "+#" @ ww1.s25893.2{- value -} 1
                         sat.s25947.0 = "plusAddr#" @ dt5.s25852.6{- value -} sat.s25946.0{- value -}
                         s1.s25951.0 = "writeWord8OffAddr#" @ sat.s25947.0{- value -} 0 sat.s25950.0{- value -}
                    case s1.s25951.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'2.s25952.0 = "touch#" @ dt6.s25853.6
                          case s'2.s25952.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s25954.0 = "+#" @ ww1.s25893.2{- value -} 2
                                     sat.s25953.0 = "+#" @ ww.s25892.2{- value -} 1
                                "$wloop.s25891.2" @ sat.s25953.0{- value -} sat.s25954.0{- value -} #"GHC.Prim.void#"
    1 ->
        letS lwild4.s25955.0 = "<=#" @ x.s25902.1{- value -} 57343
        case lwild4.s25955.0{- value -} of
          _ ->
              letS sat.s25957.0 = "int2Word#" @ x.s25902.1{- value -}
                   sat.s25958.0 = "narrow8Word#" @ sat.s25957.0{- value -}
                   sat.s25956.0 = "plusAddr#" @ dt5.s25852.6{- value -} ww1.s25893.2{- value -}
                   s2.s25959.0 = "writeWord8OffAddr#" @ sat.s25956.0{- value -} 0 sat.s25958.0{- value -}
              case s2.s25959.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS s'1.s25960.0 = "touch#" @ dt6.s25853.6
                    case s'1.s25960.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s25963.0 = "uncheckedIShiftRA#" @ x.s25902.1{- value -} 8
                               sat.s25964.0 = "int2Word#" @ sat.s25963.0{- value -}
                               sat.s25965.0 = "narrow8Word#" @ sat.s25964.0{- value -}
                               sat.s25961.0 = "+#" @ ww1.s25893.2{- value -} 1
                               sat.s25962.0 = "plusAddr#" @ dt5.s25852.6{- value -} sat.s25961.0{- value -}
                               s1.s25966.0 = "writeWord8OffAddr#" @ sat.s25962.0{- value -} 0 sat.s25965.0{- value -}
                          case s1.s25966.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'2.s25967.0 = "touch#" @ dt6.s25853.6
                                case s'2.s25967.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s25969.1 = "+#" @ ww1.s25893.2{- value -} 2
                                           sat.s25968.0 = "+#" @ ww.s25892.2{- value -} 1
                                      "$wloop.s25891.2" @ sat.s25968.0{- value -} sat.s25969.1{- value -} #"GHC.Prim.void#"
          1 ->
              "$j.s25938.1"

GHC.IO.Encoding.UTF16.mkUTF16le2 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.UTF16.mkUTF16le3{- value -}

GHC.IO.Encoding.UTF16.mkUTF16le3 =
  #"UTF16-LE"

GHC.IO.Encoding.UTF16.mkUTF2 void.040.1268 =
  ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.UTF16.mkUTF3 input.s26013.0 output.s26014.0 void.040.1257 =
  letS wild.s26016.0 = input.s26013.0
  case wild.s26016.0 of
    (GHC.IO.Buffer.Buffer dt.s26017.0 dt1.s26018.0 ds.s26019.0 dt2.s26020.0 dt3.s26021.0 dt4.s26022.0) ->
        letS wild1.s26023.0 = output.s26014.0
        case wild1.s26023.0 of
          (GHC.IO.Buffer.Buffer dt5.s26024.0 dt6.s26025.0 ds1.s26026.0 dt7.s26027.0 dt8.s26028.0 dt9.s26029.0) ->
              let lvl5.s26030.0 = [GHC.IO.Buffer.Buffer dt.s26017.0{- value -} dt1.s26018.0 ds.s26019.0 dt2.s26020.0{- value -} 0 0]
                  exit.s26031.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.1 @ ds.s26019.0 ds1.s26026.0 dt.s26017.0{- value -} dt1.s26018.0 dt2.s26020.0{- value -} dt4.s26022.0{- value -} dt5.s26024.0{- value -} dt6.s26025.0 dt7.s26027.0{- value -} dt8.s26028.0{- value -} lvl5.s26030.0
                  exit1.s26039.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.3 @ ds.s26019.0 ds1.s26026.0 dt.s26017.0{- value -} dt1.s26018.0 dt2.s26020.0{- value -} dt4.s26022.0{- value -} dt5.s26024.0{- value -} dt6.s26025.0 dt7.s26027.0{- value -} dt8.s26028.0{- value -} lvl5.s26030.0
                  exit2.s26047.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.5 @ ds.s26019.0 ds1.s26026.0 dt.s26017.0{- value -} dt1.s26018.0 dt2.s26020.0{- value -} dt4.s26022.0{- value -} dt5.s26024.0{- value -} dt6.s26025.0 dt7.s26027.0{- value -} dt8.s26028.0{- value -} lvl5.s26030.0
                  exit3.s26055.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.7 @ ds.s26019.0 ds1.s26026.0 dt.s26017.0{- value -} dt1.s26018.0 dt2.s26020.0{- value -} dt4.s26022.0{- value -} dt5.s26024.0{- value -} dt6.s26025.0 dt7.s26027.0{- value -} dt8.s26028.0{- value -} lvl5.s26030.0
                  exit4.s26063.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.9 @ ds.s26019.0 ds1.s26026.0 dt.s26017.0{- value -} dt1.s26018.0 dt2.s26020.0{- value -} dt4.s26022.0{- value -} dt5.s26024.0{- value -} dt6.s26025.0 dt7.s26027.0{- value -} dt8.s26028.0{- value -} lvl5.s26030.0
                  exit5.s26071.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.11 @ ds.s26019.0 ds1.s26026.0 dt.s26017.0{- value -} dt1.s26018.0 dt2.s26020.0{- value -} dt4.s26022.0{- value -} dt5.s26024.0{- value -} dt6.s26025.0 dt7.s26027.0{- value -} dt8.s26028.0{- value -} lvl5.s26030.0
                  exit6.s26079.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.13 @ ds.s26019.0 ds1.s26026.0 dt.s26017.0{- value -} dt1.s26018.0 dt2.s26020.0{- value -} dt4.s26022.0{- value -} dt5.s26024.0{- value -} dt6.s26025.0 dt7.s26027.0{- value -} dt8.s26028.0{- value -} lvl5.s26030.0
                  exit7.s26087.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.15 @ ds.s26019.0 ds1.s26026.0 dt.s26017.0{- value -} dt1.s26018.0 dt2.s26020.0{- value -} dt4.s26022.0{- value -} dt5.s26024.0{- value -} dt6.s26025.0 dt7.s26027.0{- value -} dt8.s26028.0{- value -} lvl5.s26030.0
              letrec "$wloop.s26095.0" = GHC.IO.Encoding.UTF16.mkUTF3.closure.16 @ "$wloop.s26095.0" dt.s26017.0{- value -} dt1.s26018.0 dt4.s26022.0{- value -} dt5.s26024.0{- value -} dt6.s26025.0 dt7.s26027.0{- value -} exit.s26031.0 exit1.s26039.0 exit2.s26047.0 exit3.s26055.0 exit4.s26063.0 exit5.s26071.0 exit6.s26079.0 exit7.s26087.0
              "$wloop.s26095.0" @ dt3.s26021.0{- value -} dt9.s26029.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF3.closure.0 ds.s26019.2 dt.s26017.2 dt1.s26018.2 dt2.s26020.2 dt4.s26022.2 lvl5.s26030.2 ww.s26032.1 =
  letS lwild.s26035.0 = "==#" @ ww.s26032.1{- value -} dt4.s26022.2{- value -}
  case lwild.s26035.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26017.2{- value -} dt1.s26018.2 ds.s26019.2 dt2.s26020.2{- value -} ww.s26032.1{- value -} dt4.s26022.2{- value -}]
    1 ->
        lvl5.s26030.2

GHC.IO.Encoding.UTF16.mkUTF3.closure.1 ds.s26019.1 ds1.s26026.1 dt.s26017.1 dt1.s26018.1 dt2.s26020.1 dt4.s26022.1 dt5.s26024.1 dt6.s26025.1 dt7.s26027.1 dt8.s26028.1 lvl5.s26030.1 ww.s26032.0 ww1.s26033.0 void.040.1258 =
  let sat.s26037.0 = [GHC.IO.Buffer.Buffer dt5.s26024.1{- value -} dt6.s26025.1 ds1.s26026.1 dt7.s26027.1{- value -} dt8.s26028.1{- value -} ww1.s26033.0{- value -}]
      sat.s26036.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.0 @ ds.s26019.1 dt.s26017.1{- value -} dt1.s26018.1 dt2.s26020.1{- value -} dt4.s26022.1{- value -} lvl5.s26030.1 ww.s26032.0{- value -}
      sat.s26038.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s26036.0 sat.s26037.0]
  ["GHC.Prim.Unit#" sat.s26038.0]

GHC.IO.Encoding.UTF16.mkUTF3.closure.10 ds.s26019.12 dt.s26017.12 dt1.s26018.12 dt2.s26020.12 dt4.s26022.12 lvl5.s26030.12 ww.s26072.1 =
  letS lwild.s26075.0 = "==#" @ ww.s26072.1{- value -} dt4.s26022.12{- value -}
  case lwild.s26075.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26017.12{- value -} dt1.s26018.12 ds.s26019.12 dt2.s26020.12{- value -} ww.s26072.1{- value -} dt4.s26022.12{- value -}]
    1 ->
        lvl5.s26030.12

GHC.IO.Encoding.UTF16.mkUTF3.closure.11 ds.s26019.11 ds1.s26026.6 dt.s26017.11 dt1.s26018.11 dt2.s26020.11 dt4.s26022.11 dt5.s26024.6 dt6.s26025.6 dt7.s26027.6 dt8.s26028.6 lvl5.s26030.11 ww.s26072.0 ww1.s26073.0 void.040.1263 =
  let sat.s26077.0 = [GHC.IO.Buffer.Buffer dt5.s26024.6{- value -} dt6.s26025.6 ds1.s26026.6 dt7.s26027.6{- value -} dt8.s26028.6{- value -} ww1.s26073.0{- value -}]
      sat.s26076.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.10 @ ds.s26019.11 dt.s26017.11{- value -} dt1.s26018.11 dt2.s26020.11{- value -} dt4.s26022.11{- value -} lvl5.s26030.11 ww.s26072.0{- value -}
      sat.s26078.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s26076.0 sat.s26077.0]
  ["GHC.Prim.Unit#" sat.s26078.0]

GHC.IO.Encoding.UTF16.mkUTF3.closure.12 ds.s26019.14 dt.s26017.14 dt1.s26018.14 dt2.s26020.14 dt4.s26022.14 lvl5.s26030.14 ww.s26080.1 =
  letS lwild.s26083.0 = "==#" @ ww.s26080.1{- value -} dt4.s26022.14{- value -}
  case lwild.s26083.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26017.14{- value -} dt1.s26018.14 ds.s26019.14 dt2.s26020.14{- value -} ww.s26080.1{- value -} dt4.s26022.14{- value -}]
    1 ->
        lvl5.s26030.14

GHC.IO.Encoding.UTF16.mkUTF3.closure.13 ds.s26019.13 ds1.s26026.7 dt.s26017.13 dt1.s26018.13 dt2.s26020.13 dt4.s26022.13 dt5.s26024.7 dt6.s26025.7 dt7.s26027.7 dt8.s26028.7 lvl5.s26030.13 ww.s26080.0 ww1.s26081.0 void.040.1264 =
  let sat.s26085.0 = [GHC.IO.Buffer.Buffer dt5.s26024.7{- value -} dt6.s26025.7 ds1.s26026.7 dt7.s26027.7{- value -} dt8.s26028.7{- value -} ww1.s26081.0{- value -}]
      sat.s26084.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.12 @ ds.s26019.13 dt.s26017.13{- value -} dt1.s26018.13 dt2.s26020.13{- value -} dt4.s26022.13{- value -} lvl5.s26030.13 ww.s26080.0{- value -}
      sat.s26086.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s26084.0 sat.s26085.0]
  ["GHC.Prim.Unit#" sat.s26086.0]

GHC.IO.Encoding.UTF16.mkUTF3.closure.14 ds.s26019.16 dt.s26017.16 dt1.s26018.16 dt2.s26020.16 dt4.s26022.16 lvl5.s26030.16 ww.s26088.1 =
  letS lwild.s26091.0 = "==#" @ ww.s26088.1{- value -} dt4.s26022.16{- value -}
  case lwild.s26091.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26017.16{- value -} dt1.s26018.16 ds.s26019.16 dt2.s26020.16{- value -} ww.s26088.1{- value -} dt4.s26022.16{- value -}]
    1 ->
        lvl5.s26030.16

GHC.IO.Encoding.UTF16.mkUTF3.closure.15 ds.s26019.15 ds1.s26026.8 dt.s26017.15 dt1.s26018.15 dt2.s26020.15 dt4.s26022.15 dt5.s26024.8 dt6.s26025.8 dt7.s26027.8 dt8.s26028.8 lvl5.s26030.15 ww.s26088.0 ww1.s26089.0 void.040.1265 =
  let sat.s26093.0 = [GHC.IO.Buffer.Buffer dt5.s26024.8{- value -} dt6.s26025.8 ds1.s26026.8 dt7.s26027.8{- value -} dt8.s26028.8{- value -} ww1.s26089.0{- value -}]
      sat.s26092.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.14 @ ds.s26019.15 dt.s26017.15{- value -} dt1.s26018.15 dt2.s26020.15{- value -} dt4.s26022.15{- value -} lvl5.s26030.15 ww.s26088.0{- value -}
      sat.s26094.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s26092.0 sat.s26093.0]
  ["GHC.Prim.Unit#" sat.s26094.0]

GHC.IO.Encoding.UTF16.mkUTF3.closure.16 "$wloop.s26095.1" dt.s26017.17 dt1.s26018.17 dt4.s26022.17 dt5.s26024.9 dt6.s26025.9 dt7.s26027.9 exit.s26031.1 exit1.s26039.1 exit2.s26047.1 exit3.s26055.1 exit4.s26063.1 exit5.s26071.1 exit6.s26079.1 exit7.s26087.1 ww.s26096.0 ww1.s26097.0 void.040.1266 =
  letS lwild.s26099.0 = ">=#" @ ww1.s26097.0{- value -} dt7.s26027.9{- value -}
  case lwild.s26099.0{- value -} of
    _ ->
        letS lwild1.s26100.0 = ">=#" @ ww.s26096.0{- value -} dt4.s26022.17{- value -}
        case lwild1.s26100.0{- value -} of
          _ ->
              letS sat.s26101.0 = "+#" @ ww.s26096.0{- value -} 1
                   lwild2.s26102.0 = "==#" @ sat.s26101.0{- value -} dt4.s26022.17{- value -}
              case lwild2.s26102.0{- value -} of
                _ ->
                    letS sat.s26103.0 = "plusAddr#" @ dt.s26017.17{- value -} ww.s26096.0{- value -}
                         ds2.s26104.0 = "readWord8OffAddr#" @ sat.s26103.0{- value -} 0
                    case ds2.s26104.0{- value -} of
                      ("GHC.Prim.Unit#" ipv1.s26106.0) ->
                          letS s'.s26107.0 = "touch#" @ dt1.s26018.17
                          case s'.s26107.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s26108.0 = "+#" @ ww.s26096.0{- value -} 1
                                     sat.s26109.0 = "plusAddr#" @ dt.s26017.17{- value -} sat.s26108.0{- value -}
                                     ds3.s26110.0 = "readWord8OffAddr#" @ sat.s26109.0{- value -} 0
                                case ds3.s26110.0{- value -} of
                                  ("GHC.Prim.Unit#" ipv3.s26112.0) ->
                                      letS s'1.s26113.0 = "touch#" @ dt1.s26018.17
                                      case s'1.s26113.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s26115.1 = "uncheckedShiftL#" @ ipv3.s26112.0{- value -} 8
                                                 sat.s26116.0 = "narrow16Word#" @ sat.s26115.1{- value -}
                                                 sat.s26117.1 = "plusWord#" @ sat.s26116.0{- value -} ipv1.s26106.0{- value -}
                                                 x1.s26114.0 = "narrow16Word#" @ sat.s26117.1{- value -}
                                                 lwild3.s26118.0 = "ltWord#" @ x1.s26114.0{- value -} 55296u
                                            case lwild3.s26118.0{- value -} of
                                              _ ->
                                                  letS lwild4.s26119.0 = "gtWord#" @ x1.s26114.0{- value -} 57343u
                                                  case lwild4.s26119.0{- value -} of
                                                    _ ->
                                                        letS sat.s26120.1 = "-#" @ dt4.s26022.17{- value -} ww.s26096.0{- value -}
                                                             lwild5.s26121.0 = "<#" @ sat.s26120.1{- value -} 4
                                                        case lwild5.s26121.0{- value -} of
                                                          _ ->
                                                              letS sat.s26122.1 = "+#" @ ww.s26096.0{- value -} 2
                                                                   sat.s26123.1 = "plusAddr#" @ dt.s26017.17{- value -} sat.s26122.1{- value -}
                                                                   ds4.s26124.0 = "readWord8OffAddr#" @ sat.s26123.1{- value -} 0
                                                              case ds4.s26124.0{- value -} of
                                                                ("GHC.Prim.Unit#" ipv5.s26126.0) ->
                                                                    letS s'2.s26127.0 = "touch#" @ dt1.s26018.17
                                                                    case s'2.s26127.0{- value -} of
                                                                      ("GHC.Prim.(##)") ->
                                                                          letS sat.s26128.0 = "+#" @ ww.s26096.0{- value -} 3
                                                                               sat.s26129.0 = "plusAddr#" @ dt.s26017.17{- value -} sat.s26128.0{- value -}
                                                                               ds5.s26130.0 = "readWord8OffAddr#" @ sat.s26129.0{- value -} 0
                                                                          case ds5.s26130.0{- value -} of
                                                                            ("GHC.Prim.Unit#" ipv7.s26132.0) ->
                                                                                letS s'3.s26133.0 = "touch#" @ dt1.s26018.17
                                                                                case s'3.s26133.0{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      letS lwild6.s26134.0 = "geWord#" @ x1.s26114.0{- value -} 55296u
                                                                                      case lwild6.s26134.0{- value -} of
                                                                                        _ ->
                                                                                            exit.s26031.1 @ ww.s26096.0{- value -} ww1.s26097.0{- value -} #"GHC.Prim.void#"
                                                                                        1 ->
                                                                                            letS lwild7.s26135.0 = "leWord#" @ x1.s26114.0{- value -} 56319u
                                                                                            case lwild7.s26135.0{- value -} of
                                                                                              _ ->
                                                                                                  exit1.s26039.1 @ ww.s26096.0{- value -} ww1.s26097.0{- value -} #"GHC.Prim.void#"
                                                                                              1 ->
                                                                                                  letS sat.s26137.0 = "uncheckedShiftL#" @ ipv7.s26132.0{- value -} 8
                                                                                                       sat.s26138.0 = "narrow16Word#" @ sat.s26137.0{- value -}
                                                                                                       sat.s26139.0 = "plusWord#" @ sat.s26138.0{- value -} ipv5.s26126.0{- value -}
                                                                                                       x2.s26136.0 = "narrow16Word#" @ sat.s26139.0{- value -}
                                                                                                       lwild8.s26140.0 = "geWord#" @ x2.s26136.0{- value -} 56320u
                                                                                                  case lwild8.s26140.0{- value -} of
                                                                                                    _ ->
                                                                                                        exit2.s26047.1 @ ww.s26096.0{- value -} ww1.s26097.0{- value -} #"GHC.Prim.void#"
                                                                                                    1 ->
                                                                                                        letS lwild9.s26141.0 = "leWord#" @ x2.s26136.0{- value -} 57343u
                                                                                                        case lwild9.s26141.0{- value -} of
                                                                                                          _ ->
                                                                                                              exit3.s26055.1 @ ww.s26096.0{- value -} ww1.s26097.0{- value -} #"GHC.Prim.void#"
                                                                                                          1 ->
                                                                                                              letS sat.s26145.0 = "word2Int#" @ x2.s26136.0{- value -}
                                                                                                                   sat.s26142.0 = "word2Int#" @ x1.s26114.0{- value -}
                                                                                                                   sat.s26143.0 = "-#" @ sat.s26142.0{- value -} 55296
                                                                                                                   sat.s26144.0 = "uncheckedIShiftL#" @ sat.s26143.0{- value -} 10
                                                                                                                   sat.s26146.0 = "+#" @ sat.s26144.0{- value -} sat.s26145.0{- value -}
                                                                                                                   sat.s26147.0 = "+#" @ 9216 sat.s26146.0{- value -}
                                                                                                                   sat.s26148.1 = "chr#" @ sat.s26147.0{- value -}
                                                                                                                   s2.s26149.0 = "writeWideCharOffAddr#" @ dt5.s26024.9{- value -} ww1.s26097.0{- value -} sat.s26148.1{- value -}
                                                                                                              case s2.s26149.0{- value -} of
                                                                                                                ("GHC.Prim.(##)") ->
                                                                                                                    letS s'4.s26150.0 = "touch#" @ dt6.s26025.9
                                                                                                                    case s'4.s26150.0{- value -} of
                                                                                                                      ("GHC.Prim.(##)") ->
                                                                                                                          letS sat.s26152.0 = "+#" @ ww1.s26097.0{- value -} 1
                                                                                                                               sat.s26151.0 = "+#" @ ww.s26096.0{- value -} 4
                                                                                                                          "$wloop.s26095.1" @ sat.s26151.0{- value -} sat.s26152.0{- value -} #"GHC.Prim.void#"
                                                          1 ->
                                                              exit4.s26063.1 @ ww.s26096.0{- value -} ww1.s26097.0{- value -} #"GHC.Prim.void#"
                                                    1 ->
                                                        letS sat.s26153.0 = "word2Int#" @ x1.s26114.0{- value -}
                                                             sat.s26154.0 = "chr#" @ sat.s26153.0{- value -}
                                                             s2.s26155.0 = "writeWideCharOffAddr#" @ dt5.s26024.9{- value -} ww1.s26097.0{- value -} sat.s26154.0{- value -}
                                                        case s2.s26155.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS s'2.s26156.0 = "touch#" @ dt6.s26025.9
                                                              case s'2.s26156.0{- value -} of
                                                                ("GHC.Prim.(##)") ->
                                                                    letS sat.s26158.0 = "+#" @ ww1.s26097.0{- value -} 1
                                                                         sat.s26157.0 = "+#" @ ww.s26096.0{- value -} 2
                                                                    "$wloop.s26095.1" @ sat.s26157.0{- value -} sat.s26158.0{- value -} #"GHC.Prim.void#"
                                              1 ->
                                                  letS sat.s26159.0 = "word2Int#" @ x1.s26114.0{- value -}
                                                       sat.s26160.0 = "chr#" @ sat.s26159.0{- value -}
                                                       s2.s26161.0 = "writeWideCharOffAddr#" @ dt5.s26024.9{- value -} ww1.s26097.0{- value -} sat.s26160.0{- value -}
                                                  case s2.s26161.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS s'2.s26162.0 = "touch#" @ dt6.s26025.9
                                                        case s'2.s26162.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS sat.s26164.0 = "+#" @ ww1.s26097.0{- value -} 1
                                                                   sat.s26163.0 = "+#" @ ww.s26096.0{- value -} 2
                                                              "$wloop.s26095.1" @ sat.s26163.0{- value -} sat.s26164.0{- value -} #"GHC.Prim.void#"
                1 ->
                    exit5.s26071.1 @ ww.s26096.0{- value -} ww1.s26097.0{- value -} #"GHC.Prim.void#"
          1 ->
              exit6.s26079.1 @ ww.s26096.0{- value -} ww1.s26097.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit7.s26087.1 @ ww.s26096.0{- value -} ww1.s26097.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF3.closure.2 ds.s26019.4 dt.s26017.4 dt1.s26018.4 dt2.s26020.4 dt4.s26022.4 lvl5.s26030.4 ww.s26040.1 =
  letS lwild.s26043.0 = "==#" @ ww.s26040.1{- value -} dt4.s26022.4{- value -}
  case lwild.s26043.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26017.4{- value -} dt1.s26018.4 ds.s26019.4 dt2.s26020.4{- value -} ww.s26040.1{- value -} dt4.s26022.4{- value -}]
    1 ->
        lvl5.s26030.4

GHC.IO.Encoding.UTF16.mkUTF3.closure.3 ds.s26019.3 ds1.s26026.2 dt.s26017.3 dt1.s26018.3 dt2.s26020.3 dt4.s26022.3 dt5.s26024.2 dt6.s26025.2 dt7.s26027.2 dt8.s26028.2 lvl5.s26030.3 ww.s26040.0 ww1.s26041.0 void.040.1259 =
  let sat.s26045.0 = [GHC.IO.Buffer.Buffer dt5.s26024.2{- value -} dt6.s26025.2 ds1.s26026.2 dt7.s26027.2{- value -} dt8.s26028.2{- value -} ww1.s26041.0{- value -}]
      sat.s26044.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.2 @ ds.s26019.3 dt.s26017.3{- value -} dt1.s26018.3 dt2.s26020.3{- value -} dt4.s26022.3{- value -} lvl5.s26030.3 ww.s26040.0{- value -}
      sat.s26046.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s26044.0 sat.s26045.0]
  ["GHC.Prim.Unit#" sat.s26046.0]

GHC.IO.Encoding.UTF16.mkUTF3.closure.4 ds.s26019.6 dt.s26017.6 dt1.s26018.6 dt2.s26020.6 dt4.s26022.6 lvl5.s26030.6 ww.s26048.1 =
  letS lwild.s26051.0 = "==#" @ ww.s26048.1{- value -} dt4.s26022.6{- value -}
  case lwild.s26051.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26017.6{- value -} dt1.s26018.6 ds.s26019.6 dt2.s26020.6{- value -} ww.s26048.1{- value -} dt4.s26022.6{- value -}]
    1 ->
        lvl5.s26030.6

GHC.IO.Encoding.UTF16.mkUTF3.closure.5 ds.s26019.5 ds1.s26026.3 dt.s26017.5 dt1.s26018.5 dt2.s26020.5 dt4.s26022.5 dt5.s26024.3 dt6.s26025.3 dt7.s26027.3 dt8.s26028.3 lvl5.s26030.5 ww.s26048.0 ww1.s26049.0 void.040.1260 =
  let sat.s26053.0 = [GHC.IO.Buffer.Buffer dt5.s26024.3{- value -} dt6.s26025.3 ds1.s26026.3 dt7.s26027.3{- value -} dt8.s26028.3{- value -} ww1.s26049.0{- value -}]
      sat.s26052.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.4 @ ds.s26019.5 dt.s26017.5{- value -} dt1.s26018.5 dt2.s26020.5{- value -} dt4.s26022.5{- value -} lvl5.s26030.5 ww.s26048.0{- value -}
      sat.s26054.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s26052.0 sat.s26053.0]
  ["GHC.Prim.Unit#" sat.s26054.0]

GHC.IO.Encoding.UTF16.mkUTF3.closure.6 ds.s26019.8 dt.s26017.8 dt1.s26018.8 dt2.s26020.8 dt4.s26022.8 lvl5.s26030.8 ww.s26056.1 =
  letS lwild.s26059.0 = "==#" @ ww.s26056.1{- value -} dt4.s26022.8{- value -}
  case lwild.s26059.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26017.8{- value -} dt1.s26018.8 ds.s26019.8 dt2.s26020.8{- value -} ww.s26056.1{- value -} dt4.s26022.8{- value -}]
    1 ->
        lvl5.s26030.8

GHC.IO.Encoding.UTF16.mkUTF3.closure.7 ds.s26019.7 ds1.s26026.4 dt.s26017.7 dt1.s26018.7 dt2.s26020.7 dt4.s26022.7 dt5.s26024.4 dt6.s26025.4 dt7.s26027.4 dt8.s26028.4 lvl5.s26030.7 ww.s26056.0 ww1.s26057.0 void.040.1261 =
  let sat.s26061.0 = [GHC.IO.Buffer.Buffer dt5.s26024.4{- value -} dt6.s26025.4 ds1.s26026.4 dt7.s26027.4{- value -} dt8.s26028.4{- value -} ww1.s26057.0{- value -}]
      sat.s26060.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.6 @ ds.s26019.7 dt.s26017.7{- value -} dt1.s26018.7 dt2.s26020.7{- value -} dt4.s26022.7{- value -} lvl5.s26030.7 ww.s26056.0{- value -}
      sat.s26062.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s26060.0 sat.s26061.0]
  ["GHC.Prim.Unit#" sat.s26062.0]

GHC.IO.Encoding.UTF16.mkUTF3.closure.8 ds.s26019.10 dt.s26017.10 dt1.s26018.10 dt2.s26020.10 dt4.s26022.10 lvl5.s26030.10 ww.s26064.1 =
  letS lwild.s26067.1 = "==#" @ ww.s26064.1{- value -} dt4.s26022.10{- value -}
  case lwild.s26067.1{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26017.10{- value -} dt1.s26018.10 ds.s26019.10 dt2.s26020.10{- value -} ww.s26064.1{- value -} dt4.s26022.10{- value -}]
    1 ->
        lvl5.s26030.10

GHC.IO.Encoding.UTF16.mkUTF3.closure.9 ds.s26019.9 ds1.s26026.5 dt.s26017.9 dt1.s26018.9 dt2.s26020.9 dt4.s26022.9 dt5.s26024.5 dt6.s26025.5 dt7.s26027.5 dt8.s26028.5 lvl5.s26030.9 ww.s26064.0 ww1.s26065.0 void.040.1262 =
  let sat.s26069.0 = [GHC.IO.Buffer.Buffer dt5.s26024.5{- value -} dt6.s26025.5 ds1.s26026.5 dt7.s26027.5{- value -} dt8.s26028.5{- value -} ww1.s26065.0{- value -}]
      sat.s26068.0 = GHC.IO.Encoding.UTF16.mkUTF3.closure.8 @ ds.s26019.9 dt.s26017.9{- value -} dt1.s26018.9 dt2.s26020.9{- value -} dt4.s26022.9{- value -} lvl5.s26030.9 ww.s26064.0{- value -}
      sat.s26070.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s26068.0 sat.s26069.0]
  ["GHC.Prim.Unit#" sat.s26070.0]

GHC.IO.Encoding.UTF16.mkUTF4 =
  [GHC.Maybe.Just GHC.IO.Encoding.UTF16.mkUTF3]

GHC.IO.Encoding.UTF16.mkUTF5 input.s26217.0 output.s26218.0 void.040.1276 =
  letS wild.s26220.0 = input.s26217.0
  case wild.s26220.0 of
    (GHC.IO.Buffer.Buffer dt.s26221.0 dt1.s26222.0 ds.s26223.0 dt2.s26224.0 dt3.s26225.0 dt4.s26226.0) ->
        letS wild1.s26227.0 = output.s26218.0
        case wild1.s26227.0 of
          (GHC.IO.Buffer.Buffer dt5.s26228.0 dt6.s26229.0 ds1.s26230.0 dt7.s26231.0 dt8.s26232.0 dt9.s26233.0) ->
              let lvl5.s26234.0 = [GHC.IO.Buffer.Buffer dt.s26221.0{- value -} dt1.s26222.0 ds.s26223.0 dt2.s26224.0{- value -} 0 0]
                  exit.s26235.0 = GHC.IO.Encoding.UTF16.mkUTF5.closure.1 @ ds.s26223.0 ds1.s26230.0 dt.s26221.0{- value -} dt1.s26222.0 dt2.s26224.0{- value -} dt4.s26226.0{- value -} dt5.s26228.0{- value -} dt6.s26229.0 dt7.s26231.0{- value -} dt8.s26232.0{- value -} lvl5.s26234.0
                  exit1.s26243.0 = GHC.IO.Encoding.UTF16.mkUTF5.closure.3 @ ds.s26223.0 ds1.s26230.0 dt.s26221.0{- value -} dt1.s26222.0 dt2.s26224.0{- value -} dt4.s26226.0{- value -} dt5.s26228.0{- value -} dt6.s26229.0 dt7.s26231.0{- value -} dt8.s26232.0{- value -} lvl5.s26234.0
                  exit2.s26251.0 = GHC.IO.Encoding.UTF16.mkUTF5.closure.5 @ ds.s26223.0 ds1.s26230.0 dt.s26221.0{- value -} dt1.s26222.0 dt2.s26224.0{- value -} dt4.s26226.0{- value -} dt5.s26228.0{- value -} dt6.s26229.0 dt7.s26231.0{- value -} dt8.s26232.0{- value -} lvl5.s26234.0
                  exit3.s26259.0 = GHC.IO.Encoding.UTF16.mkUTF5.closure.7 @ ds.s26223.0 ds1.s26230.0 dt.s26221.0{- value -} dt1.s26222.0 dt2.s26224.0{- value -} dt4.s26226.0{- value -} dt5.s26228.0{- value -} dt6.s26229.0 dt7.s26231.0{- value -} dt8.s26232.0{- value -} lvl5.s26234.0
                  exit4.s26267.0 = GHC.IO.Encoding.UTF16.mkUTF5.closure.9 @ ds.s26223.0 ds1.s26230.0 dt.s26221.0{- value -} dt1.s26222.0 dt2.s26224.0{- value -} dt4.s26226.0{- value -} dt5.s26228.0{- value -} dt6.s26229.0 dt7.s26231.0{- value -} dt8.s26232.0{- value -} lvl5.s26234.0
                  exit5.s26275.0 = GHC.IO.Encoding.UTF16.mkUTF5.closure.11 @ ds.s26223.0 ds1.s26230.0 dt.s26221.0{- value -} dt1.s26222.0 dt2.s26224.0{- value -} dt4.s26226.0{- value -} dt5.s26228.0{- value -} dt6.s26229.0 dt7.s26231.0{- value -} dt8.s26232.0{- value -} lvl5.s26234.0
                  exit6.s26283.0 = GHC.IO.Encoding.UTF16.mkUTF5.closure.13 @ ds.s26223.0 ds1.s26230.0 dt.s26221.0{- value -} dt1.s26222.0 dt2.s26224.0{- value -} dt4.s26226.0{- value -} dt5.s26228.0{- value -} dt6.s26229.0 dt7.s26231.0{- value -} dt8.s26232.0{- value -} lvl5.s26234.0
                  exit7.s26291.0 = GHC.IO.Encoding.UTF16.mkUTF5.closure.15 @ ds.s26223.0 ds1.s26230.0 dt.s26221.0{- value -} dt1.s26222.0 dt2.s26224.0{- value -} dt4.s26226.0{- value -} dt5.s26228.0{- value -} dt6.s26229.0 dt7.s26231.0{- value -} dt8.s26232.0{- value -} lvl5.s26234.0
              letrec "$wloop.s26299.0" = GHC.IO.Encoding.UTF16.mkUTF5.closure.16 @ "$wloop.s26299.0" dt.s26221.0{- value -} dt1.s26222.0 dt4.s26226.0{- value -} dt5.s26228.0{- value -} dt6.s26229.0 dt7.s26231.0{- value -} exit.s26235.0 exit1.s26243.0 exit2.s26251.0 exit3.s26259.0 exit4.s26267.0 exit5.s26275.0 exit6.s26283.0 exit7.s26291.0
              "$wloop.s26299.0" @ dt3.s26225.0{- value -} dt9.s26233.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF5.closure.0 ds.s26223.2 dt.s26221.2 dt1.s26222.2 dt2.s26224.2 dt4.s26226.2 lvl5.s26234.2 ww.s26236.1 =
  letS lwild.s26239.0 = "==#" @ ww.s26236.1{- value -} dt4.s26226.2{- value -}
  case lwild.s26239.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26221.2{- value -} dt1.s26222.2 ds.s26223.2 dt2.s26224.2{- value -} ww.s26236.1{- value -} dt4.s26226.2{- value -}]
    1 ->
        lvl5.s26234.2

GHC.IO.Encoding.UTF16.mkUTF5.closure.1 ds.s26223.1 ds1.s26230.1 dt.s26221.1 dt1.s26222.1 dt2.s26224.1 dt4.s26226.1 dt5.s26228.1 dt6.s26229.1 dt7.s26231.1 dt8.s26232.1 lvl5.s26234.1 ww.s26236.0 ww1.s26237.0 void.040.1277 =
  let sat.s26241.0 = [GHC.IO.Buffer.Buffer dt5.s26228.1{- value -} dt6.s26229.1 ds1.s26230.1 dt7.s26231.1{- value -} dt8.s26232.1{- value -} ww1.s26237.0{- value -}]
      sat.s26240.1 = GHC.IO.Encoding.UTF16.mkUTF5.closure.0 @ ds.s26223.1 dt.s26221.1{- value -} dt1.s26222.1 dt2.s26224.1{- value -} dt4.s26226.1{- value -} lvl5.s26234.1 ww.s26236.0{- value -}
      sat.s26242.2 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s26240.1 sat.s26241.0]
  ["GHC.Prim.Unit#" sat.s26242.2]

GHC.IO.Encoding.UTF16.mkUTF5.closure.10 ds.s26223.12 dt.s26221.12 dt1.s26222.12 dt2.s26224.12 dt4.s26226.12 lvl5.s26234.12 ww.s26276.1 =
  letS lwild.s26279.0 = "==#" @ ww.s26276.1{- value -} dt4.s26226.12{- value -}
  case lwild.s26279.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26221.12{- value -} dt1.s26222.12 ds.s26223.12 dt2.s26224.12{- value -} ww.s26276.1{- value -} dt4.s26226.12{- value -}]
    1 ->
        lvl5.s26234.12

GHC.IO.Encoding.UTF16.mkUTF5.closure.11 ds.s26223.11 ds1.s26230.6 dt.s26221.11 dt1.s26222.11 dt2.s26224.11 dt4.s26226.11 dt5.s26228.6 dt6.s26229.6 dt7.s26231.6 dt8.s26232.6 lvl5.s26234.11 ww.s26276.0 ww1.s26277.0 void.040.1282 =
  let sat.s26281.1 = [GHC.IO.Buffer.Buffer dt5.s26228.6{- value -} dt6.s26229.6 ds1.s26230.6 dt7.s26231.6{- value -} dt8.s26232.6{- value -} ww1.s26277.0{- value -}]
      sat.s26280.1 = GHC.IO.Encoding.UTF16.mkUTF5.closure.10 @ ds.s26223.11 dt.s26221.11{- value -} dt1.s26222.11 dt2.s26224.11{- value -} dt4.s26226.11{- value -} lvl5.s26234.11 ww.s26276.0{- value -}
      sat.s26282.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s26280.1 sat.s26281.1]
  ["GHC.Prim.Unit#" sat.s26282.0]

GHC.IO.Encoding.UTF16.mkUTF5.closure.12 ds.s26223.14 dt.s26221.14 dt1.s26222.14 dt2.s26224.14 dt4.s26226.14 lvl5.s26234.14 ww.s26284.1 =
  letS lwild.s26287.0 = "==#" @ ww.s26284.1{- value -} dt4.s26226.14{- value -}
  case lwild.s26287.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26221.14{- value -} dt1.s26222.14 ds.s26223.14 dt2.s26224.14{- value -} ww.s26284.1{- value -} dt4.s26226.14{- value -}]
    1 ->
        lvl5.s26234.14

GHC.IO.Encoding.UTF16.mkUTF5.closure.13 ds.s26223.13 ds1.s26230.7 dt.s26221.13 dt1.s26222.13 dt2.s26224.13 dt4.s26226.13 dt5.s26228.7 dt6.s26229.7 dt7.s26231.7 dt8.s26232.7 lvl5.s26234.13 ww.s26284.0 ww1.s26285.0 void.040.1283 =
  let sat.s26289.1 = [GHC.IO.Buffer.Buffer dt5.s26228.7{- value -} dt6.s26229.7 ds1.s26230.7 dt7.s26231.7{- value -} dt8.s26232.7{- value -} ww1.s26285.0{- value -}]
      sat.s26288.0 = GHC.IO.Encoding.UTF16.mkUTF5.closure.12 @ ds.s26223.13 dt.s26221.13{- value -} dt1.s26222.13 dt2.s26224.13{- value -} dt4.s26226.13{- value -} lvl5.s26234.13 ww.s26284.0{- value -}
      sat.s26290.2 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s26288.0 sat.s26289.1]
  ["GHC.Prim.Unit#" sat.s26290.2]

GHC.IO.Encoding.UTF16.mkUTF5.closure.14 ds.s26223.16 dt.s26221.16 dt1.s26222.16 dt2.s26224.16 dt4.s26226.16 lvl5.s26234.16 ww.s26292.1 =
  letS lwild.s26295.1 = "==#" @ ww.s26292.1{- value -} dt4.s26226.16{- value -}
  case lwild.s26295.1{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26221.16{- value -} dt1.s26222.16 ds.s26223.16 dt2.s26224.16{- value -} ww.s26292.1{- value -} dt4.s26226.16{- value -}]
    1 ->
        lvl5.s26234.16

GHC.IO.Encoding.UTF16.mkUTF5.closure.15 ds.s26223.15 ds1.s26230.8 dt.s26221.15 dt1.s26222.15 dt2.s26224.15 dt4.s26226.15 dt5.s26228.8 dt6.s26229.8 dt7.s26231.8 dt8.s26232.8 lvl5.s26234.15 ww.s26292.0 ww1.s26293.0 void.040.1284 =
  let sat.s26297.0 = [GHC.IO.Buffer.Buffer dt5.s26228.8{- value -} dt6.s26229.8 ds1.s26230.8 dt7.s26231.8{- value -} dt8.s26232.8{- value -} ww1.s26293.0{- value -}]
      sat.s26296.1 = GHC.IO.Encoding.UTF16.mkUTF5.closure.14 @ ds.s26223.15 dt.s26221.15{- value -} dt1.s26222.15 dt2.s26224.15{- value -} dt4.s26226.15{- value -} lvl5.s26234.15 ww.s26292.0{- value -}
      sat.s26298.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s26296.1 sat.s26297.0]
  ["GHC.Prim.Unit#" sat.s26298.0]

GHC.IO.Encoding.UTF16.mkUTF5.closure.16 "$wloop.s26299.1" dt.s26221.17 dt1.s26222.17 dt4.s26226.17 dt5.s26228.9 dt6.s26229.9 dt7.s26231.9 exit.s26235.1 exit1.s26243.1 exit2.s26251.1 exit3.s26259.1 exit4.s26267.1 exit5.s26275.1 exit6.s26283.1 exit7.s26291.1 ww.s26300.0 ww1.s26301.0 void.040.1285 =
  letS lwild.s26303.0 = ">=#" @ ww1.s26301.0{- value -} dt7.s26231.9{- value -}
  case lwild.s26303.0{- value -} of
    _ ->
        letS lwild1.s26304.0 = ">=#" @ ww.s26300.0{- value -} dt4.s26226.17{- value -}
        case lwild1.s26304.0{- value -} of
          _ ->
              letS sat.s26305.1 = "+#" @ ww.s26300.0{- value -} 1
                   lwild2.s26306.0 = "==#" @ sat.s26305.1{- value -} dt4.s26226.17{- value -}
              case lwild2.s26306.0{- value -} of
                _ ->
                    letS sat.s26307.2 = "plusAddr#" @ dt.s26221.17{- value -} ww.s26300.0{- value -}
                         ds2.s26308.0 = "readWord8OffAddr#" @ sat.s26307.2{- value -} 0
                    case ds2.s26308.0{- value -} of
                      ("GHC.Prim.Unit#" ipv1.s26310.0) ->
                          letS s'.s26311.0 = "touch#" @ dt1.s26222.17
                          case s'.s26311.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s26312.2 = "+#" @ ww.s26300.0{- value -} 1
                                     sat.s26313.2 = "plusAddr#" @ dt.s26221.17{- value -} sat.s26312.2{- value -}
                                     ds3.s26314.0 = "readWord8OffAddr#" @ sat.s26313.2{- value -} 0
                                case ds3.s26314.0{- value -} of
                                  ("GHC.Prim.Unit#" ipv3.s26316.0) ->
                                      letS s'1.s26317.0 = "touch#" @ dt1.s26222.17
                                      case s'1.s26317.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s26319.1 = "uncheckedShiftL#" @ ipv1.s26310.0{- value -} 8
                                                 sat.s26320.0 = "narrow16Word#" @ sat.s26319.1{- value -}
                                                 sat.s26321.1 = "plusWord#" @ sat.s26320.0{- value -} ipv3.s26316.0{- value -}
                                                 x1.s26318.0 = "narrow16Word#" @ sat.s26321.1{- value -}
                                                 lwild3.s26322.0 = "ltWord#" @ x1.s26318.0{- value -} 55296u
                                            case lwild3.s26322.0{- value -} of
                                              _ ->
                                                  letS lwild4.s26323.0 = "gtWord#" @ x1.s26318.0{- value -} 57343u
                                                  case lwild4.s26323.0{- value -} of
                                                    _ ->
                                                        letS sat.s26324.0 = "-#" @ dt4.s26226.17{- value -} ww.s26300.0{- value -}
                                                             lwild5.s26325.0 = "<#" @ sat.s26324.0{- value -} 4
                                                        case lwild5.s26325.0{- value -} of
                                                          _ ->
                                                              letS sat.s26326.0 = "+#" @ ww.s26300.0{- value -} 2
                                                                   sat.s26327.0 = "plusAddr#" @ dt.s26221.17{- value -} sat.s26326.0{- value -}
                                                                   ds4.s26328.0 = "readWord8OffAddr#" @ sat.s26327.0{- value -} 0
                                                              case ds4.s26328.0{- value -} of
                                                                ("GHC.Prim.Unit#" ipv5.s26330.0) ->
                                                                    letS s'2.s26331.0 = "touch#" @ dt1.s26222.17
                                                                    case s'2.s26331.0{- value -} of
                                                                      ("GHC.Prim.(##)") ->
                                                                          letS sat.s26332.0 = "+#" @ ww.s26300.0{- value -} 3
                                                                               sat.s26333.0 = "plusAddr#" @ dt.s26221.17{- value -} sat.s26332.0{- value -}
                                                                               ds5.s26334.0 = "readWord8OffAddr#" @ sat.s26333.0{- value -} 0
                                                                          case ds5.s26334.0{- value -} of
                                                                            ("GHC.Prim.Unit#" ipv7.s26336.0) ->
                                                                                letS s'3.s26337.0 = "touch#" @ dt1.s26222.17
                                                                                case s'3.s26337.0{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      letS lwild6.s26338.0 = "geWord#" @ x1.s26318.0{- value -} 55296u
                                                                                      case lwild6.s26338.0{- value -} of
                                                                                        _ ->
                                                                                            exit.s26235.1 @ ww.s26300.0{- value -} ww1.s26301.0{- value -} #"GHC.Prim.void#"
                                                                                        1 ->
                                                                                            letS lwild7.s26339.0 = "leWord#" @ x1.s26318.0{- value -} 56319u
                                                                                            case lwild7.s26339.0{- value -} of
                                                                                              _ ->
                                                                                                  exit1.s26243.1 @ ww.s26300.0{- value -} ww1.s26301.0{- value -} #"GHC.Prim.void#"
                                                                                              1 ->
                                                                                                  letS sat.s26341.0 = "uncheckedShiftL#" @ ipv5.s26330.0{- value -} 8
                                                                                                       sat.s26342.0 = "narrow16Word#" @ sat.s26341.0{- value -}
                                                                                                       sat.s26343.0 = "plusWord#" @ sat.s26342.0{- value -} ipv7.s26336.0{- value -}
                                                                                                       x2.s26340.0 = "narrow16Word#" @ sat.s26343.0{- value -}
                                                                                                       lwild8.s26344.0 = "geWord#" @ x2.s26340.0{- value -} 56320u
                                                                                                  case lwild8.s26344.0{- value -} of
                                                                                                    _ ->
                                                                                                        exit2.s26251.1 @ ww.s26300.0{- value -} ww1.s26301.0{- value -} #"GHC.Prim.void#"
                                                                                                    1 ->
                                                                                                        letS lwild9.s26345.0 = "leWord#" @ x2.s26340.0{- value -} 57343u
                                                                                                        case lwild9.s26345.0{- value -} of
                                                                                                          _ ->
                                                                                                              exit3.s26259.1 @ ww.s26300.0{- value -} ww1.s26301.0{- value -} #"GHC.Prim.void#"
                                                                                                          1 ->
                                                                                                              letS sat.s26349.0 = "word2Int#" @ x2.s26340.0{- value -}
                                                                                                                   sat.s26346.0 = "word2Int#" @ x1.s26318.0{- value -}
                                                                                                                   sat.s26347.0 = "-#" @ sat.s26346.0{- value -} 55296
                                                                                                                   sat.s26348.0 = "uncheckedIShiftL#" @ sat.s26347.0{- value -} 10
                                                                                                                   sat.s26350.0 = "+#" @ sat.s26348.0{- value -} sat.s26349.0{- value -}
                                                                                                                   sat.s26351.0 = "+#" @ 9216 sat.s26350.0{- value -}
                                                                                                                   sat.s26352.2 = "chr#" @ sat.s26351.0{- value -}
                                                                                                                   s2.s26353.0 = "writeWideCharOffAddr#" @ dt5.s26228.9{- value -} ww1.s26301.0{- value -} sat.s26352.2{- value -}
                                                                                                              case s2.s26353.0{- value -} of
                                                                                                                ("GHC.Prim.(##)") ->
                                                                                                                    letS s'4.s26354.0 = "touch#" @ dt6.s26229.9
                                                                                                                    case s'4.s26354.0{- value -} of
                                                                                                                      ("GHC.Prim.(##)") ->
                                                                                                                          letS sat.s26356.0 = "+#" @ ww1.s26301.0{- value -} 1
                                                                                                                               sat.s26355.0 = "+#" @ ww.s26300.0{- value -} 4
                                                                                                                          "$wloop.s26299.1" @ sat.s26355.0{- value -} sat.s26356.0{- value -} #"GHC.Prim.void#"
                                                          1 ->
                                                              exit4.s26267.1 @ ww.s26300.0{- value -} ww1.s26301.0{- value -} #"GHC.Prim.void#"
                                                    1 ->
                                                        letS sat.s26357.1 = "word2Int#" @ x1.s26318.0{- value -}
                                                             sat.s26358.1 = "chr#" @ sat.s26357.1{- value -}
                                                             s2.s26359.0 = "writeWideCharOffAddr#" @ dt5.s26228.9{- value -} ww1.s26301.0{- value -} sat.s26358.1{- value -}
                                                        case s2.s26359.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS s'2.s26360.0 = "touch#" @ dt6.s26229.9
                                                              case s'2.s26360.0{- value -} of
                                                                ("GHC.Prim.(##)") ->
                                                                    letS sat.s26362.2 = "+#" @ ww1.s26301.0{- value -} 1
                                                                         sat.s26361.0 = "+#" @ ww.s26300.0{- value -} 2
                                                                    "$wloop.s26299.1" @ sat.s26361.0{- value -} sat.s26362.2{- value -} #"GHC.Prim.void#"
                                              1 ->
                                                  letS sat.s26363.0 = "word2Int#" @ x1.s26318.0{- value -}
                                                       sat.s26364.0 = "chr#" @ sat.s26363.0{- value -}
                                                       s2.s26365.0 = "writeWideCharOffAddr#" @ dt5.s26228.9{- value -} ww1.s26301.0{- value -} sat.s26364.0{- value -}
                                                  case s2.s26365.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS s'2.s26366.0 = "touch#" @ dt6.s26229.9
                                                        case s'2.s26366.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS sat.s26368.0 = "+#" @ ww1.s26301.0{- value -} 1
                                                                   sat.s26367.0 = "+#" @ ww.s26300.0{- value -} 2
                                                              "$wloop.s26299.1" @ sat.s26367.0{- value -} sat.s26368.0{- value -} #"GHC.Prim.void#"
                1 ->
                    exit5.s26275.1 @ ww.s26300.0{- value -} ww1.s26301.0{- value -} #"GHC.Prim.void#"
          1 ->
              exit6.s26283.1 @ ww.s26300.0{- value -} ww1.s26301.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit7.s26291.1 @ ww.s26300.0{- value -} ww1.s26301.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF16.mkUTF5.closure.2 ds.s26223.4 dt.s26221.4 dt1.s26222.4 dt2.s26224.4 dt4.s26226.4 lvl5.s26234.4 ww.s26244.1 =
  letS lwild.s26247.0 = "==#" @ ww.s26244.1{- value -} dt4.s26226.4{- value -}
  case lwild.s26247.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26221.4{- value -} dt1.s26222.4 ds.s26223.4 dt2.s26224.4{- value -} ww.s26244.1{- value -} dt4.s26226.4{- value -}]
    1 ->
        lvl5.s26234.4

GHC.IO.Encoding.UTF16.mkUTF5.closure.3 ds.s26223.3 ds1.s26230.2 dt.s26221.3 dt1.s26222.3 dt2.s26224.3 dt4.s26226.3 dt5.s26228.2 dt6.s26229.2 dt7.s26231.2 dt8.s26232.2 lvl5.s26234.3 ww.s26244.0 ww1.s26245.0 void.040.1278 =
  let sat.s26249.1 = [GHC.IO.Buffer.Buffer dt5.s26228.2{- value -} dt6.s26229.2 ds1.s26230.2 dt7.s26231.2{- value -} dt8.s26232.2{- value -} ww1.s26245.0{- value -}]
      sat.s26248.1 = GHC.IO.Encoding.UTF16.mkUTF5.closure.2 @ ds.s26223.3 dt.s26221.3{- value -} dt1.s26222.3 dt2.s26224.3{- value -} dt4.s26226.3{- value -} lvl5.s26234.3 ww.s26244.0{- value -}
      sat.s26250.2 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s26248.1 sat.s26249.1]
  ["GHC.Prim.Unit#" sat.s26250.2]

GHC.IO.Encoding.UTF16.mkUTF5.closure.4 ds.s26223.6 dt.s26221.6 dt1.s26222.6 dt2.s26224.6 dt4.s26226.6 lvl5.s26234.6 ww.s26252.1 =
  letS lwild.s26255.0 = "==#" @ ww.s26252.1{- value -} dt4.s26226.6{- value -}
  case lwild.s26255.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26221.6{- value -} dt1.s26222.6 ds.s26223.6 dt2.s26224.6{- value -} ww.s26252.1{- value -} dt4.s26226.6{- value -}]
    1 ->
        lvl5.s26234.6

GHC.IO.Encoding.UTF16.mkUTF5.closure.5 ds.s26223.5 ds1.s26230.3 dt.s26221.5 dt1.s26222.5 dt2.s26224.5 dt4.s26226.5 dt5.s26228.3 dt6.s26229.3 dt7.s26231.3 dt8.s26232.3 lvl5.s26234.5 ww.s26252.0 ww1.s26253.0 void.040.1279 =
  let sat.s26257.0 = [GHC.IO.Buffer.Buffer dt5.s26228.3{- value -} dt6.s26229.3 ds1.s26230.3 dt7.s26231.3{- value -} dt8.s26232.3{- value -} ww1.s26253.0{- value -}]
      sat.s26256.0 = GHC.IO.Encoding.UTF16.mkUTF5.closure.4 @ ds.s26223.5 dt.s26221.5{- value -} dt1.s26222.5 dt2.s26224.5{- value -} dt4.s26226.5{- value -} lvl5.s26234.5 ww.s26252.0{- value -}
      sat.s26258.1 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s26256.0 sat.s26257.0]
  ["GHC.Prim.Unit#" sat.s26258.1]

GHC.IO.Encoding.UTF16.mkUTF5.closure.6 ds.s26223.8 dt.s26221.8 dt1.s26222.8 dt2.s26224.8 dt4.s26226.8 lvl5.s26234.8 ww.s26260.1 =
  letS lwild.s26263.0 = "==#" @ ww.s26260.1{- value -} dt4.s26226.8{- value -}
  case lwild.s26263.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26221.8{- value -} dt1.s26222.8 ds.s26223.8 dt2.s26224.8{- value -} ww.s26260.1{- value -} dt4.s26226.8{- value -}]
    1 ->
        lvl5.s26234.8

GHC.IO.Encoding.UTF16.mkUTF5.closure.7 ds.s26223.7 ds1.s26230.4 dt.s26221.7 dt1.s26222.7 dt2.s26224.7 dt4.s26226.7 dt5.s26228.4 dt6.s26229.4 dt7.s26231.4 dt8.s26232.4 lvl5.s26234.7 ww.s26260.0 ww1.s26261.0 void.040.1280 =
  let sat.s26265.1 = [GHC.IO.Buffer.Buffer dt5.s26228.4{- value -} dt6.s26229.4 ds1.s26230.4 dt7.s26231.4{- value -} dt8.s26232.4{- value -} ww1.s26261.0{- value -}]
      sat.s26264.1 = GHC.IO.Encoding.UTF16.mkUTF5.closure.6 @ ds.s26223.7 dt.s26221.7{- value -} dt1.s26222.7 dt2.s26224.7{- value -} dt4.s26226.7{- value -} lvl5.s26234.7 ww.s26260.0{- value -}
      sat.s26266.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s26264.1 sat.s26265.1]
  ["GHC.Prim.Unit#" sat.s26266.0]

GHC.IO.Encoding.UTF16.mkUTF5.closure.8 ds.s26223.10 dt.s26221.10 dt1.s26222.10 dt2.s26224.10 dt4.s26226.10 lvl5.s26234.10 ww.s26268.1 =
  letS lwild.s26271.0 = "==#" @ ww.s26268.1{- value -} dt4.s26226.10{- value -}
  case lwild.s26271.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s26221.10{- value -} dt1.s26222.10 ds.s26223.10 dt2.s26224.10{- value -} ww.s26268.1{- value -} dt4.s26226.10{- value -}]
    1 ->
        lvl5.s26234.10

GHC.IO.Encoding.UTF16.mkUTF5.closure.9 ds.s26223.9 ds1.s26230.5 dt.s26221.9 dt1.s26222.9 dt2.s26224.9 dt4.s26226.9 dt5.s26228.5 dt6.s26229.5 dt7.s26231.5 dt8.s26232.5 lvl5.s26234.9 ww.s26268.0 ww1.s26269.0 void.040.1281 =
  let sat.s26273.2 = [GHC.IO.Buffer.Buffer dt5.s26228.5{- value -} dt6.s26229.5 ds1.s26230.5 dt7.s26231.5{- value -} dt8.s26232.5{- value -} ww1.s26269.0{- value -}]
      sat.s26272.1 = GHC.IO.Encoding.UTF16.mkUTF5.closure.8 @ ds.s26223.9 dt.s26221.9{- value -} dt1.s26222.9 dt2.s26224.9{- value -} dt4.s26226.9{- value -} lvl5.s26234.9 ww.s26268.0{- value -}
      sat.s26274.1 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s26272.1 sat.s26273.2]
  ["GHC.Prim.Unit#" sat.s26274.1]

GHC.IO.Encoding.UTF16.mkUTF6 =
  [GHC.Maybe.Just GHC.IO.Encoding.UTF16.mkUTF5]

GHC.IO.Encoding.UTF16.mkUTF7 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.UTF16.mkUTF8{- value -}

GHC.IO.Encoding.UTF16.mkUTF8 =
  #"UTF-16"

"GHC.IO.Encoding.UTF32.$wutf32_decode" ww.s24117.0 ww1.s24118.0 ww2.s24119.0 ww3.s24120.0 ww4.s24121.0 ww5.s24122.0 ww6.s24123.0 w.s24124.0 void.040.1330 =
  letS ds1.s24126.0 = "readMutVar#" @ ww.s24117.0
  case ds1.s24126.0 of
    ("GHC.Prim.Unit#" ipv1.s24128.0) ->
        letS wild.s24129.0 = ipv1.s24128.0
        case wild.s24129.0 of
          (GHC.Maybe.Nothing) ->
              letS sat.s24130.1 = "-#" @ ww6.s24123.0{- value -} ww5.s24122.0{- value -}
                   lwild.s24131.0 = "<#" @ sat.s24130.1{- value -} 4
              case lwild.s24131.0{- value -} of
                _ ->
                    letS sat.s24132.1 = "plusAddr#" @ ww1.s24118.0{- value -} ww5.s24122.0{- value -}
                         ds2.s24133.0 = "readWord8OffAddr#" @ sat.s24132.1{- value -} 0
                    case ds2.s24133.0{- value -} of
                      ("GHC.Prim.Unit#" ipv3.s24135.0) ->
                          letS s'.s24136.0 = "touch#" @ ww2.s24119.0
                          case s'.s24136.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s24137.0 = "+#" @ ww5.s24122.0{- value -} 1
                                     sat.s24138.1 = "plusAddr#" @ ww1.s24118.0{- value -} sat.s24137.0{- value -}
                                     ds4.s24139.0 = "readWord8OffAddr#" @ sat.s24138.1{- value -} 0
                                case ds4.s24139.0{- value -} of
                                  ("GHC.Prim.Unit#" ipv5.s24141.0) ->
                                      letS s'1.s24142.0 = "touch#" @ ww2.s24119.0
                                      case s'1.s24142.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s24143.1 = "+#" @ ww5.s24122.0{- value -} 2
                                                 sat.s24144.1 = "plusAddr#" @ ww1.s24118.0{- value -} sat.s24143.1{- value -}
                                                 ds5.s24145.0 = "readWord8OffAddr#" @ sat.s24144.1{- value -} 0
                                            case ds5.s24145.0{- value -} of
                                              ("GHC.Prim.Unit#" ipv7.s24147.0) ->
                                                  letS s'2.s24148.0 = "touch#" @ ww2.s24119.0
                                                  case s'2.s24148.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s24149.1 = "+#" @ ww5.s24122.0{- value -} 3
                                                             sat.s24150.1 = "plusAddr#" @ ww1.s24118.0{- value -} sat.s24149.1{- value -}
                                                             ds6.s24151.0 = "readWord8OffAddr#" @ sat.s24150.1{- value -} 0
                                                        case ds6.s24151.0{- value -} of
                                                          ("GHC.Prim.Unit#" ipv9.s24153.0) ->
                                                              letS s'3.s24154.0 = "touch#" @ ww2.s24119.0
                                                              case s'3.s24154.0{- value -} of
                                                                ("GHC.Prim.(##)") ->
                                                                    let "$j.s24155.0" = "GHC.IO.Encoding.UTF32.$wutf32_decode.closure.0" @ ipv3.s24135.0{- value -} ipv5.s24141.0{- value -} ipv7.s24147.0{- value -} ipv9.s24153.0{- value -} w.s24124.0 ww.s24117.0 ww1.s24118.0{- value -} ww2.s24119.0 ww3.s24120.0 ww4.s24121.0{- value -} ww5.s24122.0{- value -} ww6.s24123.0{- value -}
                                                                    letS wild1.s24171.0 = ipv3.s24135.0{- value -}
                                                                    case wild1.s24171.0{- value -} of
                                                                      _ ->
                                                                          "$j.s24155.0"
                                                                      0u ->
                                                                          letS wild2.s24172.0 = ipv5.s24141.0{- value -}
                                                                          case wild2.s24172.0{- value -} of
                                                                            _ ->
                                                                                "$j.s24155.0"
                                                                            0u ->
                                                                                letS wild3.s24173.0 = ipv7.s24147.0{- value -}
                                                                                case wild3.s24173.0{- value -} of
                                                                                  _ ->
                                                                                      "$j.s24155.0"
                                                                                  254u ->
                                                                                      letS wild4.s24174.0 = ipv9.s24153.0{- value -}
                                                                                      case wild4.s24174.0{- value -} of
                                                                                        _ ->
                                                                                            "$j.s24155.0"
                                                                                        255u ->
                                                                                            letS "s2#.s24175.0" = "writeMutVar#" @ ww.s24117.0 GHC.IO.Encoding.UTF32.mkUTF6
                                                                                            case "s2#.s24175.0"{- value -} of
                                                                                              ("GHC.Prim.(##)") ->
                                                                                                  letS sat.s24176.0 = "+#" @ ww5.s24122.0{- value -} 4
                                                                                                  let sat.s24177.0 = [GHC.IO.Buffer.Buffer ww1.s24118.0{- value -} ww2.s24119.0 ww3.s24120.0 ww4.s24121.0{- value -} sat.s24176.0{- value -} ww6.s24123.0{- value -}]
                                                                                                  GHC.IO.Encoding.UTF32.mkUTF5 @ sat.s24177.0 w.s24124.0 #"GHC.Prim.void#"
                1 ->
                    let sat.s24178.0 = [GHC.IO.Buffer.Buffer ww1.s24118.0{- value -} ww2.s24119.0 ww3.s24120.0 ww4.s24121.0{- value -} ww5.s24122.0{- value -} ww6.s24123.0{- value -}]
                        sat.s24179.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s24178.0 w.s24124.0]
                    ["GHC.Prim.Unit#" sat.s24179.0]
          (GHC.Maybe.Just decode.s24180.0) ->
              let sat.s24181.0 = [GHC.IO.Buffer.Buffer ww1.s24118.0{- value -} ww2.s24119.0 ww3.s24120.0 ww4.s24121.0{- value -} ww5.s24122.0{- value -} ww6.s24123.0{- value -}]
              decode.s24180.0 @ sat.s24181.0 w.s24124.0 #"GHC.Prim.void#"

"GHC.IO.Encoding.UTF32.$wutf32_decode.closure.0" ipv3.s24135.1 ipv5.s24141.1 ipv7.s24147.1 ipv9.s24153.1 w.s24124.1 ww.s24117.1 ww1.s24118.1 ww2.s24119.1 ww3.s24120.1 ww4.s24121.1 ww5.s24122.1 ww6.s24123.1 =
  letS wild1.s24156.0 = ipv3.s24135.1{- value -}
  case wild1.s24156.0{- value -} of
    _ ->
        letS "s2#.s24157.0" = "writeMutVar#" @ ww.s24117.1 GHC.IO.Encoding.UTF32.mkUTF6
        case "s2#.s24157.0"{- value -} of
          ("GHC.Prim.(##)") ->
              let sat.s24158.0 = [GHC.IO.Buffer.Buffer ww1.s24118.1{- value -} ww2.s24119.1 ww3.s24120.1 ww4.s24121.1{- value -} ww5.s24122.1{- value -} ww6.s24123.1{- value -}]
              GHC.IO.Encoding.UTF32.mkUTF5 @ sat.s24158.0 w.s24124.1 #"GHC.Prim.void#"
    255u ->
        letS wild2.s24159.0 = ipv5.s24141.1{- value -}
        case wild2.s24159.0{- value -} of
          _ ->
              letS "s2#.s24160.0" = "writeMutVar#" @ ww.s24117.1 GHC.IO.Encoding.UTF32.mkUTF6
              case "s2#.s24160.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    let sat.s24161.0 = [GHC.IO.Buffer.Buffer ww1.s24118.1{- value -} ww2.s24119.1 ww3.s24120.1 ww4.s24121.1{- value -} ww5.s24122.1{- value -} ww6.s24123.1{- value -}]
                    GHC.IO.Encoding.UTF32.mkUTF5 @ sat.s24161.0 w.s24124.1 #"GHC.Prim.void#"
          254u ->
              letS wild3.s24162.0 = ipv7.s24147.1{- value -}
              case wild3.s24162.0{- value -} of
                _ ->
                    letS "s2#.s24163.0" = "writeMutVar#" @ ww.s24117.1 GHC.IO.Encoding.UTF32.mkUTF6
                    case "s2#.s24163.0"{- value -} of
                      ("GHC.Prim.(##)") ->
                          let sat.s24164.0 = [GHC.IO.Buffer.Buffer ww1.s24118.1{- value -} ww2.s24119.1 ww3.s24120.1 ww4.s24121.1{- value -} ww5.s24122.1{- value -} ww6.s24123.1{- value -}]
                          GHC.IO.Encoding.UTF32.mkUTF5 @ sat.s24164.0 w.s24124.1 #"GHC.Prim.void#"
                0u ->
                    letS wild4.s24165.0 = ipv9.s24153.1{- value -}
                    case wild4.s24165.0{- value -} of
                      _ ->
                          letS "s2#.s24166.0" = "writeMutVar#" @ ww.s24117.1 GHC.IO.Encoding.UTF32.mkUTF6
                          case "s2#.s24166.0"{- value -} of
                            ("GHC.Prim.(##)") ->
                                let sat.s24167.0 = [GHC.IO.Buffer.Buffer ww1.s24118.1{- value -} ww2.s24119.1 ww3.s24120.1 ww4.s24121.1{- value -} ww5.s24122.1{- value -} ww6.s24123.1{- value -}]
                                GHC.IO.Encoding.UTF32.mkUTF5 @ sat.s24167.0 w.s24124.1 #"GHC.Prim.void#"
                      0u ->
                          letS "s2#.s24168.0" = "writeMutVar#" @ ww.s24117.1 GHC.IO.Encoding.UTF32.mkUTF4
                          case "s2#.s24168.0"{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s24169.0 = "+#" @ ww5.s24122.1{- value -} 4
                                let sat.s24170.0 = [GHC.IO.Buffer.Buffer ww1.s24118.1{- value -} ww2.s24119.1 ww3.s24120.1 ww4.s24121.1{- value -} sat.s24169.0{- value -} ww6.s24123.1{- value -}]
                                GHC.IO.Encoding.UTF32.mkUTF3 @ sat.s24170.0 w.s24124.1 #"GHC.Prim.void#"

"GHC.IO.Encoding.UTF32.$wutf32_encode" ww.s24195.0 w.s24196.0 ww1.s24197.0 ww2.s24198.0 ww3.s24199.0 ww4.s24200.0 ww5.s24201.0 ww6.s24202.0 void.040.1333 =
  letS ds1.s24204.0 = "readMutVar#" @ ww.s24195.0
  case ds1.s24204.0 of
    ("GHC.Prim.Unit#" ipv1.s24206.0) ->
        letS wild.s24207.0 = ipv1.s24206.0
        case wild.s24207.0 of
          (GHC.Types.False) ->
              letS sat.s24208.0 = "-#" @ ww4.s24200.0{- value -} ww6.s24202.0{- value -}
                   lwild.s24209.0 = "<#" @ sat.s24208.0{- value -} 4
              case lwild.s24209.0{- value -} of
                _ ->
                    letS "s2#.s24210.0" = "writeMutVar#" @ ww.s24195.0 GHC.Types.True
                    case "s2#.s24210.0"{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s24211.0 = "plusAddr#" @ ww1.s24197.0{- value -} ww6.s24202.0{- value -}
                               s2.s24212.0 = "writeWord8OffAddr#" @ sat.s24211.0{- value -} 0 0u
                          case s2.s24212.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s24213.0 = "touch#" @ ww2.s24198.0
                                case s'.s24213.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s24214.0 = "+#" @ ww6.s24202.0{- value -} 1
                                           sat.s24215.0 = "plusAddr#" @ ww1.s24197.0{- value -} sat.s24214.0{- value -}
                                           s1.s24216.0 = "writeWord8OffAddr#" @ sat.s24215.0{- value -} 0 0u
                                      case s1.s24216.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s24217.0 = "touch#" @ ww2.s24198.0
                                            case s'1.s24217.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s24218.0 = "+#" @ ww6.s24202.0{- value -} 2
                                                       sat.s24219.0 = "plusAddr#" @ ww1.s24197.0{- value -} sat.s24218.0{- value -}
                                                       s3.s24220.0 = "writeWord8OffAddr#" @ sat.s24219.0{- value -} 0 254u
                                                  case s3.s24220.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS s'2.s24221.0 = "touch#" @ ww2.s24198.0
                                                        case s'2.s24221.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS sat.s24222.0 = "+#" @ ww6.s24202.0{- value -} 3
                                                                   sat.s24223.0 = "plusAddr#" @ ww1.s24197.0{- value -} sat.s24222.0{- value -}
                                                                   s4.s24224.0 = "writeWord8OffAddr#" @ sat.s24223.0{- value -} 0 255u
                                                              case s4.s24224.0{- value -} of
                                                                ("GHC.Prim.(##)") ->
                                                                    letS s'3.s24225.0 = "touch#" @ ww2.s24198.0
                                                                    case s'3.s24225.0{- value -} of
                                                                      ("GHC.Prim.(##)") ->
                                                                          letS sat.s24226.0 = "+#" @ ww6.s24202.0{- value -} 4
                                                                          let sat.s24227.0 = [GHC.IO.Buffer.Buffer ww1.s24197.0{- value -} ww2.s24198.0 ww3.s24199.0 ww4.s24200.0{- value -} ww5.s24201.0{- value -} sat.s24226.0{- value -}]
                                                                          GHC.IO.Encoding.UTF32.mkUTF1 @ w.s24196.0 sat.s24227.0 #"GHC.Prim.void#"
                1 ->
                    let sat.s24228.0 = [GHC.IO.Buffer.Buffer ww1.s24197.0{- value -} ww2.s24198.0 ww3.s24199.0 ww4.s24200.0{- value -} ww5.s24201.0{- value -} ww6.s24202.0{- value -}]
                        sat.s24229.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow w.s24196.0 sat.s24228.0]
                    ["GHC.Prim.Unit#" sat.s24229.0]
          (GHC.Types.True) ->
              let sat.s24230.0 = [GHC.IO.Buffer.Buffer ww1.s24197.0{- value -} ww2.s24198.0 ww3.s24199.0 ww4.s24200.0{- value -} ww5.s24201.0{- value -} ww6.s24202.0{- value -}]
              GHC.IO.Encoding.UTF32.mkUTF1 @ w.s24196.0 sat.s24230.0 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF1 input.s23750.0 output.s23751.0 void.040.1302 =
  letS wild.s23753.0 = input.s23750.0
  case wild.s23753.0 of
    (GHC.IO.Buffer.Buffer dt.s23754.0 dt1.s23755.0 ds.s23756.0 dt2.s23757.0 dt3.s23758.0 dt4.s23759.0) ->
        letS wild1.s23760.0 = output.s23751.0
        case wild1.s23760.0 of
          (GHC.IO.Buffer.Buffer dt5.s23761.0 dt6.s23762.0 ds1.s23763.0 dt7.s23764.0 dt8.s23765.0 dt9.s23766.0) ->
              let lvl5.s23767.0 = [GHC.IO.Buffer.Buffer dt.s23754.0{- value -} dt1.s23755.0 ds.s23756.0 dt2.s23757.0{- value -} 0 0]
                  exit.s23768.0 = GHC.IO.Encoding.UTF32.mkUTF1.closure.1 @ ds.s23756.0 ds1.s23763.0 dt.s23754.0{- value -} dt1.s23755.0 dt2.s23757.0{- value -} dt4.s23759.0{- value -} dt5.s23761.0{- value -} dt6.s23762.0 dt7.s23764.0{- value -} dt8.s23765.0{- value -} lvl5.s23767.0
                  exit1.s23776.0 = GHC.IO.Encoding.UTF32.mkUTF1.closure.3 @ ds.s23756.0 ds1.s23763.0 dt.s23754.0{- value -} dt1.s23755.0 dt2.s23757.0{- value -} dt4.s23759.0{- value -} dt5.s23761.0{- value -} dt6.s23762.0 dt7.s23764.0{- value -} dt8.s23765.0{- value -} lvl5.s23767.0
                  exit2.s23784.0 = GHC.IO.Encoding.UTF32.mkUTF1.closure.5 @ ds.s23756.0 ds1.s23763.0 dt.s23754.0{- value -} dt1.s23755.0 dt2.s23757.0{- value -} dt4.s23759.0{- value -} dt5.s23761.0{- value -} dt6.s23762.0 dt7.s23764.0{- value -} dt8.s23765.0{- value -} lvl5.s23767.0
              letrec "$wloop.s23792.0" = GHC.IO.Encoding.UTF32.mkUTF1.closure.8 @ "$wloop.s23792.0" dt.s23754.0{- value -} dt1.s23755.0 dt4.s23759.0{- value -} dt5.s23761.0{- value -} dt6.s23762.0 dt7.s23764.0{- value -} exit.s23768.0 exit1.s23776.0 exit2.s23784.0
              "$wloop.s23792.0" @ dt3.s23758.0{- value -} dt9.s23766.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF1.closure.0 ds.s23756.2 dt.s23754.2 dt1.s23755.2 dt2.s23757.2 dt4.s23759.2 lvl5.s23767.2 ww.s23769.1 =
  letS lwild.s23772.0 = "==#" @ ww.s23769.1{- value -} dt4.s23759.2{- value -}
  case lwild.s23772.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s23754.2{- value -} dt1.s23755.2 ds.s23756.2 dt2.s23757.2{- value -} ww.s23769.1{- value -} dt4.s23759.2{- value -}]
    1 ->
        lvl5.s23767.2

GHC.IO.Encoding.UTF32.mkUTF1.closure.1 ds.s23756.1 ds1.s23763.1 dt.s23754.1 dt1.s23755.1 dt2.s23757.1 dt4.s23759.1 dt5.s23761.1 dt6.s23762.1 dt7.s23764.1 dt8.s23765.1 lvl5.s23767.1 ww.s23769.0 ww1.s23770.0 void.040.1303 =
  let sat.s23774.0 = [GHC.IO.Buffer.Buffer dt5.s23761.1{- value -} dt6.s23762.1 ds1.s23763.1 dt7.s23764.1{- value -} dt8.s23765.1{- value -} ww1.s23770.0{- value -}]
      sat.s23773.0 = GHC.IO.Encoding.UTF32.mkUTF1.closure.0 @ ds.s23756.1 dt.s23754.1{- value -} dt1.s23755.1 dt2.s23757.1{- value -} dt4.s23759.1{- value -} lvl5.s23767.1 ww.s23769.0{- value -}
      sat.s23775.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s23773.0 sat.s23774.0]
  ["GHC.Prim.Unit#" sat.s23775.0]

GHC.IO.Encoding.UTF32.mkUTF1.closure.2 ds.s23756.4 dt.s23754.4 dt1.s23755.4 dt2.s23757.4 dt4.s23759.4 lvl5.s23767.4 ww.s23777.1 =
  letS lwild.s23780.0 = "==#" @ ww.s23777.1{- value -} dt4.s23759.4{- value -}
  case lwild.s23780.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s23754.4{- value -} dt1.s23755.4 ds.s23756.4 dt2.s23757.4{- value -} ww.s23777.1{- value -} dt4.s23759.4{- value -}]
    1 ->
        lvl5.s23767.4

GHC.IO.Encoding.UTF32.mkUTF1.closure.3 ds.s23756.3 ds1.s23763.2 dt.s23754.3 dt1.s23755.3 dt2.s23757.3 dt4.s23759.3 dt5.s23761.2 dt6.s23762.2 dt7.s23764.2 dt8.s23765.2 lvl5.s23767.3 ww.s23777.0 ww1.s23778.0 void.040.1304 =
  let sat.s23782.0 = [GHC.IO.Buffer.Buffer dt5.s23761.2{- value -} dt6.s23762.2 ds1.s23763.2 dt7.s23764.2{- value -} dt8.s23765.2{- value -} ww1.s23778.0{- value -}]
      sat.s23781.1 = GHC.IO.Encoding.UTF32.mkUTF1.closure.2 @ ds.s23756.3 dt.s23754.3{- value -} dt1.s23755.3 dt2.s23757.3{- value -} dt4.s23759.3{- value -} lvl5.s23767.3 ww.s23777.0{- value -}
      sat.s23783.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s23781.1 sat.s23782.0]
  ["GHC.Prim.Unit#" sat.s23783.0]

GHC.IO.Encoding.UTF32.mkUTF1.closure.4 ds.s23756.6 dt.s23754.6 dt1.s23755.6 dt2.s23757.6 dt4.s23759.6 lvl5.s23767.6 ww.s23785.1 =
  letS lwild.s23788.0 = "==#" @ ww.s23785.1{- value -} dt4.s23759.6{- value -}
  case lwild.s23788.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s23754.6{- value -} dt1.s23755.6 ds.s23756.6 dt2.s23757.6{- value -} ww.s23785.1{- value -} dt4.s23759.6{- value -}]
    1 ->
        lvl5.s23767.6

GHC.IO.Encoding.UTF32.mkUTF1.closure.5 ds.s23756.5 ds1.s23763.3 dt.s23754.5 dt1.s23755.5 dt2.s23757.5 dt4.s23759.5 dt5.s23761.3 dt6.s23762.3 dt7.s23764.3 dt8.s23765.3 lvl5.s23767.5 ww.s23785.0 ww1.s23786.0 void.040.1305 =
  let sat.s23790.0 = [GHC.IO.Buffer.Buffer dt5.s23761.3{- value -} dt6.s23762.3 ds1.s23763.3 dt7.s23764.3{- value -} dt8.s23765.3{- value -} ww1.s23786.0{- value -}]
      sat.s23789.1 = GHC.IO.Encoding.UTF32.mkUTF1.closure.4 @ ds.s23756.5 dt.s23754.5{- value -} dt1.s23755.5 dt2.s23757.5{- value -} dt4.s23759.5{- value -} lvl5.s23767.5 ww.s23785.0{- value -}
      sat.s23791.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s23789.1 sat.s23790.0]
  ["GHC.Prim.Unit#" sat.s23791.0]

GHC.IO.Encoding.UTF32.mkUTF1.closure.6 exit.s23768.2 ww.s23793.1 ww1.s23794.1 =
  exit.s23768.2 @ ww.s23793.1{- value -} ww1.s23794.1{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF1.closure.7 "$j.s23804.1" "$wloop.s23792.2" dt5.s23761.5 dt6.s23762.5 ww.s23793.2 ww1.s23794.2 x.s23803.1 =
  letS lwild2.s23806.0 = "<=#" @ 56320 x.s23803.1{- value -}
  case lwild2.s23806.0{- value -} of
    _ ->
        letS sat.s23808.1 = "uncheckedIShiftRA#" @ x.s23803.1{- value -} 24
             sat.s23809.0 = "int2Word#" @ sat.s23808.1{- value -}
             sat.s23810.0 = "narrow8Word#" @ sat.s23809.0{- value -}
             sat.s23807.0 = "plusAddr#" @ dt5.s23761.5{- value -} ww1.s23794.2{- value -}
             s2.s23811.0 = "writeWord8OffAddr#" @ sat.s23807.0{- value -} 0 sat.s23810.0{- value -}
        case s2.s23811.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS s'1.s23812.0 = "touch#" @ dt6.s23762.5
              case s'1.s23812.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS sat.s23815.0 = "uncheckedIShiftRA#" @ x.s23803.1{- value -} 16
                         sat.s23816.0 = "int2Word#" @ sat.s23815.0{- value -}
                         sat.s23817.0 = "narrow8Word#" @ sat.s23816.0{- value -}
                         sat.s23813.0 = "+#" @ ww1.s23794.2{- value -} 1
                         sat.s23814.0 = "plusAddr#" @ dt5.s23761.5{- value -} sat.s23813.0{- value -}
                         s1.s23818.0 = "writeWord8OffAddr#" @ sat.s23814.0{- value -} 0 sat.s23817.0{- value -}
                    case s1.s23818.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'2.s23819.0 = "touch#" @ dt6.s23762.5
                          case s'2.s23819.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s23822.0 = "uncheckedIShiftRA#" @ x.s23803.1{- value -} 8
                                     sat.s23823.0 = "int2Word#" @ sat.s23822.0{- value -}
                                     sat.s23824.0 = "narrow8Word#" @ sat.s23823.0{- value -}
                                     sat.s23820.1 = "+#" @ ww1.s23794.2{- value -} 2
                                     sat.s23821.0 = "plusAddr#" @ dt5.s23761.5{- value -} sat.s23820.1{- value -}
                                     s3.s23825.0 = "writeWord8OffAddr#" @ sat.s23821.0{- value -} 0 sat.s23824.0{- value -}
                                case s3.s23825.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'3.s23826.0 = "touch#" @ dt6.s23762.5
                                      case s'3.s23826.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s23829.1 = "int2Word#" @ x.s23803.1{- value -}
                                                 sat.s23830.1 = "narrow8Word#" @ sat.s23829.1{- value -}
                                                 sat.s23827.0 = "+#" @ ww1.s23794.2{- value -} 3
                                                 sat.s23828.1 = "plusAddr#" @ dt5.s23761.5{- value -} sat.s23827.0{- value -}
                                                 s4.s23831.0 = "writeWord8OffAddr#" @ sat.s23828.1{- value -} 0 sat.s23830.1{- value -}
                                            case s4.s23831.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'4.s23832.0 = "touch#" @ dt6.s23762.5
                                                  case s'4.s23832.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s23834.0 = "+#" @ ww1.s23794.2{- value -} 4
                                                             sat.s23833.1 = "+#" @ ww.s23793.2{- value -} 1
                                                        "$wloop.s23792.2" @ sat.s23833.1{- value -} sat.s23834.0{- value -} #"GHC.Prim.void#"
    1 ->
        letS lwild3.s23835.1 = "<=#" @ x.s23803.1{- value -} 57343
        case lwild3.s23835.1{- value -} of
          _ ->
              letS sat.s23837.0 = "uncheckedIShiftRA#" @ x.s23803.1{- value -} 24
                   sat.s23838.0 = "int2Word#" @ sat.s23837.0{- value -}
                   sat.s23839.0 = "narrow8Word#" @ sat.s23838.0{- value -}
                   sat.s23836.1 = "plusAddr#" @ dt5.s23761.5{- value -} ww1.s23794.2{- value -}
                   s2.s23840.0 = "writeWord8OffAddr#" @ sat.s23836.1{- value -} 0 sat.s23839.0{- value -}
              case s2.s23840.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS s'1.s23841.0 = "touch#" @ dt6.s23762.5
                    case s'1.s23841.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s23844.0 = "uncheckedIShiftRA#" @ x.s23803.1{- value -} 16
                               sat.s23845.0 = "int2Word#" @ sat.s23844.0{- value -}
                               sat.s23846.0 = "narrow8Word#" @ sat.s23845.0{- value -}
                               sat.s23842.0 = "+#" @ ww1.s23794.2{- value -} 1
                               sat.s23843.0 = "plusAddr#" @ dt5.s23761.5{- value -} sat.s23842.0{- value -}
                               s1.s23847.0 = "writeWord8OffAddr#" @ sat.s23843.0{- value -} 0 sat.s23846.0{- value -}
                          case s1.s23847.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'2.s23848.0 = "touch#" @ dt6.s23762.5
                                case s'2.s23848.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s23851.0 = "uncheckedIShiftRA#" @ x.s23803.1{- value -} 8
                                           sat.s23852.0 = "int2Word#" @ sat.s23851.0{- value -}
                                           sat.s23853.1 = "narrow8Word#" @ sat.s23852.0{- value -}
                                           sat.s23849.0 = "+#" @ ww1.s23794.2{- value -} 2
                                           sat.s23850.0 = "plusAddr#" @ dt5.s23761.5{- value -} sat.s23849.0{- value -}
                                           s3.s23854.0 = "writeWord8OffAddr#" @ sat.s23850.0{- value -} 0 sat.s23853.1{- value -}
                                      case s3.s23854.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'3.s23855.0 = "touch#" @ dt6.s23762.5
                                            case s'3.s23855.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s23858.0 = "int2Word#" @ x.s23803.1{- value -}
                                                       sat.s23859.0 = "narrow8Word#" @ sat.s23858.0{- value -}
                                                       sat.s23856.0 = "+#" @ ww1.s23794.2{- value -} 3
                                                       sat.s23857.0 = "plusAddr#" @ dt5.s23761.5{- value -} sat.s23856.0{- value -}
                                                       s4.s23860.0 = "writeWord8OffAddr#" @ sat.s23857.0{- value -} 0 sat.s23859.0{- value -}
                                                  case s4.s23860.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS s'4.s23861.0 = "touch#" @ dt6.s23762.5
                                                        case s'4.s23861.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS sat.s23863.0 = "+#" @ ww1.s23794.2{- value -} 4
                                                                   sat.s23862.1 = "+#" @ ww.s23793.2{- value -} 1
                                                              "$wloop.s23792.2" @ sat.s23862.1{- value -} sat.s23863.0{- value -} #"GHC.Prim.void#"
          1 ->
              "$j.s23804.1"

GHC.IO.Encoding.UTF32.mkUTF1.closure.8 "$wloop.s23792.1" dt.s23754.7 dt1.s23755.7 dt4.s23759.7 dt5.s23761.4 dt6.s23762.4 dt7.s23764.4 exit.s23768.1 exit1.s23776.1 exit2.s23784.1 ww.s23793.0 ww1.s23794.0 void.040.1306 =
  letS lwild.s23796.0 = ">=#" @ ww.s23793.0{- value -} dt4.s23759.7{- value -}
  case lwild.s23796.0{- value -} of
    _ ->
        letS sat.s23797.1 = "-#" @ dt7.s23764.4{- value -} ww1.s23794.0{- value -}
             lwild1.s23798.0 = "<#" @ sat.s23797.1{- value -} 4
        case lwild1.s23798.0{- value -} of
          _ ->
              letS ds2.s23799.0 = "readWideCharOffAddr#" @ dt.s23754.7{- value -} ww.s23793.0{- value -}
              case ds2.s23799.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s23801.0) ->
                    letS s'.s23802.0 = "touch#" @ dt1.s23755.7
                    case s'.s23802.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS x.s23803.0 = "ord#" @ ipv1.s23801.0{- value -}
                          let "$j.s23804.0" = GHC.IO.Encoding.UTF32.mkUTF1.closure.6 @ exit.s23768.1 ww.s23793.0{- value -} ww1.s23794.0{- value -}
                              "$j1.s23805.0" = GHC.IO.Encoding.UTF32.mkUTF1.closure.7 @ "$j.s23804.0" "$wloop.s23792.1" dt5.s23761.4{- value -} dt6.s23762.4 ww.s23793.0{- value -} ww1.s23794.0{- value -} x.s23803.0{- value -}
                          letS lwild2.s23864.0 = "<=#" @ 55296 x.s23803.0{- value -}
                          case lwild2.s23864.0{- value -} of
                            _ ->
                                "$j1.s23805.0"
                            1 ->
                                letS lwild3.s23865.0 = "<=#" @ x.s23803.0{- value -} 56319
                                case lwild3.s23865.0{- value -} of
                                  _ ->
                                      "$j1.s23805.0"
                                  1 ->
                                      "$j.s23804.0"
          1 ->
              exit1.s23776.1 @ ww.s23793.0{- value -} ww1.s23794.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit2.s23784.1 @ ww.s23793.0{- value -} ww1.s23794.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF2 void.040.1313 =
  ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.UTF32.mkUTF3 input.s23866.0 output.s23867.0 void.040.1308 =
  letS wild.s23869.0 = input.s23866.0
  case wild.s23869.0 of
    (GHC.IO.Buffer.Buffer dt.s23870.0 dt1.s23871.0 ds.s23872.0 dt2.s23873.0 dt3.s23874.0 dt4.s23875.0) ->
        letS wild1.s23876.0 = output.s23867.0
        case wild1.s23876.0 of
          (GHC.IO.Buffer.Buffer dt5.s23877.0 dt6.s23878.0 ds1.s23879.0 dt7.s23880.0 dt8.s23881.0 dt9.s23882.0) ->
              let lvl5.s23883.0 = [GHC.IO.Buffer.Buffer dt.s23870.0{- value -} dt1.s23871.0 ds.s23872.0 dt2.s23873.0{- value -} 0 0]
                  exit.s23884.0 = GHC.IO.Encoding.UTF32.mkUTF3.closure.1 @ ds.s23872.0 ds1.s23879.0 dt.s23870.0{- value -} dt1.s23871.0 dt2.s23873.0{- value -} dt4.s23875.0{- value -} dt5.s23877.0{- value -} dt6.s23878.0 dt7.s23880.0{- value -} dt8.s23881.0{- value -} lvl5.s23883.0
                  exit1.s23892.0 = GHC.IO.Encoding.UTF32.mkUTF3.closure.3 @ ds.s23872.0 ds1.s23879.0 dt.s23870.0{- value -} dt1.s23871.0 dt2.s23873.0{- value -} dt4.s23875.0{- value -} dt5.s23877.0{- value -} dt6.s23878.0 dt7.s23880.0{- value -} dt8.s23881.0{- value -} lvl5.s23883.0
              letrec "$wloop.s23900.0" = GHC.IO.Encoding.UTF32.mkUTF3.closure.8 @ "$wloop.s23900.0" ds.s23872.0 ds1.s23879.0 dt.s23870.0{- value -} dt1.s23871.0 dt2.s23873.0{- value -} dt4.s23875.0{- value -} dt5.s23877.0{- value -} dt6.s23878.0 dt7.s23880.0{- value -} dt8.s23881.0{- value -} exit.s23884.0 exit1.s23892.0 lvl5.s23883.0
              "$wloop.s23900.0" @ dt3.s23874.0{- value -} dt9.s23882.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF3.closure.0 ds.s23872.2 dt.s23870.2 dt1.s23871.2 dt2.s23873.2 dt4.s23875.2 lvl5.s23883.2 ww.s23885.1 =
  letS lwild.s23888.0 = "==#" @ ww.s23885.1{- value -} dt4.s23875.2{- value -}
  case lwild.s23888.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s23870.2{- value -} dt1.s23871.2 ds.s23872.2 dt2.s23873.2{- value -} ww.s23885.1{- value -} dt4.s23875.2{- value -}]
    1 ->
        lvl5.s23883.2

GHC.IO.Encoding.UTF32.mkUTF3.closure.1 ds.s23872.1 ds1.s23879.1 dt.s23870.1 dt1.s23871.1 dt2.s23873.1 dt4.s23875.1 dt5.s23877.1 dt6.s23878.1 dt7.s23880.1 dt8.s23881.1 lvl5.s23883.1 ww.s23885.0 ww1.s23886.0 void.040.1309 =
  let sat.s23890.1 = [GHC.IO.Buffer.Buffer dt5.s23877.1{- value -} dt6.s23878.1 ds1.s23879.1 dt7.s23880.1{- value -} dt8.s23881.1{- value -} ww1.s23886.0{- value -}]
      sat.s23889.1 = GHC.IO.Encoding.UTF32.mkUTF3.closure.0 @ ds.s23872.1 dt.s23870.1{- value -} dt1.s23871.1 dt2.s23873.1{- value -} dt4.s23875.1{- value -} lvl5.s23883.1 ww.s23885.0{- value -}
      sat.s23891.1 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s23889.1 sat.s23890.1]
  ["GHC.Prim.Unit#" sat.s23891.1]

GHC.IO.Encoding.UTF32.mkUTF3.closure.2 ds.s23872.4 dt.s23870.4 dt1.s23871.4 dt2.s23873.4 dt4.s23875.4 lvl5.s23883.4 ww.s23893.1 =
  letS lwild.s23896.0 = "==#" @ ww.s23893.1{- value -} dt4.s23875.4{- value -}
  case lwild.s23896.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s23870.4{- value -} dt1.s23871.4 ds.s23872.4 dt2.s23873.4{- value -} ww.s23893.1{- value -} dt4.s23875.4{- value -}]
    1 ->
        lvl5.s23883.4

GHC.IO.Encoding.UTF32.mkUTF3.closure.3 ds.s23872.3 ds1.s23879.2 dt.s23870.3 dt1.s23871.3 dt2.s23873.3 dt4.s23875.3 dt5.s23877.2 dt6.s23878.2 dt7.s23880.2 dt8.s23881.2 lvl5.s23883.3 ww.s23893.0 ww1.s23894.0 void.040.1310 =
  let sat.s23898.0 = [GHC.IO.Buffer.Buffer dt5.s23877.2{- value -} dt6.s23878.2 ds1.s23879.2 dt7.s23880.2{- value -} dt8.s23881.2{- value -} ww1.s23894.0{- value -}]
      sat.s23897.0 = GHC.IO.Encoding.UTF32.mkUTF3.closure.2 @ ds.s23872.3 dt.s23870.3{- value -} dt1.s23871.3 dt2.s23873.3{- value -} dt4.s23875.3{- value -} lvl5.s23883.3 ww.s23893.0{- value -}
      sat.s23899.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s23897.0 sat.s23898.0]
  ["GHC.Prim.Unit#" sat.s23899.0]

GHC.IO.Encoding.UTF32.mkUTF3.closure.4 "$wloop.s23900.2" dt5.s23877.4 dt6.s23878.4 ww.s23901.1 ww1.s23902.1 x1.s23930.1 =
  letS s2.s23943.0 = "writeWideCharOffAddr#" @ dt5.s23877.4{- value -} ww1.s23902.1{- value -} x1.s23930.1{- value -}
  case s2.s23943.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS s'4.s23944.0 = "touch#" @ dt6.s23878.4
        case s'4.s23944.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS sat.s23946.0 = "+#" @ ww1.s23902.1{- value -} 1
                   sat.s23945.0 = "+#" @ ww.s23901.1{- value -} 4
              "$wloop.s23900.2" @ sat.s23945.0{- value -} sat.s23946.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF3.closure.5 ds.s23872.7 dt.s23870.7 dt1.s23871.7 dt2.s23873.7 dt4.s23875.7 lvl5.s23883.7 ww.s23901.3 =
  letS lwild3.s23949.0 = "==#" @ ww.s23901.3{- value -} dt4.s23875.7{- value -}
  case lwild3.s23949.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s23870.7{- value -} dt1.s23871.7 ds.s23872.7 dt2.s23873.7{- value -} ww.s23901.3{- value -} dt4.s23875.7{- value -}]
    1 ->
        lvl5.s23883.7

GHC.IO.Encoding.UTF32.mkUTF3.closure.6 ds.s23872.8 dt.s23870.8 dt1.s23871.8 dt2.s23873.8 dt4.s23875.8 lvl5.s23883.8 ww.s23901.4 =
  letS lwild4.s23954.0 = "==#" @ ww.s23901.4{- value -} dt4.s23875.8{- value -}
  case lwild4.s23954.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s23870.8{- value -} dt1.s23871.8 ds.s23872.8 dt2.s23873.8{- value -} ww.s23901.4{- value -} dt4.s23875.8{- value -}]
    1 ->
        lvl5.s23883.8

GHC.IO.Encoding.UTF32.mkUTF3.closure.7 "$j.s23942.1" ds.s23872.6 ds1.s23879.4 dt.s23870.6 dt1.s23871.6 dt2.s23873.6 dt4.s23875.6 dt5.s23877.5 dt6.s23878.5 dt7.s23880.4 dt8.s23881.4 lvl5.s23883.6 ww.s23901.2 ww1.s23902.2 x2.s23941.1 =
  letS lwild2.s23948.0 = ">#" @ x2.s23941.1{- value -} 57343
  case lwild2.s23948.0{- value -} of
    _ ->
        let sat.s23951.0 = [GHC.IO.Buffer.Buffer dt5.s23877.5{- value -} dt6.s23878.5 ds1.s23879.4 dt7.s23880.4{- value -} dt8.s23881.4{- value -} ww1.s23902.2{- value -}]
            sat.s23950.1 = GHC.IO.Encoding.UTF32.mkUTF3.closure.5 @ ds.s23872.6 dt.s23870.6{- value -} dt1.s23871.6 dt2.s23873.6{- value -} dt4.s23875.6{- value -} lvl5.s23883.6 ww.s23901.2{- value -}
            sat.s23952.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s23950.1 sat.s23951.0]
        ["GHC.Prim.Unit#" sat.s23952.0]
    1 ->
        letS lwild3.s23953.0 = "<=#" @ x2.s23941.1{- value -} 1114111
        case lwild3.s23953.0{- value -} of
          _ ->
              let sat.s23956.0 = [GHC.IO.Buffer.Buffer dt5.s23877.5{- value -} dt6.s23878.5 ds1.s23879.4 dt7.s23880.4{- value -} dt8.s23881.4{- value -} ww1.s23902.2{- value -}]
                  sat.s23955.1 = GHC.IO.Encoding.UTF32.mkUTF3.closure.6 @ ds.s23872.6 dt.s23870.6{- value -} dt1.s23871.6 dt2.s23873.6{- value -} dt4.s23875.6{- value -} lvl5.s23883.6 ww.s23901.2{- value -}
                  sat.s23957.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s23955.1 sat.s23956.0]
              ["GHC.Prim.Unit#" sat.s23957.0]
          1 ->
              "$j.s23942.1"

GHC.IO.Encoding.UTF32.mkUTF3.closure.8 "$wloop.s23900.1" ds.s23872.5 ds1.s23879.3 dt.s23870.5 dt1.s23871.5 dt2.s23873.5 dt4.s23875.5 dt5.s23877.3 dt6.s23878.3 dt7.s23880.3 dt8.s23881.3 exit.s23884.1 exit1.s23892.1 lvl5.s23883.5 ww.s23901.0 ww1.s23902.0 void.040.1311 =
  letS lwild.s23904.0 = ">=#" @ ww1.s23902.0{- value -} dt7.s23880.3{- value -}
  case lwild.s23904.0{- value -} of
    _ ->
        letS sat.s23905.1 = "-#" @ dt4.s23875.5{- value -} ww.s23901.0{- value -}
             lwild1.s23906.0 = "<#" @ sat.s23905.1{- value -} 4
        case lwild1.s23906.0{- value -} of
          _ ->
              letS sat.s23907.0 = "plusAddr#" @ dt.s23870.5{- value -} ww.s23901.0{- value -}
                   ds2.s23908.0 = "readWord8OffAddr#" @ sat.s23907.0{- value -} 0
              case ds2.s23908.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s23910.1) ->
                    letS s'.s23911.0 = "touch#" @ dt1.s23871.5
                    case s'.s23911.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s23912.1 = "+#" @ ww.s23901.0{- value -} 1
                               sat.s23913.1 = "plusAddr#" @ dt.s23870.5{- value -} sat.s23912.1{- value -}
                               ds3.s23914.0 = "readWord8OffAddr#" @ sat.s23913.1{- value -} 0
                          case ds3.s23914.0{- value -} of
                            ("GHC.Prim.Unit#" ipv3.s23916.0) ->
                                letS s'1.s23917.0 = "touch#" @ dt1.s23871.5
                                case s'1.s23917.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s23918.0 = "+#" @ ww.s23901.0{- value -} 2
                                           sat.s23919.0 = "plusAddr#" @ dt.s23870.5{- value -} sat.s23918.0{- value -}
                                           ds4.s23920.0 = "readWord8OffAddr#" @ sat.s23919.0{- value -} 0
                                      case ds4.s23920.0{- value -} of
                                        ("GHC.Prim.Unit#" ipv5.s23922.0) ->
                                            letS s'2.s23923.0 = "touch#" @ dt1.s23871.5
                                            case s'2.s23923.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s23924.2 = "+#" @ ww.s23901.0{- value -} 3
                                                       sat.s23925.0 = "plusAddr#" @ dt.s23870.5{- value -} sat.s23924.2{- value -}
                                                       ds5.s23926.0 = "readWord8OffAddr#" @ sat.s23925.0{- value -} 0
                                                  case ds5.s23926.0{- value -} of
                                                    ("GHC.Prim.Unit#" ipv7.s23928.0) ->
                                                        letS s'3.s23929.0 = "touch#" @ dt1.s23871.5
                                                        case s'3.s23929.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS sat.s23939.0 = "word2Int#" @ ipv1.s23910.1{- value -}
                                                                   sat.s23936.0 = "word2Int#" @ ipv3.s23916.0{- value -}
                                                                   sat.s23937.0 = "uncheckedIShiftL#" @ sat.s23936.0{- value -} 8
                                                                   sat.s23933.0 = "word2Int#" @ ipv5.s23922.0{- value -}
                                                                   sat.s23934.1 = "uncheckedIShiftL#" @ sat.s23933.0{- value -} 16
                                                                   sat.s23931.0 = "word2Int#" @ ipv7.s23928.0{- value -}
                                                                   sat.s23932.1 = "uncheckedIShiftL#" @ sat.s23931.0{- value -} 24
                                                                   sat.s23935.1 = "+#" @ sat.s23932.1{- value -} sat.s23934.1{- value -}
                                                                   sat.s23938.0 = "+#" @ sat.s23935.1{- value -} sat.s23937.0{- value -}
                                                                   sat.s23940.0 = "+#" @ sat.s23938.0{- value -} sat.s23939.0{- value -}
                                                                   x1.s23930.0 = "chr#" @ sat.s23940.0{- value -}
                                                                   x2.s23941.0 = "ord#" @ x1.s23930.0{- value -}
                                                              let "$j.s23942.0" = GHC.IO.Encoding.UTF32.mkUTF3.closure.4 @ "$wloop.s23900.1" dt5.s23877.3{- value -} dt6.s23878.3 ww.s23901.0{- value -} ww1.s23902.0{- value -} x1.s23930.0{- value -}
                                                                  "$j1.s23947.0" = GHC.IO.Encoding.UTF32.mkUTF3.closure.7 @ "$j.s23942.0" ds.s23872.5 ds1.s23879.3 dt.s23870.5{- value -} dt1.s23871.5 dt2.s23873.5{- value -} dt4.s23875.5{- value -} dt5.s23877.3{- value -} dt6.s23878.3 dt7.s23880.3{- value -} dt8.s23881.3{- value -} lvl5.s23883.5 ww.s23901.0{- value -} ww1.s23902.0{- value -} x2.s23941.0{- value -}
                                                              letS lwild2.s23958.0 = ">=#" @ x2.s23941.0{- value -} 0
                                                              case lwild2.s23958.0{- value -} of
                                                                _ ->
                                                                    "$j1.s23947.0"
                                                                1 ->
                                                                    letS lwild3.s23959.0 = "<#" @ x2.s23941.0{- value -} 55296
                                                                    case lwild3.s23959.0{- value -} of
                                                                      _ ->
                                                                          "$j1.s23947.0"
                                                                      1 ->
                                                                          "$j.s23942.0"
          1 ->
              exit.s23884.1 @ ww.s23901.0{- value -} ww1.s23902.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit1.s23892.1 @ ww.s23901.0{- value -} ww1.s23902.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32 cfm.s24244.0 =
  let sat.s24292.0 = GHC.IO.Encoding.UTF32.mkUTF32.closure.4 @ cfm.s24244.0
      sat.s24268.0 = GHC.IO.Encoding.UTF32.mkUTF32.closure.9 @ cfm.s24244.0
  [GHC.IO.Encoding.Types.TextEncoding GHC.IO.Encoding.UTF32.mkUTF7 sat.s24268.0 sat.s24292.0]

GHC.IO.Encoding.UTF32.mkUTF32.closure.0 ipv1.s24272.1 val.s24287.0 void.X85.2 =
  letS "s2#.s24289.0" = "writeMutVar#" @ ipv1.s24272.1 val.s24287.0
  case "s2#.s24289.0"{- value -} of
    ("GHC.Prim.(##)") ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.UTF32.mkUTF32.closure.1 ipv1.s24272.2 void.X85.3 =
  "readMutVar#" @ ipv1.s24272.2

GHC.IO.Encoding.UTF32.mkUTF32.closure.2 cfm.s24244.2 eta.B3.338 eta.B2.787 void.X88.3 =
  GHC.IO.Encoding.Failure.recoverEncode1 @ cfm.s24244.2 eta.B3.338 eta.B2.787 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32.closure.3 ipv1.s24272.3 w.s24273.0 w1.s24274.0 void.X89.3 =
  letS ww.s24276.0 = w1.s24274.0
  case ww.s24276.0 of
    (GHC.IO.Buffer.Buffer ww1.s24277.0 ww2.s24278.0 ww3.s24279.0 ww4.s24280.0 ww5.s24281.0 ww6.s24282.0) ->
        "GHC.IO.Encoding.UTF32.$wutf32_encode" @ ipv1.s24272.3 w.s24273.0 ww1.s24277.0{- value -} ww2.s24278.0 ww3.s24279.0 ww4.s24280.0{- value -} ww5.s24281.0{- value -} ww6.s24282.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32.closure.4 cfm.s24244.1 void.040.1336 =
  letS ds.s24270.0 = "newMutVar#" @ GHC.Types.False
  case ds.s24270.0 of
    ("GHC.Prim.Unit#" ipv1.s24272.0) ->
        let sat.s24290.0 = GHC.IO.Encoding.UTF32.mkUTF32.closure.0 @ ipv1.s24272.0
            sat.s24286.0 = GHC.IO.Encoding.UTF32.mkUTF32.closure.1 @ ipv1.s24272.0
            sat.s24284.0 = GHC.IO.Encoding.UTF32.mkUTF32.closure.2 @ cfm.s24244.1
            sat.s24283.0 = GHC.IO.Encoding.UTF32.mkUTF32.closure.3 @ ipv1.s24272.0
            sat.s24291.0 = [GHC.IO.Encoding.Types.BufferCodec sat.s24283.0 sat.s24284.0 GHC.IO.Encoding.UTF32.mkUTF2 sat.s24286.0 sat.s24290.0]
        ["GHC.Prim.Unit#" sat.s24291.0]

GHC.IO.Encoding.UTF32.mkUTF32.closure.5 ipv1.s24248.1 val.s24263.0 void.X86.3 =
  letS "s2#.s24265.0" = "writeMutVar#" @ ipv1.s24248.1 val.s24263.0
  case "s2#.s24265.0"{- value -} of
    ("GHC.Prim.(##)") ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.UTF32.mkUTF32.closure.6 ipv1.s24248.2 void.X86.4 =
  "readMutVar#" @ ipv1.s24248.2

GHC.IO.Encoding.UTF32.mkUTF32.closure.7 cfm.s24244.4 eta.B3.339 eta.B2.788 void.X89.4 =
  GHC.IO.Encoding.Failure.recoverDecode1 @ cfm.s24244.4 eta.B3.339 eta.B2.788 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32.closure.8 ipv1.s24248.3 w.s24249.0 w1.s24250.0 void.X90.3 =
  letS ww.s24252.0 = w.s24249.0
  case ww.s24252.0 of
    (GHC.IO.Buffer.Buffer ww1.s24253.0 ww2.s24254.0 ww3.s24255.0 ww4.s24256.0 ww5.s24257.0 ww6.s24258.0) ->
        "GHC.IO.Encoding.UTF32.$wutf32_decode" @ ipv1.s24248.3 ww1.s24253.0{- value -} ww2.s24254.0 ww3.s24255.0 ww4.s24256.0{- value -} ww5.s24257.0{- value -} ww6.s24258.0{- value -} w1.s24250.0 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32.closure.9 cfm.s24244.3 void.040.1337 =
  letS ds.s24246.0 = "newMutVar#" @ GHC.Maybe.Nothing
  case ds.s24246.0 of
    ("GHC.Prim.Unit#" ipv1.s24248.0) ->
        let sat.s24266.0 = GHC.IO.Encoding.UTF32.mkUTF32.closure.5 @ ipv1.s24248.0
            sat.s24262.0 = GHC.IO.Encoding.UTF32.mkUTF32.closure.6 @ ipv1.s24248.0
            sat.s24260.0 = GHC.IO.Encoding.UTF32.mkUTF32.closure.7 @ cfm.s24244.3
            sat.s24259.0 = GHC.IO.Encoding.UTF32.mkUTF32.closure.8 @ ipv1.s24248.0
            sat.s24267.0 = [GHC.IO.Encoding.Types.BufferCodec sat.s24259.0 sat.s24260.0 GHC.IO.Encoding.UTF32.mkUTF2 sat.s24262.0 sat.s24266.0]
        ["GHC.Prim.Unit#" sat.s24267.0]

GHC.IO.Encoding.UTF32.mkUTF32be cfm.s24106.0 =
  let sat.s24114.1 = GHC.IO.Encoding.UTF32.mkUTF32be.closure.1 @ cfm.s24106.0
      sat.s24110.1 = GHC.IO.Encoding.UTF32.mkUTF32be.closure.3 @ cfm.s24106.0
  [GHC.IO.Encoding.Types.TextEncoding GHC.IO.Encoding.UTF32.mkUTF32be2 sat.s24110.1 sat.s24114.1]

GHC.IO.Encoding.UTF32.mkUTF32be.closure.0 cfm.s24106.2 eta.B3.334 eta.B2.783 void.X69.3 =
  GHC.IO.Encoding.Failure.recoverEncode1 @ cfm.s24106.2 eta.B3.334 eta.B2.783 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32be.closure.1 cfm.s24106.1 void.040.1326 =
  let sat.s24112.1 = GHC.IO.Encoding.UTF32.mkUTF32be.closure.0 @ cfm.s24106.1
      sat.s24113.1 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF32.mkUTF1 sat.s24112.1 GHC.IO.Encoding.UTF32.mkUTF2 GHC.IO.Encoding.UTF32.mkUTF2 GHC.IO.Encoding.UTF32.mkUTF32be1]
  ["GHC.Prim.Unit#" sat.s24113.1]

GHC.IO.Encoding.UTF32.mkUTF32be.closure.2 cfm.s24106.4 eta.B3.335 eta.B2.784 void.X70.3 =
  GHC.IO.Encoding.Failure.recoverDecode1 @ cfm.s24106.4 eta.B3.335 eta.B2.784 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32be.closure.3 cfm.s24106.3 void.040.1327 =
  let sat.s24108.1 = GHC.IO.Encoding.UTF32.mkUTF32be.closure.2 @ cfm.s24106.3
      sat.s24109.1 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF32.mkUTF5 sat.s24108.1 GHC.IO.Encoding.UTF32.mkUTF2 GHC.IO.Encoding.UTF32.mkUTF2 GHC.IO.Encoding.UTF32.mkUTF32be1]
  ["GHC.Prim.Unit#" sat.s24109.1]

GHC.IO.Encoding.UTF32.mkUTF32be1 ds.s23961.0 void.040.1314 =
  ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.UTF32.mkUTF32be2 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.UTF32.mkUTF32be3{- value -}

GHC.IO.Encoding.UTF32.mkUTF32be3 =
  #"UTF-32BE"

GHC.IO.Encoding.UTF32.mkUTF32le cfm.s23963.0 =
  let sat.s23971.0 = GHC.IO.Encoding.UTF32.mkUTF32le.closure.1 @ cfm.s23963.0
      sat.s23967.1 = GHC.IO.Encoding.UTF32.mkUTF32le.closure.3 @ cfm.s23963.0
  [GHC.IO.Encoding.Types.TextEncoding GHC.IO.Encoding.UTF32.mkUTF32le2 sat.s23967.1 sat.s23971.0]

GHC.IO.Encoding.UTF32.mkUTF32le.closure.0 cfm.s23963.2 eta.B3.331 eta.B2.780 void.X58.1 =
  GHC.IO.Encoding.Failure.recoverEncode1 @ cfm.s23963.2 eta.B3.331 eta.B2.780 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32le.closure.1 cfm.s23963.1 void.040.1315 =
  let sat.s23969.0 = GHC.IO.Encoding.UTF32.mkUTF32le.closure.0 @ cfm.s23963.1
      sat.s23970.1 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF32.mkUTF32le1 sat.s23969.0 GHC.IO.Encoding.UTF32.mkUTF2 GHC.IO.Encoding.UTF32.mkUTF2 GHC.IO.Encoding.UTF32.mkUTF32be1]
  ["GHC.Prim.Unit#" sat.s23970.1]

GHC.IO.Encoding.UTF32.mkUTF32le.closure.2 cfm.s23963.4 eta.B3.332 eta.B2.781 void.X59.1 =
  GHC.IO.Encoding.Failure.recoverDecode1 @ cfm.s23963.4 eta.B3.332 eta.B2.781 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32le.closure.3 cfm.s23963.3 void.040.1316 =
  let sat.s23965.1 = GHC.IO.Encoding.UTF32.mkUTF32le.closure.2 @ cfm.s23963.3
      sat.s23966.1 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF32.mkUTF3 sat.s23965.1 GHC.IO.Encoding.UTF32.mkUTF2 GHC.IO.Encoding.UTF32.mkUTF2 GHC.IO.Encoding.UTF32.mkUTF32be1]
  ["GHC.Prim.Unit#" sat.s23966.1]

GHC.IO.Encoding.UTF32.mkUTF32le1 input.s23634.0 output.s23635.0 void.040.1296 =
  letS wild.s23637.0 = input.s23634.0
  case wild.s23637.0 of
    (GHC.IO.Buffer.Buffer dt.s23638.0 dt1.s23639.0 ds.s23640.0 dt2.s23641.0 dt3.s23642.0 dt4.s23643.0) ->
        letS wild1.s23644.0 = output.s23635.0
        case wild1.s23644.0 of
          (GHC.IO.Buffer.Buffer dt5.s23645.0 dt6.s23646.0 ds1.s23647.0 dt7.s23648.0 dt8.s23649.0 dt9.s23650.0) ->
              let lvl5.s23651.0 = [GHC.IO.Buffer.Buffer dt.s23638.0{- value -} dt1.s23639.0 ds.s23640.0 dt2.s23641.0{- value -} 0 0]
                  exit.s23652.0 = GHC.IO.Encoding.UTF32.mkUTF32le1.closure.1 @ ds.s23640.0 ds1.s23647.0 dt.s23638.0{- value -} dt1.s23639.0 dt2.s23641.0{- value -} dt4.s23643.0{- value -} dt5.s23645.0{- value -} dt6.s23646.0 dt7.s23648.0{- value -} dt8.s23649.0{- value -} lvl5.s23651.0
                  exit1.s23660.0 = GHC.IO.Encoding.UTF32.mkUTF32le1.closure.3 @ ds.s23640.0 ds1.s23647.0 dt.s23638.0{- value -} dt1.s23639.0 dt2.s23641.0{- value -} dt4.s23643.0{- value -} dt5.s23645.0{- value -} dt6.s23646.0 dt7.s23648.0{- value -} dt8.s23649.0{- value -} lvl5.s23651.0
                  exit2.s23668.0 = GHC.IO.Encoding.UTF32.mkUTF32le1.closure.5 @ ds.s23640.0 ds1.s23647.0 dt.s23638.0{- value -} dt1.s23639.0 dt2.s23641.0{- value -} dt4.s23643.0{- value -} dt5.s23645.0{- value -} dt6.s23646.0 dt7.s23648.0{- value -} dt8.s23649.0{- value -} lvl5.s23651.0
              letrec "$wloop.s23676.0" = GHC.IO.Encoding.UTF32.mkUTF32le1.closure.8 @ "$wloop.s23676.0" dt.s23638.0{- value -} dt1.s23639.0 dt4.s23643.0{- value -} dt5.s23645.0{- value -} dt6.s23646.0 dt7.s23648.0{- value -} exit.s23652.0 exit1.s23660.0 exit2.s23668.0
              "$wloop.s23676.0" @ dt3.s23642.0{- value -} dt9.s23650.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32le1.closure.0 ds.s23640.2 dt.s23638.2 dt1.s23639.2 dt2.s23641.2 dt4.s23643.2 lvl5.s23651.2 ww.s23653.1 =
  letS lwild.s23656.0 = "==#" @ ww.s23653.1{- value -} dt4.s23643.2{- value -}
  case lwild.s23656.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s23638.2{- value -} dt1.s23639.2 ds.s23640.2 dt2.s23641.2{- value -} ww.s23653.1{- value -} dt4.s23643.2{- value -}]
    1 ->
        lvl5.s23651.2

GHC.IO.Encoding.UTF32.mkUTF32le1.closure.1 ds.s23640.1 ds1.s23647.1 dt.s23638.1 dt1.s23639.1 dt2.s23641.1 dt4.s23643.1 dt5.s23645.1 dt6.s23646.1 dt7.s23648.1 dt8.s23649.1 lvl5.s23651.1 ww.s23653.0 ww1.s23654.0 void.040.1297 =
  let sat.s23658.0 = [GHC.IO.Buffer.Buffer dt5.s23645.1{- value -} dt6.s23646.1 ds1.s23647.1 dt7.s23648.1{- value -} dt8.s23649.1{- value -} ww1.s23654.0{- value -}]
      sat.s23657.1 = GHC.IO.Encoding.UTF32.mkUTF32le1.closure.0 @ ds.s23640.1 dt.s23638.1{- value -} dt1.s23639.1 dt2.s23641.1{- value -} dt4.s23643.1{- value -} lvl5.s23651.1 ww.s23653.0{- value -}
      sat.s23659.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s23657.1 sat.s23658.0]
  ["GHC.Prim.Unit#" sat.s23659.0]

GHC.IO.Encoding.UTF32.mkUTF32le1.closure.2 ds.s23640.4 dt.s23638.4 dt1.s23639.4 dt2.s23641.4 dt4.s23643.4 lvl5.s23651.4 ww.s23661.1 =
  letS lwild.s23664.0 = "==#" @ ww.s23661.1{- value -} dt4.s23643.4{- value -}
  case lwild.s23664.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s23638.4{- value -} dt1.s23639.4 ds.s23640.4 dt2.s23641.4{- value -} ww.s23661.1{- value -} dt4.s23643.4{- value -}]
    1 ->
        lvl5.s23651.4

GHC.IO.Encoding.UTF32.mkUTF32le1.closure.3 ds.s23640.3 ds1.s23647.2 dt.s23638.3 dt1.s23639.3 dt2.s23641.3 dt4.s23643.3 dt5.s23645.2 dt6.s23646.2 dt7.s23648.2 dt8.s23649.2 lvl5.s23651.3 ww.s23661.0 ww1.s23662.0 void.040.1298 =
  let sat.s23666.0 = [GHC.IO.Buffer.Buffer dt5.s23645.2{- value -} dt6.s23646.2 ds1.s23647.2 dt7.s23648.2{- value -} dt8.s23649.2{- value -} ww1.s23662.0{- value -}]
      sat.s23665.0 = GHC.IO.Encoding.UTF32.mkUTF32le1.closure.2 @ ds.s23640.3 dt.s23638.3{- value -} dt1.s23639.3 dt2.s23641.3{- value -} dt4.s23643.3{- value -} lvl5.s23651.3 ww.s23661.0{- value -}
      sat.s23667.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s23665.0 sat.s23666.0]
  ["GHC.Prim.Unit#" sat.s23667.0]

GHC.IO.Encoding.UTF32.mkUTF32le1.closure.4 ds.s23640.6 dt.s23638.6 dt1.s23639.6 dt2.s23641.6 dt4.s23643.6 lvl5.s23651.6 ww.s23669.1 =
  letS lwild.s23672.0 = "==#" @ ww.s23669.1{- value -} dt4.s23643.6{- value -}
  case lwild.s23672.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s23638.6{- value -} dt1.s23639.6 ds.s23640.6 dt2.s23641.6{- value -} ww.s23669.1{- value -} dt4.s23643.6{- value -}]
    1 ->
        lvl5.s23651.6

GHC.IO.Encoding.UTF32.mkUTF32le1.closure.5 ds.s23640.5 ds1.s23647.3 dt.s23638.5 dt1.s23639.5 dt2.s23641.5 dt4.s23643.5 dt5.s23645.3 dt6.s23646.3 dt7.s23648.3 dt8.s23649.3 lvl5.s23651.5 ww.s23669.0 ww1.s23670.0 void.040.1299 =
  let sat.s23674.0 = [GHC.IO.Buffer.Buffer dt5.s23645.3{- value -} dt6.s23646.3 ds1.s23647.3 dt7.s23648.3{- value -} dt8.s23649.3{- value -} ww1.s23670.0{- value -}]
      sat.s23673.0 = GHC.IO.Encoding.UTF32.mkUTF32le1.closure.4 @ ds.s23640.5 dt.s23638.5{- value -} dt1.s23639.5 dt2.s23641.5{- value -} dt4.s23643.5{- value -} lvl5.s23651.5 ww.s23669.0{- value -}
      sat.s23675.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s23673.0 sat.s23674.0]
  ["GHC.Prim.Unit#" sat.s23675.0]

GHC.IO.Encoding.UTF32.mkUTF32le1.closure.6 exit.s23652.2 ww.s23677.1 ww1.s23678.1 =
  exit.s23652.2 @ ww.s23677.1{- value -} ww1.s23678.1{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32le1.closure.7 "$j.s23688.1" "$wloop.s23676.2" dt5.s23645.5 dt6.s23646.5 ww.s23677.2 ww1.s23678.2 x.s23687.1 =
  letS lwild2.s23690.0 = "<=#" @ 56320 x.s23687.1{- value -}
  case lwild2.s23690.0{- value -} of
    _ ->
        letS sat.s23692.0 = "int2Word#" @ x.s23687.1{- value -}
             sat.s23693.0 = "narrow8Word#" @ sat.s23692.0{- value -}
             sat.s23691.0 = "plusAddr#" @ dt5.s23645.5{- value -} ww1.s23678.2{- value -}
             s2.s23694.0 = "writeWord8OffAddr#" @ sat.s23691.0{- value -} 0 sat.s23693.0{- value -}
        case s2.s23694.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS s'1.s23695.0 = "touch#" @ dt6.s23646.5
              case s'1.s23695.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS sat.s23698.1 = "uncheckedIShiftRA#" @ x.s23687.1{- value -} 8
                         sat.s23699.1 = "int2Word#" @ sat.s23698.1{- value -}
                         sat.s23700.2 = "narrow8Word#" @ sat.s23699.1{- value -}
                         sat.s23696.1 = "+#" @ ww1.s23678.2{- value -} 1
                         sat.s23697.1 = "plusAddr#" @ dt5.s23645.5{- value -} sat.s23696.1{- value -}
                         s1.s23701.0 = "writeWord8OffAddr#" @ sat.s23697.1{- value -} 0 sat.s23700.2{- value -}
                    case s1.s23701.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'2.s23702.0 = "touch#" @ dt6.s23646.5
                          case s'2.s23702.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s23705.0 = "uncheckedIShiftRA#" @ x.s23687.1{- value -} 16
                                     sat.s23706.0 = "int2Word#" @ sat.s23705.0{- value -}
                                     sat.s23707.0 = "narrow8Word#" @ sat.s23706.0{- value -}
                                     sat.s23703.0 = "+#" @ ww1.s23678.2{- value -} 2
                                     sat.s23704.1 = "plusAddr#" @ dt5.s23645.5{- value -} sat.s23703.0{- value -}
                                     s3.s23708.0 = "writeWord8OffAddr#" @ sat.s23704.1{- value -} 0 sat.s23707.0{- value -}
                                case s3.s23708.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'3.s23709.0 = "touch#" @ dt6.s23646.5
                                      case s'3.s23709.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s23712.0 = "uncheckedIShiftRA#" @ x.s23687.1{- value -} 24
                                                 sat.s23713.0 = "int2Word#" @ sat.s23712.0{- value -}
                                                 sat.s23714.0 = "narrow8Word#" @ sat.s23713.0{- value -}
                                                 sat.s23710.0 = "+#" @ ww1.s23678.2{- value -} 3
                                                 sat.s23711.0 = "plusAddr#" @ dt5.s23645.5{- value -} sat.s23710.0{- value -}
                                                 s4.s23715.0 = "writeWord8OffAddr#" @ sat.s23711.0{- value -} 0 sat.s23714.0{- value -}
                                            case s4.s23715.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'4.s23716.0 = "touch#" @ dt6.s23646.5
                                                  case s'4.s23716.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s23718.2 = "+#" @ ww1.s23678.2{- value -} 4
                                                             sat.s23717.1 = "+#" @ ww.s23677.2{- value -} 1
                                                        "$wloop.s23676.2" @ sat.s23717.1{- value -} sat.s23718.2{- value -} #"GHC.Prim.void#"
    1 ->
        letS lwild3.s23719.0 = "<=#" @ x.s23687.1{- value -} 57343
        case lwild3.s23719.0{- value -} of
          _ ->
              letS sat.s23721.1 = "int2Word#" @ x.s23687.1{- value -}
                   sat.s23722.1 = "narrow8Word#" @ sat.s23721.1{- value -}
                   sat.s23720.1 = "plusAddr#" @ dt5.s23645.5{- value -} ww1.s23678.2{- value -}
                   s2.s23723.0 = "writeWord8OffAddr#" @ sat.s23720.1{- value -} 0 sat.s23722.1{- value -}
              case s2.s23723.0{- value -} of
                ("GHC.Prim.(##)") ->
                    letS s'1.s23724.0 = "touch#" @ dt6.s23646.5
                    case s'1.s23724.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s23727.1 = "uncheckedIShiftRA#" @ x.s23687.1{- value -} 8
                               sat.s23728.1 = "int2Word#" @ sat.s23727.1{- value -}
                               sat.s23729.0 = "narrow8Word#" @ sat.s23728.1{- value -}
                               sat.s23725.1 = "+#" @ ww1.s23678.2{- value -} 1
                               sat.s23726.0 = "plusAddr#" @ dt5.s23645.5{- value -} sat.s23725.1{- value -}
                               s1.s23730.0 = "writeWord8OffAddr#" @ sat.s23726.0{- value -} 0 sat.s23729.0{- value -}
                          case s1.s23730.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'2.s23731.0 = "touch#" @ dt6.s23646.5
                                case s'2.s23731.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s23734.0 = "uncheckedIShiftRA#" @ x.s23687.1{- value -} 16
                                           sat.s23735.0 = "int2Word#" @ sat.s23734.0{- value -}
                                           sat.s23736.0 = "narrow8Word#" @ sat.s23735.0{- value -}
                                           sat.s23732.0 = "+#" @ ww1.s23678.2{- value -} 2
                                           sat.s23733.0 = "plusAddr#" @ dt5.s23645.5{- value -} sat.s23732.0{- value -}
                                           s3.s23737.0 = "writeWord8OffAddr#" @ sat.s23733.0{- value -} 0 sat.s23736.0{- value -}
                                      case s3.s23737.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'3.s23738.0 = "touch#" @ dt6.s23646.5
                                            case s'3.s23738.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s23741.0 = "uncheckedIShiftRA#" @ x.s23687.1{- value -} 24
                                                       sat.s23742.0 = "int2Word#" @ sat.s23741.0{- value -}
                                                       sat.s23743.1 = "narrow8Word#" @ sat.s23742.0{- value -}
                                                       sat.s23739.0 = "+#" @ ww1.s23678.2{- value -} 3
                                                       sat.s23740.0 = "plusAddr#" @ dt5.s23645.5{- value -} sat.s23739.0{- value -}
                                                       s4.s23744.0 = "writeWord8OffAddr#" @ sat.s23740.0{- value -} 0 sat.s23743.1{- value -}
                                                  case s4.s23744.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS s'4.s23745.0 = "touch#" @ dt6.s23646.5
                                                        case s'4.s23745.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS sat.s23747.2 = "+#" @ ww1.s23678.2{- value -} 4
                                                                   sat.s23746.2 = "+#" @ ww.s23677.2{- value -} 1
                                                              "$wloop.s23676.2" @ sat.s23746.2{- value -} sat.s23747.2{- value -} #"GHC.Prim.void#"
          1 ->
              "$j.s23688.1"

GHC.IO.Encoding.UTF32.mkUTF32le1.closure.8 "$wloop.s23676.1" dt.s23638.7 dt1.s23639.7 dt4.s23643.7 dt5.s23645.4 dt6.s23646.4 dt7.s23648.4 exit.s23652.1 exit1.s23660.1 exit2.s23668.1 ww.s23677.0 ww1.s23678.0 void.040.1300 =
  letS lwild.s23680.0 = ">=#" @ ww.s23677.0{- value -} dt4.s23643.7{- value -}
  case lwild.s23680.0{- value -} of
    _ ->
        letS sat.s23681.0 = "-#" @ dt7.s23648.4{- value -} ww1.s23678.0{- value -}
             lwild1.s23682.0 = "<#" @ sat.s23681.0{- value -} 4
        case lwild1.s23682.0{- value -} of
          _ ->
              letS ds2.s23683.0 = "readWideCharOffAddr#" @ dt.s23638.7{- value -} ww.s23677.0{- value -}
              case ds2.s23683.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s23685.0) ->
                    letS s'.s23686.0 = "touch#" @ dt1.s23639.7
                    case s'.s23686.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS x.s23687.0 = "ord#" @ ipv1.s23685.0{- value -}
                          let "$j.s23688.0" = GHC.IO.Encoding.UTF32.mkUTF32le1.closure.6 @ exit.s23652.1 ww.s23677.0{- value -} ww1.s23678.0{- value -}
                              "$j1.s23689.0" = GHC.IO.Encoding.UTF32.mkUTF32le1.closure.7 @ "$j.s23688.0" "$wloop.s23676.1" dt5.s23645.4{- value -} dt6.s23646.4 ww.s23677.0{- value -} ww1.s23678.0{- value -} x.s23687.0{- value -}
                          letS lwild2.s23748.0 = "<=#" @ 55296 x.s23687.0{- value -}
                          case lwild2.s23748.0{- value -} of
                            _ ->
                                "$j1.s23689.0"
                            1 ->
                                letS lwild3.s23749.0 = "<=#" @ x.s23687.0{- value -} 56319
                                case lwild3.s23749.0{- value -} of
                                  _ ->
                                      "$j1.s23689.0"
                                  1 ->
                                      "$j.s23688.0"
          1 ->
              exit1.s23660.1 @ ww.s23677.0{- value -} ww1.s23678.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit2.s23668.1 @ ww.s23677.0{- value -} ww1.s23678.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF32le2 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.UTF32.mkUTF32le3{- value -}

GHC.IO.Encoding.UTF32.mkUTF32le3 =
  #"UTF-32LE"

GHC.IO.Encoding.UTF32.mkUTF4 =
  [GHC.Maybe.Just GHC.IO.Encoding.UTF32.mkUTF3]

GHC.IO.Encoding.UTF32.mkUTF5 input.s24012.0 output.s24013.0 void.040.1321 =
  letS wild.s24015.0 = input.s24012.0
  case wild.s24015.0 of
    (GHC.IO.Buffer.Buffer dt.s24016.0 dt1.s24017.0 ds.s24018.0 dt2.s24019.0 dt3.s24020.0 dt4.s24021.0) ->
        letS wild1.s24022.0 = output.s24013.0
        case wild1.s24022.0 of
          (GHC.IO.Buffer.Buffer dt5.s24023.0 dt6.s24024.0 ds1.s24025.0 dt7.s24026.0 dt8.s24027.0 dt9.s24028.0) ->
              let lvl5.s24029.0 = [GHC.IO.Buffer.Buffer dt.s24016.0{- value -} dt1.s24017.0 ds.s24018.0 dt2.s24019.0{- value -} 0 0]
                  exit.s24030.0 = GHC.IO.Encoding.UTF32.mkUTF5.closure.1 @ ds.s24018.0 ds1.s24025.0 dt.s24016.0{- value -} dt1.s24017.0 dt2.s24019.0{- value -} dt4.s24021.0{- value -} dt5.s24023.0{- value -} dt6.s24024.0 dt7.s24026.0{- value -} dt8.s24027.0{- value -} lvl5.s24029.0
                  exit1.s24038.0 = GHC.IO.Encoding.UTF32.mkUTF5.closure.3 @ ds.s24018.0 ds1.s24025.0 dt.s24016.0{- value -} dt1.s24017.0 dt2.s24019.0{- value -} dt4.s24021.0{- value -} dt5.s24023.0{- value -} dt6.s24024.0 dt7.s24026.0{- value -} dt8.s24027.0{- value -} lvl5.s24029.0
              letrec "$wloop.s24046.0" = GHC.IO.Encoding.UTF32.mkUTF5.closure.8 @ "$wloop.s24046.0" ds.s24018.0 ds1.s24025.0 dt.s24016.0{- value -} dt1.s24017.0 dt2.s24019.0{- value -} dt4.s24021.0{- value -} dt5.s24023.0{- value -} dt6.s24024.0 dt7.s24026.0{- value -} dt8.s24027.0{- value -} exit.s24030.0 exit1.s24038.0 lvl5.s24029.0
              "$wloop.s24046.0" @ dt3.s24020.0{- value -} dt9.s24028.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF5.closure.0 ds.s24018.2 dt.s24016.2 dt1.s24017.2 dt2.s24019.2 dt4.s24021.2 lvl5.s24029.2 ww.s24031.1 =
  letS lwild.s24034.0 = "==#" @ ww.s24031.1{- value -} dt4.s24021.2{- value -}
  case lwild.s24034.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s24016.2{- value -} dt1.s24017.2 ds.s24018.2 dt2.s24019.2{- value -} ww.s24031.1{- value -} dt4.s24021.2{- value -}]
    1 ->
        lvl5.s24029.2

GHC.IO.Encoding.UTF32.mkUTF5.closure.1 ds.s24018.1 ds1.s24025.1 dt.s24016.1 dt1.s24017.1 dt2.s24019.1 dt4.s24021.1 dt5.s24023.1 dt6.s24024.1 dt7.s24026.1 dt8.s24027.1 lvl5.s24029.1 ww.s24031.0 ww1.s24032.0 void.040.1322 =
  let sat.s24036.0 = [GHC.IO.Buffer.Buffer dt5.s24023.1{- value -} dt6.s24024.1 ds1.s24025.1 dt7.s24026.1{- value -} dt8.s24027.1{- value -} ww1.s24032.0{- value -}]
      sat.s24035.1 = GHC.IO.Encoding.UTF32.mkUTF5.closure.0 @ ds.s24018.1 dt.s24016.1{- value -} dt1.s24017.1 dt2.s24019.1{- value -} dt4.s24021.1{- value -} lvl5.s24029.1 ww.s24031.0{- value -}
      sat.s24037.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s24035.1 sat.s24036.0]
  ["GHC.Prim.Unit#" sat.s24037.0]

GHC.IO.Encoding.UTF32.mkUTF5.closure.2 ds.s24018.4 dt.s24016.4 dt1.s24017.4 dt2.s24019.4 dt4.s24021.4 lvl5.s24029.4 ww.s24039.1 =
  letS lwild.s24042.0 = "==#" @ ww.s24039.1{- value -} dt4.s24021.4{- value -}
  case lwild.s24042.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s24016.4{- value -} dt1.s24017.4 ds.s24018.4 dt2.s24019.4{- value -} ww.s24039.1{- value -} dt4.s24021.4{- value -}]
    1 ->
        lvl5.s24029.4

GHC.IO.Encoding.UTF32.mkUTF5.closure.3 ds.s24018.3 ds1.s24025.2 dt.s24016.3 dt1.s24017.3 dt2.s24019.3 dt4.s24021.3 dt5.s24023.2 dt6.s24024.2 dt7.s24026.2 dt8.s24027.2 lvl5.s24029.3 ww.s24039.0 ww1.s24040.0 void.040.1323 =
  let sat.s24044.0 = [GHC.IO.Buffer.Buffer dt5.s24023.2{- value -} dt6.s24024.2 ds1.s24025.2 dt7.s24026.2{- value -} dt8.s24027.2{- value -} ww1.s24040.0{- value -}]
      sat.s24043.0 = GHC.IO.Encoding.UTF32.mkUTF5.closure.2 @ ds.s24018.3 dt.s24016.3{- value -} dt1.s24017.3 dt2.s24019.3{- value -} dt4.s24021.3{- value -} lvl5.s24029.3 ww.s24039.0{- value -}
      sat.s24045.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s24043.0 sat.s24044.0]
  ["GHC.Prim.Unit#" sat.s24045.0]

GHC.IO.Encoding.UTF32.mkUTF5.closure.4 "$wloop.s24046.2" dt5.s24023.4 dt6.s24024.4 ww.s24047.1 ww1.s24048.1 x1.s24076.1 =
  letS s2.s24089.0 = "writeWideCharOffAddr#" @ dt5.s24023.4{- value -} ww1.s24048.1{- value -} x1.s24076.1{- value -}
  case s2.s24089.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS s'4.s24090.0 = "touch#" @ dt6.s24024.4
        case s'4.s24090.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS sat.s24092.1 = "+#" @ ww1.s24048.1{- value -} 1
                   sat.s24091.1 = "+#" @ ww.s24047.1{- value -} 4
              "$wloop.s24046.2" @ sat.s24091.1{- value -} sat.s24092.1{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF5.closure.5 ds.s24018.7 dt.s24016.7 dt1.s24017.7 dt2.s24019.7 dt4.s24021.7 lvl5.s24029.7 ww.s24047.3 =
  letS lwild3.s24095.0 = "==#" @ ww.s24047.3{- value -} dt4.s24021.7{- value -}
  case lwild3.s24095.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s24016.7{- value -} dt1.s24017.7 ds.s24018.7 dt2.s24019.7{- value -} ww.s24047.3{- value -} dt4.s24021.7{- value -}]
    1 ->
        lvl5.s24029.7

GHC.IO.Encoding.UTF32.mkUTF5.closure.6 ds.s24018.8 dt.s24016.8 dt1.s24017.8 dt2.s24019.8 dt4.s24021.8 lvl5.s24029.8 ww.s24047.4 =
  letS lwild4.s24100.0 = "==#" @ ww.s24047.4{- value -} dt4.s24021.8{- value -}
  case lwild4.s24100.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s24016.8{- value -} dt1.s24017.8 ds.s24018.8 dt2.s24019.8{- value -} ww.s24047.4{- value -} dt4.s24021.8{- value -}]
    1 ->
        lvl5.s24029.8

GHC.IO.Encoding.UTF32.mkUTF5.closure.7 "$j.s24088.1" ds.s24018.6 ds1.s24025.4 dt.s24016.6 dt1.s24017.6 dt2.s24019.6 dt4.s24021.6 dt5.s24023.5 dt6.s24024.5 dt7.s24026.4 dt8.s24027.4 lvl5.s24029.6 ww.s24047.2 ww1.s24048.2 x2.s24087.1 =
  letS lwild2.s24094.0 = ">#" @ x2.s24087.1{- value -} 57343
  case lwild2.s24094.0{- value -} of
    _ ->
        let sat.s24097.1 = [GHC.IO.Buffer.Buffer dt5.s24023.5{- value -} dt6.s24024.5 ds1.s24025.4 dt7.s24026.4{- value -} dt8.s24027.4{- value -} ww1.s24048.2{- value -}]
            sat.s24096.1 = GHC.IO.Encoding.UTF32.mkUTF5.closure.5 @ ds.s24018.6 dt.s24016.6{- value -} dt1.s24017.6 dt2.s24019.6{- value -} dt4.s24021.6{- value -} lvl5.s24029.6 ww.s24047.2{- value -}
            sat.s24098.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s24096.1 sat.s24097.1]
        ["GHC.Prim.Unit#" sat.s24098.0]
    1 ->
        letS lwild3.s24099.0 = "<=#" @ x2.s24087.1{- value -} 1114111
        case lwild3.s24099.0{- value -} of
          _ ->
              let sat.s24102.0 = [GHC.IO.Buffer.Buffer dt5.s24023.5{- value -} dt6.s24024.5 ds1.s24025.4 dt7.s24026.4{- value -} dt8.s24027.4{- value -} ww1.s24048.2{- value -}]
                  sat.s24101.1 = GHC.IO.Encoding.UTF32.mkUTF5.closure.6 @ ds.s24018.6 dt.s24016.6{- value -} dt1.s24017.6 dt2.s24019.6{- value -} dt4.s24021.6{- value -} lvl5.s24029.6 ww.s24047.2{- value -}
                  sat.s24103.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s24101.1 sat.s24102.0]
              ["GHC.Prim.Unit#" sat.s24103.0]
          1 ->
              "$j.s24088.1"

GHC.IO.Encoding.UTF32.mkUTF5.closure.8 "$wloop.s24046.1" ds.s24018.5 ds1.s24025.3 dt.s24016.5 dt1.s24017.5 dt2.s24019.5 dt4.s24021.5 dt5.s24023.3 dt6.s24024.3 dt7.s24026.3 dt8.s24027.3 exit.s24030.1 exit1.s24038.1 lvl5.s24029.5 ww.s24047.0 ww1.s24048.0 void.040.1324 =
  letS lwild.s24050.0 = ">=#" @ ww1.s24048.0{- value -} dt7.s24026.3{- value -}
  case lwild.s24050.0{- value -} of
    _ ->
        letS sat.s24051.0 = "-#" @ dt4.s24021.5{- value -} ww.s24047.0{- value -}
             lwild1.s24052.0 = "<#" @ sat.s24051.0{- value -} 4
        case lwild1.s24052.0{- value -} of
          _ ->
              letS sat.s24053.0 = "plusAddr#" @ dt.s24016.5{- value -} ww.s24047.0{- value -}
                   ds2.s24054.0 = "readWord8OffAddr#" @ sat.s24053.0{- value -} 0
              case ds2.s24054.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s24056.0) ->
                    letS s'.s24057.0 = "touch#" @ dt1.s24017.5
                    case s'.s24057.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s24058.0 = "+#" @ ww.s24047.0{- value -} 1
                               sat.s24059.0 = "plusAddr#" @ dt.s24016.5{- value -} sat.s24058.0{- value -}
                               ds3.s24060.0 = "readWord8OffAddr#" @ sat.s24059.0{- value -} 0
                          case ds3.s24060.0{- value -} of
                            ("GHC.Prim.Unit#" ipv3.s24062.0) ->
                                letS s'1.s24063.0 = "touch#" @ dt1.s24017.5
                                case s'1.s24063.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s24064.0 = "+#" @ ww.s24047.0{- value -} 2
                                           sat.s24065.1 = "plusAddr#" @ dt.s24016.5{- value -} sat.s24064.0{- value -}
                                           ds4.s24066.0 = "readWord8OffAddr#" @ sat.s24065.1{- value -} 0
                                      case ds4.s24066.0{- value -} of
                                        ("GHC.Prim.Unit#" ipv5.s24068.0) ->
                                            letS s'2.s24069.0 = "touch#" @ dt1.s24017.5
                                            case s'2.s24069.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s24070.1 = "+#" @ ww.s24047.0{- value -} 3
                                                       sat.s24071.0 = "plusAddr#" @ dt.s24016.5{- value -} sat.s24070.1{- value -}
                                                       ds5.s24072.0 = "readWord8OffAddr#" @ sat.s24071.0{- value -} 0
                                                  case ds5.s24072.0{- value -} of
                                                    ("GHC.Prim.Unit#" ipv7.s24074.0) ->
                                                        letS s'3.s24075.0 = "touch#" @ dt1.s24017.5
                                                        case s'3.s24075.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS sat.s24085.0 = "word2Int#" @ ipv7.s24074.0{- value -}
                                                                   sat.s24082.0 = "word2Int#" @ ipv5.s24068.0{- value -}
                                                                   sat.s24083.0 = "uncheckedIShiftL#" @ sat.s24082.0{- value -} 8
                                                                   sat.s24079.0 = "word2Int#" @ ipv3.s24062.0{- value -}
                                                                   sat.s24080.0 = "uncheckedIShiftL#" @ sat.s24079.0{- value -} 16
                                                                   sat.s24077.0 = "word2Int#" @ ipv1.s24056.0{- value -}
                                                                   sat.s24078.1 = "uncheckedIShiftL#" @ sat.s24077.0{- value -} 24
                                                                   sat.s24081.0 = "+#" @ sat.s24078.1{- value -} sat.s24080.0{- value -}
                                                                   sat.s24084.0 = "+#" @ sat.s24081.0{- value -} sat.s24083.0{- value -}
                                                                   sat.s24086.0 = "+#" @ sat.s24084.0{- value -} sat.s24085.0{- value -}
                                                                   x1.s24076.0 = "chr#" @ sat.s24086.0{- value -}
                                                                   x2.s24087.0 = "ord#" @ x1.s24076.0{- value -}
                                                              let "$j.s24088.0" = GHC.IO.Encoding.UTF32.mkUTF5.closure.4 @ "$wloop.s24046.1" dt5.s24023.3{- value -} dt6.s24024.3 ww.s24047.0{- value -} ww1.s24048.0{- value -} x1.s24076.0{- value -}
                                                                  "$j1.s24093.0" = GHC.IO.Encoding.UTF32.mkUTF5.closure.7 @ "$j.s24088.0" ds.s24018.5 ds1.s24025.3 dt.s24016.5{- value -} dt1.s24017.5 dt2.s24019.5{- value -} dt4.s24021.5{- value -} dt5.s24023.3{- value -} dt6.s24024.3 dt7.s24026.3{- value -} dt8.s24027.3{- value -} lvl5.s24029.5 ww.s24047.0{- value -} ww1.s24048.0{- value -} x2.s24087.0{- value -}
                                                              letS lwild2.s24104.0 = ">=#" @ x2.s24087.0{- value -} 0
                                                              case lwild2.s24104.0{- value -} of
                                                                _ ->
                                                                    "$j1.s24093.0"
                                                                1 ->
                                                                    letS lwild3.s24105.0 = "<#" @ x2.s24087.0{- value -} 55296
                                                                    case lwild3.s24105.0{- value -} of
                                                                      _ ->
                                                                          "$j1.s24093.0"
                                                                      1 ->
                                                                          "$j.s24088.0"
          1 ->
              exit.s24030.1 @ ww.s24047.0{- value -} ww1.s24048.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit1.s24038.1 @ ww.s24047.0{- value -} ww1.s24048.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF32.mkUTF6 =
  [GHC.Maybe.Just GHC.IO.Encoding.UTF32.mkUTF5]

GHC.IO.Encoding.UTF32.mkUTF7 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.UTF32.mkUTF8{- value -}

GHC.IO.Encoding.UTF32.mkUTF8 =
  #"UTF-32"

GHC.IO.Encoding.UTF8.lvl input.s28943.0 output.s28944.0 void.040.1364 =
  letS wild.s28946.0 = input.s28943.0
  case wild.s28946.0 of
    (GHC.IO.Buffer.Buffer dt.s28947.0 dt1.s28948.0 ds.s28949.0 dt2.s28950.0 dt3.s28951.0 dt4.s28952.0) ->
        letS wild1.s28953.0 = output.s28944.0
        case wild1.s28953.0 of
          (GHC.IO.Buffer.Buffer dt5.s28954.0 dt6.s28955.0 ds1.s28956.0 dt7.s28957.0 dt8.s28958.0 dt9.s28959.0) ->
              "raiseIO#" @ GHC.IO.Encoding.Failure.recoverDecode2

GHC.IO.Encoding.UTF8.lvl1 =
  [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF8.mkUTF4 GHC.IO.Encoding.UTF8.lvl GHC.IO.Encoding.UTF8.mkUTF3 GHC.IO.Encoding.UTF8.mkUTF3 GHC.IO.Encoding.UTF8.mkUTF2]

GHC.IO.Encoding.UTF8.lvl2 =
  [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF8.mkUTF1 GHC.IO.Encoding.UTF8.utf2 GHC.IO.Encoding.UTF8.mkUTF3 GHC.IO.Encoding.UTF8.mkUTF3 GHC.IO.Encoding.UTF8.mkUTF2]

GHC.IO.Encoding.UTF8.mkUTF1 input.s28109.0 output.s28110.0 void.040.1338 =
  letS wild.s28112.0 = input.s28109.0
  case wild.s28112.0 of
    (GHC.IO.Buffer.Buffer dt.s28113.0 dt1.s28114.0 ds.s28115.0 dt2.s28116.0 dt3.s28117.0 dt4.s28118.0) ->
        letS wild1.s28119.0 = output.s28110.0
        case wild1.s28119.0 of
          (GHC.IO.Buffer.Buffer dt5.s28120.0 dt6.s28121.0 ds1.s28122.0 dt7.s28123.0 dt8.s28124.0 dt9.s28125.0) ->
              let lvl3.s28126.0 = [GHC.IO.Buffer.Buffer dt.s28113.0{- value -} dt1.s28114.0 ds.s28115.0 dt2.s28116.0{- value -} 0 0]
                  exit.s28127.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.1 @ ds.s28115.0 ds1.s28122.0 dt.s28113.0{- value -} dt1.s28114.0 dt2.s28116.0{- value -} dt4.s28118.0{- value -} dt5.s28120.0{- value -} dt6.s28121.0 dt7.s28123.0{- value -} dt8.s28124.0{- value -} lvl3.s28126.0
                  exit1.s28135.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.3 @ ds.s28115.0 ds1.s28122.0 dt.s28113.0{- value -} dt1.s28114.0 dt2.s28116.0{- value -} dt4.s28118.0{- value -} dt5.s28120.0{- value -} dt6.s28121.0 dt7.s28123.0{- value -} dt8.s28124.0{- value -} lvl3.s28126.0
                  exit2.s28143.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.5 @ ds.s28115.0 ds1.s28122.0 dt.s28113.0{- value -} dt1.s28114.0 dt2.s28116.0{- value -} dt4.s28118.0{- value -} dt5.s28120.0{- value -} dt6.s28121.0 dt7.s28123.0{- value -} dt8.s28124.0{- value -} lvl3.s28126.0
                  exit3.s28151.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.7 @ ds.s28115.0 ds1.s28122.0 dt.s28113.0{- value -} dt1.s28114.0 dt2.s28116.0{- value -} dt4.s28118.0{- value -} dt5.s28120.0{- value -} dt6.s28121.0 dt7.s28123.0{- value -} dt8.s28124.0{- value -} lvl3.s28126.0
                  exit4.s28159.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.9 @ ds.s28115.0 ds1.s28122.0 dt.s28113.0{- value -} dt1.s28114.0 dt2.s28116.0{- value -} dt4.s28118.0{- value -} dt5.s28120.0{- value -} dt6.s28121.0 dt7.s28123.0{- value -} dt8.s28124.0{- value -} lvl3.s28126.0
              letrec "$wloop.s28167.0" = GHC.IO.Encoding.UTF8.mkUTF1.closure.13 @ "$wloop.s28167.0" ds.s28115.0 ds1.s28122.0 dt.s28113.0{- value -} dt1.s28114.0 dt2.s28116.0{- value -} dt4.s28118.0{- value -} dt5.s28120.0{- value -} dt6.s28121.0 dt7.s28123.0{- value -} dt8.s28124.0{- value -} exit.s28127.0 exit1.s28135.0 exit2.s28143.0 exit3.s28151.0 exit4.s28159.0 lvl3.s28126.0
              "$wloop.s28167.0" @ dt3.s28117.0{- value -} dt9.s28125.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF8.mkUTF1.closure.0 ds.s28115.2 dt.s28113.2 dt1.s28114.2 dt2.s28116.2 dt4.s28118.2 lvl3.s28126.2 ww.s28128.1 =
  letS lwild.s28131.0 = "==#" @ ww.s28128.1{- value -} dt4.s28118.2{- value -}
  case lwild.s28131.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28113.2{- value -} dt1.s28114.2 ds.s28115.2 dt2.s28116.2{- value -} ww.s28128.1{- value -} dt4.s28118.2{- value -}]
    1 ->
        lvl3.s28126.2

GHC.IO.Encoding.UTF8.mkUTF1.closure.1 ds.s28115.1 ds1.s28122.1 dt.s28113.1 dt1.s28114.1 dt2.s28116.1 dt4.s28118.1 dt5.s28120.1 dt6.s28121.1 dt7.s28123.1 dt8.s28124.1 lvl3.s28126.1 ww.s28128.0 ww1.s28129.0 void.040.1339 =
  let sat.s28133.0 = [GHC.IO.Buffer.Buffer dt5.s28120.1{- value -} dt6.s28121.1 ds1.s28122.1 dt7.s28123.1{- value -} dt8.s28124.1{- value -} ww1.s28129.0{- value -}]
      sat.s28132.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.0 @ ds.s28115.1 dt.s28113.1{- value -} dt1.s28114.1 dt2.s28116.1{- value -} dt4.s28118.1{- value -} lvl3.s28126.1 ww.s28128.0{- value -}
      sat.s28134.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s28132.0 sat.s28133.0]
  ["GHC.Prim.Unit#" sat.s28134.0]

GHC.IO.Encoding.UTF8.mkUTF1.closure.10 ds.s28115.12 dt.s28113.12 dt1.s28114.12 dt2.s28116.12 dt4.s28118.12 lvl3.s28126.12 ww.s28168.1 =
  letS lwild8.s28277.0 = "==#" @ ww.s28168.1{- value -} dt4.s28118.12{- value -}
  case lwild8.s28277.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28113.12{- value -} dt1.s28114.12 ds.s28115.12 dt2.s28116.12{- value -} ww.s28168.1{- value -} dt4.s28118.12{- value -}]
    1 ->
        lvl3.s28126.12

GHC.IO.Encoding.UTF8.mkUTF1.closure.11 ds.s28115.13 dt.s28113.13 dt1.s28114.13 dt2.s28116.13 dt4.s28118.13 lvl3.s28126.13 ww.s28168.2 =
  letS lwild9.s28340.0 = "==#" @ ww.s28168.2{- value -} dt4.s28118.13{- value -}
  case lwild9.s28340.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28113.13{- value -} dt1.s28114.13 ds.s28115.13 dt2.s28116.13{- value -} ww.s28168.2{- value -} dt4.s28118.13{- value -}]
    1 ->
        lvl3.s28126.13

GHC.IO.Encoding.UTF8.mkUTF1.closure.12 ds.s28115.14 dt.s28113.14 dt1.s28114.14 dt2.s28116.14 dt4.s28118.14 lvl3.s28126.14 ww.s28168.3 =
  letS lwild7.s28344.0 = "==#" @ ww.s28168.3{- value -} dt4.s28118.14{- value -}
  case lwild7.s28344.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28113.14{- value -} dt1.s28114.14 ds.s28115.14 dt2.s28116.14{- value -} ww.s28168.3{- value -} dt4.s28118.14{- value -}]
    1 ->
        lvl3.s28126.14

GHC.IO.Encoding.UTF8.mkUTF1.closure.13 "$wloop.s28167.1" ds.s28115.11 ds1.s28122.6 dt.s28113.11 dt1.s28114.11 dt2.s28116.11 dt4.s28118.11 dt5.s28120.6 dt6.s28121.6 dt7.s28123.6 dt8.s28124.6 exit.s28127.1 exit1.s28135.1 exit2.s28143.1 exit3.s28151.1 exit4.s28159.1 lvl3.s28126.11 ww.s28168.0 ww1.s28169.0 void.040.1344 =
  letS lwild.s28171.0 = ">=#" @ ww1.s28169.0{- value -} dt7.s28123.6{- value -}
  case lwild.s28171.0{- value -} of
    _ ->
        letS lwild1.s28172.0 = ">=#" @ ww.s28168.0{- value -} dt4.s28118.11{- value -}
        case lwild1.s28172.0{- value -} of
          _ ->
              letS ds2.s28173.0 = "readWideCharOffAddr#" @ dt.s28113.11{- value -} ww.s28168.0{- value -}
              case ds2.s28173.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s28175.0) ->
                    letS s'.s28176.0 = "touch#" @ dt1.s28114.11
                    case s'.s28176.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS x.s28177.0 = "ord#" @ ipv1.s28175.0{- value -}
                               lwild2.s28178.0 = "<=#" @ x.s28177.0{- value -} 127
                          case lwild2.s28178.0{- value -} of
                            _ ->
                                letS lwild3.s28179.0 = "<=#" @ x.s28177.0{- value -} 2047
                                case lwild3.s28179.0{- value -} of
                                  _ ->
                                      letS lwild4.s28180.0 = "<=#" @ x.s28177.0{- value -} 65535
                                      case lwild4.s28180.0{- value -} of
                                        _ ->
                                            letS sat.s28181.0 = "-#" @ dt7.s28123.6{- value -} ww1.s28169.0{- value -}
                                                 lwild5.s28182.0 = "<#" @ sat.s28181.0{- value -} 4
                                            case lwild5.s28182.0{- value -} of
                                              _ ->
                                                  letS sat.s28184.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 18
                                                       sat.s28185.0 = "+#" @ sat.s28184.0{- value -} 240
                                                       sat.s28186.0 = "int2Word#" @ sat.s28185.0{- value -}
                                                       sat.s28187.0 = "narrow8Word#" @ sat.s28186.0{- value -}
                                                       sat.s28183.0 = "plusAddr#" @ dt5.s28120.6{- value -} ww1.s28169.0{- value -}
                                                       s2.s28188.0 = "writeWord8OffAddr#" @ sat.s28183.0{- value -} 0 sat.s28187.0{- value -}
                                                  case s2.s28188.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS s'1.s28189.0 = "touch#" @ dt6.s28121.6
                                                        case s'1.s28189.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS sat.s28192.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 12
                                                                   sat.s28193.0 = "andI#" @ sat.s28192.0{- value -} 63
                                                                   sat.s28194.0 = "+#" @ sat.s28193.0{- value -} 128
                                                                   sat.s28195.0 = "int2Word#" @ sat.s28194.0{- value -}
                                                                   sat.s28196.0 = "narrow8Word#" @ sat.s28195.0{- value -}
                                                                   sat.s28190.0 = "+#" @ ww1.s28169.0{- value -} 1
                                                                   sat.s28191.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28190.0{- value -}
                                                                   s1.s28197.0 = "writeWord8OffAddr#" @ sat.s28191.0{- value -} 0 sat.s28196.0{- value -}
                                                              case s1.s28197.0{- value -} of
                                                                ("GHC.Prim.(##)") ->
                                                                    letS s'2.s28198.0 = "touch#" @ dt6.s28121.6
                                                                    case s'2.s28198.0{- value -} of
                                                                      ("GHC.Prim.(##)") ->
                                                                          letS sat.s28201.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 6
                                                                               sat.s28202.0 = "andI#" @ sat.s28201.0{- value -} 63
                                                                               sat.s28203.0 = "+#" @ sat.s28202.0{- value -} 128
                                                                               sat.s28204.0 = "int2Word#" @ sat.s28203.0{- value -}
                                                                               sat.s28205.0 = "narrow8Word#" @ sat.s28204.0{- value -}
                                                                               sat.s28199.0 = "+#" @ ww1.s28169.0{- value -} 2
                                                                               sat.s28200.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28199.0{- value -}
                                                                               s3.s28206.0 = "writeWord8OffAddr#" @ sat.s28200.0{- value -} 0 sat.s28205.0{- value -}
                                                                          case s3.s28206.0{- value -} of
                                                                            ("GHC.Prim.(##)") ->
                                                                                letS s'3.s28207.0 = "touch#" @ dt6.s28121.6
                                                                                case s'3.s28207.0{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      letS sat.s28210.0 = "andI#" @ x.s28177.0{- value -} 63
                                                                                           sat.s28211.0 = "+#" @ sat.s28210.0{- value -} 128
                                                                                           sat.s28212.0 = "int2Word#" @ sat.s28211.0{- value -}
                                                                                           sat.s28213.0 = "narrow8Word#" @ sat.s28212.0{- value -}
                                                                                           sat.s28208.0 = "+#" @ ww1.s28169.0{- value -} 3
                                                                                           sat.s28209.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28208.0{- value -}
                                                                                           s4.s28214.0 = "writeWord8OffAddr#" @ sat.s28209.0{- value -} 0 sat.s28213.0{- value -}
                                                                                      case s4.s28214.0{- value -} of
                                                                                        ("GHC.Prim.(##)") ->
                                                                                            letS s'4.s28215.0 = "touch#" @ dt6.s28121.6
                                                                                            case s'4.s28215.0{- value -} of
                                                                                              ("GHC.Prim.(##)") ->
                                                                                                  letS sat.s28217.0 = "+#" @ ww1.s28169.0{- value -} 4
                                                                                                       sat.s28216.0 = "+#" @ ww.s28168.0{- value -} 1
                                                                                                  "$wloop.s28167.1" @ sat.s28216.0{- value -} sat.s28217.0{- value -} #"GHC.Prim.void#"
                                              1 ->
                                                  exit.s28127.1 @ ww.s28168.0{- value -} ww1.s28169.0{- value -} #"GHC.Prim.void#"
                                        1 ->
                                            letS lwild5.s28218.0 = "<=#" @ 55296 x.s28177.0{- value -}
                                            case lwild5.s28218.0{- value -} of
                                              _ ->
                                                  letS lwild6.s28219.0 = "<=#" @ 56320 x.s28177.0{- value -}
                                                  case lwild6.s28219.0{- value -} of
                                                    _ ->
                                                        letS sat.s28220.0 = "-#" @ dt7.s28123.6{- value -} ww1.s28169.0{- value -}
                                                             lwild7.s28221.0 = "<#" @ sat.s28220.0{- value -} 3
                                                        case lwild7.s28221.0{- value -} of
                                                          _ ->
                                                              letS sat.s28223.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 12
                                                                   sat.s28224.0 = "+#" @ sat.s28223.0{- value -} 224
                                                                   sat.s28225.0 = "int2Word#" @ sat.s28224.0{- value -}
                                                                   sat.s28226.0 = "narrow8Word#" @ sat.s28225.0{- value -}
                                                                   sat.s28222.0 = "plusAddr#" @ dt5.s28120.6{- value -} ww1.s28169.0{- value -}
                                                                   s2.s28227.0 = "writeWord8OffAddr#" @ sat.s28222.0{- value -} 0 sat.s28226.0{- value -}
                                                              case s2.s28227.0{- value -} of
                                                                ("GHC.Prim.(##)") ->
                                                                    letS s'1.s28228.0 = "touch#" @ dt6.s28121.6
                                                                    case s'1.s28228.0{- value -} of
                                                                      ("GHC.Prim.(##)") ->
                                                                          letS sat.s28231.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 6
                                                                               sat.s28232.0 = "andI#" @ sat.s28231.0{- value -} 63
                                                                               sat.s28233.0 = "+#" @ sat.s28232.0{- value -} 128
                                                                               sat.s28234.0 = "int2Word#" @ sat.s28233.0{- value -}
                                                                               sat.s28235.0 = "narrow8Word#" @ sat.s28234.0{- value -}
                                                                               sat.s28229.0 = "+#" @ ww1.s28169.0{- value -} 1
                                                                               sat.s28230.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28229.0{- value -}
                                                                               s1.s28236.0 = "writeWord8OffAddr#" @ sat.s28230.0{- value -} 0 sat.s28235.0{- value -}
                                                                          case s1.s28236.0{- value -} of
                                                                            ("GHC.Prim.(##)") ->
                                                                                letS s'2.s28237.0 = "touch#" @ dt6.s28121.6
                                                                                case s'2.s28237.0{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      letS sat.s28240.0 = "andI#" @ x.s28177.0{- value -} 63
                                                                                           sat.s28241.0 = "+#" @ sat.s28240.0{- value -} 128
                                                                                           sat.s28242.0 = "int2Word#" @ sat.s28241.0{- value -}
                                                                                           sat.s28243.0 = "narrow8Word#" @ sat.s28242.0{- value -}
                                                                                           sat.s28238.0 = "+#" @ ww1.s28169.0{- value -} 2
                                                                                           sat.s28239.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28238.0{- value -}
                                                                                           s3.s28244.0 = "writeWord8OffAddr#" @ sat.s28239.0{- value -} 0 sat.s28243.0{- value -}
                                                                                      case s3.s28244.0{- value -} of
                                                                                        ("GHC.Prim.(##)") ->
                                                                                            letS s'3.s28245.0 = "touch#" @ dt6.s28121.6
                                                                                            case s'3.s28245.0{- value -} of
                                                                                              ("GHC.Prim.(##)") ->
                                                                                                  letS sat.s28247.0 = "+#" @ ww1.s28169.0{- value -} 3
                                                                                                       sat.s28246.0 = "+#" @ ww.s28168.0{- value -} 1
                                                                                                  "$wloop.s28167.1" @ sat.s28246.0{- value -} sat.s28247.0{- value -} #"GHC.Prim.void#"
                                                          1 ->
                                                              exit1.s28135.1 @ ww.s28168.0{- value -} ww1.s28169.0{- value -} #"GHC.Prim.void#"
                                                    1 ->
                                                        letS lwild7.s28248.0 = "<=#" @ x.s28177.0{- value -} 57343
                                                        case lwild7.s28248.0{- value -} of
                                                          _ ->
                                                              letS sat.s28249.0 = "-#" @ dt7.s28123.6{- value -} ww1.s28169.0{- value -}
                                                                   lwild8.s28250.0 = "<#" @ sat.s28249.0{- value -} 3
                                                              case lwild8.s28250.0{- value -} of
                                                                _ ->
                                                                    letS sat.s28252.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 12
                                                                         sat.s28253.0 = "+#" @ sat.s28252.0{- value -} 224
                                                                         sat.s28254.0 = "int2Word#" @ sat.s28253.0{- value -}
                                                                         sat.s28255.0 = "narrow8Word#" @ sat.s28254.0{- value -}
                                                                         sat.s28251.0 = "plusAddr#" @ dt5.s28120.6{- value -} ww1.s28169.0{- value -}
                                                                         s2.s28256.0 = "writeWord8OffAddr#" @ sat.s28251.0{- value -} 0 sat.s28255.0{- value -}
                                                                    case s2.s28256.0{- value -} of
                                                                      ("GHC.Prim.(##)") ->
                                                                          letS s'1.s28257.0 = "touch#" @ dt6.s28121.6
                                                                          case s'1.s28257.0{- value -} of
                                                                            ("GHC.Prim.(##)") ->
                                                                                letS sat.s28260.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 6
                                                                                     sat.s28261.0 = "andI#" @ sat.s28260.0{- value -} 63
                                                                                     sat.s28262.0 = "+#" @ sat.s28261.0{- value -} 128
                                                                                     sat.s28263.0 = "int2Word#" @ sat.s28262.0{- value -}
                                                                                     sat.s28264.0 = "narrow8Word#" @ sat.s28263.0{- value -}
                                                                                     sat.s28258.0 = "+#" @ ww1.s28169.0{- value -} 1
                                                                                     sat.s28259.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28258.0{- value -}
                                                                                     s1.s28265.0 = "writeWord8OffAddr#" @ sat.s28259.0{- value -} 0 sat.s28264.0{- value -}
                                                                                case s1.s28265.0{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      letS s'2.s28266.0 = "touch#" @ dt6.s28121.6
                                                                                      case s'2.s28266.0{- value -} of
                                                                                        ("GHC.Prim.(##)") ->
                                                                                            letS sat.s28269.0 = "andI#" @ x.s28177.0{- value -} 63
                                                                                                 sat.s28270.0 = "+#" @ sat.s28269.0{- value -} 128
                                                                                                 sat.s28271.0 = "int2Word#" @ sat.s28270.0{- value -}
                                                                                                 sat.s28272.0 = "narrow8Word#" @ sat.s28271.0{- value -}
                                                                                                 sat.s28267.0 = "+#" @ ww1.s28169.0{- value -} 2
                                                                                                 sat.s28268.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28267.0{- value -}
                                                                                                 s3.s28273.0 = "writeWord8OffAddr#" @ sat.s28268.0{- value -} 0 sat.s28272.0{- value -}
                                                                                            case s3.s28273.0{- value -} of
                                                                                              ("GHC.Prim.(##)") ->
                                                                                                  letS s'3.s28274.0 = "touch#" @ dt6.s28121.6
                                                                                                  case s'3.s28274.0{- value -} of
                                                                                                    ("GHC.Prim.(##)") ->
                                                                                                        letS sat.s28276.0 = "+#" @ ww1.s28169.0{- value -} 3
                                                                                                             sat.s28275.0 = "+#" @ ww.s28168.0{- value -} 1
                                                                                                        "$wloop.s28167.1" @ sat.s28275.0{- value -} sat.s28276.0{- value -} #"GHC.Prim.void#"
                                                                1 ->
                                                                    exit1.s28135.1 @ ww.s28168.0{- value -} ww1.s28169.0{- value -} #"GHC.Prim.void#"
                                                          1 ->
                                                              let sat.s28279.0 = [GHC.IO.Buffer.Buffer dt5.s28120.6{- value -} dt6.s28121.6 ds1.s28122.6 dt7.s28123.6{- value -} dt8.s28124.6{- value -} ww1.s28169.0{- value -}]
                                                                  sat.s28278.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.10 @ ds.s28115.11 dt.s28113.11{- value -} dt1.s28114.11 dt2.s28116.11{- value -} dt4.s28118.11{- value -} lvl3.s28126.11 ww.s28168.0{- value -}
                                                                  sat.s28280.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28278.0 sat.s28279.0]
                                                              ["GHC.Prim.Unit#" sat.s28280.0]
                                              1 ->
                                                  letS lwild6.s28281.0 = "<=#" @ x.s28177.0{- value -} 56319
                                                  case lwild6.s28281.0{- value -} of
                                                    _ ->
                                                        letS lwild7.s28282.0 = "<=#" @ 56320 x.s28177.0{- value -}
                                                        case lwild7.s28282.0{- value -} of
                                                          _ ->
                                                              letS sat.s28283.0 = "-#" @ dt7.s28123.6{- value -} ww1.s28169.0{- value -}
                                                                   lwild8.s28284.0 = "<#" @ sat.s28283.0{- value -} 3
                                                              case lwild8.s28284.0{- value -} of
                                                                _ ->
                                                                    letS sat.s28286.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 12
                                                                         sat.s28287.0 = "+#" @ sat.s28286.0{- value -} 224
                                                                         sat.s28288.0 = "int2Word#" @ sat.s28287.0{- value -}
                                                                         sat.s28289.0 = "narrow8Word#" @ sat.s28288.0{- value -}
                                                                         sat.s28285.0 = "plusAddr#" @ dt5.s28120.6{- value -} ww1.s28169.0{- value -}
                                                                         s2.s28290.0 = "writeWord8OffAddr#" @ sat.s28285.0{- value -} 0 sat.s28289.0{- value -}
                                                                    case s2.s28290.0{- value -} of
                                                                      ("GHC.Prim.(##)") ->
                                                                          letS s'1.s28291.0 = "touch#" @ dt6.s28121.6
                                                                          case s'1.s28291.0{- value -} of
                                                                            ("GHC.Prim.(##)") ->
                                                                                letS sat.s28294.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 6
                                                                                     sat.s28295.0 = "andI#" @ sat.s28294.0{- value -} 63
                                                                                     sat.s28296.0 = "+#" @ sat.s28295.0{- value -} 128
                                                                                     sat.s28297.0 = "int2Word#" @ sat.s28296.0{- value -}
                                                                                     sat.s28298.0 = "narrow8Word#" @ sat.s28297.0{- value -}
                                                                                     sat.s28292.0 = "+#" @ ww1.s28169.0{- value -} 1
                                                                                     sat.s28293.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28292.0{- value -}
                                                                                     s1.s28299.0 = "writeWord8OffAddr#" @ sat.s28293.0{- value -} 0 sat.s28298.0{- value -}
                                                                                case s1.s28299.0{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      letS s'2.s28300.0 = "touch#" @ dt6.s28121.6
                                                                                      case s'2.s28300.0{- value -} of
                                                                                        ("GHC.Prim.(##)") ->
                                                                                            letS sat.s28303.0 = "andI#" @ x.s28177.0{- value -} 63
                                                                                                 sat.s28304.0 = "+#" @ sat.s28303.0{- value -} 128
                                                                                                 sat.s28305.0 = "int2Word#" @ sat.s28304.0{- value -}
                                                                                                 sat.s28306.0 = "narrow8Word#" @ sat.s28305.0{- value -}
                                                                                                 sat.s28301.0 = "+#" @ ww1.s28169.0{- value -} 2
                                                                                                 sat.s28302.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28301.0{- value -}
                                                                                                 s3.s28307.0 = "writeWord8OffAddr#" @ sat.s28302.0{- value -} 0 sat.s28306.0{- value -}
                                                                                            case s3.s28307.0{- value -} of
                                                                                              ("GHC.Prim.(##)") ->
                                                                                                  letS s'3.s28308.0 = "touch#" @ dt6.s28121.6
                                                                                                  case s'3.s28308.0{- value -} of
                                                                                                    ("GHC.Prim.(##)") ->
                                                                                                        letS sat.s28310.0 = "+#" @ ww1.s28169.0{- value -} 3
                                                                                                             sat.s28309.0 = "+#" @ ww.s28168.0{- value -} 1
                                                                                                        "$wloop.s28167.1" @ sat.s28309.0{- value -} sat.s28310.0{- value -} #"GHC.Prim.void#"
                                                                1 ->
                                                                    exit1.s28135.1 @ ww.s28168.0{- value -} ww1.s28169.0{- value -} #"GHC.Prim.void#"
                                                          1 ->
                                                              letS lwild8.s28311.0 = "<=#" @ x.s28177.0{- value -} 57343
                                                              case lwild8.s28311.0{- value -} of
                                                                _ ->
                                                                    letS sat.s28312.0 = "-#" @ dt7.s28123.6{- value -} ww1.s28169.0{- value -}
                                                                         lwild9.s28313.0 = "<#" @ sat.s28312.0{- value -} 3
                                                                    case lwild9.s28313.0{- value -} of
                                                                      _ ->
                                                                          letS sat.s28315.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 12
                                                                               sat.s28316.0 = "+#" @ sat.s28315.0{- value -} 224
                                                                               sat.s28317.0 = "int2Word#" @ sat.s28316.0{- value -}
                                                                               sat.s28318.0 = "narrow8Word#" @ sat.s28317.0{- value -}
                                                                               sat.s28314.0 = "plusAddr#" @ dt5.s28120.6{- value -} ww1.s28169.0{- value -}
                                                                               s2.s28319.0 = "writeWord8OffAddr#" @ sat.s28314.0{- value -} 0 sat.s28318.0{- value -}
                                                                          case s2.s28319.0{- value -} of
                                                                            ("GHC.Prim.(##)") ->
                                                                                letS s'1.s28320.0 = "touch#" @ dt6.s28121.6
                                                                                case s'1.s28320.0{- value -} of
                                                                                  ("GHC.Prim.(##)") ->
                                                                                      letS sat.s28323.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 6
                                                                                           sat.s28324.0 = "andI#" @ sat.s28323.0{- value -} 63
                                                                                           sat.s28325.0 = "+#" @ sat.s28324.0{- value -} 128
                                                                                           sat.s28326.0 = "int2Word#" @ sat.s28325.0{- value -}
                                                                                           sat.s28327.0 = "narrow8Word#" @ sat.s28326.0{- value -}
                                                                                           sat.s28321.0 = "+#" @ ww1.s28169.0{- value -} 1
                                                                                           sat.s28322.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28321.0{- value -}
                                                                                           s1.s28328.0 = "writeWord8OffAddr#" @ sat.s28322.0{- value -} 0 sat.s28327.0{- value -}
                                                                                      case s1.s28328.0{- value -} of
                                                                                        ("GHC.Prim.(##)") ->
                                                                                            letS s'2.s28329.0 = "touch#" @ dt6.s28121.6
                                                                                            case s'2.s28329.0{- value -} of
                                                                                              ("GHC.Prim.(##)") ->
                                                                                                  letS sat.s28332.0 = "andI#" @ x.s28177.0{- value -} 63
                                                                                                       sat.s28333.0 = "+#" @ sat.s28332.0{- value -} 128
                                                                                                       sat.s28334.0 = "int2Word#" @ sat.s28333.0{- value -}
                                                                                                       sat.s28335.0 = "narrow8Word#" @ sat.s28334.0{- value -}
                                                                                                       sat.s28330.0 = "+#" @ ww1.s28169.0{- value -} 2
                                                                                                       sat.s28331.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28330.0{- value -}
                                                                                                       s3.s28336.0 = "writeWord8OffAddr#" @ sat.s28331.0{- value -} 0 sat.s28335.0{- value -}
                                                                                                  case s3.s28336.0{- value -} of
                                                                                                    ("GHC.Prim.(##)") ->
                                                                                                        letS s'3.s28337.0 = "touch#" @ dt6.s28121.6
                                                                                                        case s'3.s28337.0{- value -} of
                                                                                                          ("GHC.Prim.(##)") ->
                                                                                                              letS sat.s28339.0 = "+#" @ ww1.s28169.0{- value -} 3
                                                                                                                   sat.s28338.0 = "+#" @ ww.s28168.0{- value -} 1
                                                                                                              "$wloop.s28167.1" @ sat.s28338.0{- value -} sat.s28339.0{- value -} #"GHC.Prim.void#"
                                                                      1 ->
                                                                          exit1.s28135.1 @ ww.s28168.0{- value -} ww1.s28169.0{- value -} #"GHC.Prim.void#"
                                                                1 ->
                                                                    let sat.s28342.0 = [GHC.IO.Buffer.Buffer dt5.s28120.6{- value -} dt6.s28121.6 ds1.s28122.6 dt7.s28123.6{- value -} dt8.s28124.6{- value -} ww1.s28169.0{- value -}]
                                                                        sat.s28341.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.11 @ ds.s28115.11 dt.s28113.11{- value -} dt1.s28114.11 dt2.s28116.11{- value -} dt4.s28118.11{- value -} lvl3.s28126.11 ww.s28168.0{- value -}
                                                                        sat.s28343.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28341.0 sat.s28342.0]
                                                                    ["GHC.Prim.Unit#" sat.s28343.0]
                                                    1 ->
                                                        let sat.s28346.0 = [GHC.IO.Buffer.Buffer dt5.s28120.6{- value -} dt6.s28121.6 ds1.s28122.6 dt7.s28123.6{- value -} dt8.s28124.6{- value -} ww1.s28169.0{- value -}]
                                                            sat.s28345.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.12 @ ds.s28115.11 dt.s28113.11{- value -} dt1.s28114.11 dt2.s28116.11{- value -} dt4.s28118.11{- value -} lvl3.s28126.11 ww.s28168.0{- value -}
                                                            sat.s28347.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28345.0 sat.s28346.0]
                                                        ["GHC.Prim.Unit#" sat.s28347.0]
                                  1 ->
                                      letS sat.s28348.0 = "-#" @ dt7.s28123.6{- value -} ww1.s28169.0{- value -}
                                           lwild4.s28349.0 = "<#" @ sat.s28348.0{- value -} 2
                                      case lwild4.s28349.0{- value -} of
                                        _ ->
                                            letS sat.s28351.0 = "uncheckedIShiftRA#" @ x.s28177.0{- value -} 6
                                                 sat.s28352.0 = "+#" @ sat.s28351.0{- value -} 192
                                                 sat.s28353.0 = "int2Word#" @ sat.s28352.0{- value -}
                                                 sat.s28354.0 = "narrow8Word#" @ sat.s28353.0{- value -}
                                                 sat.s28350.0 = "plusAddr#" @ dt5.s28120.6{- value -} ww1.s28169.0{- value -}
                                                 s2.s28355.0 = "writeWord8OffAddr#" @ sat.s28350.0{- value -} 0 sat.s28354.0{- value -}
                                            case s2.s28355.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s28356.0 = "touch#" @ dt6.s28121.6
                                                  case s'1.s28356.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s28359.0 = "andI#" @ x.s28177.0{- value -} 63
                                                             sat.s28360.0 = "+#" @ sat.s28359.0{- value -} 128
                                                             sat.s28361.0 = "int2Word#" @ sat.s28360.0{- value -}
                                                             sat.s28362.0 = "narrow8Word#" @ sat.s28361.0{- value -}
                                                             sat.s28357.0 = "+#" @ ww1.s28169.0{- value -} 1
                                                             sat.s28358.0 = "plusAddr#" @ dt5.s28120.6{- value -} sat.s28357.0{- value -}
                                                             s1.s28363.0 = "writeWord8OffAddr#" @ sat.s28358.0{- value -} 0 sat.s28362.0{- value -}
                                                        case s1.s28363.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              letS s'2.s28364.0 = "touch#" @ dt6.s28121.6
                                                              case s'2.s28364.0{- value -} of
                                                                ("GHC.Prim.(##)") ->
                                                                    letS sat.s28366.0 = "+#" @ ww1.s28169.0{- value -} 2
                                                                         sat.s28365.0 = "+#" @ ww.s28168.0{- value -} 1
                                                                    "$wloop.s28167.1" @ sat.s28365.0{- value -} sat.s28366.0{- value -} #"GHC.Prim.void#"
                                        1 ->
                                            exit2.s28143.1 @ ww.s28168.0{- value -} ww1.s28169.0{- value -} #"GHC.Prim.void#"
                            1 ->
                                letS sat.s28368.0 = "int2Word#" @ x.s28177.0{- value -}
                                     sat.s28369.0 = "narrow8Word#" @ sat.s28368.0{- value -}
                                     sat.s28367.0 = "plusAddr#" @ dt5.s28120.6{- value -} ww1.s28169.0{- value -}
                                     s2.s28370.0 = "writeWord8OffAddr#" @ sat.s28367.0{- value -} 0 sat.s28369.0{- value -}
                                case s2.s28370.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'1.s28371.0 = "touch#" @ dt6.s28121.6
                                      case s'1.s28371.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s28373.0 = "+#" @ ww1.s28169.0{- value -} 1
                                                 sat.s28372.0 = "+#" @ ww.s28168.0{- value -} 1
                                            "$wloop.s28167.1" @ sat.s28372.0{- value -} sat.s28373.0{- value -} #"GHC.Prim.void#"
          1 ->
              exit3.s28151.1 @ ww.s28168.0{- value -} ww1.s28169.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit4.s28159.1 @ ww.s28168.0{- value -} ww1.s28169.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF8.mkUTF1.closure.2 ds.s28115.4 dt.s28113.4 dt1.s28114.4 dt2.s28116.4 dt4.s28118.4 lvl3.s28126.4 ww.s28136.1 =
  letS lwild.s28139.0 = "==#" @ ww.s28136.1{- value -} dt4.s28118.4{- value -}
  case lwild.s28139.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28113.4{- value -} dt1.s28114.4 ds.s28115.4 dt2.s28116.4{- value -} ww.s28136.1{- value -} dt4.s28118.4{- value -}]
    1 ->
        lvl3.s28126.4

GHC.IO.Encoding.UTF8.mkUTF1.closure.3 ds.s28115.3 ds1.s28122.2 dt.s28113.3 dt1.s28114.3 dt2.s28116.3 dt4.s28118.3 dt5.s28120.2 dt6.s28121.2 dt7.s28123.2 dt8.s28124.2 lvl3.s28126.3 ww.s28136.0 ww1.s28137.0 void.040.1340 =
  let sat.s28141.0 = [GHC.IO.Buffer.Buffer dt5.s28120.2{- value -} dt6.s28121.2 ds1.s28122.2 dt7.s28123.2{- value -} dt8.s28124.2{- value -} ww1.s28137.0{- value -}]
      sat.s28140.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.2 @ ds.s28115.3 dt.s28113.3{- value -} dt1.s28114.3 dt2.s28116.3{- value -} dt4.s28118.3{- value -} lvl3.s28126.3 ww.s28136.0{- value -}
      sat.s28142.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s28140.0 sat.s28141.0]
  ["GHC.Prim.Unit#" sat.s28142.0]

GHC.IO.Encoding.UTF8.mkUTF1.closure.4 ds.s28115.6 dt.s28113.6 dt1.s28114.6 dt2.s28116.6 dt4.s28118.6 lvl3.s28126.6 ww.s28144.1 =
  letS lwild.s28147.0 = "==#" @ ww.s28144.1{- value -} dt4.s28118.6{- value -}
  case lwild.s28147.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28113.6{- value -} dt1.s28114.6 ds.s28115.6 dt2.s28116.6{- value -} ww.s28144.1{- value -} dt4.s28118.6{- value -}]
    1 ->
        lvl3.s28126.6

GHC.IO.Encoding.UTF8.mkUTF1.closure.5 ds.s28115.5 ds1.s28122.3 dt.s28113.5 dt1.s28114.5 dt2.s28116.5 dt4.s28118.5 dt5.s28120.3 dt6.s28121.3 dt7.s28123.3 dt8.s28124.3 lvl3.s28126.5 ww.s28144.0 ww1.s28145.0 void.040.1341 =
  let sat.s28149.0 = [GHC.IO.Buffer.Buffer dt5.s28120.3{- value -} dt6.s28121.3 ds1.s28122.3 dt7.s28123.3{- value -} dt8.s28124.3{- value -} ww1.s28145.0{- value -}]
      sat.s28148.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.4 @ ds.s28115.5 dt.s28113.5{- value -} dt1.s28114.5 dt2.s28116.5{- value -} dt4.s28118.5{- value -} lvl3.s28126.5 ww.s28144.0{- value -}
      sat.s28150.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s28148.0 sat.s28149.0]
  ["GHC.Prim.Unit#" sat.s28150.0]

GHC.IO.Encoding.UTF8.mkUTF1.closure.6 ds.s28115.8 dt.s28113.8 dt1.s28114.8 dt2.s28116.8 dt4.s28118.8 lvl3.s28126.8 ww.s28152.1 =
  letS lwild.s28155.0 = "==#" @ ww.s28152.1{- value -} dt4.s28118.8{- value -}
  case lwild.s28155.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28113.8{- value -} dt1.s28114.8 ds.s28115.8 dt2.s28116.8{- value -} ww.s28152.1{- value -} dt4.s28118.8{- value -}]
    1 ->
        lvl3.s28126.8

GHC.IO.Encoding.UTF8.mkUTF1.closure.7 ds.s28115.7 ds1.s28122.4 dt.s28113.7 dt1.s28114.7 dt2.s28116.7 dt4.s28118.7 dt5.s28120.4 dt6.s28121.4 dt7.s28123.4 dt8.s28124.4 lvl3.s28126.7 ww.s28152.0 ww1.s28153.0 void.040.1342 =
  let sat.s28157.0 = [GHC.IO.Buffer.Buffer dt5.s28120.4{- value -} dt6.s28121.4 ds1.s28122.4 dt7.s28123.4{- value -} dt8.s28124.4{- value -} ww1.s28153.0{- value -}]
      sat.s28156.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.6 @ ds.s28115.7 dt.s28113.7{- value -} dt1.s28114.7 dt2.s28116.7{- value -} dt4.s28118.7{- value -} lvl3.s28126.7 ww.s28152.0{- value -}
      sat.s28158.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s28156.0 sat.s28157.0]
  ["GHC.Prim.Unit#" sat.s28158.0]

GHC.IO.Encoding.UTF8.mkUTF1.closure.8 ds.s28115.10 dt.s28113.10 dt1.s28114.10 dt2.s28116.10 dt4.s28118.10 lvl3.s28126.10 ww.s28160.1 =
  letS lwild.s28163.0 = "==#" @ ww.s28160.1{- value -} dt4.s28118.10{- value -}
  case lwild.s28163.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28113.10{- value -} dt1.s28114.10 ds.s28115.10 dt2.s28116.10{- value -} ww.s28160.1{- value -} dt4.s28118.10{- value -}]
    1 ->
        lvl3.s28126.10

GHC.IO.Encoding.UTF8.mkUTF1.closure.9 ds.s28115.9 ds1.s28122.5 dt.s28113.9 dt1.s28114.9 dt2.s28116.9 dt4.s28118.9 dt5.s28120.5 dt6.s28121.5 dt7.s28123.5 dt8.s28124.5 lvl3.s28126.9 ww.s28160.0 ww1.s28161.0 void.040.1343 =
  let sat.s28165.0 = [GHC.IO.Buffer.Buffer dt5.s28120.5{- value -} dt6.s28121.5 ds1.s28122.5 dt7.s28123.5{- value -} dt8.s28124.5{- value -} ww1.s28161.0{- value -}]
      sat.s28164.0 = GHC.IO.Encoding.UTF8.mkUTF1.closure.8 @ ds.s28115.9 dt.s28113.9{- value -} dt1.s28114.9 dt2.s28116.9{- value -} dt4.s28118.9{- value -} lvl3.s28126.9 ww.s28160.0{- value -}
      sat.s28166.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s28164.0 sat.s28165.0]
  ["GHC.Prim.Unit#" sat.s28166.0]

GHC.IO.Encoding.UTF8.mkUTF2 ds.s28932.0 void.040.1361 =
  ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.UTF8.mkUTF3 void.040.1358 =
  ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.UTF8.mkUTF4 input.s28374.0 output.s28375.0 void.040.1345 =
  letS wild.s28377.0 = input.s28374.0
  case wild.s28377.0 of
    (GHC.IO.Buffer.Buffer dt.s28378.0 dt1.s28379.0 ds.s28380.0 dt2.s28381.0 dt3.s28382.0 dt4.s28383.0) ->
        letS wild1.s28384.0 = output.s28375.0
        case wild1.s28384.0 of
          (GHC.IO.Buffer.Buffer dt5.s28385.0 dt6.s28386.0 ds1.s28387.0 dt7.s28388.0 dt8.s28389.0 dt9.s28390.0) ->
              let lvl3.s28391.0 = [GHC.IO.Buffer.Buffer dt.s28378.0{- value -} dt1.s28379.0 ds.s28380.0 dt2.s28381.0{- value -} 0 0]
                  exit.s28392.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.1 @ ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} lvl3.s28391.0
                  exit1.s28400.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.3 @ ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} lvl3.s28391.0
                  exit2.s28408.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.11 @ ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} lvl3.s28391.0
                  exit3.s28448.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.21 @ ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} lvl3.s28391.0
                  exit4.s28508.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.23 @ ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} lvl3.s28391.0
                  exit5.s28516.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.33 @ ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} lvl3.s28391.0
                  exit6.s28565.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.35 @ ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} lvl3.s28391.0
                  exit7.s28573.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.37 @ ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} lvl3.s28391.0
                  exit8.s28581.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.39 @ ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} lvl3.s28391.0
                  exit9.s28589.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.41 @ ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} lvl3.s28391.0
                  exit10.s28597.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.43 @ ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} lvl3.s28391.0
              letrec "$wloop.s28605.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.67 @ "$wloop.s28605.0" ds.s28380.0 ds1.s28387.0 dt.s28378.0{- value -} dt1.s28379.0 dt2.s28381.0{- value -} dt4.s28383.0{- value -} dt5.s28385.0{- value -} dt6.s28386.0 dt7.s28388.0{- value -} dt8.s28389.0{- value -} exit.s28392.0 exit1.s28400.0 exit10.s28597.0 exit2.s28408.0 exit3.s28448.0 exit4.s28508.0 exit5.s28516.0 exit6.s28565.0 exit7.s28573.0 exit8.s28581.0 exit9.s28589.0 lvl3.s28391.0
              "$wloop.s28605.0" @ dt3.s28382.0{- value -} dt9.s28390.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF8.mkUTF4.closure.0 ds.s28380.2 dt.s28378.2 dt1.s28379.2 dt2.s28381.2 dt4.s28383.2 lvl3.s28391.2 ww.s28393.1 =
  letS lwild.s28396.0 = "==#" @ ww.s28393.1{- value -} dt4.s28383.2{- value -}
  case lwild.s28396.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.2{- value -} dt1.s28379.2 ds.s28380.2 dt2.s28381.2{- value -} ww.s28393.1{- value -} dt4.s28383.2{- value -}]
    1 ->
        lvl3.s28391.2

GHC.IO.Encoding.UTF8.mkUTF4.closure.1 ds.s28380.1 ds1.s28387.1 dt.s28378.1 dt1.s28379.1 dt2.s28381.1 dt4.s28383.1 dt5.s28385.1 dt6.s28386.1 dt7.s28388.1 dt8.s28389.1 lvl3.s28391.1 ww.s28393.0 ww1.s28394.0 void.040.1346 =
  let sat.s28398.0 = [GHC.IO.Buffer.Buffer dt5.s28385.1{- value -} dt6.s28386.1 ds1.s28387.1 dt7.s28388.1{- value -} dt8.s28389.1{- value -} ww1.s28394.0{- value -}]
      sat.s28397.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.0 @ ds.s28380.1 dt.s28378.1{- value -} dt1.s28379.1 dt2.s28381.1{- value -} dt4.s28383.1{- value -} lvl3.s28391.1 ww.s28393.0{- value -}
      sat.s28399.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28397.0 sat.s28398.0]
  ["GHC.Prim.Unit#" sat.s28399.0]

GHC.IO.Encoding.UTF8.mkUTF4.closure.10 "$j.s28419.1" ds.s28380.8 ds1.s28387.5 dt.s28378.8 dt1.s28379.8 dt2.s28381.8 dt4.s28383.8 dt5.s28385.5 dt6.s28386.5 dt7.s28388.5 dt8.s28389.5 ipv1.s28411.1 ipv2.s28417.1 lvl3.s28391.8 ww.s28409.3 ww1.s28410.2 =
  let "$j2.s28425.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.9 @ "$j.s28419.1" ds.s28380.8 ds1.s28387.5 dt.s28378.8{- value -} dt1.s28379.8 dt2.s28381.8{- value -} dt4.s28383.8{- value -} dt5.s28385.5{- value -} dt6.s28386.5 dt7.s28388.5{- value -} dt8.s28389.5{- value -} ipv1.s28411.1{- value -} ipv2.s28417.1{- value -} lvl3.s28391.8 ww.s28409.3{- value -} ww1.s28410.2{- value -}
  letS lwild.s28441.0 = "geWord#" @ ipv1.s28411.1{- value -} 241u
  case lwild.s28441.0{- value -} of
    _ ->
        "$j2.s28425.0"
    1 ->
        letS lwild1.s28442.0 = "leWord#" @ ipv1.s28411.1{- value -} 243u
        case lwild1.s28442.0{- value -} of
          _ ->
              "$j2.s28425.0"
          1 ->
              letS lwild2.s28443.0 = "geWord#" @ ipv2.s28417.1{- value -} 128u
              case lwild2.s28443.0{- value -} of
                _ ->
                    "$j2.s28425.0"
                1 ->
                    letS lwild3.s28444.0 = "leWord#" @ ipv2.s28417.1{- value -} 191u
                    case lwild3.s28444.0{- value -} of
                      _ ->
                          "$j2.s28425.0"
                      1 ->
                          "$j.s28419.1"

GHC.IO.Encoding.UTF8.mkUTF4.closure.11 ds.s28380.5 ds1.s28387.3 dt.s28378.5 dt1.s28379.5 dt2.s28381.5 dt4.s28383.5 dt5.s28385.3 dt6.s28386.3 dt7.s28388.3 dt8.s28389.3 lvl3.s28391.5 ww.s28409.0 ww1.s28410.0 ipv1.s28411.0 void.040.1348 =
  letS sat.s28413.0 = "+#" @ ww.s28409.0{- value -} 1
       sat.s28414.0 = "plusAddr#" @ dt.s28378.5{- value -} sat.s28413.0{- value -}
       ds2.s28415.0 = "readWord8OffAddr#" @ sat.s28414.0{- value -} 0
  case ds2.s28415.0{- value -} of
    ("GHC.Prim.Unit#" ipv2.s28417.0) ->
        letS s'1.s28418.0 = "touch#" @ dt1.s28379.5
        case s'1.s28418.0{- value -} of
          ("GHC.Prim.(##)") ->
              let "$j.s28419.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.5 @ ds.s28380.5 ds1.s28387.3 dt.s28378.5{- value -} dt1.s28379.5 dt2.s28381.5{- value -} dt4.s28383.5{- value -} dt5.s28385.3{- value -} dt6.s28386.3 dt7.s28388.3{- value -} dt8.s28389.3{- value -} lvl3.s28391.5 ww.s28409.0{- value -} ww1.s28410.0{- value -}
                  "$j1.s28424.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.10 @ "$j.s28419.0" ds.s28380.5 ds1.s28387.3 dt.s28378.5{- value -} dt1.s28379.5 dt2.s28381.5{- value -} dt4.s28383.5{- value -} dt5.s28385.3{- value -} dt6.s28386.3 dt7.s28388.3{- value -} dt8.s28389.3{- value -} ipv1.s28411.0{- value -} ipv2.s28417.0{- value -} lvl3.s28391.5 ww.s28409.0{- value -} ww1.s28410.0{- value -}
              letS wild2.s28445.0 = ipv1.s28411.0{- value -}
              case wild2.s28445.0{- value -} of
                _ ->
                    "$j1.s28424.0"
                240u ->
                    letS lwild.s28446.0 = "geWord#" @ ipv2.s28417.0{- value -} 144u
                    case lwild.s28446.0{- value -} of
                      _ ->
                          "$j1.s28424.0"
                      1 ->
                          letS lwild1.s28447.0 = "leWord#" @ ipv2.s28417.0{- value -} 191u
                          case lwild1.s28447.0{- value -} of
                            _ ->
                                "$j1.s28424.0"
                            1 ->
                                "$j.s28419.0"

GHC.IO.Encoding.UTF8.mkUTF4.closure.12 ds.s28380.15 dt.s28378.15 dt1.s28379.15 dt2.s28381.15 dt4.s28383.15 lvl3.s28391.15 ww.s28449.2 =
  letS lwild.s28466.0 = "==#" @ ww.s28449.2{- value -} dt4.s28383.15{- value -}
  case lwild.s28466.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.15{- value -} dt1.s28379.15 ds.s28380.15 dt2.s28381.15{- value -} ww.s28449.2{- value -} dt4.s28383.15{- value -}]
    1 ->
        lvl3.s28391.15

GHC.IO.Encoding.UTF8.mkUTF4.closure.13 ds.s28380.14 ds1.s28387.8 dt.s28378.14 dt1.s28379.14 dt2.s28381.14 dt4.s28383.14 dt5.s28385.8 dt6.s28386.8 dt7.s28388.8 dt8.s28389.8 lvl3.s28391.14 ww.s28449.1 ww1.s28450.1 =
  let sat.s28468.0 = [GHC.IO.Buffer.Buffer dt5.s28385.8{- value -} dt6.s28386.8 ds1.s28387.8 dt7.s28388.8{- value -} dt8.s28389.8{- value -} ww1.s28450.1{- value -}]
      sat.s28467.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.12 @ ds.s28380.14 dt.s28378.14{- value -} dt1.s28379.14 dt2.s28381.14{- value -} dt4.s28383.14{- value -} lvl3.s28391.14 ww.s28449.1{- value -}
      sat.s28469.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s28467.0 sat.s28468.0]
  ["GHC.Prim.Unit#" sat.s28469.0]

GHC.IO.Encoding.UTF8.mkUTF4.closure.14 ds.s28380.18 dt.s28378.18 dt1.s28379.18 dt2.s28381.18 dt4.s28383.18 lvl3.s28391.18 ww.s28449.5 =
  letS lwild.s28473.0 = "==#" @ ww.s28449.5{- value -} dt4.s28383.18{- value -}
  case lwild.s28473.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.18{- value -} dt1.s28379.18 ds.s28380.18 dt2.s28381.18{- value -} ww.s28449.5{- value -} dt4.s28383.18{- value -}]
    1 ->
        lvl3.s28391.18

GHC.IO.Encoding.UTF8.mkUTF4.closure.15 ds.s28380.19 dt.s28378.19 dt1.s28379.19 dt2.s28381.19 dt4.s28383.19 lvl3.s28391.19 ww.s28449.6 =
  letS lwild1.s28478.0 = "==#" @ ww.s28449.6{- value -} dt4.s28383.19{- value -}
  case lwild1.s28478.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.19{- value -} dt1.s28379.19 ds.s28380.19 dt2.s28381.19{- value -} ww.s28449.6{- value -} dt4.s28383.19{- value -}]
    1 ->
        lvl3.s28391.19

GHC.IO.Encoding.UTF8.mkUTF4.closure.16 ds.s28380.20 dt.s28378.20 dt1.s28379.20 dt2.s28381.20 dt4.s28383.20 lvl3.s28391.20 ww.s28449.7 =
  letS lwild2.s28483.0 = "==#" @ ww.s28449.7{- value -} dt4.s28383.20{- value -}
  case lwild2.s28483.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.20{- value -} dt1.s28379.20 ds.s28380.20 dt2.s28381.20{- value -} ww.s28449.7{- value -} dt4.s28383.20{- value -}]
    1 ->
        lvl3.s28391.20

GHC.IO.Encoding.UTF8.mkUTF4.closure.17 ds.s28380.21 dt.s28378.21 dt1.s28379.21 dt2.s28381.21 dt4.s28383.21 lvl3.s28391.21 ww.s28449.8 =
  letS lwild3.s28488.0 = "==#" @ ww.s28449.8{- value -} dt4.s28383.21{- value -}
  case lwild3.s28488.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.21{- value -} dt1.s28379.21 ds.s28380.21 dt2.s28381.21{- value -} ww.s28449.8{- value -} dt4.s28383.21{- value -}]
    1 ->
        lvl3.s28391.21

GHC.IO.Encoding.UTF8.mkUTF4.closure.18 ds.s28380.22 dt.s28378.22 dt1.s28379.22 dt2.s28381.22 dt4.s28383.22 lvl3.s28391.22 ww.s28449.9 =
  letS lwild4.s28493.0 = "==#" @ ww.s28449.9{- value -} dt4.s28383.22{- value -}
  case lwild4.s28493.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.22{- value -} dt1.s28379.22 ds.s28380.22 dt2.s28381.22{- value -} ww.s28449.9{- value -} dt4.s28383.22{- value -}]
    1 ->
        lvl3.s28391.22

GHC.IO.Encoding.UTF8.mkUTF4.closure.19 "$j.s28465.2" ds.s28380.17 ds1.s28387.10 dt.s28378.17 dt1.s28379.17 dt2.s28381.17 dt4.s28383.17 dt5.s28385.10 dt6.s28386.10 dt7.s28388.10 dt8.s28389.10 ipv1.s28451.2 ipv2.s28457.2 ipv4.s28463.2 lvl3.s28391.17 ww.s28449.4 ww1.s28450.3 =
  letS wild2.s28472.0 = ipv1.s28451.2{- value -}
  case wild2.s28472.0{- value -} of
    _ ->
        let sat.s28475.0 = [GHC.IO.Buffer.Buffer dt5.s28385.10{- value -} dt6.s28386.10 ds1.s28387.10 dt7.s28388.10{- value -} dt8.s28389.10{- value -} ww1.s28450.3{- value -}]
            sat.s28474.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.14 @ ds.s28380.17 dt.s28378.17{- value -} dt1.s28379.17 dt2.s28381.17{- value -} dt4.s28383.17{- value -} lvl3.s28391.17 ww.s28449.4{- value -}
            sat.s28476.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28474.0 sat.s28475.0]
        ["GHC.Prim.Unit#" sat.s28476.0]
    244u ->
        letS lwild.s28477.0 = "geWord#" @ ipv2.s28457.2{- value -} 128u
        case lwild.s28477.0{- value -} of
          _ ->
              let sat.s28480.0 = [GHC.IO.Buffer.Buffer dt5.s28385.10{- value -} dt6.s28386.10 ds1.s28387.10 dt7.s28388.10{- value -} dt8.s28389.10{- value -} ww1.s28450.3{- value -}]
                  sat.s28479.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.15 @ ds.s28380.17 dt.s28378.17{- value -} dt1.s28379.17 dt2.s28381.17{- value -} dt4.s28383.17{- value -} lvl3.s28391.17 ww.s28449.4{- value -}
                  sat.s28481.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28479.0 sat.s28480.0]
              ["GHC.Prim.Unit#" sat.s28481.0]
          1 ->
              letS lwild1.s28482.0 = "leWord#" @ ipv2.s28457.2{- value -} 143u
              case lwild1.s28482.0{- value -} of
                _ ->
                    let sat.s28485.0 = [GHC.IO.Buffer.Buffer dt5.s28385.10{- value -} dt6.s28386.10 ds1.s28387.10 dt7.s28388.10{- value -} dt8.s28389.10{- value -} ww1.s28450.3{- value -}]
                        sat.s28484.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.16 @ ds.s28380.17 dt.s28378.17{- value -} dt1.s28379.17 dt2.s28381.17{- value -} dt4.s28383.17{- value -} lvl3.s28391.17 ww.s28449.4{- value -}
                        sat.s28486.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28484.0 sat.s28485.0]
                    ["GHC.Prim.Unit#" sat.s28486.0]
                1 ->
                    letS lwild2.s28487.0 = "geWord#" @ ipv4.s28463.2{- value -} 128u
                    case lwild2.s28487.0{- value -} of
                      _ ->
                          let sat.s28490.0 = [GHC.IO.Buffer.Buffer dt5.s28385.10{- value -} dt6.s28386.10 ds1.s28387.10 dt7.s28388.10{- value -} dt8.s28389.10{- value -} ww1.s28450.3{- value -}]
                              sat.s28489.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.17 @ ds.s28380.17 dt.s28378.17{- value -} dt1.s28379.17 dt2.s28381.17{- value -} dt4.s28383.17{- value -} lvl3.s28391.17 ww.s28449.4{- value -}
                              sat.s28491.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28489.0 sat.s28490.0]
                          ["GHC.Prim.Unit#" sat.s28491.0]
                      1 ->
                          letS lwild3.s28492.0 = "leWord#" @ ipv4.s28463.2{- value -} 191u
                          case lwild3.s28492.0{- value -} of
                            _ ->
                                let sat.s28495.0 = [GHC.IO.Buffer.Buffer dt5.s28385.10{- value -} dt6.s28386.10 ds1.s28387.10 dt7.s28388.10{- value -} dt8.s28389.10{- value -} ww1.s28450.3{- value -}]
                                    sat.s28494.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.18 @ ds.s28380.17 dt.s28378.17{- value -} dt1.s28379.17 dt2.s28381.17{- value -} dt4.s28383.17{- value -} lvl3.s28391.17 ww.s28449.4{- value -}
                                    sat.s28496.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28494.0 sat.s28495.0]
                                ["GHC.Prim.Unit#" sat.s28496.0]
                            1 ->
                                "$j.s28465.2"

GHC.IO.Encoding.UTF8.mkUTF4.closure.2 ds.s28380.4 dt.s28378.4 dt1.s28379.4 dt2.s28381.4 dt4.s28383.4 lvl3.s28391.4 ww.s28401.1 =
  letS lwild.s28404.0 = "==#" @ ww.s28401.1{- value -} dt4.s28383.4{- value -}
  case lwild.s28404.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.4{- value -} dt1.s28379.4 ds.s28380.4 dt2.s28381.4{- value -} ww.s28401.1{- value -} dt4.s28383.4{- value -}]
    1 ->
        lvl3.s28391.4

GHC.IO.Encoding.UTF8.mkUTF4.closure.20 "$j.s28465.1" ds.s28380.16 ds1.s28387.9 dt.s28378.16 dt1.s28379.16 dt2.s28381.16 dt4.s28383.16 dt5.s28385.9 dt6.s28386.9 dt7.s28388.9 dt8.s28389.9 ipv1.s28451.1 ipv2.s28457.1 ipv4.s28463.1 lvl3.s28391.16 ww.s28449.3 ww1.s28450.2 =
  let "$j2.s28471.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.19 @ "$j.s28465.1" ds.s28380.16 ds1.s28387.9 dt.s28378.16{- value -} dt1.s28379.16 dt2.s28381.16{- value -} dt4.s28383.16{- value -} dt5.s28385.9{- value -} dt6.s28386.9 dt7.s28388.9{- value -} dt8.s28389.9{- value -} ipv1.s28451.1{- value -} ipv2.s28457.1{- value -} ipv4.s28463.1{- value -} lvl3.s28391.16 ww.s28449.3{- value -} ww1.s28450.2{- value -}
  letS lwild.s28497.0 = "geWord#" @ ipv1.s28451.1{- value -} 241u
  case lwild.s28497.0{- value -} of
    _ ->
        "$j2.s28471.0"
    1 ->
        letS lwild1.s28498.0 = "leWord#" @ ipv1.s28451.1{- value -} 243u
        case lwild1.s28498.0{- value -} of
          _ ->
              "$j2.s28471.0"
          1 ->
              letS lwild2.s28499.0 = "geWord#" @ ipv2.s28457.1{- value -} 128u
              case lwild2.s28499.0{- value -} of
                _ ->
                    "$j2.s28471.0"
                1 ->
                    letS lwild3.s28500.0 = "leWord#" @ ipv2.s28457.1{- value -} 191u
                    case lwild3.s28500.0{- value -} of
                      _ ->
                          "$j2.s28471.0"
                      1 ->
                          letS lwild4.s28501.0 = "geWord#" @ ipv4.s28463.1{- value -} 128u
                          case lwild4.s28501.0{- value -} of
                            _ ->
                                "$j2.s28471.0"
                            1 ->
                                letS lwild5.s28502.0 = "leWord#" @ ipv4.s28463.1{- value -} 191u
                                case lwild5.s28502.0{- value -} of
                                  _ ->
                                      "$j2.s28471.0"
                                  1 ->
                                      "$j.s28465.1"

GHC.IO.Encoding.UTF8.mkUTF4.closure.21 ds.s28380.13 ds1.s28387.7 dt.s28378.13 dt1.s28379.13 dt2.s28381.13 dt4.s28383.13 dt5.s28385.7 dt6.s28386.7 dt7.s28388.7 dt8.s28389.7 lvl3.s28391.13 ww.s28449.0 ww1.s28450.0 ipv1.s28451.0 void.040.1349 =
  letS sat.s28453.0 = "+#" @ ww.s28449.0{- value -} 1
       sat.s28454.0 = "plusAddr#" @ dt.s28378.13{- value -} sat.s28453.0{- value -}
       ds2.s28455.0 = "readWord8OffAddr#" @ sat.s28454.0{- value -} 0
  case ds2.s28455.0{- value -} of
    ("GHC.Prim.Unit#" ipv2.s28457.0) ->
        letS s'1.s28458.0 = "touch#" @ dt1.s28379.13
        case s'1.s28458.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS sat.s28459.0 = "+#" @ ww.s28449.0{- value -} 2
                   sat.s28460.0 = "plusAddr#" @ dt.s28378.13{- value -} sat.s28459.0{- value -}
                   ds3.s28461.0 = "readWord8OffAddr#" @ sat.s28460.0{- value -} 0
              case ds3.s28461.0{- value -} of
                ("GHC.Prim.Unit#" ipv4.s28463.0) ->
                    letS s'2.s28464.0 = "touch#" @ dt1.s28379.13
                    case s'2.s28464.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          let "$j.s28465.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.13 @ ds.s28380.13 ds1.s28387.7 dt.s28378.13{- value -} dt1.s28379.13 dt2.s28381.13{- value -} dt4.s28383.13{- value -} dt5.s28385.7{- value -} dt6.s28386.7 dt7.s28388.7{- value -} dt8.s28389.7{- value -} lvl3.s28391.13 ww.s28449.0{- value -} ww1.s28450.0{- value -}
                              "$j1.s28470.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.20 @ "$j.s28465.0" ds.s28380.13 ds1.s28387.7 dt.s28378.13{- value -} dt1.s28379.13 dt2.s28381.13{- value -} dt4.s28383.13{- value -} dt5.s28385.7{- value -} dt6.s28386.7 dt7.s28388.7{- value -} dt8.s28389.7{- value -} ipv1.s28451.0{- value -} ipv2.s28457.0{- value -} ipv4.s28463.0{- value -} lvl3.s28391.13 ww.s28449.0{- value -} ww1.s28450.0{- value -}
                          letS wild2.s28503.0 = ipv1.s28451.0{- value -}
                          case wild2.s28503.0{- value -} of
                            _ ->
                                "$j1.s28470.0"
                            240u ->
                                letS lwild.s28504.0 = "geWord#" @ ipv2.s28457.0{- value -} 144u
                                case lwild.s28504.0{- value -} of
                                  _ ->
                                      "$j1.s28470.0"
                                  1 ->
                                      letS lwild1.s28505.0 = "leWord#" @ ipv2.s28457.0{- value -} 191u
                                      case lwild1.s28505.0{- value -} of
                                        _ ->
                                            "$j1.s28470.0"
                                        1 ->
                                            letS lwild2.s28506.0 = "geWord#" @ ipv4.s28463.0{- value -} 128u
                                            case lwild2.s28506.0{- value -} of
                                              _ ->
                                                  "$j1.s28470.0"
                                              1 ->
                                                  letS lwild3.s28507.0 = "leWord#" @ ipv4.s28463.0{- value -} 191u
                                                  case lwild3.s28507.0{- value -} of
                                                    _ ->
                                                        "$j1.s28470.0"
                                                    1 ->
                                                        "$j.s28465.0"

GHC.IO.Encoding.UTF8.mkUTF4.closure.22 ds.s28380.24 dt.s28378.24 dt1.s28379.24 dt2.s28381.24 dt4.s28383.24 lvl3.s28391.24 ww.s28509.1 =
  letS lwild.s28512.0 = "==#" @ ww.s28509.1{- value -} dt4.s28383.24{- value -}
  case lwild.s28512.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.24{- value -} dt1.s28379.24 ds.s28380.24 dt2.s28381.24{- value -} ww.s28509.1{- value -} dt4.s28383.24{- value -}]
    1 ->
        lvl3.s28391.24

GHC.IO.Encoding.UTF8.mkUTF4.closure.23 ds.s28380.23 ds1.s28387.11 dt.s28378.23 dt1.s28379.23 dt2.s28381.23 dt4.s28383.23 dt5.s28385.11 dt6.s28386.11 dt7.s28388.11 dt8.s28389.11 lvl3.s28391.23 ww.s28509.0 ww1.s28510.0 void.040.1350 =
  let sat.s28514.0 = [GHC.IO.Buffer.Buffer dt5.s28385.11{- value -} dt6.s28386.11 ds1.s28387.11 dt7.s28388.11{- value -} dt8.s28389.11{- value -} ww1.s28510.0{- value -}]
      sat.s28513.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.22 @ ds.s28380.23 dt.s28378.23{- value -} dt1.s28379.23 dt2.s28381.23{- value -} dt4.s28383.23{- value -} lvl3.s28391.23 ww.s28509.0{- value -}
      sat.s28515.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s28513.0 sat.s28514.0]
  ["GHC.Prim.Unit#" sat.s28515.0]

GHC.IO.Encoding.UTF8.mkUTF4.closure.24 ds.s28380.27 dt.s28378.27 dt1.s28379.27 dt2.s28381.27 dt4.s28383.27 lvl3.s28391.27 ww.s28517.2 =
  letS lwild.s28528.0 = "==#" @ ww.s28517.2{- value -} dt4.s28383.27{- value -}
  case lwild.s28528.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.27{- value -} dt1.s28379.27 ds.s28380.27 dt2.s28381.27{- value -} ww.s28517.2{- value -} dt4.s28383.27{- value -}]
    1 ->
        lvl3.s28391.27

GHC.IO.Encoding.UTF8.mkUTF4.closure.25 ds.s28380.26 ds1.s28387.13 dt.s28378.26 dt1.s28379.26 dt2.s28381.26 dt4.s28383.26 dt5.s28385.13 dt6.s28386.13 dt7.s28388.13 dt8.s28389.13 lvl3.s28391.26 ww.s28517.1 ww1.s28518.1 =
  let sat.s28530.0 = [GHC.IO.Buffer.Buffer dt5.s28385.13{- value -} dt6.s28386.13 ds1.s28387.13 dt7.s28388.13{- value -} dt8.s28389.13{- value -} ww1.s28518.1{- value -}]
      sat.s28529.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.24 @ ds.s28380.26 dt.s28378.26{- value -} dt1.s28379.26 dt2.s28381.26{- value -} dt4.s28383.26{- value -} lvl3.s28391.26 ww.s28517.1{- value -}
      sat.s28531.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s28529.0 sat.s28530.0]
  ["GHC.Prim.Unit#" sat.s28531.0]

GHC.IO.Encoding.UTF8.mkUTF4.closure.26 ds.s28380.31 dt.s28378.31 dt1.s28379.31 dt2.s28381.31 dt4.s28383.31 lvl3.s28391.31 ww.s28517.6 =
  letS lwild1.s28536.0 = "==#" @ ww.s28517.6{- value -} dt4.s28383.31{- value -}
  case lwild1.s28536.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.31{- value -} dt1.s28379.31 ds.s28380.31 dt2.s28381.31{- value -} ww.s28517.6{- value -} dt4.s28383.31{- value -}]
    1 ->
        lvl3.s28391.31

GHC.IO.Encoding.UTF8.mkUTF4.closure.27 ds.s28380.32 dt.s28378.32 dt1.s28379.32 dt2.s28381.32 dt4.s28383.32 lvl3.s28391.32 ww.s28517.7 =
  letS lwild2.s28541.0 = "==#" @ ww.s28517.7{- value -} dt4.s28383.32{- value -}
  case lwild2.s28541.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.32{- value -} dt1.s28379.32 ds.s28380.32 dt2.s28381.32{- value -} ww.s28517.7{- value -} dt4.s28383.32{- value -}]
    1 ->
        lvl3.s28391.32

GHC.IO.Encoding.UTF8.mkUTF4.closure.28 ds.s28380.33 dt.s28378.33 dt1.s28379.33 dt2.s28381.33 dt4.s28383.33 lvl3.s28391.33 ww.s28517.8 =
  letS lwild3.s28546.0 = "==#" @ ww.s28517.8{- value -} dt4.s28383.33{- value -}
  case lwild3.s28546.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.33{- value -} dt1.s28379.33 ds.s28380.33 dt2.s28381.33{- value -} ww.s28517.8{- value -} dt4.s28383.33{- value -}]
    1 ->
        lvl3.s28391.33

GHC.IO.Encoding.UTF8.mkUTF4.closure.29 ds.s28380.34 dt.s28378.34 dt1.s28379.34 dt2.s28381.34 dt4.s28383.34 lvl3.s28391.34 ww.s28517.9 =
  letS lwild4.s28551.0 = "==#" @ ww.s28517.9{- value -} dt4.s28383.34{- value -}
  case lwild4.s28551.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.34{- value -} dt1.s28379.34 ds.s28380.34 dt2.s28381.34{- value -} ww.s28517.9{- value -} dt4.s28383.34{- value -}]
    1 ->
        lvl3.s28391.34

GHC.IO.Encoding.UTF8.mkUTF4.closure.3 ds.s28380.3 ds1.s28387.2 dt.s28378.3 dt1.s28379.3 dt2.s28381.3 dt4.s28383.3 dt5.s28385.2 dt6.s28386.2 dt7.s28388.2 dt8.s28389.2 lvl3.s28391.3 ww.s28401.0 ww1.s28402.0 void.040.1347 =
  let sat.s28406.0 = [GHC.IO.Buffer.Buffer dt5.s28385.2{- value -} dt6.s28386.2 ds1.s28387.2 dt7.s28388.2{- value -} dt8.s28389.2{- value -} ww1.s28402.0{- value -}]
      sat.s28405.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.2 @ ds.s28380.3 dt.s28378.3{- value -} dt1.s28379.3 dt2.s28381.3{- value -} dt4.s28383.3{- value -} lvl3.s28391.3 ww.s28401.0{- value -}
      sat.s28407.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s28405.0 sat.s28406.0]
  ["GHC.Prim.Unit#" sat.s28407.0]

GHC.IO.Encoding.UTF8.mkUTF4.closure.30 "$j.s28527.3" ds.s28380.30 ds1.s28387.16 dt.s28378.30 dt1.s28379.30 dt2.s28381.30 dt4.s28383.30 dt5.s28385.16 dt6.s28386.16 dt7.s28388.16 dt8.s28389.16 ipv1.s28519.3 ipv2.s28525.3 lvl3.s28391.30 ww.s28517.5 ww1.s28518.4 =
  letS lwild.s28535.0 = "geWord#" @ ipv1.s28519.3{- value -} 238u
  case lwild.s28535.0{- value -} of
    _ ->
        let sat.s28538.0 = [GHC.IO.Buffer.Buffer dt5.s28385.16{- value -} dt6.s28386.16 ds1.s28387.16 dt7.s28388.16{- value -} dt8.s28389.16{- value -} ww1.s28518.4{- value -}]
            sat.s28537.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.26 @ ds.s28380.30 dt.s28378.30{- value -} dt1.s28379.30 dt2.s28381.30{- value -} dt4.s28383.30{- value -} lvl3.s28391.30 ww.s28517.5{- value -}
            sat.s28539.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28537.0 sat.s28538.0]
        ["GHC.Prim.Unit#" sat.s28539.0]
    1 ->
        letS lwild1.s28540.0 = "leWord#" @ ipv1.s28519.3{- value -} 239u
        case lwild1.s28540.0{- value -} of
          _ ->
              let sat.s28543.0 = [GHC.IO.Buffer.Buffer dt5.s28385.16{- value -} dt6.s28386.16 ds1.s28387.16 dt7.s28388.16{- value -} dt8.s28389.16{- value -} ww1.s28518.4{- value -}]
                  sat.s28542.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.27 @ ds.s28380.30 dt.s28378.30{- value -} dt1.s28379.30 dt2.s28381.30{- value -} dt4.s28383.30{- value -} lvl3.s28391.30 ww.s28517.5{- value -}
                  sat.s28544.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28542.0 sat.s28543.0]
              ["GHC.Prim.Unit#" sat.s28544.0]
          1 ->
              letS lwild2.s28545.0 = "geWord#" @ ipv2.s28525.3{- value -} 128u
              case lwild2.s28545.0{- value -} of
                _ ->
                    let sat.s28548.0 = [GHC.IO.Buffer.Buffer dt5.s28385.16{- value -} dt6.s28386.16 ds1.s28387.16 dt7.s28388.16{- value -} dt8.s28389.16{- value -} ww1.s28518.4{- value -}]
                        sat.s28547.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.28 @ ds.s28380.30 dt.s28378.30{- value -} dt1.s28379.30 dt2.s28381.30{- value -} dt4.s28383.30{- value -} lvl3.s28391.30 ww.s28517.5{- value -}
                        sat.s28549.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28547.0 sat.s28548.0]
                    ["GHC.Prim.Unit#" sat.s28549.0]
                1 ->
                    letS lwild3.s28550.0 = "leWord#" @ ipv2.s28525.3{- value -} 191u
                    case lwild3.s28550.0{- value -} of
                      _ ->
                          let sat.s28553.0 = [GHC.IO.Buffer.Buffer dt5.s28385.16{- value -} dt6.s28386.16 ds1.s28387.16 dt7.s28388.16{- value -} dt8.s28389.16{- value -} ww1.s28518.4{- value -}]
                              sat.s28552.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.29 @ ds.s28380.30 dt.s28378.30{- value -} dt1.s28379.30 dt2.s28381.30{- value -} dt4.s28383.30{- value -} lvl3.s28391.30 ww.s28517.5{- value -}
                              sat.s28554.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28552.0 sat.s28553.0]
                          ["GHC.Prim.Unit#" sat.s28554.0]
                      1 ->
                          "$j.s28527.3"

GHC.IO.Encoding.UTF8.mkUTF4.closure.31 "$j.s28527.2" ds.s28380.29 ds1.s28387.15 dt.s28378.29 dt1.s28379.29 dt2.s28381.29 dt4.s28383.29 dt5.s28385.15 dt6.s28386.15 dt7.s28388.15 dt8.s28389.15 ipv1.s28519.2 ipv2.s28525.2 lvl3.s28391.29 ww.s28517.4 ww1.s28518.3 =
  let "$j3.s28534.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.30 @ "$j.s28527.2" ds.s28380.29 ds1.s28387.15 dt.s28378.29{- value -} dt1.s28379.29 dt2.s28381.29{- value -} dt4.s28383.29{- value -} dt5.s28385.15{- value -} dt6.s28386.15 dt7.s28388.15{- value -} dt8.s28389.15{- value -} ipv1.s28519.2{- value -} ipv2.s28525.2{- value -} lvl3.s28391.29 ww.s28517.4{- value -} ww1.s28518.3{- value -}
  letS wild2.s28555.0 = ipv1.s28519.2{- value -}
  case wild2.s28555.0{- value -} of
    _ ->
        "$j3.s28534.0"
    237u ->
        letS lwild.s28556.0 = "geWord#" @ ipv2.s28525.2{- value -} 128u
        case lwild.s28556.0{- value -} of
          _ ->
              "$j3.s28534.0"
          1 ->
              letS lwild1.s28557.0 = "leWord#" @ ipv2.s28525.2{- value -} 159u
              case lwild1.s28557.0{- value -} of
                _ ->
                    "$j3.s28534.0"
                1 ->
                    "$j.s28527.2"

GHC.IO.Encoding.UTF8.mkUTF4.closure.32 "$j.s28527.1" ds.s28380.28 ds1.s28387.14 dt.s28378.28 dt1.s28379.28 dt2.s28381.28 dt4.s28383.28 dt5.s28385.14 dt6.s28386.14 dt7.s28388.14 dt8.s28389.14 ipv1.s28519.1 ipv2.s28525.1 lvl3.s28391.28 ww.s28517.3 ww1.s28518.2 =
  let "$j2.s28533.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.31 @ "$j.s28527.1" ds.s28380.28 ds1.s28387.14 dt.s28378.28{- value -} dt1.s28379.28 dt2.s28381.28{- value -} dt4.s28383.28{- value -} dt5.s28385.14{- value -} dt6.s28386.14 dt7.s28388.14{- value -} dt8.s28389.14{- value -} ipv1.s28519.1{- value -} ipv2.s28525.1{- value -} lvl3.s28391.28 ww.s28517.3{- value -} ww1.s28518.2{- value -}
  letS lwild.s28558.0 = "geWord#" @ ipv1.s28519.1{- value -} 225u
  case lwild.s28558.0{- value -} of
    _ ->
        "$j2.s28533.0"
    1 ->
        letS lwild1.s28559.0 = "leWord#" @ ipv1.s28519.1{- value -} 236u
        case lwild1.s28559.0{- value -} of
          _ ->
              "$j2.s28533.0"
          1 ->
              letS lwild2.s28560.0 = "geWord#" @ ipv2.s28525.1{- value -} 128u
              case lwild2.s28560.0{- value -} of
                _ ->
                    "$j2.s28533.0"
                1 ->
                    letS lwild3.s28561.0 = "leWord#" @ ipv2.s28525.1{- value -} 191u
                    case lwild3.s28561.0{- value -} of
                      _ ->
                          "$j2.s28533.0"
                      1 ->
                          "$j.s28527.1"

GHC.IO.Encoding.UTF8.mkUTF4.closure.33 ds.s28380.25 ds1.s28387.12 dt.s28378.25 dt1.s28379.25 dt2.s28381.25 dt4.s28383.25 dt5.s28385.12 dt6.s28386.12 dt7.s28388.12 dt8.s28389.12 lvl3.s28391.25 ww.s28517.0 ww1.s28518.0 ipv1.s28519.0 void.040.1351 =
  letS sat.s28521.0 = "+#" @ ww.s28517.0{- value -} 1
       sat.s28522.0 = "plusAddr#" @ dt.s28378.25{- value -} sat.s28521.0{- value -}
       ds2.s28523.0 = "readWord8OffAddr#" @ sat.s28522.0{- value -} 0
  case ds2.s28523.0{- value -} of
    ("GHC.Prim.Unit#" ipv2.s28525.0) ->
        letS s'1.s28526.0 = "touch#" @ dt1.s28379.25
        case s'1.s28526.0{- value -} of
          ("GHC.Prim.(##)") ->
              let "$j.s28527.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.25 @ ds.s28380.25 ds1.s28387.12 dt.s28378.25{- value -} dt1.s28379.25 dt2.s28381.25{- value -} dt4.s28383.25{- value -} dt5.s28385.12{- value -} dt6.s28386.12 dt7.s28388.12{- value -} dt8.s28389.12{- value -} lvl3.s28391.25 ww.s28517.0{- value -} ww1.s28518.0{- value -}
                  "$j1.s28532.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.32 @ "$j.s28527.0" ds.s28380.25 ds1.s28387.12 dt.s28378.25{- value -} dt1.s28379.25 dt2.s28381.25{- value -} dt4.s28383.25{- value -} dt5.s28385.12{- value -} dt6.s28386.12 dt7.s28388.12{- value -} dt8.s28389.12{- value -} ipv1.s28519.0{- value -} ipv2.s28525.0{- value -} lvl3.s28391.25 ww.s28517.0{- value -} ww1.s28518.0{- value -}
              letS wild2.s28562.0 = ipv1.s28519.0{- value -}
              case wild2.s28562.0{- value -} of
                _ ->
                    "$j1.s28532.0"
                224u ->
                    letS lwild.s28563.0 = "geWord#" @ ipv2.s28525.0{- value -} 160u
                    case lwild.s28563.0{- value -} of
                      _ ->
                          "$j1.s28532.0"
                      1 ->
                          letS lwild1.s28564.0 = "leWord#" @ ipv2.s28525.0{- value -} 191u
                          case lwild1.s28564.0{- value -} of
                            _ ->
                                "$j1.s28532.0"
                            1 ->
                                "$j.s28527.0"

GHC.IO.Encoding.UTF8.mkUTF4.closure.34 ds.s28380.36 dt.s28378.36 dt1.s28379.36 dt2.s28381.36 dt4.s28383.36 lvl3.s28391.36 ww.s28566.1 =
  letS lwild.s28569.0 = "==#" @ ww.s28566.1{- value -} dt4.s28383.36{- value -}
  case lwild.s28569.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.36{- value -} dt1.s28379.36 ds.s28380.36 dt2.s28381.36{- value -} ww.s28566.1{- value -} dt4.s28383.36{- value -}]
    1 ->
        lvl3.s28391.36

GHC.IO.Encoding.UTF8.mkUTF4.closure.35 ds.s28380.35 ds1.s28387.17 dt.s28378.35 dt1.s28379.35 dt2.s28381.35 dt4.s28383.35 dt5.s28385.17 dt6.s28386.17 dt7.s28388.17 dt8.s28389.17 lvl3.s28391.35 ww.s28566.0 ww1.s28567.0 void.040.1352 =
  let sat.s28571.0 = [GHC.IO.Buffer.Buffer dt5.s28385.17{- value -} dt6.s28386.17 ds1.s28387.17 dt7.s28388.17{- value -} dt8.s28389.17{- value -} ww1.s28567.0{- value -}]
      sat.s28570.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.34 @ ds.s28380.35 dt.s28378.35{- value -} dt1.s28379.35 dt2.s28381.35{- value -} dt4.s28383.35{- value -} lvl3.s28391.35 ww.s28566.0{- value -}
      sat.s28572.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28570.0 sat.s28571.0]
  ["GHC.Prim.Unit#" sat.s28572.0]

GHC.IO.Encoding.UTF8.mkUTF4.closure.36 ds.s28380.38 dt.s28378.38 dt1.s28379.38 dt2.s28381.38 dt4.s28383.38 lvl3.s28391.38 ww.s28574.1 =
  letS lwild.s28577.0 = "==#" @ ww.s28574.1{- value -} dt4.s28383.38{- value -}
  case lwild.s28577.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.38{- value -} dt1.s28379.38 ds.s28380.38 dt2.s28381.38{- value -} ww.s28574.1{- value -} dt4.s28383.38{- value -}]
    1 ->
        lvl3.s28391.38

GHC.IO.Encoding.UTF8.mkUTF4.closure.37 ds.s28380.37 ds1.s28387.18 dt.s28378.37 dt1.s28379.37 dt2.s28381.37 dt4.s28383.37 dt5.s28385.18 dt6.s28386.18 dt7.s28388.18 dt8.s28389.18 lvl3.s28391.37 ww.s28574.0 ww1.s28575.0 void.040.1353 =
  let sat.s28579.0 = [GHC.IO.Buffer.Buffer dt5.s28385.18{- value -} dt6.s28386.18 ds1.s28387.18 dt7.s28388.18{- value -} dt8.s28389.18{- value -} ww1.s28575.0{- value -}]
      sat.s28578.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.36 @ ds.s28380.37 dt.s28378.37{- value -} dt1.s28379.37 dt2.s28381.37{- value -} dt4.s28383.37{- value -} lvl3.s28391.37 ww.s28574.0{- value -}
      sat.s28580.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28578.0 sat.s28579.0]
  ["GHC.Prim.Unit#" sat.s28580.0]

GHC.IO.Encoding.UTF8.mkUTF4.closure.38 ds.s28380.40 dt.s28378.40 dt1.s28379.40 dt2.s28381.40 dt4.s28383.40 lvl3.s28391.40 ww.s28582.1 =
  letS lwild.s28585.0 = "==#" @ ww.s28582.1{- value -} dt4.s28383.40{- value -}
  case lwild.s28585.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.40{- value -} dt1.s28379.40 ds.s28380.40 dt2.s28381.40{- value -} ww.s28582.1{- value -} dt4.s28383.40{- value -}]
    1 ->
        lvl3.s28391.40

GHC.IO.Encoding.UTF8.mkUTF4.closure.39 ds.s28380.39 ds1.s28387.19 dt.s28378.39 dt1.s28379.39 dt2.s28381.39 dt4.s28383.39 dt5.s28385.19 dt6.s28386.19 dt7.s28388.19 dt8.s28389.19 lvl3.s28391.39 ww.s28582.0 ww1.s28583.0 void.040.1354 =
  let sat.s28587.0 = [GHC.IO.Buffer.Buffer dt5.s28385.19{- value -} dt6.s28386.19 ds1.s28387.19 dt7.s28388.19{- value -} dt8.s28389.19{- value -} ww1.s28583.0{- value -}]
      sat.s28586.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.38 @ ds.s28380.39 dt.s28378.39{- value -} dt1.s28379.39 dt2.s28381.39{- value -} dt4.s28383.39{- value -} lvl3.s28391.39 ww.s28582.0{- value -}
      sat.s28588.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s28586.0 sat.s28587.0]
  ["GHC.Prim.Unit#" sat.s28588.0]

GHC.IO.Encoding.UTF8.mkUTF4.closure.4 ds.s28380.7 dt.s28378.7 dt1.s28379.7 dt2.s28381.7 dt4.s28383.7 lvl3.s28391.7 ww.s28409.2 =
  letS lwild.s28420.0 = "==#" @ ww.s28409.2{- value -} dt4.s28383.7{- value -}
  case lwild.s28420.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.7{- value -} dt1.s28379.7 ds.s28380.7 dt2.s28381.7{- value -} ww.s28409.2{- value -} dt4.s28383.7{- value -}]
    1 ->
        lvl3.s28391.7

GHC.IO.Encoding.UTF8.mkUTF4.closure.40 ds.s28380.42 dt.s28378.42 dt1.s28379.42 dt2.s28381.42 dt4.s28383.42 lvl3.s28391.42 ww.s28590.1 =
  letS lwild.s28593.0 = "==#" @ ww.s28590.1{- value -} dt4.s28383.42{- value -}
  case lwild.s28593.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.42{- value -} dt1.s28379.42 ds.s28380.42 dt2.s28381.42{- value -} ww.s28590.1{- value -} dt4.s28383.42{- value -}]
    1 ->
        lvl3.s28391.42

GHC.IO.Encoding.UTF8.mkUTF4.closure.41 ds.s28380.41 ds1.s28387.20 dt.s28378.41 dt1.s28379.41 dt2.s28381.41 dt4.s28383.41 dt5.s28385.20 dt6.s28386.20 dt7.s28388.20 dt8.s28389.20 lvl3.s28391.41 ww.s28590.0 ww1.s28591.0 void.040.1355 =
  let sat.s28595.0 = [GHC.IO.Buffer.Buffer dt5.s28385.20{- value -} dt6.s28386.20 ds1.s28387.20 dt7.s28388.20{- value -} dt8.s28389.20{- value -} ww1.s28591.0{- value -}]
      sat.s28594.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.40 @ ds.s28380.41 dt.s28378.41{- value -} dt1.s28379.41 dt2.s28381.41{- value -} dt4.s28383.41{- value -} lvl3.s28391.41 ww.s28590.0{- value -}
      sat.s28596.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s28594.0 sat.s28595.0]
  ["GHC.Prim.Unit#" sat.s28596.0]

GHC.IO.Encoding.UTF8.mkUTF4.closure.42 ds.s28380.44 dt.s28378.44 dt1.s28379.44 dt2.s28381.44 dt4.s28383.44 lvl3.s28391.44 ww.s28598.1 =
  letS lwild.s28601.0 = "==#" @ ww.s28598.1{- value -} dt4.s28383.44{- value -}
  case lwild.s28601.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.44{- value -} dt1.s28379.44 ds.s28380.44 dt2.s28381.44{- value -} ww.s28598.1{- value -} dt4.s28383.44{- value -}]
    1 ->
        lvl3.s28391.44

GHC.IO.Encoding.UTF8.mkUTF4.closure.43 ds.s28380.43 ds1.s28387.21 dt.s28378.43 dt1.s28379.43 dt2.s28381.43 dt4.s28383.43 dt5.s28385.21 dt6.s28386.21 dt7.s28388.21 dt8.s28389.21 lvl3.s28391.43 ww.s28598.0 ww1.s28599.0 void.040.1356 =
  let sat.s28603.0 = [GHC.IO.Buffer.Buffer dt5.s28385.21{- value -} dt6.s28386.21 ds1.s28387.21 dt7.s28388.21{- value -} dt8.s28389.21{- value -} ww1.s28599.0{- value -}]
      sat.s28602.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.42 @ ds.s28380.43 dt.s28378.43{- value -} dt1.s28379.43 dt2.s28381.43{- value -} dt4.s28383.43{- value -} lvl3.s28391.43 ww.s28598.0{- value -}
      sat.s28604.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.OutputUnderflow sat.s28602.0 sat.s28603.0]
  ["GHC.Prim.Unit#" sat.s28604.0]

GHC.IO.Encoding.UTF8.mkUTF4.closure.44 "$wloop.s28605.5" dt5.s28385.26 dt6.s28386.26 ipv1.s28614.4 ipv3.s28626.1 ipv5.s28632.1 ipv7.s28638.1 ww.s28606.4 ww1.s28607.4 =
  letS sat.s28652.0 = "word2Int#" @ ipv7.s28638.1{- value -}
       sat.s28648.0 = "word2Int#" @ ipv5.s28632.1{- value -}
       sat.s28649.0 = "-#" @ sat.s28648.0{- value -} 128
       sat.s28650.0 = "uncheckedIShiftL#" @ sat.s28649.0{- value -} 6
       sat.s28644.0 = "word2Int#" @ ipv3.s28626.1{- value -}
       sat.s28645.0 = "-#" @ sat.s28644.0{- value -} 128
       sat.s28646.0 = "uncheckedIShiftL#" @ sat.s28645.0{- value -} 12
       sat.s28641.0 = "word2Int#" @ ipv1.s28614.4{- value -}
       sat.s28642.0 = "-#" @ sat.s28641.0{- value -} 240
       sat.s28643.0 = "uncheckedIShiftL#" @ sat.s28642.0{- value -} 18
       sat.s28647.0 = "+#" @ sat.s28643.0{- value -} sat.s28646.0{- value -}
       sat.s28651.0 = "+#" @ sat.s28647.0{- value -} sat.s28650.0{- value -}
       sat.s28653.0 = "+#" @ sat.s28651.0{- value -} sat.s28652.0{- value -}
       sat.s28654.0 = "-#" @ sat.s28653.0{- value -} 128
       sat.s28655.0 = "chr#" @ sat.s28654.0{- value -}
       s2.s28656.0 = "writeWideCharOffAddr#" @ dt5.s28385.26{- value -} ww1.s28607.4{- value -} sat.s28655.0{- value -}
  case s2.s28656.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS s'4.s28657.0 = "touch#" @ dt6.s28386.26
        case s'4.s28657.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS sat.s28659.0 = "+#" @ ww1.s28607.4{- value -} 1
                   sat.s28658.0 = "+#" @ ww.s28606.4{- value -} 4
              "$wloop.s28605.5" @ sat.s28658.0{- value -} sat.s28659.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF8.mkUTF4.closure.45 ds.s28380.51 dt.s28378.51 dt1.s28379.51 dt2.s28381.51 dt4.s28383.51 lvl3.s28391.51 ww.s28606.7 =
  letS lwild4.s28663.0 = "==#" @ ww.s28606.7{- value -} dt4.s28383.51{- value -}
  case lwild4.s28663.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.51{- value -} dt1.s28379.51 ds.s28380.51 dt2.s28381.51{- value -} ww.s28606.7{- value -} dt4.s28383.51{- value -}]
    1 ->
        lvl3.s28391.51

GHC.IO.Encoding.UTF8.mkUTF4.closure.46 ds.s28380.52 dt.s28378.52 dt1.s28379.52 dt2.s28381.52 dt4.s28383.52 lvl3.s28391.52 ww.s28606.8 =
  letS lwild5.s28668.0 = "==#" @ ww.s28606.8{- value -} dt4.s28383.52{- value -}
  case lwild5.s28668.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.52{- value -} dt1.s28379.52 ds.s28380.52 dt2.s28381.52{- value -} ww.s28606.8{- value -} dt4.s28383.52{- value -}]
    1 ->
        lvl3.s28391.52

GHC.IO.Encoding.UTF8.mkUTF4.closure.47 ds.s28380.53 dt.s28378.53 dt1.s28379.53 dt2.s28381.53 dt4.s28383.53 lvl3.s28391.53 ww.s28606.9 =
  letS lwild6.s28673.0 = "==#" @ ww.s28606.9{- value -} dt4.s28383.53{- value -}
  case lwild6.s28673.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.53{- value -} dt1.s28379.53 ds.s28380.53 dt2.s28381.53{- value -} ww.s28606.9{- value -} dt4.s28383.53{- value -}]
    1 ->
        lvl3.s28391.53

GHC.IO.Encoding.UTF8.mkUTF4.closure.48 ds.s28380.54 dt.s28378.54 dt1.s28379.54 dt2.s28381.54 dt4.s28383.54 lvl3.s28391.54 ww.s28606.10 =
  letS lwild7.s28678.0 = "==#" @ ww.s28606.10{- value -} dt4.s28383.54{- value -}
  case lwild7.s28678.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.54{- value -} dt1.s28379.54 ds.s28380.54 dt2.s28381.54{- value -} ww.s28606.10{- value -} dt4.s28383.54{- value -}]
    1 ->
        lvl3.s28391.54

GHC.IO.Encoding.UTF8.mkUTF4.closure.49 ds.s28380.55 dt.s28378.55 dt1.s28379.55 dt2.s28381.55 dt4.s28383.55 lvl3.s28391.55 ww.s28606.11 =
  letS lwild8.s28683.0 = "==#" @ ww.s28606.11{- value -} dt4.s28383.55{- value -}
  case lwild8.s28683.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.55{- value -} dt1.s28379.55 ds.s28380.55 dt2.s28381.55{- value -} ww.s28606.11{- value -} dt4.s28383.55{- value -}]
    1 ->
        lvl3.s28391.55

GHC.IO.Encoding.UTF8.mkUTF4.closure.5 ds.s28380.6 ds1.s28387.4 dt.s28378.6 dt1.s28379.6 dt2.s28381.6 dt4.s28383.6 dt5.s28385.4 dt6.s28386.4 dt7.s28388.4 dt8.s28389.4 lvl3.s28391.6 ww.s28409.1 ww1.s28410.1 =
  let sat.s28422.0 = [GHC.IO.Buffer.Buffer dt5.s28385.4{- value -} dt6.s28386.4 ds1.s28387.4 dt7.s28388.4{- value -} dt8.s28389.4{- value -} ww1.s28410.1{- value -}]
      sat.s28421.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.4 @ ds.s28380.6 dt.s28378.6{- value -} dt1.s28379.6 dt2.s28381.6{- value -} dt4.s28383.6{- value -} lvl3.s28391.6 ww.s28409.1{- value -}
      sat.s28423.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InputUnderflow sat.s28421.0 sat.s28422.0]
  ["GHC.Prim.Unit#" sat.s28423.0]

GHC.IO.Encoding.UTF8.mkUTF4.closure.50 ds.s28380.56 dt.s28378.56 dt1.s28379.56 dt2.s28381.56 dt4.s28383.56 lvl3.s28391.56 ww.s28606.12 =
  letS lwild9.s28688.0 = "==#" @ ww.s28606.12{- value -} dt4.s28383.56{- value -}
  case lwild9.s28688.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.56{- value -} dt1.s28379.56 ds.s28380.56 dt2.s28381.56{- value -} ww.s28606.12{- value -} dt4.s28383.56{- value -}]
    1 ->
        lvl3.s28391.56

GHC.IO.Encoding.UTF8.mkUTF4.closure.51 ds.s28380.57 dt.s28378.57 dt1.s28379.57 dt2.s28381.57 dt4.s28383.57 lvl3.s28391.57 ww.s28606.13 =
  letS lwild10.s28693.0 = "==#" @ ww.s28606.13{- value -} dt4.s28383.57{- value -}
  case lwild10.s28693.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.57{- value -} dt1.s28379.57 ds.s28380.57 dt2.s28381.57{- value -} ww.s28606.13{- value -} dt4.s28383.57{- value -}]
    1 ->
        lvl3.s28391.57

GHC.IO.Encoding.UTF8.mkUTF4.closure.52 "$j3.s28640.2" ds.s28380.50 ds1.s28387.27 dt.s28378.50 dt1.s28379.50 dt2.s28381.50 dt4.s28383.50 dt5.s28385.28 dt6.s28386.28 dt7.s28388.27 dt8.s28389.27 ipv1.s28614.6 ipv3.s28626.3 ipv5.s28632.3 ipv7.s28638.3 lvl3.s28391.50 ww.s28606.6 ww1.s28607.6 =
  letS wild2.s28662.0 = ipv1.s28614.6{- value -}
  case wild2.s28662.0{- value -} of
    _ ->
        let sat.s28665.0 = [GHC.IO.Buffer.Buffer dt5.s28385.28{- value -} dt6.s28386.28 ds1.s28387.27 dt7.s28388.27{- value -} dt8.s28389.27{- value -} ww1.s28607.6{- value -}]
            sat.s28664.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.45 @ ds.s28380.50 dt.s28378.50{- value -} dt1.s28379.50 dt2.s28381.50{- value -} dt4.s28383.50{- value -} lvl3.s28391.50 ww.s28606.6{- value -}
            sat.s28666.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28664.0 sat.s28665.0]
        ["GHC.Prim.Unit#" sat.s28666.0]
    244u ->
        letS lwild4.s28667.0 = "geWord#" @ ipv3.s28626.3{- value -} 128u
        case lwild4.s28667.0{- value -} of
          _ ->
              let sat.s28670.0 = [GHC.IO.Buffer.Buffer dt5.s28385.28{- value -} dt6.s28386.28 ds1.s28387.27 dt7.s28388.27{- value -} dt8.s28389.27{- value -} ww1.s28607.6{- value -}]
                  sat.s28669.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.46 @ ds.s28380.50 dt.s28378.50{- value -} dt1.s28379.50 dt2.s28381.50{- value -} dt4.s28383.50{- value -} lvl3.s28391.50 ww.s28606.6{- value -}
                  sat.s28671.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28669.0 sat.s28670.0]
              ["GHC.Prim.Unit#" sat.s28671.0]
          1 ->
              letS lwild5.s28672.0 = "leWord#" @ ipv3.s28626.3{- value -} 143u
              case lwild5.s28672.0{- value -} of
                _ ->
                    let sat.s28675.0 = [GHC.IO.Buffer.Buffer dt5.s28385.28{- value -} dt6.s28386.28 ds1.s28387.27 dt7.s28388.27{- value -} dt8.s28389.27{- value -} ww1.s28607.6{- value -}]
                        sat.s28674.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.47 @ ds.s28380.50 dt.s28378.50{- value -} dt1.s28379.50 dt2.s28381.50{- value -} dt4.s28383.50{- value -} lvl3.s28391.50 ww.s28606.6{- value -}
                        sat.s28676.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28674.0 sat.s28675.0]
                    ["GHC.Prim.Unit#" sat.s28676.0]
                1 ->
                    letS lwild6.s28677.0 = "geWord#" @ ipv5.s28632.3{- value -} 128u
                    case lwild6.s28677.0{- value -} of
                      _ ->
                          let sat.s28680.0 = [GHC.IO.Buffer.Buffer dt5.s28385.28{- value -} dt6.s28386.28 ds1.s28387.27 dt7.s28388.27{- value -} dt8.s28389.27{- value -} ww1.s28607.6{- value -}]
                              sat.s28679.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.48 @ ds.s28380.50 dt.s28378.50{- value -} dt1.s28379.50 dt2.s28381.50{- value -} dt4.s28383.50{- value -} lvl3.s28391.50 ww.s28606.6{- value -}
                              sat.s28681.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28679.0 sat.s28680.0]
                          ["GHC.Prim.Unit#" sat.s28681.0]
                      1 ->
                          letS lwild7.s28682.0 = "leWord#" @ ipv5.s28632.3{- value -} 191u
                          case lwild7.s28682.0{- value -} of
                            _ ->
                                let sat.s28685.0 = [GHC.IO.Buffer.Buffer dt5.s28385.28{- value -} dt6.s28386.28 ds1.s28387.27 dt7.s28388.27{- value -} dt8.s28389.27{- value -} ww1.s28607.6{- value -}]
                                    sat.s28684.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.49 @ ds.s28380.50 dt.s28378.50{- value -} dt1.s28379.50 dt2.s28381.50{- value -} dt4.s28383.50{- value -} lvl3.s28391.50 ww.s28606.6{- value -}
                                    sat.s28686.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28684.0 sat.s28685.0]
                                ["GHC.Prim.Unit#" sat.s28686.0]
                            1 ->
                                letS lwild8.s28687.0 = "geWord#" @ ipv7.s28638.3{- value -} 128u
                                case lwild8.s28687.0{- value -} of
                                  _ ->
                                      let sat.s28690.0 = [GHC.IO.Buffer.Buffer dt5.s28385.28{- value -} dt6.s28386.28 ds1.s28387.27 dt7.s28388.27{- value -} dt8.s28389.27{- value -} ww1.s28607.6{- value -}]
                                          sat.s28689.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.50 @ ds.s28380.50 dt.s28378.50{- value -} dt1.s28379.50 dt2.s28381.50{- value -} dt4.s28383.50{- value -} lvl3.s28391.50 ww.s28606.6{- value -}
                                          sat.s28691.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28689.0 sat.s28690.0]
                                      ["GHC.Prim.Unit#" sat.s28691.0]
                                  1 ->
                                      letS lwild9.s28692.0 = "leWord#" @ ipv7.s28638.3{- value -} 191u
                                      case lwild9.s28692.0{- value -} of
                                        _ ->
                                            let sat.s28695.0 = [GHC.IO.Buffer.Buffer dt5.s28385.28{- value -} dt6.s28386.28 ds1.s28387.27 dt7.s28388.27{- value -} dt8.s28389.27{- value -} ww1.s28607.6{- value -}]
                                                sat.s28694.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.51 @ ds.s28380.50 dt.s28378.50{- value -} dt1.s28379.50 dt2.s28381.50{- value -} dt4.s28383.50{- value -} lvl3.s28391.50 ww.s28606.6{- value -}
                                                sat.s28696.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28694.0 sat.s28695.0]
                                            ["GHC.Prim.Unit#" sat.s28696.0]
                                        1 ->
                                            "$j3.s28640.2"

GHC.IO.Encoding.UTF8.mkUTF4.closure.53 "$j3.s28640.1" ds.s28380.49 ds1.s28387.26 dt.s28378.49 dt1.s28379.49 dt2.s28381.49 dt4.s28383.49 dt5.s28385.27 dt6.s28386.27 dt7.s28388.26 dt8.s28389.26 ipv1.s28614.5 ipv3.s28626.2 ipv5.s28632.2 ipv7.s28638.2 lvl3.s28391.49 ww.s28606.5 ww1.s28607.5 =
  let "$j5.s28661.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.52 @ "$j3.s28640.1" ds.s28380.49 ds1.s28387.26 dt.s28378.49{- value -} dt1.s28379.49 dt2.s28381.49{- value -} dt4.s28383.49{- value -} dt5.s28385.27{- value -} dt6.s28386.27 dt7.s28388.26{- value -} dt8.s28389.26{- value -} ipv1.s28614.5{- value -} ipv3.s28626.2{- value -} ipv5.s28632.2{- value -} ipv7.s28638.2{- value -} lvl3.s28391.49 ww.s28606.5{- value -} ww1.s28607.5{- value -}
  letS lwild4.s28697.0 = "geWord#" @ ipv1.s28614.5{- value -} 241u
  case lwild4.s28697.0{- value -} of
    _ ->
        "$j5.s28661.0"
    1 ->
        letS lwild5.s28698.0 = "leWord#" @ ipv1.s28614.5{- value -} 243u
        case lwild5.s28698.0{- value -} of
          _ ->
              "$j5.s28661.0"
          1 ->
              letS lwild6.s28699.0 = "geWord#" @ ipv3.s28626.2{- value -} 128u
              case lwild6.s28699.0{- value -} of
                _ ->
                    "$j5.s28661.0"
                1 ->
                    letS lwild7.s28700.0 = "leWord#" @ ipv3.s28626.2{- value -} 191u
                    case lwild7.s28700.0{- value -} of
                      _ ->
                          "$j5.s28661.0"
                      1 ->
                          letS lwild8.s28701.0 = "geWord#" @ ipv5.s28632.2{- value -} 128u
                          case lwild8.s28701.0{- value -} of
                            _ ->
                                "$j5.s28661.0"
                            1 ->
                                letS lwild9.s28702.0 = "leWord#" @ ipv5.s28632.2{- value -} 191u
                                case lwild9.s28702.0{- value -} of
                                  _ ->
                                      "$j5.s28661.0"
                                  1 ->
                                      letS lwild10.s28703.0 = "geWord#" @ ipv7.s28638.2{- value -} 128u
                                      case lwild10.s28703.0{- value -} of
                                        _ ->
                                            "$j5.s28661.0"
                                        1 ->
                                            letS lwild11.s28704.0 = "leWord#" @ ipv7.s28638.2{- value -} 191u
                                            case lwild11.s28704.0{- value -} of
                                              _ ->
                                                  "$j5.s28661.0"
                                              1 ->
                                                  "$j3.s28640.1"

GHC.IO.Encoding.UTF8.mkUTF4.closure.54 "$wloop.s28605.4" ds.s28380.48 ds1.s28387.25 dt.s28378.48 dt1.s28379.48 dt2.s28381.48 dt4.s28383.48 dt5.s28385.25 dt6.s28386.25 dt7.s28388.25 dt8.s28389.25 exit.s28392.4 exit1.s28400.4 exit2.s28408.4 exit3.s28448.4 ipv1.s28614.3 lvl3.s28391.48 ww.s28606.3 ww1.s28607.3 =
  letS lwild3.s28620.0 = "geWord#" @ ipv1.s28614.3{- value -} 240u
  case lwild3.s28620.0{- value -} of
    _ ->
        exit.s28392.4 @ ww.s28606.3{- value -} ww1.s28607.3{- value -} #"GHC.Prim.void#"
    1 ->
        letS ds3.s28621.0 = "-#" @ dt4.s28383.48{- value -} ww.s28606.3{- value -}
        case ds3.s28621.0{- value -} of
          _ ->
              letS sat.s28622.0 = "+#" @ ww.s28606.3{- value -} 1
                   sat.s28623.0 = "plusAddr#" @ dt.s28378.48{- value -} sat.s28622.0{- value -}
                   ds4.s28624.0 = "readWord8OffAddr#" @ sat.s28623.0{- value -} 0
              case ds4.s28624.0{- value -} of
                ("GHC.Prim.Unit#" ipv3.s28626.0) ->
                    letS s'1.s28627.0 = "touch#" @ dt1.s28379.48
                    case s'1.s28627.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s28628.0 = "+#" @ ww.s28606.3{- value -} 2
                               sat.s28629.0 = "plusAddr#" @ dt.s28378.48{- value -} sat.s28628.0{- value -}
                               ds5.s28630.0 = "readWord8OffAddr#" @ sat.s28629.0{- value -} 0
                          case ds5.s28630.0{- value -} of
                            ("GHC.Prim.Unit#" ipv5.s28632.0) ->
                                letS s'2.s28633.0 = "touch#" @ dt1.s28379.48
                                case s'2.s28633.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s28634.0 = "+#" @ ww.s28606.3{- value -} 3
                                           sat.s28635.0 = "plusAddr#" @ dt.s28378.48{- value -} sat.s28634.0{- value -}
                                           ds6.s28636.0 = "readWord8OffAddr#" @ sat.s28635.0{- value -} 0
                                      case ds6.s28636.0{- value -} of
                                        ("GHC.Prim.Unit#" ipv7.s28638.0) ->
                                            letS s'3.s28639.0 = "touch#" @ dt1.s28379.48
                                            case s'3.s28639.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  let "$j3.s28640.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.44 @ "$wloop.s28605.4" dt5.s28385.25{- value -} dt6.s28386.25 ipv1.s28614.3{- value -} ipv3.s28626.0{- value -} ipv5.s28632.0{- value -} ipv7.s28638.0{- value -} ww.s28606.3{- value -} ww1.s28607.3{- value -}
                                                      "$j4.s28660.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.53 @ "$j3.s28640.0" ds.s28380.48 ds1.s28387.25 dt.s28378.48{- value -} dt1.s28379.48 dt2.s28381.48{- value -} dt4.s28383.48{- value -} dt5.s28385.25{- value -} dt6.s28386.25 dt7.s28388.25{- value -} dt8.s28389.25{- value -} ipv1.s28614.3{- value -} ipv3.s28626.0{- value -} ipv5.s28632.0{- value -} ipv7.s28638.0{- value -} lvl3.s28391.48 ww.s28606.3{- value -} ww1.s28607.3{- value -}
                                                  letS wild2.s28705.0 = ipv1.s28614.3{- value -}
                                                  case wild2.s28705.0{- value -} of
                                                    _ ->
                                                        "$j4.s28660.0"
                                                    240u ->
                                                        letS lwild4.s28706.0 = "geWord#" @ ipv3.s28626.0{- value -} 144u
                                                        case lwild4.s28706.0{- value -} of
                                                          _ ->
                                                              "$j4.s28660.0"
                                                          1 ->
                                                              letS lwild5.s28707.0 = "leWord#" @ ipv3.s28626.0{- value -} 191u
                                                              case lwild5.s28707.0{- value -} of
                                                                _ ->
                                                                    "$j4.s28660.0"
                                                                1 ->
                                                                    letS lwild6.s28708.0 = "geWord#" @ ipv5.s28632.0{- value -} 128u
                                                                    case lwild6.s28708.0{- value -} of
                                                                      _ ->
                                                                          "$j4.s28660.0"
                                                                      1 ->
                                                                          letS lwild7.s28709.0 = "leWord#" @ ipv5.s28632.0{- value -} 191u
                                                                          case lwild7.s28709.0{- value -} of
                                                                            _ ->
                                                                                "$j4.s28660.0"
                                                                            1 ->
                                                                                letS lwild8.s28710.0 = "geWord#" @ ipv7.s28638.0{- value -} 128u
                                                                                case lwild8.s28710.0{- value -} of
                                                                                  _ ->
                                                                                      "$j4.s28660.0"
                                                                                  1 ->
                                                                                      letS lwild9.s28711.0 = "leWord#" @ ipv7.s28638.0{- value -} 191u
                                                                                      case lwild9.s28711.0{- value -} of
                                                                                        _ ->
                                                                                            "$j4.s28660.0"
                                                                                        1 ->
                                                                                            "$j3.s28640.0"
          1 ->
              exit1.s28400.4 @ ww.s28606.3{- value -} ww1.s28607.3{- value -} #"GHC.Prim.void#"
          2 ->
              exit2.s28408.4 @ ww.s28606.3{- value -} ww1.s28607.3{- value -} ipv1.s28614.3{- value -} #"GHC.Prim.void#"
          3 ->
              exit3.s28448.4 @ ww.s28606.3{- value -} ww1.s28607.3{- value -} ipv1.s28614.3{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF8.mkUTF4.closure.55 "$wloop.s28605.6" dt5.s28385.29 dt6.s28386.29 ipv1.s28614.7 ipv3.s28719.1 ipv5.s28725.1 ww.s28606.14 ww1.s28607.7 =
  letS sat.s28735.0 = "word2Int#" @ ipv5.s28725.1{- value -}
       sat.s28731.0 = "word2Int#" @ ipv3.s28719.1{- value -}
       sat.s28732.0 = "-#" @ sat.s28731.0{- value -} 128
       sat.s28733.0 = "uncheckedIShiftL#" @ sat.s28732.0{- value -} 6
       sat.s28728.0 = "word2Int#" @ ipv1.s28614.7{- value -}
       sat.s28729.0 = "-#" @ sat.s28728.0{- value -} 224
       sat.s28730.0 = "uncheckedIShiftL#" @ sat.s28729.0{- value -} 12
       sat.s28734.0 = "+#" @ sat.s28730.0{- value -} sat.s28733.0{- value -}
       sat.s28736.0 = "+#" @ sat.s28734.0{- value -} sat.s28735.0{- value -}
       sat.s28737.0 = "-#" @ sat.s28736.0{- value -} 128
       sat.s28738.0 = "chr#" @ sat.s28737.0{- value -}
       s2.s28739.0 = "writeWideCharOffAddr#" @ dt5.s28385.29{- value -} ww1.s28607.7{- value -} sat.s28738.0{- value -}
  case s2.s28739.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS s'3.s28740.0 = "touch#" @ dt6.s28386.29
        case s'3.s28740.0{- value -} of
          ("GHC.Prim.(##)") ->
              letS sat.s28742.0 = "+#" @ ww1.s28607.7{- value -} 1
                   sat.s28741.0 = "+#" @ ww.s28606.14{- value -} 3
              "$wloop.s28605.6" @ sat.s28741.0{- value -} sat.s28742.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF8.mkUTF4.closure.56 ds.s28380.61 dt.s28378.61 dt1.s28379.61 dt2.s28381.61 dt4.s28383.61 lvl3.s28391.61 ww.s28606.18 =
  letS lwild6.s28747.0 = "==#" @ ww.s28606.18{- value -} dt4.s28383.61{- value -}
  case lwild6.s28747.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.61{- value -} dt1.s28379.61 ds.s28380.61 dt2.s28381.61{- value -} ww.s28606.18{- value -} dt4.s28383.61{- value -}]
    1 ->
        lvl3.s28391.61

GHC.IO.Encoding.UTF8.mkUTF4.closure.57 ds.s28380.62 dt.s28378.62 dt1.s28379.62 dt2.s28381.62 dt4.s28383.62 lvl3.s28391.62 ww.s28606.19 =
  letS lwild7.s28752.0 = "==#" @ ww.s28606.19{- value -} dt4.s28383.62{- value -}
  case lwild7.s28752.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.62{- value -} dt1.s28379.62 ds.s28380.62 dt2.s28381.62{- value -} ww.s28606.19{- value -} dt4.s28383.62{- value -}]
    1 ->
        lvl3.s28391.62

GHC.IO.Encoding.UTF8.mkUTF4.closure.58 ds.s28380.63 dt.s28378.63 dt1.s28379.63 dt2.s28381.63 dt4.s28383.63 lvl3.s28391.63 ww.s28606.20 =
  letS lwild8.s28757.0 = "==#" @ ww.s28606.20{- value -} dt4.s28383.63{- value -}
  case lwild8.s28757.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.63{- value -} dt1.s28379.63 ds.s28380.63 dt2.s28381.63{- value -} ww.s28606.20{- value -} dt4.s28383.63{- value -}]
    1 ->
        lvl3.s28391.63

GHC.IO.Encoding.UTF8.mkUTF4.closure.59 ds.s28380.64 dt.s28378.64 dt1.s28379.64 dt2.s28381.64 dt4.s28383.64 lvl3.s28391.64 ww.s28606.21 =
  letS lwild9.s28762.0 = "==#" @ ww.s28606.21{- value -} dt4.s28383.64{- value -}
  case lwild9.s28762.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.64{- value -} dt1.s28379.64 ds.s28380.64 dt2.s28381.64{- value -} ww.s28606.21{- value -} dt4.s28383.64{- value -}]
    1 ->
        lvl3.s28391.64

GHC.IO.Encoding.UTF8.mkUTF4.closure.6 ds.s28380.10 dt.s28378.10 dt1.s28379.10 dt2.s28381.10 dt4.s28383.10 lvl3.s28391.10 ww.s28409.5 =
  letS lwild.s28427.0 = "==#" @ ww.s28409.5{- value -} dt4.s28383.10{- value -}
  case lwild.s28427.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.10{- value -} dt1.s28379.10 ds.s28380.10 dt2.s28381.10{- value -} ww.s28409.5{- value -} dt4.s28383.10{- value -}]
    1 ->
        lvl3.s28391.10

GHC.IO.Encoding.UTF8.mkUTF4.closure.60 ds.s28380.65 dt.s28378.65 dt1.s28379.65 dt2.s28381.65 dt4.s28383.65 lvl3.s28391.65 ww.s28606.22 =
  letS lwild10.s28767.0 = "==#" @ ww.s28606.22{- value -} dt4.s28383.65{- value -}
  case lwild10.s28767.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.65{- value -} dt1.s28379.65 ds.s28380.65 dt2.s28381.65{- value -} ww.s28606.22{- value -} dt4.s28383.65{- value -}]
    1 ->
        lvl3.s28391.65

GHC.IO.Encoding.UTF8.mkUTF4.closure.61 "$j3.s28727.3" ds.s28380.60 ds1.s28387.30 dt.s28378.60 dt1.s28379.60 dt2.s28381.60 dt4.s28383.60 dt5.s28385.32 dt6.s28386.32 dt7.s28388.30 dt8.s28389.30 ipv1.s28614.10 ipv3.s28719.4 ipv5.s28725.4 lvl3.s28391.60 ww.s28606.17 ww1.s28607.10 =
  letS lwild5.s28746.0 = "geWord#" @ ipv1.s28614.10{- value -} 238u
  case lwild5.s28746.0{- value -} of
    _ ->
        let sat.s28749.0 = [GHC.IO.Buffer.Buffer dt5.s28385.32{- value -} dt6.s28386.32 ds1.s28387.30 dt7.s28388.30{- value -} dt8.s28389.30{- value -} ww1.s28607.10{- value -}]
            sat.s28748.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.56 @ ds.s28380.60 dt.s28378.60{- value -} dt1.s28379.60 dt2.s28381.60{- value -} dt4.s28383.60{- value -} lvl3.s28391.60 ww.s28606.17{- value -}
            sat.s28750.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28748.0 sat.s28749.0]
        ["GHC.Prim.Unit#" sat.s28750.0]
    1 ->
        letS lwild6.s28751.0 = "geWord#" @ ipv3.s28719.4{- value -} 128u
        case lwild6.s28751.0{- value -} of
          _ ->
              let sat.s28754.0 = [GHC.IO.Buffer.Buffer dt5.s28385.32{- value -} dt6.s28386.32 ds1.s28387.30 dt7.s28388.30{- value -} dt8.s28389.30{- value -} ww1.s28607.10{- value -}]
                  sat.s28753.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.57 @ ds.s28380.60 dt.s28378.60{- value -} dt1.s28379.60 dt2.s28381.60{- value -} dt4.s28383.60{- value -} lvl3.s28391.60 ww.s28606.17{- value -}
                  sat.s28755.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28753.0 sat.s28754.0]
              ["GHC.Prim.Unit#" sat.s28755.0]
          1 ->
              letS lwild7.s28756.0 = "leWord#" @ ipv3.s28719.4{- value -} 191u
              case lwild7.s28756.0{- value -} of
                _ ->
                    let sat.s28759.0 = [GHC.IO.Buffer.Buffer dt5.s28385.32{- value -} dt6.s28386.32 ds1.s28387.30 dt7.s28388.30{- value -} dt8.s28389.30{- value -} ww1.s28607.10{- value -}]
                        sat.s28758.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.58 @ ds.s28380.60 dt.s28378.60{- value -} dt1.s28379.60 dt2.s28381.60{- value -} dt4.s28383.60{- value -} lvl3.s28391.60 ww.s28606.17{- value -}
                        sat.s28760.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28758.0 sat.s28759.0]
                    ["GHC.Prim.Unit#" sat.s28760.0]
                1 ->
                    letS lwild8.s28761.0 = "geWord#" @ ipv5.s28725.4{- value -} 128u
                    case lwild8.s28761.0{- value -} of
                      _ ->
                          let sat.s28764.0 = [GHC.IO.Buffer.Buffer dt5.s28385.32{- value -} dt6.s28386.32 ds1.s28387.30 dt7.s28388.30{- value -} dt8.s28389.30{- value -} ww1.s28607.10{- value -}]
                              sat.s28763.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.59 @ ds.s28380.60 dt.s28378.60{- value -} dt1.s28379.60 dt2.s28381.60{- value -} dt4.s28383.60{- value -} lvl3.s28391.60 ww.s28606.17{- value -}
                              sat.s28765.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28763.0 sat.s28764.0]
                          ["GHC.Prim.Unit#" sat.s28765.0]
                      1 ->
                          letS lwild9.s28766.0 = "leWord#" @ ipv5.s28725.4{- value -} 191u
                          case lwild9.s28766.0{- value -} of
                            _ ->
                                let sat.s28769.0 = [GHC.IO.Buffer.Buffer dt5.s28385.32{- value -} dt6.s28386.32 ds1.s28387.30 dt7.s28388.30{- value -} dt8.s28389.30{- value -} ww1.s28607.10{- value -}]
                                    sat.s28768.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.60 @ ds.s28380.60 dt.s28378.60{- value -} dt1.s28379.60 dt2.s28381.60{- value -} dt4.s28383.60{- value -} lvl3.s28391.60 ww.s28606.17{- value -}
                                    sat.s28770.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28768.0 sat.s28769.0]
                                ["GHC.Prim.Unit#" sat.s28770.0]
                            1 ->
                                "$j3.s28727.3"

GHC.IO.Encoding.UTF8.mkUTF4.closure.62 "$j3.s28727.2" ds.s28380.59 ds1.s28387.29 dt.s28378.59 dt1.s28379.59 dt2.s28381.59 dt4.s28383.59 dt5.s28385.31 dt6.s28386.31 dt7.s28388.29 dt8.s28389.29 ipv1.s28614.9 ipv3.s28719.3 ipv5.s28725.3 lvl3.s28391.59 ww.s28606.16 ww1.s28607.9 =
  let "$j6.s28745.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.61 @ "$j3.s28727.2" ds.s28380.59 ds1.s28387.29 dt.s28378.59{- value -} dt1.s28379.59 dt2.s28381.59{- value -} dt4.s28383.59{- value -} dt5.s28385.31{- value -} dt6.s28386.31 dt7.s28388.29{- value -} dt8.s28389.29{- value -} ipv1.s28614.9{- value -} ipv3.s28719.3{- value -} ipv5.s28725.3{- value -} lvl3.s28391.59 ww.s28606.16{- value -} ww1.s28607.9{- value -}
  letS wild2.s28771.0 = ipv1.s28614.9{- value -}
  case wild2.s28771.0{- value -} of
    _ ->
        "$j6.s28745.0"
    237u ->
        letS lwild5.s28772.0 = "geWord#" @ ipv3.s28719.3{- value -} 128u
        case lwild5.s28772.0{- value -} of
          _ ->
              "$j6.s28745.0"
          1 ->
              letS lwild6.s28773.0 = "leWord#" @ ipv3.s28719.3{- value -} 159u
              case lwild6.s28773.0{- value -} of
                _ ->
                    "$j6.s28745.0"
                1 ->
                    letS lwild7.s28774.0 = "geWord#" @ ipv5.s28725.3{- value -} 128u
                    case lwild7.s28774.0{- value -} of
                      _ ->
                          "$j6.s28745.0"
                      1 ->
                          letS lwild8.s28775.0 = "leWord#" @ ipv5.s28725.3{- value -} 191u
                          case lwild8.s28775.0{- value -} of
                            _ ->
                                "$j6.s28745.0"
                            1 ->
                                "$j3.s28727.2"

GHC.IO.Encoding.UTF8.mkUTF4.closure.63 "$j3.s28727.1" ds.s28380.58 ds1.s28387.28 dt.s28378.58 dt1.s28379.58 dt2.s28381.58 dt4.s28383.58 dt5.s28385.30 dt6.s28386.30 dt7.s28388.28 dt8.s28389.28 ipv1.s28614.8 ipv3.s28719.2 ipv5.s28725.2 lvl3.s28391.58 ww.s28606.15 ww1.s28607.8 =
  let "$j5.s28744.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.62 @ "$j3.s28727.1" ds.s28380.58 ds1.s28387.28 dt.s28378.58{- value -} dt1.s28379.58 dt2.s28381.58{- value -} dt4.s28383.58{- value -} dt5.s28385.30{- value -} dt6.s28386.30 dt7.s28388.28{- value -} dt8.s28389.28{- value -} ipv1.s28614.8{- value -} ipv3.s28719.2{- value -} ipv5.s28725.2{- value -} lvl3.s28391.58 ww.s28606.15{- value -} ww1.s28607.8{- value -}
  letS lwild5.s28776.0 = "geWord#" @ ipv1.s28614.8{- value -} 225u
  case lwild5.s28776.0{- value -} of
    _ ->
        "$j5.s28744.0"
    1 ->
        letS lwild6.s28777.0 = "leWord#" @ ipv1.s28614.8{- value -} 236u
        case lwild6.s28777.0{- value -} of
          _ ->
              "$j5.s28744.0"
          1 ->
              letS lwild7.s28778.0 = "geWord#" @ ipv3.s28719.2{- value -} 128u
              case lwild7.s28778.0{- value -} of
                _ ->
                    "$j5.s28744.0"
                1 ->
                    letS lwild8.s28779.0 = "leWord#" @ ipv3.s28719.2{- value -} 191u
                    case lwild8.s28779.0{- value -} of
                      _ ->
                          "$j5.s28744.0"
                      1 ->
                          letS lwild9.s28780.0 = "geWord#" @ ipv5.s28725.2{- value -} 128u
                          case lwild9.s28780.0{- value -} of
                            _ ->
                                "$j5.s28744.0"
                            1 ->
                                letS lwild10.s28781.0 = "leWord#" @ ipv5.s28725.2{- value -} 191u
                                case lwild10.s28781.0{- value -} of
                                  _ ->
                                      "$j5.s28744.0"
                                  1 ->
                                      "$j3.s28727.1"

GHC.IO.Encoding.UTF8.mkUTF4.closure.64 "$wloop.s28605.3" ds.s28380.47 ds1.s28387.24 dt.s28378.47 dt1.s28379.47 dt2.s28381.47 dt4.s28383.47 dt5.s28385.24 dt6.s28386.24 dt7.s28388.24 dt8.s28389.24 exit.s28392.3 exit1.s28400.3 exit2.s28408.3 exit3.s28448.3 exit4.s28508.3 exit5.s28516.3 ipv1.s28614.2 lvl3.s28391.47 ww.s28606.2 ww1.s28607.2 =
  let "$j2.s28619.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.54 @ "$wloop.s28605.3" ds.s28380.47 ds1.s28387.24 dt.s28378.47{- value -} dt1.s28379.47 dt2.s28381.47{- value -} dt4.s28383.47{- value -} dt5.s28385.24{- value -} dt6.s28386.24 dt7.s28388.24{- value -} dt8.s28389.24{- value -} exit.s28392.3 exit1.s28400.3 exit2.s28408.3 exit3.s28448.3 ipv1.s28614.2{- value -} lvl3.s28391.47 ww.s28606.2{- value -} ww1.s28607.2{- value -}
  letS lwild3.s28712.0 = "geWord#" @ ipv1.s28614.2{- value -} 224u
  case lwild3.s28712.0{- value -} of
    _ ->
        "$j2.s28619.0"
    1 ->
        letS lwild4.s28713.0 = "leWord#" @ ipv1.s28614.2{- value -} 239u
        case lwild4.s28713.0{- value -} of
          _ ->
              "$j2.s28619.0"
          1 ->
              letS ds3.s28714.0 = "-#" @ dt4.s28383.47{- value -} ww.s28606.2{- value -}
              case ds3.s28714.0{- value -} of
                _ ->
                    letS sat.s28715.0 = "+#" @ ww.s28606.2{- value -} 1
                         sat.s28716.0 = "plusAddr#" @ dt.s28378.47{- value -} sat.s28715.0{- value -}
                         ds4.s28717.0 = "readWord8OffAddr#" @ sat.s28716.0{- value -} 0
                    case ds4.s28717.0{- value -} of
                      ("GHC.Prim.Unit#" ipv3.s28719.0) ->
                          letS s'1.s28720.0 = "touch#" @ dt1.s28379.47
                          case s'1.s28720.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s28721.0 = "+#" @ ww.s28606.2{- value -} 2
                                     sat.s28722.0 = "plusAddr#" @ dt.s28378.47{- value -} sat.s28721.0{- value -}
                                     ds5.s28723.0 = "readWord8OffAddr#" @ sat.s28722.0{- value -} 0
                                case ds5.s28723.0{- value -} of
                                  ("GHC.Prim.Unit#" ipv5.s28725.0) ->
                                      letS s'2.s28726.0 = "touch#" @ dt1.s28379.47
                                      case s'2.s28726.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            let "$j3.s28727.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.55 @ "$wloop.s28605.3" dt5.s28385.24{- value -} dt6.s28386.24 ipv1.s28614.2{- value -} ipv3.s28719.0{- value -} ipv5.s28725.0{- value -} ww.s28606.2{- value -} ww1.s28607.2{- value -}
                                                "$j4.s28743.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.63 @ "$j3.s28727.0" ds.s28380.47 ds1.s28387.24 dt.s28378.47{- value -} dt1.s28379.47 dt2.s28381.47{- value -} dt4.s28383.47{- value -} dt5.s28385.24{- value -} dt6.s28386.24 dt7.s28388.24{- value -} dt8.s28389.24{- value -} ipv1.s28614.2{- value -} ipv3.s28719.0{- value -} ipv5.s28725.0{- value -} lvl3.s28391.47 ww.s28606.2{- value -} ww1.s28607.2{- value -}
                                            letS wild2.s28782.0 = ipv1.s28614.2{- value -}
                                            case wild2.s28782.0{- value -} of
                                              _ ->
                                                  "$j4.s28743.0"
                                              224u ->
                                                  letS lwild5.s28783.0 = "geWord#" @ ipv3.s28719.0{- value -} 160u
                                                  case lwild5.s28783.0{- value -} of
                                                    _ ->
                                                        "$j4.s28743.0"
                                                    1 ->
                                                        letS lwild6.s28784.0 = "leWord#" @ ipv3.s28719.0{- value -} 191u
                                                        case lwild6.s28784.0{- value -} of
                                                          _ ->
                                                              "$j4.s28743.0"
                                                          1 ->
                                                              letS lwild7.s28785.0 = "geWord#" @ ipv5.s28725.0{- value -} 128u
                                                              case lwild7.s28785.0{- value -} of
                                                                _ ->
                                                                    "$j4.s28743.0"
                                                                1 ->
                                                                    letS lwild8.s28786.0 = "leWord#" @ ipv5.s28725.0{- value -} 191u
                                                                    case lwild8.s28786.0{- value -} of
                                                                      _ ->
                                                                          "$j4.s28743.0"
                                                                      1 ->
                                                                          "$j3.s28727.0"
                1 ->
                    exit4.s28508.3 @ ww.s28606.2{- value -} ww1.s28607.2{- value -} #"GHC.Prim.void#"
                2 ->
                    exit5.s28516.3 @ ww.s28606.2{- value -} ww1.s28607.2{- value -} ipv1.s28614.2{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF8.mkUTF4.closure.65 "$wloop.s28605.2" ds.s28380.46 ds1.s28387.23 dt.s28378.46 dt1.s28379.46 dt2.s28381.46 dt4.s28383.46 dt5.s28385.23 dt6.s28386.23 dt7.s28388.23 dt8.s28389.23 exit.s28392.2 exit1.s28400.2 exit2.s28408.2 exit3.s28448.2 exit4.s28508.2 exit5.s28516.2 exit6.s28565.2 exit7.s28573.2 exit8.s28581.2 ipv1.s28614.1 lvl3.s28391.46 ww.s28606.1 ww1.s28607.1 =
  let "$j1.s28618.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.64 @ "$wloop.s28605.2" ds.s28380.46 ds1.s28387.23 dt.s28378.46{- value -} dt1.s28379.46 dt2.s28381.46{- value -} dt4.s28383.46{- value -} dt5.s28385.23{- value -} dt6.s28386.23 dt7.s28388.23{- value -} dt8.s28389.23{- value -} exit.s28392.2 exit1.s28400.2 exit2.s28408.2 exit3.s28448.2 exit4.s28508.2 exit5.s28516.2 ipv1.s28614.1{- value -} lvl3.s28391.46 ww.s28606.1{- value -} ww1.s28607.1{- value -}
  letS lwild3.s28787.0 = "geWord#" @ ipv1.s28614.1{- value -} 194u
  case lwild3.s28787.0{- value -} of
    _ ->
        "$j1.s28618.0"
    1 ->
        letS lwild4.s28788.0 = "leWord#" @ ipv1.s28614.1{- value -} 223u
        case lwild4.s28788.0{- value -} of
          _ ->
              "$j1.s28618.0"
          1 ->
              letS sat.s28789.0 = "-#" @ dt4.s28383.46{- value -} ww.s28606.1{- value -}
                   lwild5.s28790.0 = "<#" @ sat.s28789.0{- value -} 2
              case lwild5.s28790.0{- value -} of
                _ ->
                    letS sat.s28791.0 = "+#" @ ww.s28606.1{- value -} 1
                         sat.s28792.0 = "plusAddr#" @ dt.s28378.46{- value -} sat.s28791.0{- value -}
                         ds3.s28793.0 = "readWord8OffAddr#" @ sat.s28792.0{- value -} 0
                    case ds3.s28793.0{- value -} of
                      ("GHC.Prim.Unit#" ipv3.s28795.0) ->
                          letS s'1.s28796.0 = "touch#" @ dt1.s28379.46
                          case s'1.s28796.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS lwild6.s28797.0 = "ltWord#" @ ipv3.s28795.0{- value -} 128u
                                case lwild6.s28797.0{- value -} of
                                  _ ->
                                      letS lwild7.s28798.0 = "geWord#" @ ipv3.s28795.0{- value -} 192u
                                      case lwild7.s28798.0{- value -} of
                                        _ ->
                                            letS sat.s28802.0 = "word2Int#" @ ipv3.s28795.0{- value -}
                                                 sat.s28799.0 = "word2Int#" @ ipv1.s28614.1{- value -}
                                                 sat.s28800.0 = "-#" @ sat.s28799.0{- value -} 192
                                                 sat.s28801.0 = "uncheckedIShiftL#" @ sat.s28800.0{- value -} 6
                                                 sat.s28803.0 = "+#" @ sat.s28801.0{- value -} sat.s28802.0{- value -}
                                                 sat.s28804.0 = "-#" @ sat.s28803.0{- value -} 128
                                                 sat.s28805.0 = "chr#" @ sat.s28804.0{- value -}
                                                 s2.s28806.0 = "writeWideCharOffAddr#" @ dt5.s28385.23{- value -} ww1.s28607.1{- value -} sat.s28805.0{- value -}
                                            case s2.s28806.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'2.s28807.0 = "touch#" @ dt6.s28386.23
                                                  case s'2.s28807.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s28809.0 = "+#" @ ww1.s28607.1{- value -} 1
                                                             sat.s28808.0 = "+#" @ ww.s28606.1{- value -} 2
                                                        "$wloop.s28605.2" @ sat.s28808.0{- value -} sat.s28809.0{- value -} #"GHC.Prim.void#"
                                        1 ->
                                            exit6.s28565.2 @ ww.s28606.1{- value -} ww1.s28607.1{- value -} #"GHC.Prim.void#"
                                  1 ->
                                      exit7.s28573.2 @ ww.s28606.1{- value -} ww1.s28607.1{- value -} #"GHC.Prim.void#"
                1 ->
                    exit8.s28581.2 @ ww.s28606.1{- value -} ww1.s28607.1{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF8.mkUTF4.closure.66 ds.s28380.66 dt.s28378.66 dt1.s28379.66 dt2.s28381.66 dt4.s28383.66 lvl3.s28391.66 ww.s28606.23 =
  letS lwild5.s28812.0 = "==#" @ ww.s28606.23{- value -} dt4.s28383.66{- value -}
  case lwild5.s28812.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.66{- value -} dt1.s28379.66 ds.s28380.66 dt2.s28381.66{- value -} ww.s28606.23{- value -} dt4.s28383.66{- value -}]
    1 ->
        lvl3.s28391.66

GHC.IO.Encoding.UTF8.mkUTF4.closure.67 "$wloop.s28605.1" ds.s28380.45 ds1.s28387.22 dt.s28378.45 dt1.s28379.45 dt2.s28381.45 dt4.s28383.45 dt5.s28385.22 dt6.s28386.22 dt7.s28388.22 dt8.s28389.22 exit.s28392.1 exit1.s28400.1 exit10.s28597.1 exit2.s28408.1 exit3.s28448.1 exit4.s28508.1 exit5.s28516.1 exit6.s28565.1 exit7.s28573.1 exit8.s28581.1 exit9.s28589.1 lvl3.s28391.45 ww.s28606.0 ww1.s28607.0 void.040.1357 =
  letS lwild.s28609.0 = ">=#" @ ww1.s28607.0{- value -} dt7.s28388.22{- value -}
  case lwild.s28609.0{- value -} of
    _ ->
        letS lwild1.s28610.0 = ">=#" @ ww.s28606.0{- value -} dt4.s28383.45{- value -}
        case lwild1.s28610.0{- value -} of
          _ ->
              letS sat.s28611.0 = "plusAddr#" @ dt.s28378.45{- value -} ww.s28606.0{- value -}
                   ds2.s28612.0 = "readWord8OffAddr#" @ sat.s28611.0{- value -} 0
              case ds2.s28612.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s28614.0) ->
                    letS s'.s28615.0 = "touch#" @ dt1.s28379.45
                    case s'.s28615.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS lwild2.s28616.0 = "leWord#" @ ipv1.s28614.0{- value -} 127u
                          case lwild2.s28616.0{- value -} of
                            _ ->
                                let "$j.s28617.0" = GHC.IO.Encoding.UTF8.mkUTF4.closure.65 @ "$wloop.s28605.1" ds.s28380.45 ds1.s28387.22 dt.s28378.45{- value -} dt1.s28379.45 dt2.s28381.45{- value -} dt4.s28383.45{- value -} dt5.s28385.22{- value -} dt6.s28386.22 dt7.s28388.22{- value -} dt8.s28389.22{- value -} exit.s28392.1 exit1.s28400.1 exit2.s28408.1 exit3.s28448.1 exit4.s28508.1 exit5.s28516.1 exit6.s28565.1 exit7.s28573.1 exit8.s28581.1 ipv1.s28614.0{- value -} lvl3.s28391.45 ww.s28606.0{- value -} ww1.s28607.0{- value -}
                                letS lwild3.s28810.0 = "geWord#" @ ipv1.s28614.0{- value -} 192u
                                case lwild3.s28810.0{- value -} of
                                  _ ->
                                      "$j.s28617.0"
                                  1 ->
                                      letS lwild4.s28811.0 = "leWord#" @ ipv1.s28614.0{- value -} 193u
                                      case lwild4.s28811.0{- value -} of
                                        _ ->
                                            "$j.s28617.0"
                                        1 ->
                                            let sat.s28814.0 = [GHC.IO.Buffer.Buffer dt5.s28385.22{- value -} dt6.s28386.22 ds1.s28387.22 dt7.s28388.22{- value -} dt8.s28389.22{- value -} ww1.s28607.0{- value -}]
                                                sat.s28813.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.66 @ ds.s28380.45 dt.s28378.45{- value -} dt1.s28379.45 dt2.s28381.45{- value -} dt4.s28383.45{- value -} lvl3.s28391.45 ww.s28606.0{- value -}
                                                sat.s28815.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28813.0 sat.s28814.0]
                                            ["GHC.Prim.Unit#" sat.s28815.0]
                            1 ->
                                letS sat.s28816.0 = "word2Int#" @ ipv1.s28614.0{- value -}
                                     sat.s28817.0 = "chr#" @ sat.s28816.0{- value -}
                                     s2.s28818.0 = "writeWideCharOffAddr#" @ dt5.s28385.22{- value -} ww1.s28607.0{- value -} sat.s28817.0{- value -}
                                case s2.s28818.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'1.s28819.0 = "touch#" @ dt6.s28386.22
                                      case s'1.s28819.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s28821.0 = "+#" @ ww1.s28607.0{- value -} 1
                                                 sat.s28820.0 = "+#" @ ww.s28606.0{- value -} 1
                                            "$wloop.s28605.1" @ sat.s28820.0{- value -} sat.s28821.0{- value -} #"GHC.Prim.void#"
          1 ->
              exit9.s28589.1 @ ww.s28606.0{- value -} ww1.s28607.0{- value -} #"GHC.Prim.void#"
    1 ->
        exit10.s28597.1 @ ww.s28606.0{- value -} ww1.s28607.0{- value -} #"GHC.Prim.void#"

GHC.IO.Encoding.UTF8.mkUTF4.closure.7 ds.s28380.11 dt.s28378.11 dt1.s28379.11 dt2.s28381.11 dt4.s28383.11 lvl3.s28391.11 ww.s28409.6 =
  letS lwild1.s28432.0 = "==#" @ ww.s28409.6{- value -} dt4.s28383.11{- value -}
  case lwild1.s28432.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.11{- value -} dt1.s28379.11 ds.s28380.11 dt2.s28381.11{- value -} ww.s28409.6{- value -} dt4.s28383.11{- value -}]
    1 ->
        lvl3.s28391.11

GHC.IO.Encoding.UTF8.mkUTF4.closure.8 ds.s28380.12 dt.s28378.12 dt1.s28379.12 dt2.s28381.12 dt4.s28383.12 lvl3.s28391.12 ww.s28409.7 =
  letS lwild2.s28437.0 = "==#" @ ww.s28409.7{- value -} dt4.s28383.12{- value -}
  case lwild2.s28437.0{- value -} of
    _ ->
        [GHC.IO.Buffer.Buffer dt.s28378.12{- value -} dt1.s28379.12 ds.s28380.12 dt2.s28381.12{- value -} ww.s28409.7{- value -} dt4.s28383.12{- value -}]
    1 ->
        lvl3.s28391.12

GHC.IO.Encoding.UTF8.mkUTF4.closure.9 "$j.s28419.2" ds.s28380.9 ds1.s28387.6 dt.s28378.9 dt1.s28379.9 dt2.s28381.9 dt4.s28383.9 dt5.s28385.6 dt6.s28386.6 dt7.s28388.6 dt8.s28389.6 ipv1.s28411.2 ipv2.s28417.2 lvl3.s28391.9 ww.s28409.4 ww1.s28410.3 =
  letS wild2.s28426.0 = ipv1.s28411.2{- value -}
  case wild2.s28426.0{- value -} of
    _ ->
        let sat.s28429.0 = [GHC.IO.Buffer.Buffer dt5.s28385.6{- value -} dt6.s28386.6 ds1.s28387.6 dt7.s28388.6{- value -} dt8.s28389.6{- value -} ww1.s28410.3{- value -}]
            sat.s28428.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.6 @ ds.s28380.9 dt.s28378.9{- value -} dt1.s28379.9 dt2.s28381.9{- value -} dt4.s28383.9{- value -} lvl3.s28391.9 ww.s28409.4{- value -}
            sat.s28430.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28428.0 sat.s28429.0]
        ["GHC.Prim.Unit#" sat.s28430.0]
    244u ->
        letS lwild.s28431.0 = "geWord#" @ ipv2.s28417.2{- value -} 128u
        case lwild.s28431.0{- value -} of
          _ ->
              let sat.s28434.0 = [GHC.IO.Buffer.Buffer dt5.s28385.6{- value -} dt6.s28386.6 ds1.s28387.6 dt7.s28388.6{- value -} dt8.s28389.6{- value -} ww1.s28410.3{- value -}]
                  sat.s28433.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.7 @ ds.s28380.9 dt.s28378.9{- value -} dt1.s28379.9 dt2.s28381.9{- value -} dt4.s28383.9{- value -} lvl3.s28391.9 ww.s28409.4{- value -}
                  sat.s28435.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28433.0 sat.s28434.0]
              ["GHC.Prim.Unit#" sat.s28435.0]
          1 ->
              letS lwild1.s28436.0 = "leWord#" @ ipv2.s28417.2{- value -} 143u
              case lwild1.s28436.0{- value -} of
                _ ->
                    let sat.s28439.0 = [GHC.IO.Buffer.Buffer dt5.s28385.6{- value -} dt6.s28386.6 ds1.s28387.6 dt7.s28388.6{- value -} dt8.s28389.6{- value -} ww1.s28410.3{- value -}]
                        sat.s28438.0 = GHC.IO.Encoding.UTF8.mkUTF4.closure.8 @ ds.s28380.9 dt.s28378.9{- value -} dt1.s28379.9 dt2.s28381.9{- value -} dt4.s28383.9{- value -} lvl3.s28391.9 ww.s28409.4{- value -}
                        sat.s28440.0 = ["GHC.Tuple.(,,)" GHC.IO.Encoding.Types.InvalidSequence sat.s28438.0 sat.s28439.0]
                    ["GHC.Prim.Unit#" sat.s28440.0]
                1 ->
                    "$j.s28419.2"

GHC.IO.Encoding.UTF8.mkUTF5 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.UTF8.mkUTF6{- value -}

GHC.IO.Encoding.UTF8.mkUTF6 =
  #"UTF-8"

GHC.IO.Encoding.UTF8.mkUTF8 cfm.s28934.0 =
  let sat.s28942.0 = GHC.IO.Encoding.UTF8.mkUTF8.closure.1 @ cfm.s28934.0
      sat.s28938.0 = GHC.IO.Encoding.UTF8.mkUTF8.closure.3 @ cfm.s28934.0
  [GHC.IO.Encoding.Types.TextEncoding GHC.IO.Encoding.UTF8.mkUTF5 sat.s28938.0 sat.s28942.0]

GHC.IO.Encoding.UTF8.mkUTF8.closure.0 cfm.s28934.2 eta.B3.342 eta.B2.791 void.X57.1 =
  GHC.IO.Encoding.Failure.recoverEncode1 @ cfm.s28934.2 eta.B3.342 eta.B2.791 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF8.mkUTF8.closure.1 cfm.s28934.1 void.040.1362 =
  let sat.s28940.0 = GHC.IO.Encoding.UTF8.mkUTF8.closure.0 @ cfm.s28934.1
      sat.s28941.0 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF8.mkUTF1 sat.s28940.0 GHC.IO.Encoding.UTF8.mkUTF3 GHC.IO.Encoding.UTF8.mkUTF3 GHC.IO.Encoding.UTF8.mkUTF2]
  ["GHC.Prim.Unit#" sat.s28941.0]

GHC.IO.Encoding.UTF8.mkUTF8.closure.2 cfm.s28934.4 eta.B3.343 eta.B2.792 void.X58.4 =
  GHC.IO.Encoding.Failure.recoverDecode1 @ cfm.s28934.4 eta.B3.343 eta.B2.792 #"GHC.Prim.void#"

GHC.IO.Encoding.UTF8.mkUTF8.closure.3 cfm.s28934.3 void.040.1363 =
  let sat.s28936.0 = GHC.IO.Encoding.UTF8.mkUTF8.closure.2 @ cfm.s28934.3
      sat.s28937.0 = [GHC.IO.Encoding.Types.BufferCodec GHC.IO.Encoding.UTF8.mkUTF4 sat.s28936.0 GHC.IO.Encoding.UTF8.mkUTF3 GHC.IO.Encoding.UTF8.mkUTF3 GHC.IO.Encoding.UTF8.mkUTF2]
  ["GHC.Prim.Unit#" sat.s28937.0]

GHC.IO.Encoding.UTF8.utf1 void.040.1367 =
  ["GHC.Prim.Unit#" GHC.IO.Encoding.UTF8.lvl2]

GHC.IO.Encoding.UTF8.utf2 input.s28961.0 output.s28962.0 void.040.1366 =
  letS wild.s28964.0 = input.s28961.0
  case wild.s28964.0 of
    (GHC.IO.Buffer.Buffer dt.s28965.0 dt1.s28966.0 ds.s28967.0 dt2.s28968.0 dt3.s28969.0 dt4.s28970.0) ->
        letS wild1.s28971.0 = output.s28962.0
        case wild1.s28971.0 of
          (GHC.IO.Buffer.Buffer dt5.s28972.0 dt6.s28973.0 ds1.s28974.0 dt7.s28975.0 dt8.s28976.0 dt9.s28977.0) ->
              letS ds2.s28978.0 = "readWideCharOffAddr#" @ dt.s28965.0{- value -} dt3.s28969.0{- value -}
              case ds2.s28978.0{- value -} of
                ("GHC.Prim.Unit#" ipv1.s28980.0) ->
                    letS s'.s28981.0 = "touch#" @ dt1.s28966.0
                    case s'.s28981.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          "raiseIO#" @ GHC.IO.Encoding.Failure.recoverEncode2

GHC.IO.Encoding.UTF8.utf3 void.040.1365 =
  ["GHC.Prim.Unit#" GHC.IO.Encoding.UTF8.lvl1]

GHC.IO.Encoding.UTF8.utf8 =
  [GHC.IO.Encoding.Types.TextEncoding GHC.IO.Encoding.UTF8.mkUTF5 GHC.IO.Encoding.UTF8.utf3 GHC.IO.Encoding.UTF8.utf1]

GHC.IO.Encoding.getFileSystemEncoding10 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding26 GHC.IO.Encoding.getFileSystemEncoding11]

GHC.IO.Encoding.getFileSystemEncoding11 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding24 GHC.IO.Encoding.getFileSystemEncoding12]

GHC.IO.Encoding.getFileSystemEncoding12 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding22 GHC.IO.Encoding.getFileSystemEncoding13]

GHC.IO.Encoding.getFileSystemEncoding13 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding20 GHC.IO.Encoding.getFileSystemEncoding14]

GHC.IO.Encoding.getFileSystemEncoding14 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding18 GHC.IO.Encoding.getFileSystemEncoding15]

GHC.IO.Encoding.getFileSystemEncoding15 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding16 "GHC.Types.[]"]

GHC.IO.Encoding.getFileSystemEncoding16 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding17{- value -}

GHC.IO.Encoding.getFileSystemEncoding17 =
  #"csISOLatin1"

GHC.IO.Encoding.getFileSystemEncoding18 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding19{- value -}

GHC.IO.Encoding.getFileSystemEncoding19 =
  #"CP819"

GHC.IO.Encoding.getFileSystemEncoding20 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding21{- value -}

GHC.IO.Encoding.getFileSystemEncoding21 =
  #"IBM819"

GHC.IO.Encoding.getFileSystemEncoding22 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding23{- value -}

GHC.IO.Encoding.getFileSystemEncoding23 =
  #"l1"

GHC.IO.Encoding.getFileSystemEncoding24 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding25{- value -}

GHC.IO.Encoding.getFileSystemEncoding25 =
  #"latin1"

GHC.IO.Encoding.getFileSystemEncoding26 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding27{- value -}

GHC.IO.Encoding.getFileSystemEncoding27 =
  #"ISO-8859-1"

GHC.IO.Encoding.getFileSystemEncoding28 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding29{- value -}

GHC.IO.Encoding.getFileSystemEncoding29 =
  #"ISO_8859-1"

GHC.IO.Encoding.getFileSystemEncoding30 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding31{- value -}

GHC.IO.Encoding.getFileSystemEncoding31 =
  #"iso-ir-100"

GHC.IO.Encoding.getFileSystemEncoding32 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding33{- value -}

GHC.IO.Encoding.getFileSystemEncoding33 =
  #"ISO_8859-1:1987"

GHC.IO.Encoding.getFileSystemEncoding34 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding65 GHC.IO.Encoding.getFileSystemEncoding35]

GHC.IO.Encoding.getFileSystemEncoding35 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding63 GHC.IO.Encoding.getFileSystemEncoding36]

GHC.IO.Encoding.getFileSystemEncoding36 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding61 GHC.IO.Encoding.getFileSystemEncoding37]

GHC.IO.Encoding.getFileSystemEncoding37 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding59 GHC.IO.Encoding.getFileSystemEncoding38]

GHC.IO.Encoding.getFileSystemEncoding38 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding57 GHC.IO.Encoding.getFileSystemEncoding39]

GHC.IO.Encoding.getFileSystemEncoding39 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding55 GHC.IO.Encoding.getFileSystemEncoding40]

GHC.IO.Encoding.getFileSystemEncoding40 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding53 GHC.IO.Encoding.getFileSystemEncoding41]

GHC.IO.Encoding.getFileSystemEncoding41 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding51 GHC.IO.Encoding.getFileSystemEncoding42]

GHC.IO.Encoding.getFileSystemEncoding42 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding49 GHC.IO.Encoding.getFileSystemEncoding43]

GHC.IO.Encoding.getFileSystemEncoding43 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding47 GHC.IO.Encoding.getFileSystemEncoding44]

GHC.IO.Encoding.getFileSystemEncoding44 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding45 "GHC.Types.[]"]

GHC.IO.Encoding.getFileSystemEncoding45 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding46{- value -}

GHC.IO.Encoding.getFileSystemEncoding46 =
  #"ISO646-US"

GHC.IO.Encoding.getFileSystemEncoding47 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding48{- value -}

GHC.IO.Encoding.getFileSystemEncoding48 =
  #"ASCII"

GHC.IO.Encoding.getFileSystemEncoding49 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding50{- value -}

GHC.IO.Encoding.getFileSystemEncoding5 cfm.s20758.0 enc.s20759.0 void.040.1156 =
  letS ds.s20761.0 = GHC.IO.Encoding.getFileSystemEncoding_go @ enc.s20759.0
       wild.s20762.0 = GHC.Base.eqString @ ds.s20761.0 GHC.IO.Encoding.getFileSystemEncoding79
  case wild.s20762.0 of
    (GHC.Types.False) ->
        letS wild1.s20763.0 = GHC.Base.eqString @ ds.s20761.0 GHC.IO.Encoding.getFileSystemEncoding77
        case wild1.s20763.0 of
          (GHC.Types.False) ->
              letS wild2.s20764.0 = GHC.Base.eqString @ ds.s20761.0 GHC.IO.Encoding.getFileSystemEncoding75
              case wild2.s20764.0 of
                (GHC.Types.False) ->
                    letS wild3.s20765.0 = GHC.Base.eqString @ ds.s20761.0 GHC.IO.Encoding.getFileSystemEncoding73
                    case wild3.s20765.0 of
                      (GHC.Types.False) ->
                          letS wild4.s20766.0 = GHC.Base.eqString @ ds.s20761.0 GHC.IO.Encoding.getFileSystemEncoding71
                          case wild4.s20766.0 of
                            (GHC.Types.False) ->
                                letS wild5.s20767.0 = GHC.Base.eqString @ ds.s20761.0 GHC.IO.Encoding.getFileSystemEncoding69
                                case wild5.s20767.0 of
                                  (GHC.Types.False) ->
                                      letS wild6.s20768.0 = GHC.Base.eqString @ ds.s20761.0 GHC.IO.Encoding.getFileSystemEncoding67
                                      case wild6.s20768.0 of
                                        (GHC.Types.False) ->
                                            letS wild7.s20769.0 = GHC.List.elem @ "GHC.Classes.$fEq[]_$s$fEq[]1" enc.s20759.0 GHC.IO.Encoding.getFileSystemEncoding34
                                            case wild7.s20769.0 of
                                              (GHC.Types.False) ->
                                                  letS wild8.s20770.0 = GHC.List.elem @ "GHC.Classes.$fEq[]_$s$fEq[]1" enc.s20759.0 GHC.IO.Encoding.getFileSystemEncoding7
                                                  case wild8.s20770.0 of
                                                    (GHC.Types.False) ->
                                                        letS ds1.s20771.0 = GHC.IO.Encoding.Iconv.iconvEncoding2 @ cfm.s20758.0 enc.s20759.0 #"GHC.Prim.void#"
                                                        case ds1.s20771.0 of
                                                          ("GHC.Prim.Unit#" ipv1.s20773.0) ->
                                                              letS wild9.s20774.0 = ipv1.s20773.0
                                                              case wild9.s20774.0 of
                                                                (GHC.Maybe.Nothing) ->
                                                                    GHC.IO.Encoding.getFileSystemEncoding6 @ #"GHC.Prim.void#" enc.s20759.0 cfm.s20758.0
                                                                (GHC.Maybe.Just e.s20775.0) ->
                                                                    ["GHC.Prim.Unit#" e.s20775.0]
                                                    (GHC.Types.True) ->
                                                        let sat.s20776.0 = GHC.IO.Encoding.getFileSystemEncoding5.closure.0 @ cfm.s20758.0
                                                        ["GHC.Prim.Unit#" sat.s20776.0]
                                              (GHC.Types.True) ->
                                                  let sat.s20777.0 = GHC.IO.Encoding.getFileSystemEncoding5.closure.1 @ cfm.s20758.0
                                                  ["GHC.Prim.Unit#" sat.s20777.0]
                                        (GHC.Types.True) ->
                                            let sat.s20778.0 = GHC.IO.Encoding.getFileSystemEncoding5.closure.2 @ cfm.s20758.0
                                            ["GHC.Prim.Unit#" sat.s20778.0]
                                  (GHC.Types.True) ->
                                      let sat.s20779.0 = GHC.IO.Encoding.getFileSystemEncoding5.closure.3 @ cfm.s20758.0
                                      ["GHC.Prim.Unit#" sat.s20779.0]
                            (GHC.Types.True) ->
                                let sat.s20780.0 = GHC.IO.Encoding.getFileSystemEncoding5.closure.4 @ cfm.s20758.0
                                ["GHC.Prim.Unit#" sat.s20780.0]
                      (GHC.Types.True) ->
                          let sat.s20781.0 = GHC.IO.Encoding.getFileSystemEncoding5.closure.5 @ cfm.s20758.0
                          ["GHC.Prim.Unit#" sat.s20781.0]
                (GHC.Types.True) ->
                    let sat.s20782.0 = GHC.IO.Encoding.getFileSystemEncoding5.closure.6 @ cfm.s20758.0
                    ["GHC.Prim.Unit#" sat.s20782.0]
          (GHC.Types.True) ->
              let sat.s20783.0 = GHC.IO.Encoding.getFileSystemEncoding5.closure.7 @ cfm.s20758.0
              ["GHC.Prim.Unit#" sat.s20783.0]
    (GHC.Types.True) ->
        let sat.s20784.0 = GHC.IO.Encoding.getFileSystemEncoding5.closure.8 @ cfm.s20758.0
        ["GHC.Prim.Unit#" sat.s20784.0]

GHC.IO.Encoding.getFileSystemEncoding5.closure.0 cfm.s20758.1 =
  GHC.IO.Encoding.Latin1.mkLatin1_checked @ cfm.s20758.1

GHC.IO.Encoding.getFileSystemEncoding5.closure.1 cfm.s20758.2 =
  GHC.IO.Encoding.Latin1.mkAscii @ cfm.s20758.2

GHC.IO.Encoding.getFileSystemEncoding5.closure.2 cfm.s20758.3 =
  GHC.IO.Encoding.UTF8.mkUTF8 @ cfm.s20758.3

GHC.IO.Encoding.getFileSystemEncoding5.closure.3 cfm.s20758.4 =
  GHC.IO.Encoding.UTF32.mkUTF32le @ cfm.s20758.4

GHC.IO.Encoding.getFileSystemEncoding5.closure.4 cfm.s20758.5 =
  GHC.IO.Encoding.UTF32.mkUTF32be @ cfm.s20758.5

GHC.IO.Encoding.getFileSystemEncoding5.closure.5 cfm.s20758.6 =
  GHC.IO.Encoding.UTF32.mkUTF32 @ cfm.s20758.6

GHC.IO.Encoding.getFileSystemEncoding5.closure.6 cfm.s20758.7 =
  GHC.IO.Encoding.UTF16.mkUTF16le @ cfm.s20758.7

GHC.IO.Encoding.getFileSystemEncoding5.closure.7 cfm.s20758.8 =
  GHC.IO.Encoding.UTF16.mkUTF16be @ cfm.s20758.8

GHC.IO.Encoding.getFileSystemEncoding5.closure.8 cfm.s20758.9 =
  GHC.IO.Encoding.UTF16.mkUTF16 @ cfm.s20758.9

GHC.IO.Encoding.getFileSystemEncoding50 =
  #"csASCII"

GHC.IO.Encoding.getFileSystemEncoding51 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding52{- value -}

GHC.IO.Encoding.getFileSystemEncoding52 =
  #"cp367"

GHC.IO.Encoding.getFileSystemEncoding53 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding54{- value -}

GHC.IO.Encoding.getFileSystemEncoding54 =
  #"IBM367"

GHC.IO.Encoding.getFileSystemEncoding55 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding56{- value -}

GHC.IO.Encoding.getFileSystemEncoding56 =
  #"us"

GHC.IO.Encoding.getFileSystemEncoding57 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding58{- value -}

GHC.IO.Encoding.getFileSystemEncoding58 =
  #"US-ASCII"

GHC.IO.Encoding.getFileSystemEncoding59 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding60{- value -}

GHC.IO.Encoding.getFileSystemEncoding6 void.040.1155 enc.s20753.0 cfm.s20754.0 =
  let sat.s20756.0 = GHC.IO.Encoding.getFileSystemEncoding6.closure.0 @ cfm.s20754.0
  letS sat.s20757.0 = "GHC.Base.++" @ enc.s20753.0 sat.s20756.0
  GHC.IO.Encoding.mkTextEncoding2 @ sat.s20757.0 #"GHC.Prim.void#"

GHC.IO.Encoding.getFileSystemEncoding6.closure.0 cfm.s20754.1 =
  letS wild.s20755.0 = cfm.s20754.1
  case wild.s20755.0 of
    (GHC.IO.Encoding.Failure.ErrorOnCodingFailure) ->
        ["GHC.Types.[]"]
    (GHC.IO.Encoding.Failure.IgnoreCodingFailure) ->
        GHC.IO.Encoding.Failure.codingFailureModeSuffix5
    (GHC.IO.Encoding.Failure.TransliterateCodingFailure) ->
        GHC.IO.Encoding.Failure.codingFailureModeSuffix3
    (GHC.IO.Encoding.Failure.RoundtripFailure) ->
        GHC.IO.Encoding.Failure.codingFailureModeSuffix1

GHC.IO.Encoding.getFileSystemEncoding60 =
  #"ISO_646.irv:1991"

GHC.IO.Encoding.getFileSystemEncoding61 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding62{- value -}

GHC.IO.Encoding.getFileSystemEncoding62 =
  #"ANSI_X3.4-1986"

GHC.IO.Encoding.getFileSystemEncoding63 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding64{- value -}

GHC.IO.Encoding.getFileSystemEncoding64 =
  #"iso-ir-6"

GHC.IO.Encoding.getFileSystemEncoding65 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding66{- value -}

GHC.IO.Encoding.getFileSystemEncoding66 =
  #"ANSI_X3.4-1968"

GHC.IO.Encoding.getFileSystemEncoding67 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding68{- value -}

GHC.IO.Encoding.getFileSystemEncoding68 =
  #"UTF8"

GHC.IO.Encoding.getFileSystemEncoding69 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding70{- value -}

GHC.IO.Encoding.getFileSystemEncoding7 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding32 GHC.IO.Encoding.getFileSystemEncoding8]

GHC.IO.Encoding.getFileSystemEncoding70 =
  #"UTF32LE"

GHC.IO.Encoding.getFileSystemEncoding71 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding72{- value -}

GHC.IO.Encoding.getFileSystemEncoding72 =
  #"UTF32BE"

GHC.IO.Encoding.getFileSystemEncoding73 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding74{- value -}

GHC.IO.Encoding.getFileSystemEncoding74 =
  #"UTF32"

GHC.IO.Encoding.getFileSystemEncoding75 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding76{- value -}

GHC.IO.Encoding.getFileSystemEncoding76 =
  #"UTF16LE"

GHC.IO.Encoding.getFileSystemEncoding77 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding78{- value -}

GHC.IO.Encoding.getFileSystemEncoding78 =
  #"UTF16BE"

GHC.IO.Encoding.getFileSystemEncoding79 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.getFileSystemEncoding80{- value -}

GHC.IO.Encoding.getFileSystemEncoding8 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding30 GHC.IO.Encoding.getFileSystemEncoding9]

GHC.IO.Encoding.getFileSystemEncoding80 =
  #"UTF16"

GHC.IO.Encoding.getFileSystemEncoding9 =
  [GHC.Types.: GHC.IO.Encoding.getFileSystemEncoding28 GHC.IO.Encoding.getFileSystemEncoding10]

GHC.IO.Encoding.getFileSystemEncoding_go ds.s20735.0 =
  letS wild.s20736.0 = ds.s20735.0
  case wild.s20736.0 of
    ("GHC.Types.[]") ->
        ["GHC.Types.[]"]
    (GHC.Types.: y.s20737.0 ys.s20738.0) ->
        letS wild1.s20739.0 = y.s20737.0
        case wild1.s20739.0 of
          ("GHC.Types.C#" x.s20740.0) ->
              letS wild2.s20741.0 = x.s20740.0{- value -}
              case wild2.s20741.0{- value -} of
                _ ->
                    let sat.s20751.0 = GHC.IO.Encoding.getFileSystemEncoding_go.closure.0 @ ys.s20738.0
                        sat.s20750.0 = GHC.IO.Encoding.getFileSystemEncoding_go.closure.1 @ wild2.s20741.0{- value -}
                    [GHC.Types.: sat.s20750.0 sat.s20751.0]
                #'-' ->
                    GHC.IO.Encoding.getFileSystemEncoding_go @ ys.s20738.0

GHC.IO.Encoding.getFileSystemEncoding_go.closure.0 ys.s20738.1 =
  GHC.IO.Encoding.getFileSystemEncoding_go @ ys.s20738.1

GHC.IO.Encoding.getFileSystemEncoding_go.closure.1 wild2.s20741.1 =
  letS sat.s20743.0 = "ord#" @ wild2.s20741.1{- value -}
       wild3.s20744.0 = u_towupper @ sat.s20743.0{- value -}
  case wild3.s20744.0{- value -} of
    ("GHC.Prim.Unit#" ds2.s20746.0) ->
        letS sat.s20747.0 = "int2Word#" @ ds2.s20746.0{- value -}
             lwild.s20748.0 = "leWord#" @ sat.s20747.0{- value -} 1114111u
        case lwild.s20748.0{- value -} of
          _ ->
              "GHC.Char.$wlvl" @ ds2.s20746.0{- value -}
          1 ->
              letS sat.s20749.0 = "chr#" @ ds2.s20746.0{- value -}
              ["GHC.Types.C#" sat.s20749.0{- value -}]

GHC.IO.Encoding.getForeignEncoding =
  letS wild.s20820.0 = GHC.IO.Encoding.getForeignEncoding1
  case wild.s20820.0 of
    ("GHC.Tuple.(,)" getForeignEncoding5.s20821.0 setForeignEncoding1.s20822.0) ->
        getForeignEncoding5.s20821.0

GHC.IO.Encoding.getForeignEncoding1 =
  letS ds.s20817.0 = GHC.IO.Encoding.getForeignEncoding2 @ #"GHC.Prim.realWorld#"
  case ds.s20817.0 of
    ("GHC.Prim.Unit#" ipv1.s20819.0) ->
        ipv1.s20819.0

GHC.IO.Encoding.getForeignEncoding2 void.040.1160 =
  letS s'.s20806.0 = "noDuplicate#" @
  case s'.s20806.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS ds.s20807.0 = "newMutVar#" @ GHC.IO.Encoding.getForeignEncoding3
        case ds.s20807.0 of
          ("GHC.Prim.Unit#" ipv1.s20809.0) ->
              let sat.s20815.0 = GHC.IO.Encoding.getForeignEncoding2.closure.0 @ ipv1.s20809.0
                  sat.s20811.0 = GHC.IO.Encoding.getForeignEncoding2.closure.1 @ ipv1.s20809.0
                  sat.s20816.0 = ["GHC.Tuple.(,)" sat.s20811.0 sat.s20815.0]
              ["GHC.Prim.Unit#" sat.s20816.0]

GHC.IO.Encoding.getForeignEncoding2.closure.0 ipv1.s20809.1 val.s20812.0 void.040.1161 =
  letS "s2#.s20814.0" = "writeMutVar#" @ ipv1.s20809.1 val.s20812.0
  case "s2#.s20814.0"{- value -} of
    ("GHC.Prim.(##)") ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.getForeignEncoding2.closure.1 ipv1.s20809.2 void.040.1162 =
  "readMutVar#" @ ipv1.s20809.2

GHC.IO.Encoding.getForeignEncoding3 =
  letS ds.s20802.0 = GHC.IO.Encoding.getForeignEncoding4 @ #"GHC.Prim.realWorld#"
  case ds.s20802.0 of
    ("GHC.Prim.Unit#" ipv1.s20804.0) ->
        ipv1.s20804.0

GHC.IO.Encoding.getForeignEncoding4 void.040.1159 =
  letS s'.s20801.0 = "noDuplicate#" @
  case s'.s20801.0{- value -} of
    ("GHC.Prim.(##)") ->
        GHC.IO.Encoding.getFileSystemEncoding5 @ GHC.IO.Encoding.Failure.IgnoreCodingFailure GHC.IO.Encoding.Iconv.localeEncodingName #"GHC.Prim.void#"

GHC.IO.Encoding.getLocaleEncoding1 =
  letS ds.s20869.0 = GHC.IO.Encoding.getLocaleEncoding2 @ #"GHC.Prim.realWorld#"
  case ds.s20869.0 of
    ("GHC.Prim.Unit#" ipv1.s20871.0) ->
        ipv1.s20871.0

GHC.IO.Encoding.getLocaleEncoding2 void.040.1168 =
  letS s'.s20858.0 = "noDuplicate#" @
  case s'.s20858.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS ds.s20859.0 = "newMutVar#" @ GHC.IO.Encoding.initLocaleEncoding
        case ds.s20859.0 of
          ("GHC.Prim.Unit#" ipv1.s20861.0) ->
              let sat.s20867.0 = GHC.IO.Encoding.getLocaleEncoding2.closure.0 @ ipv1.s20861.0
                  sat.s20863.0 = GHC.IO.Encoding.getLocaleEncoding2.closure.1 @ ipv1.s20861.0
                  sat.s20868.0 = ["GHC.Tuple.(,)" sat.s20863.0 sat.s20867.0]
              ["GHC.Prim.Unit#" sat.s20868.0]

GHC.IO.Encoding.getLocaleEncoding2.closure.0 ipv1.s20861.1 val.s20864.0 void.040.1169 =
  letS "s2#.s20866.0" = "writeMutVar#" @ ipv1.s20861.1 val.s20864.0
  case "s2#.s20866.0"{- value -} of
    ("GHC.Prim.(##)") ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Encoding.getLocaleEncoding2.closure.1 ipv1.s20861.2 void.040.1170 =
  "readMutVar#" @ ipv1.s20861.2

GHC.IO.Encoding.initLocaleEncoding =
  letS ds.s20854.0 = GHC.IO.Encoding.initLocaleEncoding1 @ #"GHC.Prim.realWorld#"
  case ds.s20854.0 of
    ("GHC.Prim.Unit#" ipv1.s20856.0) ->
        ipv1.s20856.0

GHC.IO.Encoding.initLocaleEncoding1 void.040.1167 =
  letS s'.s20853.0 = "noDuplicate#" @
  case s'.s20853.0{- value -} of
    ("GHC.Prim.(##)") ->
        GHC.IO.Encoding.getFileSystemEncoding5 @ GHC.IO.Encoding.Failure.ErrorOnCodingFailure GHC.IO.Encoding.Iconv.localeEncodingName #"GHC.Prim.void#"

GHC.IO.Encoding.lvl =
  #"mkTextEncoding"

GHC.IO.Encoding.lvl1 =
  "GHC.CString.unpackCString#" @ GHC.IO.Encoding.lvl{- value -}

GHC.IO.Encoding.lvl2 =
  #"unknown encoding:"

GHC.IO.Encoding.mkTextEncoding2 e.s20730.0 void.040.1154 =
  let sat.s20734.0 = GHC.IO.Encoding.mkTextEncoding2.closure.1 @ e.s20730.0
  "raiseIO#" @ sat.s20734.0

GHC.IO.Encoding.mkTextEncoding2.closure.0 e.s20730.2 =
  "GHC.CString.unpackAppendCString#" @ GHC.IO.Encoding.lvl2{- value -} e.s20730.2

GHC.IO.Encoding.mkTextEncoding2.closure.1 e.s20730.1 =
  let sat.s20732.0 = GHC.IO.Encoding.mkTextEncoding2.closure.0 @ e.s20730.1
      sat.s20733.0 = [GHC.IO.Exception.IOError GHC.Maybe.Nothing GHC.IO.Exception.NoSuchThing GHC.IO.Encoding.lvl1 sat.s20732.0 GHC.Maybe.Nothing GHC.Maybe.Nothing]
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ sat.s20733.0

"GHC.IO.Exception.$fExceptionAllocationLimitExceeded6" =
  letS ww7.s42121.0 = "Data.Typeable.Internal.$wmkTrCon" @ 7698277271892269964u 12603180528693821542u "GHC.IO.Exception.$trModule" "GHC.IO.Exception.$fExceptionAllocationLimitExceeded7" 0 "GHC.Types.krep$*" "GHC.Types.[]"
  case ww7.s42121.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww8.s42122.0 ww9.s42123.0 ww10.s42124.0 ww11.s42125.0 ww12.s42126.0) ->
        [Data.Typeable.Internal.TrTyCon ww8.s42122.0{- value -} ww9.s42123.0{- value -} ww10.s42124.0 ww11.s42125.0 ww12.s42126.0]

"GHC.IO.Exception.$fExceptionAllocationLimitExceeded7" =
  [GHC.Types.TrNameS "GHC.IO.Exception.$fExceptionAllocationLimitExceeded8"{- value -}]

"GHC.IO.Exception.$fExceptionAllocationLimitExceeded8" =
  #"SomeAsyncException"

"GHC.IO.Exception.$fExceptionArrayException3" =
  #": "

"GHC.IO.Exception.$fExceptionAsyncException" =
  [GHC.Exception.Type.C:Exception "GHC.IO.Exception.$fExceptionAsyncException9" "GHC.IO.Exception.$fShowAsyncException" "GHC.IO.Exception.$fExceptionAsyncException_$ctoException" "GHC.IO.Exception.$fExceptionAsyncException_$cfromException" "GHC.IO.Exception.$fExceptionAsyncException_$cshow"]

"GHC.IO.Exception.$fExceptionAsyncException1" =
  "GHC.CString.unpackCString#" @ "GHC.IO.Exception.$fExceptionAsyncException2"{- value -}

"GHC.IO.Exception.$fExceptionAsyncException10" =
  [GHC.Types.TrNameS "GHC.IO.Exception.$fExceptionAsyncException11"{- value -}]

"GHC.IO.Exception.$fExceptionAsyncException11" =
  #"AsyncException"

"GHC.IO.Exception.$fExceptionAsyncException2" =
  #"user interrupt"

"GHC.IO.Exception.$fExceptionAsyncException3" =
  "GHC.CString.unpackCString#" @ "GHC.IO.Exception.$fExceptionAsyncException4"{- value -}

"GHC.IO.Exception.$fExceptionAsyncException4" =
  #"thread killed"

"GHC.IO.Exception.$fExceptionAsyncException5" =
  "GHC.CString.unpackCString#" @ "GHC.IO.Exception.$fExceptionAsyncException6"{- value -}

"GHC.IO.Exception.$fExceptionAsyncException6" =
  #"heap overflow"

"GHC.IO.Exception.$fExceptionAsyncException7" =
  "GHC.CString.unpackCString#" @ "GHC.IO.Exception.$fExceptionAsyncException8"{- value -}

"GHC.IO.Exception.$fExceptionAsyncException8" =
  #"stack overflow"

"GHC.IO.Exception.$fExceptionAsyncException9" =
  letS ww7.s42149.0 = "Data.Typeable.Internal.$wmkTrCon" @ 3223192752092240512u 6151543105744102738u "GHC.IO.Exception.$trModule" "GHC.IO.Exception.$fExceptionAsyncException10" 0 "GHC.Types.krep$*" "GHC.Types.[]"
  case ww7.s42149.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww8.s42150.0 ww9.s42151.0 ww10.s42152.0 ww11.s42153.0 ww12.s42154.0) ->
        [Data.Typeable.Internal.TrTyCon ww8.s42150.0{- value -} ww9.s42151.0{- value -} ww10.s42152.0 ww11.s42153.0 ww12.s42154.0]

"GHC.IO.Exception.$fExceptionAsyncException_$cfromException" eta.s42237.0 =
  letS wild.s42238.0 = eta.s42237.0
  case wild.s42238.0 of
    (GHC.Exception.Type.SomeException "$dException1.s42239.0" e2.s42240.0) ->
        letS sat.s42241.0 = "GHC.Exception.Type.$p1Exception" @ "$dException1.s42239.0"
             wild1.s42242.0 = Data.Typeable.Internal.sameTypeRep @ sat.s42241.0 "GHC.IO.Exception.$fExceptionAllocationLimitExceeded6"
        case wild1.s42242.0 of
          (GHC.Types.False) ->
              [GHC.Maybe.Nothing]
          (GHC.Types.True) ->
              letS wild2.s42243.0 = e2.s42240.0
              case wild2.s42243.0 of
                (GHC.IO.Exception.SomeAsyncException "$dException.s42244.0" a.s42245.0) ->
                    letS sat.s42246.0 = "GHC.Exception.Type.$p1Exception" @ "$dException.s42244.0"
                         wild3.s42247.0 = Data.Typeable.Internal.sameTypeRep @ sat.s42246.0 "GHC.IO.Exception.$fExceptionAsyncException9"
                    case wild3.s42247.0 of
                      (GHC.Types.False) ->
                          [GHC.Maybe.Nothing]
                      (GHC.Types.True) ->
                          [GHC.Maybe.Just a.s42245.0]

"GHC.IO.Exception.$fExceptionAsyncException_$cshow" x.s41451.0 =
  letS wild.s41452.0 = x.s41451.0
  case wild.s41452.0 of
    (GHC.IO.Exception.StackOverflow) ->
        "GHC.IO.Exception.$fExceptionAsyncException7"
    (GHC.IO.Exception.HeapOverflow) ->
        "GHC.IO.Exception.$fExceptionAsyncException5"
    (GHC.IO.Exception.ThreadKilled) ->
        "GHC.IO.Exception.$fExceptionAsyncException3"
    (GHC.IO.Exception.UserInterrupt) ->
        "GHC.IO.Exception.$fExceptionAsyncException1"

"GHC.IO.Exception.$fExceptionAsyncException_$ctoException" x.s42248.0 =
  let sat.s42249.0 = [GHC.IO.Exception.SomeAsyncException "GHC.IO.Exception.$fExceptionAsyncException" x.s42248.0]
  "GHC.IO.Exception.$fExceptionSomeAsyncException_$ctoException" @ sat.s42249.0

"GHC.IO.Exception.$fExceptionIOException" =
  [GHC.Exception.Type.C:Exception "GHC.IO.Exception.$fExceptionIOException4" "GHC.IO.Exception.$fShowIOException" "GHC.IO.Exception.$fExceptionIOException_$ctoException" "GHC.IO.Exception.$fExceptionIOException_$cfromException" "GHC.IO.Exception.$fExceptionIOException_$cshow"]

"GHC.IO.Exception.$fExceptionIOException1" =
  "GHC.CString.unpackCString#" @ "GHC.IO.Exception.$fExceptionArrayException3"{- value -}

"GHC.IO.Exception.$fExceptionIOException2" =
  #")"

"GHC.IO.Exception.$fExceptionIOException3" =
  #" ("

"GHC.IO.Exception.$fExceptionIOException4" =
  letS ww7.s42191.0 = "Data.Typeable.Internal.$wmkTrCon" @ 10434000377887324342u 16509375198449321302u "GHC.IO.Exception.$trModule" "GHC.IO.Exception.$fExceptionIOException5" 0 "GHC.Types.krep$*" "GHC.Types.[]"
  case ww7.s42191.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww8.s42192.0 ww9.s42193.0 ww10.s42194.0 ww11.s42195.0 ww12.s42196.0) ->
        [Data.Typeable.Internal.TrTyCon ww8.s42192.0{- value -} ww9.s42193.0{- value -} ww10.s42194.0 ww11.s42195.0 ww12.s42196.0]

"GHC.IO.Exception.$fExceptionIOException5" =
  [GHC.Types.TrNameS "GHC.IO.Exception.$fExceptionIOException6"{- value -}]

"GHC.IO.Exception.$fExceptionIOException6" =
  #"IOException"

"GHC.IO.Exception.$fExceptionIOException_$cfromException" ds.s42197.0 =
  letS wild.s42198.0 = ds.s42197.0
  case wild.s42198.0 of
    (GHC.Exception.Type.SomeException "$dException1.s42199.0" e2.s42200.0) ->
        letS sat.s42201.2 = "GHC.Exception.Type.$p1Exception" @ "$dException1.s42199.0"
             wild1.s42202.0 = Data.Typeable.Internal.sameTypeRep @ sat.s42201.2 "GHC.IO.Exception.$fExceptionIOException4"
        case wild1.s42202.0 of
          (GHC.Types.False) ->
              [GHC.Maybe.Nothing]
          (GHC.Types.True) ->
              [GHC.Maybe.Just e2.s42200.0]

"GHC.IO.Exception.$fExceptionIOException_$cshow" x.s41620.0 =
  letS ww.s41621.1 = x.s41620.0
  case ww.s41621.1 of
    (GHC.IO.Exception.IOError ww1.s41622.1 ww2.s41623.1 ww3.s41624.0 ww4.s41625.0 ww5.s41626.0 ww6.s41627.0) ->
        "GHC.IO.Exception.$w$cshowsPrec3" @ ww1.s41622.1 ww2.s41623.1 ww3.s41624.0 ww4.s41625.0 ww6.s41627.0 "GHC.Types.[]"

"GHC.IO.Exception.$fExceptionIOException_$cshowsPrec" w.s41610.0 w1.s41611.0 w2.s41612.0 =
  letS ww.s41613.0 = w1.s41611.0
  case ww.s41613.0 of
    (GHC.IO.Exception.IOError ww1.s41614.0 ww2.s41615.0 ww3.s41616.0 ww4.s41617.0 ww5.s41618.0 ww6.s41619.0) ->
        "GHC.IO.Exception.$w$cshowsPrec3" @ ww1.s41614.0 ww2.s41615.0 ww3.s41616.0 ww4.s41617.0 ww6.s41619.0 w2.s41612.0

"GHC.IO.Exception.$fExceptionIOException_$ctoException" eta.B1.664 =
  [GHC.Exception.Type.SomeException "GHC.IO.Exception.$fExceptionIOException" eta.B1.664]

"GHC.IO.Exception.$fExceptionSomeAsyncException" =
  [GHC.Exception.Type.C:Exception "GHC.IO.Exception.$fExceptionAllocationLimitExceeded6" "GHC.IO.Exception.$fShowSomeAsyncException" "GHC.IO.Exception.$fExceptionSomeAsyncException_$ctoException" "GHC.IO.Exception.$fExceptionSomeAsyncException_$cfromException" "GHC.IO.Exception.$fExceptionSomeAsyncException_$cshow"]

"GHC.IO.Exception.$fExceptionSomeAsyncException_$cfromException" ds.s42127.0 =
  letS wild.s42128.0 = ds.s42127.0
  case wild.s42128.0 of
    (GHC.Exception.Type.SomeException "$dException1.s42129.0" e2.s42130.0) ->
        letS sat.s42131.0 = "GHC.Exception.Type.$p1Exception" @ "$dException1.s42129.0"
             wild1.s42132.0 = Data.Typeable.Internal.sameTypeRep @ sat.s42131.0 "GHC.IO.Exception.$fExceptionAllocationLimitExceeded6"
        case wild1.s42132.0 of
          (GHC.Types.False) ->
              [GHC.Maybe.Nothing]
          (GHC.Types.True) ->
              [GHC.Maybe.Just e2.s42130.0]

"GHC.IO.Exception.$fExceptionSomeAsyncException_$cshow" ds.s41423.0 =
  letS wild.s41424.0 = ds.s41423.0
  case wild.s41424.0 of
    (GHC.IO.Exception.SomeAsyncException "$dException.s41425.0" e1.s41426.0) ->
        letS sat.s41427.0 = "GHC.Exception.Type.$p2Exception" @ "$dException.s41425.0"
        GHC.Show.show @ sat.s41427.0 e1.s41426.0

"GHC.IO.Exception.$fExceptionSomeAsyncException_$ctoException" eta.B1.660 =
  [GHC.Exception.Type.SomeException "GHC.IO.Exception.$fExceptionSomeAsyncException" eta.B1.660]

"GHC.IO.Exception.$fShowAsyncException" =
  [GHC.Show.C:Show "GHC.IO.Exception.$fShowAsyncException_$cshowsPrec" "GHC.IO.Exception.$fExceptionAsyncException_$cshow" "GHC.IO.Exception.$fShowAsyncException_$cshowList"]

"GHC.IO.Exception.$fShowAsyncException_$cshowList" ls.s41453.0 s.s41454.0 =
  GHC.Show.showList__ @ "GHC.IO.Exception.$w$cshowsPrec1" ls.s41453.0 s.s41454.0

"GHC.IO.Exception.$fShowAsyncException_$cshowsPrec" w.s41448.0 w1.s41449.0 w2.s41450.0 =
  "GHC.IO.Exception.$w$cshowsPrec1" @ w1.s41449.0 w2.s41450.0

"GHC.IO.Exception.$fShowIOException" =
  [GHC.Show.C:Show "GHC.IO.Exception.$fExceptionIOException_$cshowsPrec" "GHC.IO.Exception.$fExceptionIOException_$cshow" "GHC.IO.Exception.$fShowIOException_$cshowList"]

"GHC.IO.Exception.$fShowIOException1" w.s41628.0 w1.s41629.0 =
  letS ww.s41630.0 = w.s41628.0
  case ww.s41630.0 of
    (GHC.IO.Exception.IOError ww1.s41631.0 ww2.s41632.0 ww3.s41633.0 ww4.s41634.0 ww5.s41635.0 ww6.s41636.0) ->
        "GHC.IO.Exception.$w$cshowsPrec3" @ ww1.s41631.0 ww2.s41632.0 ww3.s41633.0 ww4.s41634.0 ww6.s41636.0 w1.s41629.0

"GHC.IO.Exception.$fShowIOException_$cshowList" ls.s41637.0 s.s41638.0 =
  GHC.Show.showList__ @ "GHC.IO.Exception.$fShowIOException1" ls.s41637.0 s.s41638.0

"GHC.IO.Exception.$fShowSomeAsyncException" =
  [GHC.Show.C:Show "GHC.IO.Exception.$fShowSomeAsyncException_$cshowsPrec" "GHC.IO.Exception.$fExceptionSomeAsyncException_$cshow" "GHC.IO.Exception.$fShowSomeAsyncException_$cshowList"]

"GHC.IO.Exception.$fShowSomeAsyncException1" x.s41436.0 s.s41437.0 =
  letS wild.s41438.0 = x.s41436.0
  case wild.s41438.0 of
    (GHC.IO.Exception.SomeAsyncException "$dException.s41439.0" e1.s41440.0) ->
        letS sat.s41441.0 = "GHC.Exception.Type.$p2Exception" @ "$dException.s41439.0"
             sat.s41442.0 = GHC.Show.show @ sat.s41441.0 e1.s41440.0
        "GHC.Base.++" @ sat.s41442.0 s.s41437.0

"GHC.IO.Exception.$fShowSomeAsyncException_$cshowList" ls.s41443.0 s.s41444.0 =
  GHC.Show.showList__ @ "GHC.IO.Exception.$fShowSomeAsyncException1" ls.s41443.0 s.s41444.0

"GHC.IO.Exception.$fShowSomeAsyncException_$cshowsPrec" ds.s41428.1 x.s41429.0 s.s41430.0 =
  letS wild.s41431.0 = x.s41429.0
  case wild.s41431.0 of
    (GHC.IO.Exception.SomeAsyncException "$dException.s41432.0" e1.s41433.0) ->
        letS sat.s41434.0 = "GHC.Exception.Type.$p2Exception" @ "$dException.s41432.0"
             sat.s41435.0 = GHC.Show.show @ sat.s41434.0 e1.s41433.0
        "GHC.Base.++" @ sat.s41435.0 s.s41430.0

"GHC.IO.Exception.$fxExceptionIOException" =
  "GHC.IO.Exception.$fExceptionIOException"

"GHC.IO.Exception.$trModule" =
  [GHC.Types.Module "GHC.IO.Exception.$trModule3" "GHC.IO.Exception.$trModule1"]

"GHC.IO.Exception.$trModule1" =
  [GHC.Types.TrNameS "GHC.IO.Exception.$trModule2"{- value -}]

"GHC.IO.Exception.$trModule2" =
  #"GHC.IO.Exception"

"GHC.IO.Exception.$trModule3" =
  [GHC.Types.TrNameS "GHC.IO.Exception.$trModule4"{- value -}]

"GHC.IO.Exception.$trModule4" =
  #"base"

"GHC.IO.Exception.$w$cshowsPrec1" w.s41445.0 w1.s41446.0 =
  letS wild.s41447.0 = w.s41445.0
  case wild.s41447.0 of
    (GHC.IO.Exception.StackOverflow) ->
        "GHC.Base.++" @ "GHC.IO.Exception.$fExceptionAsyncException7" w1.s41446.0
    (GHC.IO.Exception.HeapOverflow) ->
        "GHC.Base.++" @ "GHC.IO.Exception.$fExceptionAsyncException5" w1.s41446.0
    (GHC.IO.Exception.ThreadKilled) ->
        "GHC.Base.++" @ "GHC.IO.Exception.$fExceptionAsyncException3" w1.s41446.0
    (GHC.IO.Exception.UserInterrupt) ->
        "GHC.Base.++" @ "GHC.IO.Exception.$fExceptionAsyncException1" w1.s41446.0

"GHC.IO.Exception.$w$cshowsPrec3" ww.s41575.0 ww1.s41576.0 ww2.s41577.0 ww3.s41578.0 ww4.s41579.0 w.s41580.0 =
  let eta.s41581.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.5" @ w.s41580.0 ww1.s41576.0 ww2.s41577.0 ww3.s41578.0
  letS wild.s41593.0 = ww4.s41579.0
  case wild.s41593.0 of
    (GHC.Maybe.Nothing) ->
        letS wild1.s41594.0 = ww.s41575.0
        case wild1.s41594.0 of
          (GHC.Maybe.Nothing) ->
              eta.s41581.0
          (GHC.Maybe.Just h.s41595.0) ->
              letS wild2.s41596.0 = h.s41595.0
              case wild2.s41596.0 of
                (GHC.IO.Handle.Types.FileHandle file.s41597.0 dt.s41598.0) ->
                    let sat.s41601.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.8" @ eta.s41581.0 file.s41597.0
                    "GHC.CString.unpackAppendCString#" @ GHC.IO.Handle.Types.showHandle2{- value -} sat.s41601.0
                (GHC.IO.Handle.Types.DuplexHandle file.s41602.0 dt.s41603.0 dt1.s41604.0) ->
                    let sat.s41607.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.11" @ eta.s41581.0 file.s41602.0
                    "GHC.CString.unpackAppendCString#" @ GHC.IO.Handle.Types.showHandle2{- value -} sat.s41607.0
    (GHC.Maybe.Just name.s41608.0) ->
        let sat.s41609.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.12" @ eta.s41581.0
        "GHC.Base.++" @ name.s41608.0 sat.s41609.0

"GHC.IO.Exception.$w$cshowsPrec3.closure.0" w.s41580.5 =
  "GHC.CString.unpackAppendCString#" @ "GHC.IO.Exception.$fExceptionIOException2"{- value -} w.s41580.5

"GHC.IO.Exception.$w$cshowsPrec3.closure.1" ipv.s41584.1 ipv1.s41585.1 w.s41580.4 =
  let sat.s41586.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.0" @ w.s41580.4
  "GHC.Base.++_$s++" @ sat.s41586.0 ipv.s41584.1 ipv1.s41585.1

"GHC.IO.Exception.$w$cshowsPrec3.closure.10" eta.s41581.5 =
  let sat.s41605.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.9" @ eta.s41581.5
  "GHC.CString.unpackAppendCString#" @ GHC.IO.Handle.Types.showHandle1{- value -} sat.s41605.0

"GHC.IO.Exception.$w$cshowsPrec3.closure.11" eta.s41581.4 file.s41602.1 =
  let sat.s41606.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.10" @ eta.s41581.4
  "GHC.Base.++" @ file.s41602.1 sat.s41606.0

"GHC.IO.Exception.$w$cshowsPrec3.closure.12" eta.s41581.7 =
  "GHC.CString.unpackAppendCString#" @ "GHC.IO.Exception.$fExceptionArrayException3"{- value -} eta.s41581.7

"GHC.IO.Exception.$w$cshowsPrec3.closure.2" w.s41580.3 ww3.s41578.3 =
  letS wild.s41583.0 = ww3.s41578.3
  case wild.s41583.0 of
    ("GHC.Types.[]") ->
        w.s41580.3
    (GHC.Types.: ipv.s41584.0 ipv1.s41585.0) ->
        let sat.s41587.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.1" @ ipv.s41584.0 ipv1.s41585.0 w.s41580.3
        "GHC.CString.unpackAppendCString#" @ "GHC.IO.Exception.$fExceptionIOException3"{- value -} sat.s41587.0

"GHC.IO.Exception.$w$cshowsPrec3.closure.3" w.s41580.2 ww1.s41576.2 ww3.s41578.2 =
  let sat.s41588.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.2" @ w.s41580.2 ww3.s41578.2
  "GHC.IO.Exception.$w$cshowsPrec4" @ ww1.s41576.2 sat.s41588.0

"GHC.IO.Exception.$w$cshowsPrec3.closure.4" karg.s41582.1 =
  "GHC.CString.unpackAppendCString#" @ "GHC.IO.Exception.$fExceptionArrayException3"{- value -} karg.s41582.1

"GHC.IO.Exception.$w$cshowsPrec3.closure.5" w.s41580.1 ww1.s41576.1 ww2.s41577.1 ww3.s41578.1 =
  let karg.s41582.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.3" @ w.s41580.1 ww1.s41576.1 ww3.s41578.1
  letS wild.s41589.0 = ww2.s41577.1
  case wild.s41589.0 of
    ("GHC.Types.[]") ->
        karg.s41582.0
    (GHC.Types.: ipv.s41590.0 ipv1.s41591.0) ->
        let sat.s41592.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.4" @ karg.s41582.0
        "GHC.Base.++_$s++" @ sat.s41592.0 ipv.s41590.0 ipv1.s41591.0

"GHC.IO.Exception.$w$cshowsPrec3.closure.6" eta.s41581.3 =
  "GHC.Base.++" @ "GHC.IO.Exception.$fExceptionIOException1" eta.s41581.3

"GHC.IO.Exception.$w$cshowsPrec3.closure.7" eta.s41581.2 =
  let sat.s41599.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.6" @ eta.s41581.2
  "GHC.CString.unpackAppendCString#" @ GHC.IO.Handle.Types.showHandle1{- value -} sat.s41599.0

"GHC.IO.Exception.$w$cshowsPrec3.closure.8" eta.s41581.1 file.s41597.1 =
  let sat.s41600.0 = "GHC.IO.Exception.$w$cshowsPrec3.closure.7" @ eta.s41581.1
  "GHC.Base.++" @ file.s41597.1 sat.s41600.0

"GHC.IO.Exception.$w$cshowsPrec3.closure.9" eta.s41581.6 =
  "GHC.Base.++" @ "GHC.IO.Exception.$fExceptionIOException1" eta.s41581.6

"GHC.IO.Exception.$w$cshowsPrec4" w.s41497.0 w1.s41498.0 =
  letS wild.s41499.0 = w.s41497.0
  case wild.s41499.0 of
    (GHC.IO.Exception.AlreadyExists) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl1 w1.s41498.0
    (GHC.IO.Exception.NoSuchThing) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl3 w1.s41498.0
    (GHC.IO.Exception.ResourceBusy) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl5 w1.s41498.0
    (GHC.IO.Exception.ResourceExhausted) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl7 w1.s41498.0
    (GHC.IO.Exception.EOF) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl9 w1.s41498.0
    (GHC.IO.Exception.IllegalOperation) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl11 w1.s41498.0
    (GHC.IO.Exception.PermissionDenied) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl13 w1.s41498.0
    (GHC.IO.Exception.UserError) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl15 w1.s41498.0
    (GHC.IO.Exception.UnsatisfiedConstraints) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl17 w1.s41498.0
    (GHC.IO.Exception.SystemError) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl19 w1.s41498.0
    (GHC.IO.Exception.ProtocolError) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl21 w1.s41498.0
    (GHC.IO.Exception.OtherError) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl23 w1.s41498.0
    (GHC.IO.Exception.InvalidArgument) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl25 w1.s41498.0
    (GHC.IO.Exception.InappropriateType) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl27 w1.s41498.0
    (GHC.IO.Exception.HardwareFault) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl29 w1.s41498.0
    (GHC.IO.Exception.UnsupportedOperation) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl31 w1.s41498.0
    (GHC.IO.Exception.TimeExpired) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl33 w1.s41498.0
    (GHC.IO.Exception.ResourceVanished) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl35 w1.s41498.0
    (GHC.IO.Exception.Interrupted) ->
        "GHC.Base.++" @ GHC.IO.Exception.lvl37 w1.s41498.0

GHC.IO.Exception.IllegalOperation =
  [GHC.IO.Exception.IllegalOperation]

GHC.IO.Exception.InvalidArgument =
  [GHC.IO.Exception.InvalidArgument]

GHC.IO.Exception.NoSuchThing =
  [GHC.IO.Exception.NoSuchThing]

GHC.IO.Exception.ResourceExhausted =
  [GHC.IO.Exception.ResourceExhausted]

GHC.IO.Exception.UnsupportedOperation =
  [GHC.IO.Exception.UnsupportedOperation]

GHC.IO.Exception.UserError =
  [GHC.IO.Exception.UserError]

GHC.IO.Exception.UserInterrupt =
  [GHC.IO.Exception.UserInterrupt]

GHC.IO.Exception.lvl =
  #"already exists"

GHC.IO.Exception.lvl1 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl{- value -}

GHC.IO.Exception.lvl10 =
  #"illegal operation"

GHC.IO.Exception.lvl11 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl10{- value -}

GHC.IO.Exception.lvl12 =
  #"permission denied"

GHC.IO.Exception.lvl13 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl12{- value -}

GHC.IO.Exception.lvl14 =
  #"user error"

GHC.IO.Exception.lvl15 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl14{- value -}

GHC.IO.Exception.lvl16 =
  #"unsatisfied constraints"

GHC.IO.Exception.lvl17 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl16{- value -}

GHC.IO.Exception.lvl18 =
  #"system error"

GHC.IO.Exception.lvl19 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl18{- value -}

GHC.IO.Exception.lvl2 =
  #"does not exist"

GHC.IO.Exception.lvl20 =
  #"protocol error"

GHC.IO.Exception.lvl21 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl20{- value -}

GHC.IO.Exception.lvl22 =
  #"failed"

GHC.IO.Exception.lvl23 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl22{- value -}

GHC.IO.Exception.lvl24 =
  #"invalid argument"

GHC.IO.Exception.lvl25 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl24{- value -}

GHC.IO.Exception.lvl26 =
  #"inappropriate type"

GHC.IO.Exception.lvl27 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl26{- value -}

GHC.IO.Exception.lvl28 =
  #"hardware fault"

GHC.IO.Exception.lvl29 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl28{- value -}

GHC.IO.Exception.lvl3 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl2{- value -}

GHC.IO.Exception.lvl30 =
  #"unsupported operation"

GHC.IO.Exception.lvl31 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl30{- value -}

GHC.IO.Exception.lvl32 =
  #"timeout"

GHC.IO.Exception.lvl33 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl32{- value -}

GHC.IO.Exception.lvl34 =
  #"resource vanished"

GHC.IO.Exception.lvl35 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl34{- value -}

GHC.IO.Exception.lvl36 =
  #"interrupted"

GHC.IO.Exception.lvl37 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl36{- value -}

GHC.IO.Exception.lvl4 =
  #"resource busy"

GHC.IO.Exception.lvl5 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl4{- value -}

GHC.IO.Exception.lvl6 =
  #"resource exhausted"

GHC.IO.Exception.lvl7 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl6{- value -}

GHC.IO.Exception.lvl8 =
  #"end of file"

GHC.IO.Exception.lvl9 =
  "GHC.CString.unpackCString#" @ GHC.IO.Exception.lvl8{- value -}

GHC.IO.Exception.userError str.s41964.0 =
  [GHC.IO.Exception.IOError GHC.Maybe.Nothing GHC.IO.Exception.UserError "GHC.Types.[]" str.s41964.0 GHC.Maybe.Nothing GHC.Maybe.Nothing]

"GHC.IO.FD.$fBufferedIOFD" =
  [GHC.IO.BufferedIO.C:BufferedIO "GHC.IO.FD.$fBufferedIOFD15" "GHC.IO.FD.$fBufferedIOFD11" "GHC.IO.FD.$fBufferedIOFD7" "GHC.IO.FD.$fBufferedIOFD6" "GHC.IO.FD.$fBufferedIOFD_$swriteBuf1" "GHC.IO.FD.$fBufferedIOFD1"]

"GHC.IO.FD.$fBufferedIOFD1" w.s42425.0 w1.s42426.0 void.040.1420 =
  letS ww.s42428.0 = w.s42425.0
  case ww.s42428.0 of
    (GHC.IO.FD.FD ww1.s42429.0 ww2.s42430.0) ->
        letS ww3.s42431.0 = w1.s42426.0
        case ww3.s42431.0 of
          (GHC.IO.Buffer.Buffer ww4.s42432.0 ww5.s42433.0 ww6.s42434.0 ww7.s42435.0 ww8.s42436.0 ww9.s42437.0) ->
              "GHC.IO.FD.$w$cflushWriteBuffer0" @ ww1.s42429.0{- value -} ww2.s42430.0{- value -} ww4.s42432.0{- value -} ww5.s42433.0 ww6.s42434.0 ww7.s42435.0{- value -} ww8.s42436.0{- value -} ww9.s42437.0{- value -} #"GHC.Prim.void#"

"GHC.IO.FD.$fBufferedIOFD10" =
  ["GHC.Types.I#" -1]

"GHC.IO.FD.$fBufferedIOFD11" w.s42831.0 w1.s42832.0 void.040.1450 =
  letS ww.s42834.0 = w.s42831.0
  case ww.s42834.0 of
    (GHC.IO.FD.FD ww1.s42835.0 ww2.s42836.0) ->
        letS ww3.s42837.0 = w1.s42832.0
        case ww3.s42837.0 of
          (GHC.IO.Buffer.Buffer ww4.s42838.0 ww5.s42839.0 ww6.s42840.0 ww7.s42841.0 ww8.s42842.0 ww9.s42843.0) ->
              "GHC.IO.FD.$w$cfillReadBuffer" @ ww1.s42835.0{- value -} ww2.s42836.0{- value -} ww4.s42838.0{- value -} ww5.s42839.0 ww6.s42840.0 ww7.s42841.0{- value -} ww8.s42842.0{- value -} ww9.s42843.0{- value -} #"GHC.Prim.void#"

"GHC.IO.FD.$fBufferedIOFD12" =
  "GHC.CString.unpackCString#" @ "GHC.IO.FD.$fBufferedIOFD13"{- value -}

"GHC.IO.FD.$fBufferedIOFD13" =
  #"GHC.IO.FD.fdRead"

"GHC.IO.FD.$fBufferedIOFD14" ds1.s41816.0 =
  letS wild.s41817.0 = ds1.s41816.0
  case wild.s41817.0 of
    ("GHC.Int.I64#" x.s41818.0) ->
        letS wild1.s41819.0 = x.s41818.0{- value -}
        case wild1.s41819.0{- value -} of
          _ ->
              [GHC.Types.False]
          -1 ->
              [GHC.Types.True]

"GHC.IO.FD.$fBufferedIOFD15" _dev.s42159.0 state.s42160.0 void.040.1400 =
  letS ds.s42162.0 = "newMutVar#" @ GHC.ForeignPtr.NoFinalizers
  case ds.s42162.0 of
    ("GHC.Prim.Unit#" ipv1.s42164.0) ->
        letS ds1.s42165.0 = "newPinnedByteArray#" @ 8192
        case ds1.s42165.0 of
          ("GHC.Prim.Unit#" ipv3.s42167.0) ->
              let sat.s42169.0 = [GHC.ForeignPtr.MallocPtr ipv3.s42167.0 ipv1.s42164.0]
              letS sat.s42168.0 = "byteArrayContents#" @ ipv3.s42167.0
              let sat.s42170.0 = [GHC.IO.Buffer.Buffer sat.s42168.0{- value -} sat.s42169.0 state.s42160.0 8192 0 0]
              ["GHC.Prim.Unit#" sat.s42170.0]

"GHC.IO.FD.$fBufferedIOFD2" =
  ["GHC.Types.I#" 0]

"GHC.IO.FD.$fBufferedIOFD3" void.040.1373 =
  ["GHC.Prim.Unit#" GHC.IO.FD.lvl2]

"GHC.IO.FD.$fBufferedIOFD4" =
  #"GHC.IO.FD.fdWriteNonBlocking"

"GHC.IO.FD.$fBufferedIOFD5" loc.s41722.0 f.s41723.0 on_block.s41724.0 void.040.1372 =
  letS ds1.s41726.0 = f.s41723.0 @ #"GHC.Prim.void#"
  case ds1.s41726.0 of
    ("GHC.Prim.Unit#" ipv1.s41728.0) ->
        letS wild.s41729.0 = ipv1.s41728.0
        case wild.s41729.0 of
          ("GHC.Int.I64#" x.s41730.0) ->
              letS wild1.s41731.0 = x.s41730.0{- value -}
              case wild1.s41731.0{- value -} of
                _ ->
                    ["GHC.Prim.Unit#" wild.s41729.0]
                -1 ->
                    letS wild2.s41733.0 = __hscore_get_errno @
                    case wild2.s41733.0{- value -} of
                      ("GHC.Prim.Unit#" ds2.s41735.0) ->
                          letS wild3.s41736.0 = "narrow32Int#" @ ds2.s41735.0{- value -}
                          case wild3.s41736.0{- value -} of
                            _ ->
                                Foreign.C.Error.throwErrno1 @ loc.s41722.0 #"GHC.Prim.void#"
                            4 ->
                                "GHC.IO.FD.$fBufferedIOFD5" @ loc.s41722.0 f.s41723.0 on_block.s41724.0 #"GHC.Prim.void#"
                            11 ->
                                on_block.s41724.0 @ #"GHC.Prim.void#"

"GHC.IO.FD.$fBufferedIOFD6" _dev.s42844.0 buf.s42845.0 void.040.1451 =
  let sat.s42854.0 = "GHC.IO.FD.$fBufferedIOFD6.closure.0" @ buf.s42845.0
  ["GHC.Prim.Unit#" sat.s42854.0]

"GHC.IO.FD.$fBufferedIOFD6.closure.0" buf.s42845.1 =
  letS wild.s42847.0 = buf.s42845.1
  case wild.s42847.0 of
    (GHC.IO.Buffer.Buffer dt.s42848.0 dt1.s42849.0 ds.s42850.0 dt2.s42851.0 dt3.s42852.0 dt4.s42853.0) ->
        [GHC.IO.Buffer.Buffer dt.s42848.0{- value -} dt1.s42849.0 GHC.IO.Buffer.WriteBuffer dt2.s42851.0{- value -} 0 0]

"GHC.IO.FD.$fBufferedIOFD7" w.s42391.0 w1.s42392.0 void.040.1418 =
  letS ww.s42394.0 = w.s42391.0
  case ww.s42394.0 of
    (GHC.IO.FD.FD ww1.s42395.0 ww2.s42396.0) ->
        letS ww3.s42397.0 = w1.s42392.0
        case ww3.s42397.0 of
          (GHC.IO.Buffer.Buffer ww4.s42398.0 ww5.s42399.0 ww6.s42400.0 ww7.s42401.0 ww8.s42402.0 ww9.s42403.0) ->
              "GHC.IO.FD.$w$cfillReadBuffer0" @ ww1.s42395.0{- value -} ww2.s42396.0{- value -} ww4.s42398.0{- value -} ww5.s42399.0 ww6.s42400.0 ww7.s42401.0{- value -} ww8.s42402.0{- value -} ww9.s42403.0{- value -} #"GHC.Prim.void#"

"GHC.IO.FD.$fBufferedIOFD8" =
  "GHC.CString.unpackCString#" @ "GHC.IO.FD.$fBufferedIOFD9"{- value -}

"GHC.IO.FD.$fBufferedIOFD9" =
  #"GHC.IO.FD.fdReadNonBlocking"

"GHC.IO.FD.$fBufferedIOFD_$swriteBuf1" w1.s42124.0 w2.s42125.0 void.040.1399 =
  letS ww5.s42127.0 = w2.s42125.0
  case ww5.s42127.0 of
    (GHC.IO.Buffer.Buffer ww6.s42128.0 ww7.s42129.0 ww8.s42130.0 ww9.s42131.0 ww10.s42132.0 ww11.s42133.0) ->
        letS ww.s42134.0 = w1.s42124.0
        case ww.s42134.0 of
          (GHC.IO.FD.FD ww1.s42135.0 ww2.s42136.0) ->
              letS sat.s42138.1 = "-#" @ ww11.s42133.0{- value -} ww10.s42132.0{- value -}
                   sat.s42137.0 = "plusAddr#" @ ww6.s42128.0{- value -} ww10.s42132.0{- value -}
                   ds2.s42139.0 = "GHC.IO.FD.$wfdWrite" @ ww1.s42135.0{- value -} ww2.s42136.0{- value -} sat.s42137.0{- value -} sat.s42138.1{- value -} #"GHC.Prim.void#"
              case ds2.s42139.0 of
                ("GHC.Prim.Unit#" ipv1.s42141.0) ->
                    letS s'.s42142.0 = "touch#" @ ww7.s42129.0
                    case s'.s42142.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          let sat.s42143.1 = [GHC.IO.Buffer.Buffer ww6.s42128.0{- value -} ww7.s42129.0 ww8.s42130.0 ww9.s42131.0{- value -} 0 0]
                          ["GHC.Prim.Unit#" sat.s42143.1]

"GHC.IO.FD.$fBufferedIOFD_loc" =
  "GHC.CString.unpackCString#" @ "GHC.IO.FD.$fBufferedIOFD4"{- value -}

"GHC.IO.FD.$fIODeviceFD" =
  [GHC.IO.Device.C:IODevice "GHC.IO.FD.$fIODeviceFD27" "GHC.IO.FD.$fIODeviceFD22" "GHC.IO.FD.$fIODeviceFD21" "GHC.IO.FD.$fIODeviceFD20" "GHC.IO.FD.$fIODeviceFD17" "GHC.IO.FD.$fIODeviceFD13" "GHC.IO.FD.$fIODeviceFD12" "GHC.IO.FD.$fIODeviceFD10" "GHC.IO.FD.$fIODeviceFD9" "GHC.IO.FD.$fIODeviceFD8" "GHC.IO.FD.$fIODeviceFD7" "GHC.IO.FD.$fIODeviceFD6" "GHC.IO.FD.$fIODeviceFD3" "GHC.IO.FD.$fIODeviceFD1"]

"GHC.IO.FD.$fIODeviceFD1" w.s42515.0 w1.s42516.0 void.040.1429 =
  letS ww.s42518.0 = w.s42515.0
  case ww.s42518.0 of
    (GHC.IO.FD.FD ww1.s42519.0 ww2.s42520.0) ->
        letS ww3.s42521.0 = w1.s42516.0
        case ww3.s42521.0 of
          (GHC.IO.FD.FD ww4.s42522.0 ww5.s42523.0) ->
              "GHC.IO.FD.$w$cdup2" @ ww1.s42519.0{- value -} ww2.s42520.0{- value -} ww4.s42522.0{- value -} #"GHC.Prim.void#"

"GHC.IO.FD.$fIODeviceFD10" w.s42359.0 w1.s42360.0 void.040.1413 =
  letS ww.s42362.0 = w.s42359.0
  case ww.s42362.0 of
    (GHC.IO.FD.FD ww1.s42363.0 ww2.s42364.0) ->
        "GHC.IO.FD.$wsetSize" @ ww1.s42363.0{- value -} w1.s42360.0 #"GHC.Prim.void#"

"GHC.IO.FD.$fIODeviceFD11" void.040.1411 ds2.s42343.0 =
  letS sat.s42344.0 = "narrow32Int#" @ ds2.s42343.0{- value -}
  "Foreign.C.Error.$wlvl" @ #"GHC.Prim.void#" sat.s42344.0{- value -} GHC.IO.FD.lvl4

"GHC.IO.FD.$fIODeviceFD12" fd.s42171.0 void.040.1401 =
  letS wild.s42173.1 = fd.s42171.0
  case wild.s42173.1 of
    (GHC.IO.FD.FD dt.s42174.0 dt1.s42175.0) ->
        "System.Posix.Internals.$wfdFileSize" @ dt.s42174.0{- value -} #"GHC.Prim.void#"

"GHC.IO.FD.$fIODeviceFD13" w.s42297.0 void.040.1407 =
  letS ww.s42299.0 = w.s42297.0
  case ww.s42299.0 of
    (GHC.IO.FD.FD ww1.s42300.0 ww2.s42301.0) ->
        "GHC.IO.FD.$w$ctell" @ ww1.s42300.0{- value -} #"GHC.Prim.void#"

"GHC.IO.FD.$fIODeviceFD14" =
  "GHC.CString.unpackCString#" @ "GHC.IO.FD.$fIODeviceFD15"{- value -}

"GHC.IO.FD.$fIODeviceFD15" =
  #"hGetPosn"

"GHC.IO.FD.$fIODeviceFD16" ds1.s42275.0 =
  letS wild.s42276.0 = ds1.s42275.0
  case wild.s42276.0 of
    ("GHC.Int.I64#" x.s42277.0) ->
        letS wild1.s42278.0 = x.s42277.0{- value -}
        case wild1.s42278.0{- value -} of
          _ ->
              [GHC.Types.False]
          -1 ->
              [GHC.Types.True]

"GHC.IO.FD.$fIODeviceFD17" w.s42335.2 w1.s42336.2 w2.s42337.2 void.040.1410 =
  letS ww.s42339.0 = w.s42335.2
  case ww.s42339.0 of
    (GHC.IO.FD.FD ww1.s42340.0 ww2.s42341.0) ->
        "GHC.IO.FD.$w$cseek" @ ww1.s42340.0{- value -} w1.s42336.2 w2.s42337.2 #"GHC.Prim.void#"

"GHC.IO.FD.$fIODeviceFD18" =
  "GHC.CString.unpackCString#" @ "GHC.IO.FD.$fIODeviceFD19"{- value -}

"GHC.IO.FD.$fIODeviceFD19" =
  #"seek"

"GHC.IO.FD.$fIODeviceFD2" void.040.1427 ds3.s42498.0 =
  letS sat.s42499.0 = "narrow32Int#" @ ds3.s42498.0{- value -}
  "Foreign.C.Error.$wlvl" @ #"GHC.Prim.void#" sat.s42499.0{- value -} GHC.IO.FD.lvl6

"GHC.IO.FD.$fIODeviceFD20" fd.s42556.0 void.040.1433 =
  letS wild.s42558.0 = fd.s42556.0
  case wild.s42558.0 of
    (GHC.IO.FD.FD dt.s42559.0 dt1.s42560.0) ->
        letS ds1.s42561.0 = "System.Posix.Internals.$wfdStat" @ dt.s42559.0{- value -} #"GHC.Prim.void#"
        case ds1.s42561.0 of
          ("GHC.Prim.Unit#" ipv1.s42563.0) ->
              letS wild1.s42564.0 = ipv1.s42563.0
              case wild1.s42564.0 of
                ("GHC.Tuple.(,,)" ty.s42565.0 ds.s42566.0 ds2.s42567.0) ->
                    let sat.s42569.1 = "GHC.IO.FD.$fIODeviceFD20.closure.0" @ ty.s42565.0
                    ["GHC.Prim.Unit#" sat.s42569.1]

"GHC.IO.FD.$fIODeviceFD20.closure.0" ty.s42565.1 =
  letS wild2.s42568.0 = ty.s42565.1
  case wild2.s42568.0 of
    _ ->
        [GHC.Types.False]
    (GHC.IO.Device.RegularFile) ->
        [GHC.Types.True]
    (GHC.IO.Device.RawDevice) ->
        [GHC.Types.True]

"GHC.IO.FD.$fIODeviceFD21" fd.s42438.0 void.040.1421 =
  letS wild.s42440.0 = fd.s42438.0
  case wild.s42440.0 of
    (GHC.IO.FD.FD dt.s42441.0 dt1.s42442.0) ->
        letS wild1.s42444.0 = isatty @ dt.s42441.0{- value -}
        case wild1.s42444.0{- value -} of
          ("GHC.Prim.Unit#" ds5.s42446.0) ->
              let sat.s42448.0 = "GHC.IO.FD.$fIODeviceFD21.closure.0" @ ds5.s42446.0{- value -}
              ["GHC.Prim.Unit#" sat.s42448.0]

"GHC.IO.FD.$fIODeviceFD21.closure.0" ds5.s42446.1 =
  letS wild2.s42447.0 = "narrow32Int#" @ ds5.s42446.1{- value -}
  case wild2.s42447.0{- value -} of
    _ ->
        [GHC.Types.True]
    0 ->
        [GHC.Types.False]

"GHC.IO.FD.$fIODeviceFD22" w.s42622.0 void.040.1441 =
  letS ww.s42624.0 = w.s42622.0
  case ww.s42624.0 of
    (GHC.IO.FD.FD ww1.s42625.0 ww2.s42626.0) ->
        "GHC.IO.FD.$w$cclose" @ ww1.s42625.0{- value -} #"GHC.Prim.void#"

"GHC.IO.FD.$fIODeviceFD23" =
  "GHC.CString.unpackCString#" @ "GHC.IO.FD.$fIODeviceFD24"{- value -}

"GHC.IO.FD.$fIODeviceFD24" =
  #"GHC.IO.FD.close"

"GHC.IO.FD.$fIODeviceFD25" ds1.s42449.0 =
  letS wild.s42450.0 = ds1.s42449.0
  case wild.s42450.0 of
    ("GHC.Int.I32#" x.s42451.0) ->
        letS wild1.s42452.0 = x.s42451.0{- value -}
        case wild1.s42452.0{- value -} of
          _ ->
              [GHC.Types.False]
          -1 ->
              [GHC.Types.True]

"GHC.IO.FD.$fIODeviceFD26" w.s42593.0 void.040.1438 =
  letS ww.s42595.0 = w.s42593.0
  case ww.s42595.0 of
    ("GHC.Int.I32#" ww1.s42596.0) ->
        "GHC.IO.FD.$wclose" @ ww1.s42596.0{- value -} #"GHC.Prim.void#"

"GHC.IO.FD.$fIODeviceFD27" w.s42477.0 w1.s42478.0 w2.s42479.0 void.040.1424 =
  letS ww.s42481.0 = w.s42477.0
  case ww.s42481.0 of
    (GHC.IO.FD.FD ww1.s42482.0 ww2.s42483.0) ->
        letS ww3.s42484.0 = w2.s42479.0
        case ww3.s42484.0 of
          ("GHC.Types.I#" ww4.s42485.0) ->
              "GHC.IO.FD.$w$cready" @ ww1.s42482.0{- value -} w1.s42478.0 ww4.s42485.0{- value -} #"GHC.Prim.void#"

"GHC.IO.FD.$fIODeviceFD28" =
  "GHC.CString.unpackCString#" @ "GHC.IO.FD.$fIODeviceFD29"{- value -}

"GHC.IO.FD.$fIODeviceFD29" =
  #"GHC.IO.FD.ready"

"GHC.IO.FD.$fIODeviceFD3" w.s42539.0 void.040.1431 =
  letS ww.s42541.0 = w.s42539.0
  case ww.s42541.0 of
    (GHC.IO.FD.FD ww1.s42542.0 ww2.s42543.0) ->
        "GHC.IO.FD.$w$cdup" @ ww1.s42542.0{- value -} ww2.s42543.0{- value -} #"GHC.Prim.void#"

"GHC.IO.FD.$fIODeviceFD4" =
  "GHC.CString.unpackCString#" @ "GHC.IO.FD.$fIODeviceFD5"{- value -}

"GHC.IO.FD.$fIODeviceFD5" =
  #"GHC.IO.FD.dup"

"GHC.IO.FD.$fIODeviceFD6" fd.s42544.0 void.040.1432 =
  letS wild.s42546.0 = fd.s42544.0
  case wild.s42546.0 of
    (GHC.IO.FD.FD dt.s42547.0 dt1.s42548.0) ->
        letS ds1.s42549.0 = "System.Posix.Internals.$wfdStat" @ dt.s42547.0{- value -} #"GHC.Prim.void#"
        case ds1.s42549.0 of
          ("GHC.Prim.Unit#" ipv1.s42551.0) ->
              letS wild1.s42552.0 = ipv1.s42551.0
              case wild1.s42552.0 of
                ("GHC.Tuple.(,,)" ty.s42553.0 ds.s42554.0 ds2.s42555.0) ->
                    ["GHC.Prim.Unit#" ty.s42553.0]

"GHC.IO.FD.$fIODeviceFD7" fd.s42187.0 raw.s42188.0 void.040.1404 =
  letS wild.s42190.0 = fd.s42187.0
  case wild.s42190.0 of
    (GHC.IO.FD.FD dt.s42191.0 dt1.s42192.0) ->
        let sat.s42194.0 = "GHC.IO.FD.$fIODeviceFD7.closure.0" @ raw.s42188.0
        "System.Posix.Internals.$wsetCooked" @ dt.s42191.0{- value -} sat.s42194.0 #"GHC.Prim.void#"

"GHC.IO.FD.$fIODeviceFD7.closure.0" raw.s42188.1 =
  letS wild1.s42193.0 = raw.s42188.1
  case wild1.s42193.0 of
    (GHC.Types.False) ->
        [GHC.Types.True]
    (GHC.Types.True) ->
        [GHC.Types.False]

"GHC.IO.FD.$fIODeviceFD8" fd.s42182.0 void.040.1403 =
  letS wild.s42184.0 = fd.s42182.0
  case wild.s42184.0 of
    (GHC.IO.FD.FD dt.s42185.0 dt1.s42186.0) ->
        "System.Posix.Internals.$wtcSetAttr" @ dt.s42185.0{- value -} System.Posix.Internals.getEcho2 #"GHC.Prim.void#"

"GHC.IO.FD.$fIODeviceFD9" fd.s42176.0 on.s42177.0 void.040.1402 =
  letS wild.s42179.0 = fd.s42176.0
  case wild.s42179.0 of
    (GHC.IO.FD.FD dt.s42180.0 dt1.s42181.0) ->
        "System.Posix.Internals.$wsetEcho" @ dt.s42180.0{- value -} on.s42177.0 #"GHC.Prim.void#"

"GHC.IO.FD.$tcFD1" =
  [GHC.Types.TrNameS "GHC.IO.FD.$tcFD2"{- value -}]

"GHC.IO.FD.$tcFD2" =
  #"FD"

"GHC.IO.FD.$trModule" =
  [GHC.Types.Module "GHC.IO.FD.$trModule3" "GHC.IO.FD.$trModule1"]

"GHC.IO.FD.$trModule1" =
  [GHC.Types.TrNameS "GHC.IO.FD.$trModule2"{- value -}]

"GHC.IO.FD.$trModule2" =
  #"GHC.IO.FD"

"GHC.IO.FD.$trModule3" =
  [GHC.Types.TrNameS "GHC.IO.FD.$trModule4"{- value -}]

"GHC.IO.FD.$trModule4" =
  #"base"

"GHC.IO.FD.$w$cclose" ww.s42597.0 void.040.1439 =
  letS wild.s42600.2 = unlockFile @ ww.s42597.0{- value -}
  case wild.s42600.2{- value -} of
    ("GHC.Prim.Unit#" ds1.s42602.0) ->
        letS wild1.s42604.1 = rtsSupportsBoundThreads @
        case wild1.s42604.1{- value -} of
          ("GHC.Prim.Unit#" ds3.s42606.0) ->
              letS wild2.s42607.0 = ds3.s42606.0{- value -}
              case wild2.s42607.0{- value -} of
                _ ->
                    letS sat.s42608.1 = "narrow32Int#" @ ww.s42597.0{- value -}
                    let sat.s42609.1 = ["GHC.Int.I32#" sat.s42608.1{- value -}]
                    GHC.Event.Thread.closeFdWith1 @ "GHC.IO.FD.$fIODeviceFD26" sat.s42609.1 #"GHC.Prim.void#"
                0 ->
                    let sat.s42618.1 = "GHC.IO.FD.$w$cclose.closure.0" @ ww.s42597.0{- value -}
                    letS ds4.s42619.0 = Foreign.C.Error.throwErrnoIfMinus1Retry2 @ "GHC.IO.FD.$fIODeviceFD25" "GHC.IO.FD.$fIODeviceFD23" sat.s42618.1 #"GHC.Prim.void#"
                    case ds4.s42619.0 of
                      ("GHC.Prim.Unit#" ipv1.s42621.0) ->
                          ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.FD.$w$cclose.closure.0" ww.s42597.1 void.040.1440 =
  letS sat.s42612.1 = "narrow32Int#" @ ww.s42597.1{- value -}
       wild3.s42613.0 = close @ sat.s42612.1{- value -}
  case wild3.s42613.0{- value -} of
    ("GHC.Prim.Unit#" ds6.s42615.0) ->
        letS sat.s42616.1 = "narrow32Int#" @ ds6.s42615.0{- value -}
        let sat.s42617.1 = ["GHC.Int.I32#" sat.s42616.1{- value -}]
        ["GHC.Prim.Unit#" sat.s42617.1]

"GHC.IO.FD.$w$cdup" ww.s42524.0 ww1.s42525.0 void.040.1430 =
  letS wild.s42528.0 = dup @ ww.s42524.0{- value -}
  case wild.s42528.0{- value -} of
    ("GHC.Prim.Unit#" ds5.s42530.0) ->
        letS wild1.s42531.0 = "narrow32Int#" @ ds5.s42530.0{- value -}
        case wild1.s42531.0{- value -} of
          _ ->
              let sat.s42532.0 = [GHC.IO.FD.FD wild1.s42531.0{- value -} ww1.s42525.0{- value -}]
              ["GHC.Prim.Unit#" sat.s42532.0]
          -1 ->
              letS ds1.s42533.0 = Foreign.C.Error.throwErrno1 @ "GHC.IO.FD.$fIODeviceFD4" #"GHC.Prim.void#"
              case ds1.s42533.0 of
                ("GHC.Prim.Unit#" ipv1.s42535.0) ->
                    let sat.s42538.0 = "GHC.IO.FD.$w$cdup.closure.0" @ ipv1.s42535.0 ww1.s42525.0{- value -}
                    ["GHC.Prim.Unit#" sat.s42538.0]

"GHC.IO.FD.$w$cdup.closure.0" ipv1.s42535.1 ww1.s42525.1 =
  letS dt.s42536.0 = ipv1.s42535.1
  case dt.s42536.0 of
    ("GHC.Int.I32#" dt1.s42537.0) ->
        [GHC.IO.FD.FD dt1.s42537.0{- value -} ww1.s42525.1{- value -}]

"GHC.IO.FD.$w$cdup2" ww.s42500.0 ww1.s42501.0 ww2.s42502.0 void.040.1428 =
  letS wild.s42505.0 = dup2 @ ww.s42500.0{- value -} ww2.s42502.0{- value -}
  case wild.s42505.0{- value -} of
    ("GHC.Prim.Unit#" ds8.s42507.0) ->
        letS wild1.s42508.0 = "narrow32Int#" @ ds8.s42507.0{- value -}
        case wild1.s42508.0{- value -} of
          _ ->
              let sat.s42509.0 = [GHC.IO.FD.FD ww2.s42502.0{- value -} ww1.s42501.0{- value -}]
              ["GHC.Prim.Unit#" sat.s42509.0]
          -1 ->
              letS wild2.s42511.0 = __hscore_get_errno @
              case wild2.s42511.0{- value -} of
                ("GHC.Prim.Unit#" ds3.s42513.0) ->
                    "GHC.IO.FD.$fIODeviceFD2" @ #"GHC.Prim.void#" ds3.s42513.0{- value -}

"GHC.IO.FD.$w$cfillReadBuffer" ww.s42810.0 ww1.s42811.0 ww2.s42812.0 ww3.s42813.0 ww4.s42814.0 ww5.s42815.0 ww6.s42816.0 ww7.s42817.0 void.040.1449 =
  letS sat.s42820.1 = "-#" @ ww5.s42815.0{- value -} ww7.s42817.0{- value -}
       sat.s42821.0 = "int2Word#" @ sat.s42820.1{- value -}
       sat.s42819.0 = "plusAddr#" @ ww2.s42812.0{- value -} ww7.s42817.0{- value -}
       ds2.s42822.0 = "GHC.IO.FD.$wreadRawBufferPtr" @ "GHC.IO.FD.$fBufferedIOFD12" ww.s42810.0{- value -} ww1.s42811.0{- value -} sat.s42819.0{- value -} 0 sat.s42821.0{- value -} #"GHC.Prim.void#"
  case ds2.s42822.0 of
    ("GHC.Prim.Unit#" ipv1.s42824.0) ->
        letS s'.s42825.0 = "touch#" @ ww3.s42813.0
        case s'.s42825.0{- value -} of
          ("GHC.Prim.(##)") ->
              let sat.s42829.0 = "GHC.IO.FD.$w$cfillReadBuffer.closure.0" @ ipv1.s42824.0 ww2.s42812.0{- value -} ww3.s42813.0 ww4.s42814.0 ww5.s42815.0{- value -} ww6.s42816.0{- value -} ww7.s42817.0{- value -}
                  sat.s42830.0 = ["GHC.Tuple.(,)" ipv1.s42824.0 sat.s42829.0]
              ["GHC.Prim.Unit#" sat.s42830.0]

"GHC.IO.FD.$w$cfillReadBuffer.closure.0" ipv1.s42824.1 ww2.s42812.1 ww3.s42813.1 ww4.s42814.1 ww5.s42815.1 ww6.s42816.1 ww7.s42817.1 =
  letS wild1.s42826.0 = ipv1.s42824.1
  case wild1.s42826.0 of
    ("GHC.Types.I#" y.s42827.0) ->
        letS sat.s42828.0 = "+#" @ ww7.s42817.1{- value -} y.s42827.0{- value -}
        [GHC.IO.Buffer.Buffer ww2.s42812.1{- value -} ww3.s42813.1 ww4.s42814.1 ww5.s42815.1{- value -} ww6.s42816.1{- value -} sat.s42828.0{- value -}]

"GHC.IO.FD.$w$cfillReadBuffer0" ww.s42365.0 ww1.s42366.0 ww2.s42367.0 ww3.s42368.0 ww4.s42369.0 ww5.s42370.0 ww6.s42371.0 ww7.s42372.0 void.040.1417 =
  letS sat.s42375.0 = "-#" @ ww5.s42370.0{- value -} ww7.s42372.0{- value -}
       sat.s42376.0 = "int2Word#" @ sat.s42375.0{- value -}
       sat.s42374.0 = "plusAddr#" @ ww2.s42367.0{- value -} ww7.s42372.0{- value -}
       ds1.s42377.0 = "GHC.IO.FD.$wreadRawBufferPtrNoBlock" @ "GHC.IO.FD.$fBufferedIOFD8" ww.s42365.0{- value -} ww1.s42366.0{- value -} sat.s42374.0{- value -} 0 sat.s42376.0{- value -} #"GHC.Prim.void#"
  case ds1.s42377.0 of
    ("GHC.Prim.Unit#" ipv1.s42379.0) ->
        letS wild.s42380.0 = ipv1.s42379.0
        case wild.s42380.0 of
          ("GHC.Types.I#" ds.s42381.0) ->
              letS ds2.s42382.0 = ds.s42381.0{- value -}
              case ds2.s42382.0{- value -} of
                _ ->
                    letS s'.s42383.0 = "touch#" @ ww3.s42368.0
                    case s'.s42383.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS sat.s42385.1 = "+#" @ ww7.s42372.0{- value -} ds2.s42382.0{- value -}
                          let sat.s42386.0 = [GHC.IO.Buffer.Buffer ww2.s42367.0{- value -} ww3.s42368.0 ww4.s42369.0 ww5.s42370.0{- value -} ww6.s42371.0{- value -} sat.s42385.1{- value -}]
                              sat.s42384.0 = [GHC.Maybe.Just wild.s42380.0]
                              sat.s42387.0 = ["GHC.Tuple.(,)" sat.s42384.0 sat.s42386.0]
                          ["GHC.Prim.Unit#" sat.s42387.0]
                -1 ->
                    letS s'.s42388.0 = "touch#" @ ww3.s42368.0
                    case s'.s42388.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          let sat.s42389.0 = [GHC.IO.Buffer.Buffer ww2.s42367.0{- value -} ww3.s42368.0 ww4.s42369.0 ww5.s42370.0{- value -} ww6.s42371.0{- value -} ww7.s42372.0{- value -}]
                              sat.s42390.0 = ["GHC.Tuple.(,)" GHC.Maybe.Nothing sat.s42389.0]
                          ["GHC.Prim.Unit#" sat.s42390.0]

"GHC.IO.FD.$w$cflushWriteBuffer0" ww.s42404.0 ww1.s42405.0 ww2.s42406.0 ww3.s42407.0 ww4.s42408.0 ww5.s42409.0 ww6.s42410.0 ww7.s42411.0 void.040.1419 =
  letS sat.s42414.0 = "-#" @ ww7.s42411.0{- value -} ww6.s42410.0{- value -}
       sat.s42413.0 = "plusAddr#" @ ww2.s42406.0{- value -} ww6.s42410.0{- value -}
       ds2.s42415.0 = "GHC.IO.FD.$w$cwriteNonBlocking" @ ww.s42404.0{- value -} ww1.s42405.0{- value -} sat.s42413.0{- value -} sat.s42414.0{- value -} #"GHC.Prim.void#"
  case ds2.s42415.0 of
    ("GHC.Prim.Unit#" ipv1.s42417.0) ->
        letS s'.s42418.0 = "touch#" @ ww3.s42407.0
        case s'.s42418.0{- value -} of
          ("GHC.Prim.(##)") ->
              let sat.s42423.0 = "GHC.IO.FD.$w$cflushWriteBuffer0.closure.0" @ ipv1.s42417.0 ww2.s42406.0{- value -} ww3.s42407.0 ww4.s42408.0 ww5.s42409.0{- value -} ww6.s42410.0{- value -} ww7.s42411.0{- value -}
                  sat.s42424.0 = ["GHC.Tuple.(,)" ipv1.s42417.0 sat.s42423.0]
              ["GHC.Prim.Unit#" sat.s42424.0]

"GHC.IO.FD.$w$cflushWriteBuffer0.closure.0" ipv1.s42417.1 ww2.s42406.1 ww3.s42407.1 ww4.s42408.1 ww5.s42409.1 ww6.s42410.1 ww7.s42411.1 =
  letS wild1.s42419.0 = ipv1.s42417.1
  case wild1.s42419.0 of
    ("GHC.Types.I#" y.s42420.0) ->
        letS x.s42421.0 = "+#" @ ww6.s42410.1{- value -} y.s42420.0{- value -}
             lwild.s42422.0 = "==#" @ x.s42421.0{- value -} ww7.s42411.1{- value -}
        case lwild.s42422.0{- value -} of
          _ ->
              [GHC.IO.Buffer.Buffer ww2.s42406.1{- value -} ww3.s42407.1 ww4.s42408.1 ww5.s42409.1{- value -} x.s42421.0{- value -} ww7.s42411.1{- value -}]
          1 ->
              [GHC.IO.Buffer.Buffer ww2.s42406.1{- value -} ww3.s42407.1 ww4.s42408.1 ww5.s42409.1{- value -} 0 0]

"GHC.IO.FD.$w$cready" ww.s42453.1 w.s42454.0 ww1.s42455.0 void.040.1422 =
  let "$j.s42457.0" = "GHC.IO.FD.$w$cready.closure.2" @ ww.s42453.1{- value -} ww1.s42455.0{- value -}
  letS wild.s42476.1 = w.s42454.0
  case wild.s42476.1 of
    (GHC.Types.False) ->
        "$j.s42457.0" @ 0
    (GHC.Types.True) ->
        "$j.s42457.0" @ 1

"GHC.IO.FD.$w$cready.closure.0" i.s42458.1 ww.s42453.3 ww1.s42455.2 void.040.1423 =
  letS sat.s42461.1 = "int2Word#" @ i.s42458.1{- value -}
       sat.s42462.1 = "narrow8Word#" @ sat.s42461.1{- value -}
       wild.s42463.0 = fdReady @ ww.s42453.3{- value -} sat.s42462.1{- value -} ww1.s42455.2{- value -} 0u
  case wild.s42463.0{- value -} of
    ("GHC.Prim.Unit#" ds2.s42465.0) ->
        letS sat.s42466.0 = "narrow32Int#" @ ds2.s42465.0{- value -}
        let sat.s42467.0 = ["GHC.Int.I32#" sat.s42466.0{- value -}]
        ["GHC.Prim.Unit#" sat.s42467.0]

"GHC.IO.FD.$w$cready.closure.1" ipv1.s42471.1 =
  letS wild.s42472.0 = ipv1.s42471.1
  case wild.s42472.0 of
    ("GHC.Int.I32#" "x#.s42473.0") ->
        letS wild1.s42474.0 = "x#.s42473.0"{- value -}
        case wild1.s42474.0{- value -} of
          _ ->
              "GHC.Enum.$fEnumBool1"
          0 ->
              [GHC.Types.False]
          1 ->
              [GHC.Types.True]

"GHC.IO.FD.$w$cready.closure.2" ww.s42453.2 ww1.s42455.1 i.s42458.0 =
  let sat.s42468.0 = "GHC.IO.FD.$w$cready.closure.0" @ i.s42458.0{- value -} ww.s42453.2{- value -} ww1.s42455.1{- value -}
  letS ds1.s42469.0 = Foreign.C.Error.throwErrnoIfMinus1Retry2 @ "GHC.IO.FD.$fIODeviceFD25" "GHC.IO.FD.$fIODeviceFD28" sat.s42468.0 #"GHC.Prim.void#"
  case ds1.s42469.0 of
    ("GHC.Prim.Unit#" ipv1.s42471.0) ->
        let sat.s42475.0 = "GHC.IO.FD.$w$cready.closure.1" @ ipv1.s42471.0
        ["GHC.Prim.Unit#" sat.s42475.0]

"GHC.IO.FD.$w$cseek" ww.s42302.0 w.s42303.0 w1.s42304.0 void.040.1408 =
  letS wild.s42306.0 = GHC.Integer.Type.integerToInt @ w1.s42304.0
  let "$j.s42307.0" = "GHC.IO.FD.$w$cseek.closure.1" @ wild.s42306.0{- value -} ww.s42302.0{- value -}
  letS wild1.s42319.0 = w.s42303.0
  case wild1.s42319.0 of
    (GHC.IO.Device.AbsoluteSeek) ->
        letS wild2.s42321.0 = ghczuwrapperZC1ZCbaseZCSystemziPosixziInternalsZCSEEKzuSET @
        case wild2.s42321.0{- value -} of
          ("GHC.Prim.Unit#" ds1.s42323.0) ->
              letS sat.s42324.0 = "narrow32Int#" @ ds1.s42323.0{- value -}
              "$j.s42307.0" @ sat.s42324.0{- value -}
    (GHC.IO.Device.RelativeSeek) ->
        letS wild2.s42326.0 = ghczuwrapperZC2ZCbaseZCSystemziPosixziInternalsZCSEEKzuCUR @
        case wild2.s42326.0{- value -} of
          ("GHC.Prim.Unit#" ds1.s42328.0) ->
              letS sat.s42329.0 = "narrow32Int#" @ ds1.s42328.0{- value -}
              "$j.s42307.0" @ sat.s42329.0{- value -}
    (GHC.IO.Device.SeekFromEnd) ->
        letS wild2.s42331.0 = ghczuwrapperZC0ZCbaseZCSystemziPosixziInternalsZCSEEKzuEND @
        case wild2.s42331.0{- value -} of
          ("GHC.Prim.Unit#" ds1.s42333.0) ->
              letS sat.s42334.0 = "narrow32Int#" @ ds1.s42333.0{- value -}
              "$j.s42307.0" @ sat.s42334.0{- value -}

"GHC.IO.FD.$w$cseek.closure.0" ds8.s42308.1 wild.s42306.2 ww.s42302.2 void.040.1409 =
  letS wild1.s42311.0 = ghczuwrapperZC23ZCbaseZCSystemziPosixziInternalsZClseek @ ww.s42302.2{- value -} wild.s42306.2{- value -} ds8.s42308.1{- value -}
  case wild1.s42311.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s42313.0) ->
        let sat.s42314.1 = ["GHC.Int.I64#" ds11.s42313.0{- value -}]
        ["GHC.Prim.Unit#" sat.s42314.1]

"GHC.IO.FD.$w$cseek.closure.1" wild.s42306.1 ww.s42302.1 ds8.s42308.0 =
  let sat.s42315.1 = "GHC.IO.FD.$w$cseek.closure.0" @ ds8.s42308.0{- value -} wild.s42306.1{- value -} ww.s42302.1{- value -}
  letS ds1.s42316.0 = Foreign.C.Error.throwErrnoIfMinus1Retry2 @ "GHC.IO.FD.$fIODeviceFD16" "GHC.IO.FD.$fIODeviceFD18" sat.s42315.1 #"GHC.Prim.void#"
  case ds1.s42316.0 of
    ("GHC.Prim.Unit#" ipv1.s42318.0) ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.FD.$w$ctell" ww.s42279.0 void.040.1405 =
  letS wild.s42282.0 = ghczuwrapperZC2ZCbaseZCSystemziPosixziInternalsZCSEEKzuCUR @
  case wild.s42282.0{- value -} of
    ("GHC.Prim.Unit#" ds1.s42284.0) ->
        let sat.s42292.0 = "GHC.IO.FD.$w$ctell.closure.0" @ ds1.s42284.0{- value -} ww.s42279.0{- value -}
        letS ds2.s42293.0 = Foreign.C.Error.throwErrnoIfMinus1Retry2 @ "GHC.IO.FD.$fIODeviceFD16" "GHC.IO.FD.$fIODeviceFD14" sat.s42292.0 #"GHC.Prim.void#"
        case ds2.s42293.0 of
          ("GHC.Prim.Unit#" ipv1.s42295.0) ->
              let sat.s42296.0 = "GHC.IO.FD.$w$ctell.closure.1" @ ipv1.s42295.0
              ["GHC.Prim.Unit#" sat.s42296.0]

"GHC.IO.FD.$w$ctell.closure.0" ds1.s42284.1 ww.s42279.1 void.040.1406 =
  letS sat.s42287.0 = "narrow32Int#" @ ds1.s42284.1{- value -}
       wild1.s42288.0 = ghczuwrapperZC23ZCbaseZCSystemziPosixziInternalsZClseek @ ww.s42279.1{- value -} 0 sat.s42287.0{- value -}
  case wild1.s42288.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s42290.0) ->
        let sat.s42291.0 = ["GHC.Int.I64#" ds11.s42290.0{- value -}]
        ["GHC.Prim.Unit#" sat.s42291.0]

"GHC.IO.FD.$w$ctell.closure.1" ipv1.s42295.1 =
  "GHC.Int.$fIntegralInt64_$ctoInteger" @ ipv1.s42295.1

"GHC.IO.FD.$w$cwriteNonBlocking" ww.s42049.0 ww1.s42050.0 ww2.s42051.0 ww3.s42052.0 void.040.1394 =
  letS wild.s42054.0 = ww1.s42050.0{- value -}
  case wild.s42054.0{- value -} of
    _ ->
        let sat.s42062.0 = "GHC.IO.FD.$w$cwriteNonBlocking.closure.0" @ ww.s42049.0{- value -} ww2.s42051.0{- value -} ww3.s42052.0{- value -}
        letS ds1.s42063.0 = "GHC.IO.FD.$fBufferedIOFD5" @ "GHC.IO.FD.$fBufferedIOFD_loc" sat.s42062.0 "GHC.IO.FD.$fBufferedIOFD3" #"GHC.Prim.void#"
        case ds1.s42063.0 of
          ("GHC.Prim.Unit#" ipv1.s42065.0) ->
              letS wild1.s42066.0 = ipv1.s42065.0
              case wild1.s42066.0 of
                ("GHC.Int.I64#" x.s42067.0) ->
                    letS wild2.s42068.0 = x.s42067.0{- value -}
                    case wild2.s42068.0{- value -} of
                      _ ->
                          letS sat.s42069.0 = "narrow32Int#" @ wild2.s42068.0{- value -}
                          let sat.s42070.0 = ["GHC.Types.I#" sat.s42069.0{- value -}]
                          ["GHC.Prim.Unit#" sat.s42070.0]
                      -1 ->
                          ["GHC.Prim.Unit#" "GHC.IO.FD.$fBufferedIOFD2"]
    0 ->
        letS wild1.s42072.0 = fdReady @ ww.s42049.0{- value -} 1u 0 0u
        case wild1.s42072.0{- value -} of
          ("GHC.Prim.Unit#" ds1.s42074.0) ->
              letS wild2.s42075.0 = "narrow32Int#" @ ds1.s42074.0{- value -}
              case wild2.s42075.0{- value -} of
                _ ->
                    letS wild3.s42077.0 = rtsSupportsBoundThreads @
                    case wild3.s42077.0{- value -} of
                      ("GHC.Prim.Unit#" ds3.s42079.0) ->
                          letS wild4.s42080.0 = ds3.s42079.0{- value -}
                          case wild4.s42080.0{- value -} of
                            _ ->
                                let sat.s42088.0 = "GHC.IO.FD.$w$cwriteNonBlocking.closure.1" @ ww.s42049.0{- value -} ww2.s42051.0{- value -} ww3.s42052.0{- value -}
                                letS ds4.s42089.0 = "GHC.IO.FD.$fBufferedIOFD5" @ "GHC.IO.FD.$fBufferedIOFD_loc" sat.s42088.0 "GHC.IO.FD.$fBufferedIOFD3" #"GHC.Prim.void#"
                                case ds4.s42089.0 of
                                  ("GHC.Prim.Unit#" ipv1.s42091.0) ->
                                      letS wild5.s42092.0 = ipv1.s42091.0
                                      case wild5.s42092.0 of
                                        ("GHC.Int.I64#" x.s42093.0) ->
                                            letS wild6.s42094.0 = x.s42093.0{- value -}
                                            case wild6.s42094.0{- value -} of
                                              _ ->
                                                  letS sat.s42095.0 = "narrow32Int#" @ wild6.s42094.0{- value -}
                                                  let sat.s42096.0 = ["GHC.Types.I#" sat.s42095.0{- value -}]
                                                  ["GHC.Prim.Unit#" sat.s42096.0]
                                              -1 ->
                                                  ["GHC.Prim.Unit#" "GHC.IO.FD.$fBufferedIOFD2"]
                            0 ->
                                let sat.s42104.1 = "GHC.IO.FD.$w$cwriteNonBlocking.closure.2" @ ww.s42049.0{- value -} ww2.s42051.0{- value -} ww3.s42052.0{- value -}
                                letS ds4.s42105.0 = "GHC.IO.FD.$fBufferedIOFD5" @ "GHC.IO.FD.$fBufferedIOFD_loc" sat.s42104.1 "GHC.IO.FD.$fBufferedIOFD3" #"GHC.Prim.void#"
                                case ds4.s42105.0 of
                                  ("GHC.Prim.Unit#" ipv1.s42107.0) ->
                                      letS wild5.s42108.0 = ipv1.s42107.0
                                      case wild5.s42108.0 of
                                        ("GHC.Int.I64#" x.s42109.0) ->
                                            letS wild6.s42110.0 = x.s42109.0{- value -}
                                            case wild6.s42110.0{- value -} of
                                              _ ->
                                                  letS sat.s42111.0 = "narrow32Int#" @ wild6.s42110.0{- value -}
                                                  let sat.s42112.1 = ["GHC.Types.I#" sat.s42111.0{- value -}]
                                                  ["GHC.Prim.Unit#" sat.s42112.1]
                                              -1 ->
                                                  ["GHC.Prim.Unit#" "GHC.IO.FD.$fBufferedIOFD2"]
                0 ->
                    ["GHC.Prim.Unit#" "GHC.IO.FD.$fBufferedIOFD2"]

"GHC.IO.FD.$w$cwriteNonBlocking.closure.0" ww.s42049.1 ww2.s42051.1 ww3.s42052.1 void.040.1395 =
  letS sat.s42057.1 = "int2Word#" @ ww3.s42052.1{- value -}
       wild1.s42058.0 = ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite @ ww.s42049.1{- value -} ww2.s42051.1{- value -} sat.s42057.1{- value -}
  case wild1.s42058.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s42060.0) ->
        let sat.s42061.0 = ["GHC.Int.I64#" ds11.s42060.0{- value -}]
        ["GHC.Prim.Unit#" sat.s42061.0]

"GHC.IO.FD.$w$cwriteNonBlocking.closure.1" ww.s42049.2 ww2.s42051.2 ww3.s42052.2 void.040.1396 =
  letS sat.s42083.1 = "int2Word#" @ ww3.s42052.2{- value -}
       wild5.s42084.0 = ghczuwrapperZC19ZCbaseZCSystemziPosixziInternalsZCwrite @ ww.s42049.2{- value -} ww2.s42051.2{- value -} sat.s42083.1{- value -}
  case wild5.s42084.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s42086.0) ->
        let sat.s42087.0 = ["GHC.Int.I64#" ds11.s42086.0{- value -}]
        ["GHC.Prim.Unit#" sat.s42087.0]

"GHC.IO.FD.$w$cwriteNonBlocking.closure.2" ww.s42049.3 ww2.s42051.3 ww3.s42052.3 void.040.1397 =
  letS sat.s42099.1 = "int2Word#" @ ww3.s42052.3{- value -}
       wild5.s42100.0 = ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite @ ww.s42049.3{- value -} ww2.s42051.3{- value -} sat.s42099.1{- value -}
  case wild5.s42100.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s42102.0) ->
        let sat.s42103.0 = ["GHC.Int.I64#" ds11.s42102.0{- value -}]
        ["GHC.Prim.Unit#" sat.s42103.0]

"GHC.IO.FD.$wclose" ww.s42579.0 void.040.1436 =
  let sat.s42589.0 = "GHC.IO.FD.$wclose.closure.0" @ ww.s42579.0{- value -}
  letS ds1.s42590.1 = Foreign.C.Error.throwErrnoIfMinus1Retry2 @ "GHC.IO.FD.$fIODeviceFD25" "GHC.IO.FD.$fIODeviceFD23" sat.s42589.0 #"GHC.Prim.void#"
  case ds1.s42590.1 of
    ("GHC.Prim.Unit#" ipv1.s42592.0) ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.FD.$wclose.closure.0" ww.s42579.1 void.040.1437 =
  letS sat.s42583.0 = "narrow32Int#" @ ww.s42579.1{- value -}
       wild.s42584.0 = close @ sat.s42583.0{- value -}
  case wild.s42584.0{- value -} of
    ("GHC.Prim.Unit#" ds5.s42586.0) ->
        letS sat.s42587.0 = "narrow32Int#" @ ds5.s42586.0{- value -}
        let sat.s42588.0 = ["GHC.Int.I32#" sat.s42587.0{- value -}]
        ["GHC.Prim.Unit#" sat.s42588.0]

"GHC.IO.FD.$wfdWrite" ww.s42024.0 ww1.s42025.0 ww2.s42026.0 ww3.s42027.0 void.040.1392 =
  letS sat.s42029.0 = "int2Word#" @ ww3.s42027.0{- value -}
       ds1.s42030.0 = "GHC.IO.FD.$wwriteRawBufferPtr" @ GHC.IO.FD.lvl1 ww.s42024.0{- value -} ww1.s42025.0{- value -} ww2.s42026.0{- value -} 0 sat.s42029.0{- value -} #"GHC.Prim.void#"
  case ds1.s42030.0 of
    ("GHC.Prim.Unit#" ipv1.s42032.0) ->
        letS wild.s42033.0 = ipv1.s42032.0
        case wild.s42033.0 of
          ("GHC.Int.I32#" "x#.s42034.0") ->
              letS lwild.s42035.0 = "<#" @ "x#.s42034.0"{- value -} ww3.s42027.0{- value -}
              case lwild.s42035.0{- value -} of
                _ ->
                    ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                1 ->
                    letS sat.s42037.0 = "-#" @ ww3.s42027.0{- value -} "x#.s42034.0"{- value -}
                         sat.s42036.0 = "plusAddr#" @ ww2.s42026.0{- value -} "x#.s42034.0"{- value -}
                    "GHC.IO.FD.$wfdWrite" @ ww.s42024.0{- value -} ww1.s42025.0{- value -} sat.s42036.0{- value -} sat.s42037.0{- value -} #"GHC.Prim.void#"

"GHC.IO.FD.$wreadRawBufferPtr" w.s41820.0 ww.s41821.0 ww1.s41822.0 ww2.s41823.0 ww3.s41824.0 ww4.s41825.0 void.040.1381 =
  let "$sdo_read.s41827.0" = "GHC.IO.FD.$wreadRawBufferPtr.closure.2" @ w.s41820.0 ww.s41821.0{- value -}
  letS wild.s41847.0 = ww1.s41822.0{- value -}
  case wild.s41847.0{- value -} of
    _ ->
        let sat.s41855.0 = "GHC.IO.FD.$wreadRawBufferPtr.closure.3" @ ww.s41821.0{- value -} ww2.s41823.0{- value -} ww3.s41824.0{- value -} ww4.s41825.0{- value -}
        "$sdo_read.s41827.0" @ sat.s41855.0 #"GHC.Prim.void#"
    0 ->
        letS wild1.s41857.1 = fdReady @ ww.s41821.0{- value -} 0u 0 0u
        case wild1.s41857.1{- value -} of
          ("GHC.Prim.Unit#" ds1.s41859.0) ->
              let "$w$j.s41860.0" = "GHC.IO.FD.$wreadRawBufferPtr.closure.7" @ "$sdo_read.s41827.0" ww.s41821.0{- value -} ww2.s41823.0{- value -} ww3.s41824.0{- value -} ww4.s41825.0{- value -}
              letS wild2.s41899.0 = "narrow32Int#" @ ds1.s41859.0{- value -}
              case wild2.s41899.0{- value -} of
                _ ->
                    "$w$j.s41860.0" @ #"GHC.Prim.void#" wild2.s41899.0{- value -}
                -1 ->
                    letS ds2.s41900.0 = Foreign.C.Error.throwErrno1 @ w.s41820.0 #"GHC.Prim.void#"
                    case ds2.s41900.0 of
                      ("GHC.Prim.Unit#" ipv1.s41902.0) ->
                          letS ww5.s41903.0 = ipv1.s41902.0
                          case ww5.s41903.0 of
                            ("GHC.Int.I32#" ww6.s41904.0) ->
                                "$w$j.s41860.0" @ #"GHC.Prim.void#" ww6.s41904.0{- value -}

"GHC.IO.FD.$wreadRawBufferPtr.closure.0" ww.s41821.2 void.X60.1 =
  letS wild.s41832.0 = rtsSupportsBoundThreads @
  case wild.s41832.0{- value -} of
    ("GHC.Prim.Unit#" ds1.s41834.0) ->
        letS wild1.s41835.0 = ds1.s41834.0{- value -}
        case wild1.s41835.0{- value -} of
          _ ->
              letS sat.s41836.0 = "narrow32Int#" @ ww.s41821.2{- value -}
              let sat.s41837.0 = ["GHC.Int.I32#" sat.s41836.0{- value -}]
              GHC.Event.Thread.threadWaitRead1 @ GHC.Event.Internal.evtRead sat.s41837.0 #"GHC.Prim.void#"
          0 ->
              letS sat.s41838.0 = "narrow32Int#" @ ww.s41821.2{- value -}
                   s'.s41839.0 = "waitRead#" @ sat.s41838.0{- value -}
              case s'.s41839.0{- value -} of
                ("GHC.Prim.(##)") ->
                    ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.FD.$wreadRawBufferPtr.closure.1" ipv1.s41843.1 =
  letS wild.s41844.0 = ipv1.s41843.1
  case wild.s41844.0 of
    ("GHC.Int.I64#" "x#.s41845.0") ->
        ["GHC.Types.I#" "x#.s41845.0"{- value -}]

"GHC.IO.FD.$wreadRawBufferPtr.closure.2" w.s41820.1 ww.s41821.1 eta.s41828.0 void.040.1382 =
  let sat.s41840.0 = "GHC.IO.FD.$wreadRawBufferPtr.closure.0" @ ww.s41821.1{- value -}
  letS ds.s41841.0 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 @ "GHC.IO.FD.$fBufferedIOFD14" w.s41820.1 eta.s41828.0 sat.s41840.0 #"GHC.Prim.void#"
  case ds.s41841.0 of
    ("GHC.Prim.Unit#" ipv1.s41843.0) ->
        let sat.s41846.0 = "GHC.IO.FD.$wreadRawBufferPtr.closure.1" @ ipv1.s41843.0
        ["GHC.Prim.Unit#" sat.s41846.0]

"GHC.IO.FD.$wreadRawBufferPtr.closure.3" ww.s41821.3 ww2.s41823.1 ww3.s41824.1 ww4.s41825.1 void.040.1383 =
  letS sat.s41850.0 = "plusAddr#" @ ww2.s41823.1{- value -} ww3.s41824.1{- value -}
       wild1.s41851.0 = ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread @ ww.s41821.3{- value -} sat.s41850.0{- value -} ww4.s41825.1{- value -}
  case wild1.s41851.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s41853.0) ->
        let sat.s41854.0 = ["GHC.Int.I64#" ds11.s41853.0{- value -}]
        ["GHC.Prim.Unit#" sat.s41854.0]

"GHC.IO.FD.$wreadRawBufferPtr.closure.4" ww.s41821.6 ww2.s41823.4 ww3.s41824.4 ww4.s41825.4 void.X69.4 =
  letS sat.s41872.0 = "plusAddr#" @ ww2.s41823.4{- value -} ww3.s41824.4{- value -}
       wild4.s41873.0 = ghczuwrapperZC21ZCbaseZCSystemziPosixziInternalsZCread @ ww.s41821.6{- value -} sat.s41872.0{- value -} ww4.s41825.4{- value -}
  case wild4.s41873.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s41875.0) ->
        let sat.s41876.0 = ["GHC.Int.I64#" ds11.s41875.0{- value -}]
        ["GHC.Prim.Unit#" sat.s41876.0]

"GHC.IO.FD.$wreadRawBufferPtr.closure.5" ww.s41821.7 ww2.s41823.5 ww3.s41824.5 ww4.s41825.5 void.X69.5 =
  letS sat.s41880.0 = "plusAddr#" @ ww2.s41823.5{- value -} ww3.s41824.5{- value -}
       wild4.s41881.0 = ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread @ ww.s41821.7{- value -} sat.s41880.0{- value -} ww4.s41825.5{- value -}
  case wild4.s41881.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s41883.0) ->
        let sat.s41884.0 = ["GHC.Int.I64#" ds11.s41883.0{- value -}]
        ["GHC.Prim.Unit#" sat.s41884.0]

"GHC.IO.FD.$wreadRawBufferPtr.closure.6" "$sdo_read.s41827.2" ww.s41821.5 ww2.s41823.3 ww3.s41824.3 ww4.s41825.3 void.X64.3 =
  letS wild2.s41866.0 = rtsSupportsBoundThreads @
  case wild2.s41866.0{- value -} of
    ("GHC.Prim.Unit#" ds3.s41868.0) ->
        letS wild3.s41869.0 = ds3.s41868.0{- value -}
        case wild3.s41869.0{- value -} of
          _ ->
              let sat.s41877.0 = "GHC.IO.FD.$wreadRawBufferPtr.closure.4" @ ww.s41821.5{- value -} ww2.s41823.3{- value -} ww3.s41824.3{- value -} ww4.s41825.3{- value -}
              "$sdo_read.s41827.2" @ sat.s41877.0 #"GHC.Prim.void#"
          0 ->
              let sat.s41885.0 = "GHC.IO.FD.$wreadRawBufferPtr.closure.5" @ ww.s41821.5{- value -} ww2.s41823.3{- value -} ww3.s41824.3{- value -} ww4.s41825.3{- value -}
              "$sdo_read.s41827.2" @ sat.s41885.0 #"GHC.Prim.void#"

"GHC.IO.FD.$wreadRawBufferPtr.closure.7" "$sdo_read.s41827.1" ww.s41821.4 ww2.s41823.2 ww3.s41824.2 ww4.s41825.2 void.040.1384 ww5.s41862.0 =
  let read.s41863.0 = "GHC.IO.FD.$wreadRawBufferPtr.closure.6" @ "$sdo_read.s41827.1" ww.s41821.4{- value -} ww2.s41823.2{- value -} ww3.s41824.2{- value -} ww4.s41825.2{- value -}
  letS wild2.s41886.1 = ww5.s41862.0{- value -}
  case wild2.s41886.1{- value -} of
    _ ->
        read.s41863.0 @ #"GHC.Prim.void#"
    0 ->
        letS wild3.s41888.0 = rtsSupportsBoundThreads @
        case wild3.s41888.0{- value -} of
          ("GHC.Prim.Unit#" ds3.s41890.0) ->
              letS wild4.s41891.0 = ds3.s41890.0{- value -}
              case wild4.s41891.0{- value -} of
                _ ->
                    letS sat.s41892.0 = "narrow32Int#" @ ww.s41821.4{- value -}
                    let sat.s41893.0 = ["GHC.Int.I32#" sat.s41892.0{- value -}]
                    letS ds4.s41894.0 = GHC.Event.Thread.threadWaitRead1 @ GHC.Event.Internal.evtRead sat.s41893.0 #"GHC.Prim.void#"
                    case ds4.s41894.0 of
                      ("GHC.Prim.Unit#" ipv1.s41896.0) ->
                          read.s41863.0 @ #"GHC.Prim.void#"
                0 ->
                    letS sat.s41897.1 = "narrow32Int#" @ ww.s41821.4{- value -}
                         s'.s41898.0 = "waitRead#" @ sat.s41897.1{- value -}
                    case s'.s41898.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          read.s41863.0 @ #"GHC.Prim.void#"

"GHC.IO.FD.$wreadRawBufferPtrNoBlock" w.s41738.0 ww.s41739.0 ww1.s41740.0 ww2.s41741.0 ww3.s41742.0 ww4.s41743.0 void.040.1374 =
  let "$sdo_read.s41745.0" = "GHC.IO.FD.$wreadRawBufferPtrNoBlock.closure.0" @ w.s41738.0
  letS wild.s41755.0 = ww1.s41740.0{- value -}
  case wild.s41755.0{- value -} of
    _ ->
        let sat.s41763.0 = "GHC.IO.FD.$wreadRawBufferPtrNoBlock.closure.1" @ ww.s41739.0{- value -} ww2.s41741.0{- value -} ww3.s41742.0{- value -} ww4.s41743.0{- value -}
        "$sdo_read.s41745.0" @ sat.s41763.0 #"GHC.Prim.void#"
    0 ->
        letS wild1.s41765.0 = fdReady @ ww.s41739.0{- value -} 0u 0 0u
        case wild1.s41765.0{- value -} of
          ("GHC.Prim.Unit#" ds1.s41767.0) ->
              letS wild2.s41768.0 = "narrow32Int#" @ ds1.s41767.0{- value -}
              case wild2.s41768.0{- value -} of
                _ ->
                    let sat.s41776.0 = "GHC.IO.FD.$wreadRawBufferPtrNoBlock.closure.2" @ ww.s41739.0{- value -} ww2.s41741.0{- value -} ww3.s41742.0{- value -} ww4.s41743.0{- value -}
                    "$sdo_read.s41745.0" @ sat.s41776.0 #"GHC.Prim.void#"
                0 ->
                    ["GHC.Prim.Unit#" "GHC.IO.FD.$fBufferedIOFD2"]

"GHC.IO.FD.$wreadRawBufferPtrNoBlock.closure.0" w.s41738.1 call.s41746.0 void.040.1375 =
  letS ds1.s41748.0 = "GHC.IO.FD.$fBufferedIOFD5" @ w.s41738.1 call.s41746.0 "GHC.IO.FD.$fBufferedIOFD3" #"GHC.Prim.void#"
  case ds1.s41748.0 of
    ("GHC.Prim.Unit#" ipv1.s41750.0) ->
        letS wild.s41751.0 = ipv1.s41750.0
        case wild.s41751.0 of
          ("GHC.Int.I64#" x.s41752.0) ->
              letS wild1.s41753.0 = x.s41752.0{- value -}
              case wild1.s41753.0{- value -} of
                _ ->
                    let sat.s41754.1 = ["GHC.Types.I#" wild1.s41753.0{- value -}]
                    ["GHC.Prim.Unit#" sat.s41754.1]
                -1 ->
                    ["GHC.Prim.Unit#" "GHC.IO.FD.$fBufferedIOFD2"]
                0 ->
                    ["GHC.Prim.Unit#" "GHC.IO.FD.$fBufferedIOFD10"]

"GHC.IO.FD.$wreadRawBufferPtrNoBlock.closure.1" ww.s41739.1 ww2.s41741.1 ww3.s41742.1 ww4.s41743.1 void.040.1376 =
  letS sat.s41758.0 = "plusAddr#" @ ww2.s41741.1{- value -} ww3.s41742.1{- value -}
       wild1.s41759.0 = ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread @ ww.s41739.1{- value -} sat.s41758.0{- value -} ww4.s41743.1{- value -}
  case wild1.s41759.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s41761.0) ->
        let sat.s41762.0 = ["GHC.Int.I64#" ds11.s41761.0{- value -}]
        ["GHC.Prim.Unit#" sat.s41762.0]

"GHC.IO.FD.$wreadRawBufferPtrNoBlock.closure.2" ww.s41739.2 ww2.s41741.2 ww3.s41742.2 ww4.s41743.2 void.040.1377 =
  letS sat.s41771.1 = "plusAddr#" @ ww2.s41741.2{- value -} ww3.s41742.2{- value -}
       wild3.s41772.1 = ghczuwrapperZC21ZCbaseZCSystemziPosixziInternalsZCread @ ww.s41739.2{- value -} sat.s41771.1{- value -} ww4.s41743.2{- value -}
  case wild3.s41772.1{- value -} of
    ("GHC.Prim.Unit#" ds11.s41774.0) ->
        let sat.s41775.0 = ["GHC.Int.I64#" ds11.s41774.0{- value -}]
        ["GHC.Prim.Unit#" sat.s41775.0]

"GHC.IO.FD.$wsetSize" ww.s42345.0 w.s42346.0 void.040.1412 =
  letS wild.s42348.0 = GHC.Integer.Type.integerToInt @ w.s42346.0
       wild1.s42350.0 = __hscore_ftruncate @ ww.s42345.0{- value -} wild.s42348.0{- value -}
  case wild1.s42350.0{- value -} of
    ("GHC.Prim.Unit#" ds8.s42352.0) ->
        letS wild2.s42353.0 = "narrow32Int#" @ ds8.s42352.0{- value -}
        case wild2.s42353.0{- value -} of
          _ ->
              letS wild3.s42355.0 = __hscore_get_errno @
              case wild3.s42355.0{- value -} of
                ("GHC.Prim.Unit#" ds2.s42357.0) ->
                    "GHC.IO.FD.$fIODeviceFD11" @ #"GHC.Prim.void#" ds2.s42357.0{- value -}
          0 ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.FD.$wwriteRawBufferPtr" w.s41932.0 ww.s41933.0 ww1.s41934.0 ww2.s41935.0 ww3.s41936.0 ww4.s41937.0 void.040.1387 =
  let "$sdo_write.s41939.0" = "GHC.IO.FD.$wwriteRawBufferPtr.closure.2" @ w.s41932.0 ww.s41933.0{- value -}
  letS wild.s41960.0 = ww1.s41934.0{- value -}
  case wild.s41960.0{- value -} of
    _ ->
        let sat.s41968.0 = "GHC.IO.FD.$wwriteRawBufferPtr.closure.3" @ ww.s41933.0{- value -} ww2.s41935.0{- value -} ww3.s41936.0{- value -} ww4.s41937.0{- value -}
        "$sdo_write.s41939.0" @ sat.s41968.0 #"GHC.Prim.void#"
    0 ->
        letS wild1.s41970.0 = fdReady @ ww.s41933.0{- value -} 1u 0 0u
        case wild1.s41970.0{- value -} of
          ("GHC.Prim.Unit#" ds1.s41972.0) ->
              let write.s41973.0 = "GHC.IO.FD.$wwriteRawBufferPtr.closure.6" @ "$sdo_write.s41939.0" ww.s41933.0{- value -} ww2.s41935.0{- value -} ww3.s41936.0{- value -} ww4.s41937.0{- value -}
              letS wild2.s41996.0 = "narrow32Int#" @ ds1.s41972.0{- value -}
              case wild2.s41996.0{- value -} of
                _ ->
                    write.s41973.0 @ #"GHC.Prim.void#"
                0 ->
                    letS wild3.s41998.0 = rtsSupportsBoundThreads @
                    case wild3.s41998.0{- value -} of
                      ("GHC.Prim.Unit#" ds3.s42000.0) ->
                          letS wild4.s42001.0 = ds3.s42000.0{- value -}
                          case wild4.s42001.0{- value -} of
                            _ ->
                                letS sat.s42002.1 = "narrow32Int#" @ ww.s41933.0{- value -}
                                let sat.s42003.1 = ["GHC.Int.I32#" sat.s42002.1{- value -}]
                                letS ds4.s42004.0 = GHC.Event.Thread.threadWaitRead1 @ GHC.Event.Internal.evtWrite sat.s42003.1 #"GHC.Prim.void#"
                                case ds4.s42004.0 of
                                  ("GHC.Prim.Unit#" ipv1.s42006.0) ->
                                      write.s41973.0 @ #"GHC.Prim.void#"
                            0 ->
                                letS sat.s42007.1 = "narrow32Int#" @ ww.s41933.0{- value -}
                                     s'.s42008.0 = "waitWrite#" @ sat.s42007.1{- value -}
                                case s'.s42008.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      write.s41973.0 @ #"GHC.Prim.void#"

"GHC.IO.FD.$wwriteRawBufferPtr.closure.0" ww.s41933.2 void.X63.4 =
  letS wild.s41944.0 = rtsSupportsBoundThreads @
  case wild.s41944.0{- value -} of
    ("GHC.Prim.Unit#" ds1.s41946.0) ->
        letS wild1.s41947.0 = ds1.s41946.0{- value -}
        case wild1.s41947.0{- value -} of
          _ ->
              letS sat.s41948.1 = "narrow32Int#" @ ww.s41933.2{- value -}
              let sat.s41949.1 = ["GHC.Int.I32#" sat.s41948.1{- value -}]
              GHC.Event.Thread.threadWaitRead1 @ GHC.Event.Internal.evtWrite sat.s41949.1 #"GHC.Prim.void#"
          0 ->
              letS sat.s41950.0 = "narrow32Int#" @ ww.s41933.2{- value -}
                   s'.s41951.0 = "waitWrite#" @ sat.s41950.0{- value -}
              case s'.s41951.0{- value -} of
                ("GHC.Prim.(##)") ->
                    ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.FD.$wwriteRawBufferPtr.closure.1" ipv1.s41955.1 =
  letS wild.s41956.0 = ipv1.s41955.1
  case wild.s41956.0 of
    ("GHC.Int.I64#" "x#.s41957.0") ->
        letS sat.s41958.0 = "narrow32Int#" @ "x#.s41957.0"{- value -}
        ["GHC.Int.I32#" sat.s41958.0{- value -}]

"GHC.IO.FD.$wwriteRawBufferPtr.closure.2" w.s41932.1 ww.s41933.1 eta.s41940.0 void.040.1388 =
  let sat.s41952.0 = "GHC.IO.FD.$wwriteRawBufferPtr.closure.0" @ ww.s41933.1{- value -}
  letS ds.s41953.0 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 @ "GHC.IO.FD.$fBufferedIOFD14" w.s41932.1 eta.s41940.0 sat.s41952.0 #"GHC.Prim.void#"
  case ds.s41953.0 of
    ("GHC.Prim.Unit#" ipv1.s41955.0) ->
        let sat.s41959.1 = "GHC.IO.FD.$wwriteRawBufferPtr.closure.1" @ ipv1.s41955.0
        ["GHC.Prim.Unit#" sat.s41959.1]

"GHC.IO.FD.$wwriteRawBufferPtr.closure.3" ww.s41933.3 ww2.s41935.1 ww3.s41936.1 ww4.s41937.1 void.040.1389 =
  letS sat.s41963.0 = "plusAddr#" @ ww2.s41935.1{- value -} ww3.s41936.1{- value -}
       wild1.s41964.0 = ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite @ ww.s41933.3{- value -} sat.s41963.0{- value -} ww4.s41937.1{- value -}
  case wild1.s41964.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s41966.0) ->
        let sat.s41967.0 = ["GHC.Int.I64#" ds11.s41966.0{- value -}]
        ["GHC.Prim.Unit#" sat.s41967.0]

"GHC.IO.FD.$wwriteRawBufferPtr.closure.4" ww.s41933.5 ww2.s41935.3 ww3.s41936.3 ww4.s41937.3 void.X69.6 =
  letS sat.s41982.0 = "plusAddr#" @ ww2.s41935.3{- value -} ww3.s41936.3{- value -}
       wild4.s41983.0 = ghczuwrapperZC19ZCbaseZCSystemziPosixziInternalsZCwrite @ ww.s41933.5{- value -} sat.s41982.0{- value -} ww4.s41937.3{- value -}
  case wild4.s41983.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s41985.0) ->
        let sat.s41986.0 = ["GHC.Int.I64#" ds11.s41985.0{- value -}]
        ["GHC.Prim.Unit#" sat.s41986.0]

"GHC.IO.FD.$wwriteRawBufferPtr.closure.5" ww.s41933.6 ww2.s41935.4 ww3.s41936.4 ww4.s41937.4 void.X69.7 =
  letS sat.s41990.0 = "plusAddr#" @ ww2.s41935.4{- value -} ww3.s41936.4{- value -}
       wild4.s41991.0 = ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite @ ww.s41933.6{- value -} sat.s41990.0{- value -} ww4.s41937.4{- value -}
  case wild4.s41991.0{- value -} of
    ("GHC.Prim.Unit#" ds11.s41993.0) ->
        let sat.s41994.1 = ["GHC.Int.I64#" ds11.s41993.0{- value -}]
        ["GHC.Prim.Unit#" sat.s41994.1]

"GHC.IO.FD.$wwriteRawBufferPtr.closure.6" "$sdo_write.s41939.1" ww.s41933.4 ww2.s41935.2 ww3.s41936.2 ww4.s41937.2 void.040.1390 =
  letS wild2.s41976.0 = rtsSupportsBoundThreads @
  case wild2.s41976.0{- value -} of
    ("GHC.Prim.Unit#" ds3.s41978.0) ->
        letS wild3.s41979.0 = ds3.s41978.0{- value -}
        case wild3.s41979.0{- value -} of
          _ ->
              let sat.s41987.1 = "GHC.IO.FD.$wwriteRawBufferPtr.closure.4" @ ww.s41933.4{- value -} ww2.s41935.2{- value -} ww3.s41936.2{- value -} ww4.s41937.2{- value -}
              "$sdo_write.s41939.1" @ sat.s41987.1 #"GHC.Prim.void#"
          0 ->
              let sat.s41995.1 = "GHC.IO.FD.$wwriteRawBufferPtr.closure.5" @ ww.s41933.4{- value -} ww2.s41935.2{- value -} ww3.s41936.2{- value -} ww4.s41937.2{- value -}
              "$sdo_write.s41939.1" @ sat.s41995.1 #"GHC.Prim.void#"

GHC.IO.FD.lvl =
  #"GHC.IO.FD.fdWrite"

GHC.IO.FD.lvl1 =
  "GHC.CString.unpackCString#" @ GHC.IO.FD.lvl{- value -}

GHC.IO.FD.lvl2 =
  ["GHC.Int.I64#" -1]

GHC.IO.FD.lvl3 =
  #"GHC.IO.FD.setSize"

GHC.IO.FD.lvl4 =
  "GHC.CString.unpackCString#" @ GHC.IO.FD.lvl3{- value -}

GHC.IO.FD.lvl5 =
  #"GHC.IO.FD.dup2"

GHC.IO.FD.lvl6 =
  "GHC.CString.unpackCString#" @ GHC.IO.FD.lvl5{- value -}

GHC.IO.FD.stdout =
  [GHC.IO.FD.FD 1 0]

"GHC.IO.Handle.FD.$wstdHandleFinalizer" w.s23286.0 ww.s23287.0 void.040.1607 =
  letS ds1.s23289.0 = "takeMVar#" @ ww.s23287.0
  case ds1.s23289.0 of
    ("GHC.Prim.Unit#" ipv1.s23291.0) ->
        letS wild.s23292.0 = ipv1.s23291.0
        case wild.s23292.0 of
          (GHC.IO.Handle.Types.Handle__ "$dIODevice.s23293.0" "$dBufferedIO.s23294.0" "$dTypeable.s23295.0" ds.s23296.0 ds2.s23297.0 dt.s23298.0 ds3.s23299.0 dt1.s23300.0 dt2.s23301.0 dt3.s23302.0 ds4.s23303.0 ds5.s23304.0 ds6.s23305.0 ds7.s23306.0 ds8.s23307.0 ds9.s23308.0) ->
              letS ds10.s23309.0 = "readMutVar#" @ dt.s23298.0
              case ds10.s23309.0 of
                ("GHC.Prim.Unit#" ipv3.s23311.0) ->
                    letS wild1.s23312.0 = ipv3.s23311.0
                    case wild1.s23312.0 of
                      (GHC.IO.Buffer.Buffer dt4.s23313.0 dt5.s23314.0 ds11.s23315.0 dt6.s23316.0 dt7.s23317.0 dt8.s23318.0) ->
                          let "$w$j.s23319.0" = "GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.5" @ ds2.s23297.0 ds4.s23303.0 ds5.s23304.0 w.s23286.0 ww.s23287.0
                          letS wild2.s23365.0 = ds11.s23315.0
                          case wild2.s23365.0 of
                            (GHC.IO.Buffer.ReadBuffer) ->
                                "$w$j.s23319.0" @ #"GHC.Prim.void#"
                            (GHC.IO.Buffer.WriteBuffer) ->
                                letS ds12.s23366.0 = "readMutVar#" @ dt.s23298.0
                                case ds12.s23366.0 of
                                  ("GHC.Prim.Unit#" ipv5.s23368.0) ->
                                      letS wild3.s23369.0 = ipv5.s23368.0
                                      case wild3.s23369.0 of
                                        (GHC.IO.Buffer.Buffer dt9.s23370.0 dt10.s23371.0 ds13.s23372.0 dt11.s23373.0 dt12.s23374.0 dt13.s23375.0) ->
                                            letS lwild.s23376.1 = "==#" @ dt12.s23374.0{- value -} dt13.s23375.0{- value -}
                                            case lwild.s23376.1{- value -} of
                                              _ ->
                                                  letS ds14.s23377.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s23294.0" ds.s23296.0 wild3.s23369.0 #"GHC.Prim.void#"
                                                  case ds14.s23377.0 of
                                                    ("GHC.Prim.Unit#" ipv7.s23379.0) ->
                                                        letS "s2#.s23380.0" = "writeMutVar#" @ dt.s23298.0 ipv7.s23379.0
                                                        case "s2#.s23380.0"{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              "$w$j.s23319.0" @ #"GHC.Prim.void#"
                                              1 ->
                                                  "$w$j.s23319.0" @ #"GHC.Prim.void#"

"GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.0" w.s23286.2 =
  GHC.IO.Handle.Internals.ioe_finalizedHandle @ w.s23286.2

"GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.1" w.s23286.3 =
  GHC.IO.Handle.Internals.ioe_finalizedHandle @ w.s23286.3

"GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.2" w.s23286.4 =
  GHC.IO.Handle.Internals.ioe_finalizedHandle @ w.s23286.4

"GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.3" w.s23286.5 =
  GHC.IO.Handle.Internals.ioe_finalizedHandle @ w.s23286.5

"GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.4" w.s23286.6 =
  GHC.IO.Handle.Internals.ioe_finalizedHandle @ w.s23286.6

"GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.5" ds2.s23297.1 ds4.s23303.1 ds5.s23304.1 w.s23286.1 ww.s23287.1 void.040.1608 =
  letS wild2.s23321.0 = ds2.s23297.1
  case wild2.s23321.0 of
    _ ->
        letS wild3.s23322.0 = ds5.s23304.1
        case wild3.s23322.0 of
          (GHC.Maybe.Nothing) ->
              letS wild4.s23323.0 = ds4.s23303.1
              case wild4.s23323.0 of
                (GHC.Maybe.Nothing) ->
                    let sat.s23324.0 = "GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.0" @ w.s23286.1
                    letS "s2#.s23325.0" = "putMVar#" @ ww.s23287.1 sat.s23324.0
                    case "s2#.s23325.0"{- value -} of
                      ("GHC.Prim.(##)") ->
                          ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                (GHC.Maybe.Just d.s23326.0) ->
                    letS wild5.s23327.0 = d.s23326.0
                    case wild5.s23327.0 of
                      (GHC.IO.Encoding.Types.BufferCodec ds12.s23328.0 ds13.s23329.0 ds14.s23330.0 ds15.s23331.0 ds16.s23332.0) ->
                          letS ds17.s23333.0 = ds14.s23330.0 @ #"GHC.Prim.void#"
                          case ds17.s23333.0 of
                            ("GHC.Prim.Unit#" ipv5.s23335.0) ->
                                let sat.s23336.0 = "GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.1" @ w.s23286.1
                                letS "s2#.s23337.0" = "putMVar#" @ ww.s23287.1 sat.s23336.0
                                case "s2#.s23337.0"{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      ["GHC.Prim.Unit#" "GHC.Tuple.()"]
          (GHC.Maybe.Just d.s23338.0) ->
              letS wild4.s23339.0 = d.s23338.0
              case wild4.s23339.0 of
                (GHC.IO.Encoding.Types.BufferCodec ds12.s23340.0 ds13.s23341.0 ds14.s23342.0 ds15.s23343.0 ds16.s23344.0) ->
                    letS ds17.s23345.0 = ds14.s23342.0 @ #"GHC.Prim.void#"
                    case ds17.s23345.0 of
                      ("GHC.Prim.Unit#" ipv5.s23347.0) ->
                          letS wild5.s23348.0 = ds4.s23303.1
                          case wild5.s23348.0 of
                            (GHC.Maybe.Nothing) ->
                                let sat.s23349.0 = "GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.2" @ w.s23286.1
                                letS "s2#.s23350.0" = "putMVar#" @ ww.s23287.1 sat.s23349.0
                                case "s2#.s23350.0"{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            (GHC.Maybe.Just d1.s23351.0) ->
                                letS wild6.s23352.0 = d1.s23351.0
                                case wild6.s23352.0 of
                                  (GHC.IO.Encoding.Types.BufferCodec ds18.s23353.0 ds19.s23354.0 ds20.s23355.0 ds21.s23356.0 ds22.s23357.0) ->
                                      letS ds23.s23358.0 = ds20.s23355.0 @ #"GHC.Prim.void#"
                                      case ds23.s23358.0 of
                                        ("GHC.Prim.Unit#" ipv7.s23360.0) ->
                                            let sat.s23361.0 = "GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.3" @ w.s23286.1
                                            letS "s2#.s23362.0" = "putMVar#" @ ww.s23287.1 sat.s23361.0
                                            case "s2#.s23362.0"{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  ["GHC.Prim.Unit#" "GHC.Tuple.()"]
    (GHC.IO.Handle.Types.ClosedHandle) ->
        let sat.s23363.1 = "GHC.IO.Handle.FD.$wstdHandleFinalizer.closure.4" @ w.s23286.1
        letS "s2#.s23364.0" = "putMVar#" @ ww.s23287.1 sat.s23363.1
        case "s2#.s23364.0"{- value -} of
          ("GHC.Prim.(##)") ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Handle.FD.fdToHandle12 =
  letS ww7.s23014.0 = "Data.Typeable.Internal.$wmkTrCon" @ 10838815552519039062u 15546290101957756376u "GHC.IO.FD.$trModule" "GHC.IO.FD.$tcFD1" 0 "GHC.Types.krep$*" "GHC.Types.[]"
  case ww7.s23014.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww8.s23015.0 ww9.s23016.0 ww10.s23017.0 ww11.s23018.0 ww12.s23019.0) ->
        [Data.Typeable.Internal.TrTyCon ww8.s23015.0{- value -} ww9.s23016.0{- value -} ww10.s23017.0 ww11.s23018.0 ww12.s23019.0]

GHC.IO.Handle.FD.lvl10 =
  #"<stdout>"

GHC.IO.Handle.FD.lvl11 =
  "GHC.CString.unpackCString#" @ GHC.IO.Handle.FD.lvl10{- value -}

GHC.IO.Handle.FD.lvl12 void.040.1611 =
  letS s'.s23399.0 = "noDuplicate#" @
  case s'.s23399.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS wild.s23400.0 = GHC.IO.Encoding.getLocaleEncoding1
        case wild.s23400.0 of
          ("GHC.Tuple.(,)" getLocaleEncoding3.s23401.0 setLocaleEncoding1.s23402.0) ->
              letS ds1.s23403.0 = getLocaleEncoding3.s23401.0 @ #"GHC.Prim.void#"
              case ds1.s23403.0 of
                ("GHC.Prim.Unit#" ipv1.s23405.0) ->
                    let sat.s23406.0 = [GHC.Maybe.Just ipv1.s23405.0]
                    GHC.IO.Handle.Internals.mkDuplexHandle9 @ "GHC.IO.FD.$fIODeviceFD" "GHC.IO.FD.$fBufferedIOFD" GHC.IO.Handle.FD.fdToHandle12 GHC.IO.FD.stdout GHC.IO.Handle.FD.lvl11 GHC.IO.Handle.Types.WriteHandle GHC.Types.True sat.s23406.0 GHC.IO.Handle.Types.nativeNewlineMode GHC.IO.Handle.FD.lvl8 GHC.Maybe.Nothing #"GHC.Prim.void#"

GHC.IO.Handle.FD.lvl8 =
  [GHC.Maybe.Just GHC.IO.Handle.FD.stdHandleFinalizer]

GHC.IO.Handle.FD.stdHandleFinalizer w.s23381.0 w1.s23382.0 void.040.1609 =
  letS ww.s23384.0 = w1.s23382.0
  case ww.s23384.0 of
    (GHC.MVar.MVar ww1.s23385.0) ->
        "GHC.IO.Handle.FD.$wstdHandleFinalizer" @ w.s23381.0 ww1.s23385.0 #"GHC.Prim.void#"

GHC.IO.Handle.FD.stdout =
  letS ds.s23407.0 = GHC.IO.Handle.FD.lvl12 @ #"GHC.Prim.realWorld#"
  case ds.s23407.0 of
    ("GHC.Prim.Unit#" ipv1.s23409.0) ->
        ipv1.s23409.0

"GHC.IO.Handle.Internals.$wdo_operation" w.s50001.0 w1.s50002.0 w2.s50003.0 ww.s50004.0 void.040.1681 =
  letS ds1.s50006.0 = "takeMVar#" @ ww.s50004.0
  case ds1.s50006.0 of
    ("GHC.Prim.Unit#" ipv1.s50008.0) ->
        letS nt.s50009.0 = w2.s50003.0 @ ipv1.s50008.0
        let sat.s50031.0 = "GHC.IO.Handle.Internals.$wdo_operation.closure.0" @ ipv1.s50008.0 w.s50001.0 w1.s50002.0 w2.s50003.0 ww.s50004.0
        nt.s50009.0 @ #"GHC.Prim.void#"

"GHC.IO.Handle.Internals.$wdo_operation.closure.0" ipv1.s50008.1 w.s50001.1 w1.s50002.1 w2.s50003.1 ww.s50004.1 e1.s50010.0 void.040.1682 =
  letS "s2#.s50012.0" = "putMVar#" @ ww.s50004.1 ipv1.s50008.1
  case "s2#.s50012.0"{- value -} of
    ("GHC.Prim.(##)") ->
        letS wild.s50013.0 = e1.s50010.0
        case wild.s50013.0 of
          (GHC.Exception.Type.SomeException "$dException1.s50014.0" e3.s50015.0) ->
              letS sat.s50016.0 = "GHC.Exception.Type.$p1Exception" @ "$dException1.s50014.0"
                   wild1.s50017.0 = Data.Typeable.Internal.sameTypeRep @ sat.s50016.0 "GHC.IO.Exception.$fExceptionIOException4"
              case wild1.s50017.0 of
                (GHC.Types.False) ->
                    letS sat.s50018.0 = "GHC.Exception.Type.$p1Exception" @ "$dException1.s50014.0"
                         wild2.s50019.0 = Data.Typeable.Internal.sameTypeRep @ sat.s50018.0 "GHC.IO.Exception.$fExceptionAllocationLimitExceeded6"
                    case wild2.s50019.0 of
                      (GHC.Types.False) ->
                          "raiseIO#" @ wild.s50013.0
                      (GHC.Types.True) ->
                          letS ds.s50020.0 = "myThreadId#" @
                          case ds.s50020.0 of
                            ("GHC.Prim.Unit#" ipv3.s50022.0) ->
                                letS s1.s50023.0 = "killThread#" @ ipv3.s50022.0 wild.s50013.0
                                case s1.s50023.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      "GHC.IO.Handle.Internals.$wdo_operation" @ w.s50001.1 w1.s50002.1 w2.s50003.1 ww.s50004.1 #"GHC.Prim.void#"
                (GHC.Types.True) ->
                    letS ww1.s50024.0 = e3.s50015.0
                    case ww1.s50024.0 of
                      (GHC.IO.Exception.IOError ww2.s50025.0 ww3.s50026.0 ww4.s50027.0 ww5.s50028.0 ww6.s50029.0 ww7.s50030.0) ->
                          "GHC.IO.Handle.Internals.$wlvl" @ #"GHC.Prim.void#" w1.s50002.1 w.s50001.1 ww3.s50026.0 ww5.s50028.0 ww6.s50029.0 ww7.s50030.0

"GHC.IO.Handle.Internals.$wlvl" void.040.1680 w1.s49983.0 w2.s49984.0 ww.s49985.0 ww1.s49986.0 ww2.s49987.0 ww3.s49988.0 =
  let sat.s50000.0 = "GHC.IO.Handle.Internals.$wlvl.closure.1" @ w1.s49983.0 w2.s49984.0 ww.s49985.0 ww1.s49986.0 ww2.s49987.0 ww3.s49988.0
  "raiseIO#" @ sat.s50000.0

"GHC.IO.Handle.Internals.$wlvl.closure.0" w1.s49983.2 ww3.s49988.2 =
  letS wild.s49990.0 = ww3.s49988.2
  case wild.s49990.0 of
    (GHC.Maybe.Nothing) ->
        letS wild1.s49991.0 = w1.s49983.2
        case wild1.s49991.0 of
          (GHC.IO.Handle.Types.FileHandle path.s49992.0 dt.s49993.0) ->
              [GHC.Maybe.Just path.s49992.0]
          (GHC.IO.Handle.Types.DuplexHandle path.s49994.0 dt.s49995.0 dt1.s49996.0) ->
              [GHC.Maybe.Just path.s49994.0]
    (GHC.Maybe.Just ds.s49997.0) ->
        wild.s49990.0

"GHC.IO.Handle.Internals.$wlvl.closure.1" w1.s49983.1 w2.s49984.1 ww.s49985.1 ww1.s49986.1 ww2.s49987.1 ww3.s49988.1 =
  let sat.s49998.0 = "GHC.IO.Handle.Internals.$wlvl.closure.0" @ w1.s49983.1 ww3.s49988.1
      sat.s49989.0 = [GHC.Maybe.Just w1.s49983.1]
      sat.s49999.0 = [GHC.IO.Exception.IOError sat.s49989.0 ww.s49985.1 w2.s49984.1 ww1.s49986.1 ww2.s49987.1 sat.s49998.0]
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ sat.s49999.0

"GHC.IO.Handle.Internals.$wstreamEncode" ww.s48571.0 ww1.s48572.0 w.s48573.0 w1.s48574.0 void.040.1626 =
  letrec go.s48576.0 = "GHC.IO.Handle.Internals.$wstreamEncode.closure.0" @ go.s48576.0 ww.s48571.0 ww1.s48572.0
  go.s48576.0 @ w.s48573.0 w1.s48574.0 #"GHC.Prim.void#"

"GHC.IO.Handle.Internals.$wstreamEncode.closure.0" go.s48576.1 ww.s48571.1 ww1.s48572.1 from1.s48577.0 to1.s48578.0 void.040.1627 =
  letS ds1.s48580.0 = ww.s48571.1 @ from1.s48577.0 to1.s48578.0 #"GHC.Prim.void#"
  case ds1.s48580.0 of
    ("GHC.Prim.Unit#" ipv1.s48582.0) ->
        letS wild.s48583.0 = ipv1.s48582.0
        case wild.s48583.0 of
          ("GHC.Tuple.(,,)" why.s48584.0 from'.s48585.0 to'.s48586.0) ->
              letS wild1.s48587.0 = why.s48584.0
              case wild1.s48587.0 of
                _ ->
                    let sat.s48588.0 = ["GHC.Tuple.(,)" from'.s48585.0 to'.s48586.0]
                    ["GHC.Prim.Unit#" sat.s48588.0]
                (GHC.IO.Encoding.Types.InvalidSequence) ->
                    letS wild2.s48589.0 = from1.s48577.0
                    case wild2.s48589.0 of
                      (GHC.IO.Buffer.Buffer dt.s48590.0 dt1.s48591.0 ds2.s48592.0 dt2.s48593.0 dt3.s48594.0 dt4.s48595.0) ->
                          letS wild3.s48596.0 = from'.s48585.0
                          case wild3.s48596.0 of
                            (GHC.IO.Buffer.Buffer dt7.s48597.0 dt8.s48598.0 ds3.s48599.0 dt9.s48600.0 dt10.s48601.0 dt11.s48602.0) ->
                                letS lwild.s48603.0 = "==#" @ dt3.s48594.0{- value -} dt10.s48601.0{- value -}
                                case lwild.s48603.0{- value -} of
                                  _ ->
                                      let sat.s48604.0 = ["GHC.Tuple.(,)" wild3.s48596.0 to'.s48586.0]
                                      ["GHC.Prim.Unit#" sat.s48604.0]
                                  1 ->
                                      letS ds4.s48605.0 = ww1.s48572.1 @ wild3.s48596.0 to'.s48586.0 #"GHC.Prim.void#"
                                      case ds4.s48605.0 of
                                        ("GHC.Prim.Unit#" ipv3.s48607.0) ->
                                            letS wild4.s48608.0 = ipv3.s48607.0
                                            case wild4.s48608.0 of
                                              ("GHC.Tuple.(,)" from'1.s48609.0 to'1.s48610.0) ->
                                                  go.s48576.1 @ from'1.s48609.0 to'1.s48610.0 #"GHC.Prim.void#"

"GHC.IO.Handle.Internals.$wwantWritableHandle'" w.s50323.0 w1.s50324.0 ww.s50325.0 w2.s50326.0 void.040.1712 =
  let sat.s50466.0 = "GHC.IO.Handle.Internals.$wwantWritableHandle'.closure.4" @ w2.s50326.0
  "GHC.IO.Handle.Internals.$wwithHandle'" @ w.s50323.0 w1.s50324.0 ww.s50325.0 sat.s50466.0 #"GHC.Prim.void#"

"GHC.IO.Handle.Internals.$wwantWritableHandle'.closure.0" ipv7.s50383.1 =
  letS wild5.s50384.0 = ipv7.s50383.1
  case wild5.s50384.0 of
    (GHC.IO.Buffer.Buffer dt14.s50385.0 dt15.s50386.0 ds15.s50387.0 dt16.s50388.0 dt17.s50389.0 dt18.s50390.0) ->
        [GHC.IO.Buffer.Buffer dt14.s50385.0{- value -} dt15.s50386.0 GHC.IO.Buffer.WriteBuffer dt16.s50388.0{- value -} dt17.s50389.0{- value -} dt18.s50390.0{- value -}]

"GHC.IO.Handle.Internals.$wwantWritableHandle'.closure.1" "$dBufferedIO.s50332.1" ds.s50334.1 dt.s50336.1 dt2.s50339.1 w2.s50326.2 wild.s50330.1 void.X209.0 =
  letS ds13.s50378.0 = GHC.IO.Handle.Internals.flushBuffer2 @ wild.s50330.1 #"GHC.Prim.void#"
  case ds13.s50378.0 of
    ("GHC.Prim.Unit#" ipv5.s50380.0) ->
        letS ds14.s50381.0 = "readMutVar#" @ dt2.s50339.1
        case ds14.s50381.0 of
          ("GHC.Prim.Unit#" ipv7.s50383.0) ->
              let sat.s50391.0 = "GHC.IO.Handle.Internals.$wwantWritableHandle'.closure.0" @ ipv7.s50383.0
              letS "s2#.s50392.0" = "writeMutVar#" @ dt2.s50339.1 sat.s50391.0
              case "s2#.s50392.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    letS ds15.s50393.0 = "readMutVar#" @ dt.s50336.1
                    case ds15.s50393.0 of
                      ("GHC.Prim.Unit#" ipv9.s50395.0) ->
                          letS ds16.s50396.0 = GHC.IO.BufferedIO.emptyWriteBuffer @ "$dBufferedIO.s50332.1" ds.s50334.1 ipv9.s50395.0 #"GHC.Prim.void#"
                          case ds16.s50396.0 of
                            ("GHC.Prim.Unit#" ipv11.s50398.0) ->
                                letS "s2#1.s50399.0" = "writeMutVar#" @ dt.s50336.1 ipv11.s50398.0
                                case "s2#1.s50399.0"{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS ds17.s50400.0 = w2.s50326.2 @ wild.s50330.1 #"GHC.Prim.void#"
                                      case ds17.s50400.0 of
                                        ("GHC.Prim.Unit#" ipv13.s50402.0) ->
                                            let sat.s50403.1 = ["GHC.Tuple.(,)" wild.s50330.1 ipv13.s50402.0]
                                            ["GHC.Prim.Unit#" sat.s50403.1]

"GHC.IO.Handle.Internals.$wwantWritableHandle'.closure.2" ipv7.s50414.1 =
  letS wild7.s50415.0 = ipv7.s50414.1
  case wild7.s50415.0 of
    (GHC.IO.Buffer.Buffer dt14.s50416.0 dt15.s50417.0 ds15.s50418.0 dt16.s50419.0 dt17.s50420.0 dt18.s50421.0) ->
        [GHC.IO.Buffer.Buffer dt14.s50416.0{- value -} dt15.s50417.0 ds15.s50418.0 dt16.s50419.0{- value -} 0 0]

"GHC.IO.Handle.Internals.$wwantWritableHandle'.closure.3" bbuf0.s50411.1 wild8.s50431.1 =
  letS wild10.s50433.0 = bbuf0.s50411.1
  case wild10.s50433.0 of
    (GHC.IO.Buffer.Buffer dt19.s50434.0 dt20.s50435.0 ds16.s50436.0 dt21.s50437.0 dt22.s50438.0 dt23.s50439.0) ->
        letS sat.s50440.0 = "+#" @ dt22.s50438.0{- value -} wild8.s50431.1{- value -}
        [GHC.IO.Buffer.Buffer dt19.s50434.0{- value -} dt20.s50435.0 ds16.s50436.0 dt21.s50437.0{- value -} sat.s50440.0{- value -} dt23.s50439.0{- value -}]

"GHC.IO.Handle.Internals.$wwantWritableHandle'.closure.4" w2.s50326.1 h_.s50328.0 void.040.1713 =
  letS wild.s50330.0 = h_.s50328.0
  case wild.s50330.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s50331.0" "$dBufferedIO.s50332.0" "$dTypeable.s50333.0" ds.s50334.0 ds1.s50335.0 dt.s50336.0 ds2.s50337.0 dt1.s50338.0 dt2.s50339.0 dt3.s50340.0 ds3.s50341.0 ds4.s50342.0 ds5.s50343.0 ds6.s50344.0 ds7.s50345.0 ds8.s50346.0) ->
        letS wild1.s50347.0 = ds1.s50335.0
        case wild1.s50347.0 of
          _ ->
              letS ds9.s50348.0 = w2.s50326.1 @ wild.s50330.0 #"GHC.Prim.void#"
              case ds9.s50348.0 of
                ("GHC.Prim.Unit#" ipv1.s50350.0) ->
                    let sat.s50351.0 = ["GHC.Tuple.(,)" wild.s50330.0 ipv1.s50350.0]
                    ["GHC.Prim.Unit#" sat.s50351.0]
          (GHC.IO.Handle.Types.ClosedHandle) ->
              "raiseIO#" @ GHC.IO.Handle.Internals.wantReadableHandle11
          (GHC.IO.Handle.Types.SemiClosedHandle) ->
              "raiseIO#" @ GHC.IO.Handle.Internals.wantReadableHandle7
          (GHC.IO.Handle.Types.ReadHandle) ->
              "raiseIO#" @ GHC.IO.Handle.Internals.wantWritableHandle2
          (GHC.IO.Handle.Types.ReadWriteHandle) ->
              letS ds9.s50355.0 = "readMutVar#" @ dt2.s50339.0
              case ds9.s50355.0 of
                ("GHC.Prim.Unit#" ipv1.s50357.0) ->
                    letS wild2.s50358.0 = ipv1.s50357.0
                    case wild2.s50358.0 of
                      (GHC.IO.Buffer.Buffer dt4.s50359.0 dt5.s50360.0 ds10.s50361.0 dt6.s50362.0 dt7.s50363.0 dt8.s50364.0) ->
                          letS wild3.s50365.0 = ds10.s50361.0
                          case wild3.s50365.0 of
                            (GHC.IO.Buffer.ReadBuffer) ->
                                letS ds11.s50366.0 = "readMutVar#" @ dt2.s50339.0
                                case ds11.s50366.0 of
                                  ("GHC.Prim.Unit#" ipv3.s50368.0) ->
                                      letS wild4.s50369.0 = ipv3.s50368.0
                                      case wild4.s50369.0 of
                                        (GHC.IO.Buffer.Buffer dt9.s50370.0 dt10.s50371.0 ds12.s50372.0 dt11.s50373.0 dt12.s50374.0 dt13.s50375.0) ->
                                            let "$w$j.s50376.0" = "GHC.IO.Handle.Internals.$wwantWritableHandle'.closure.1" @ "$dBufferedIO.s50332.0" ds.s50334.0 dt.s50336.0 dt2.s50339.0 w2.s50326.1 wild.s50330.0
                                            letS wild5.s50404.0 = ds12.s50372.0
                                            case wild5.s50404.0 of
                                              (GHC.IO.Buffer.ReadBuffer) ->
                                                  letS lwild.s50405.0 = "==#" @ dt12.s50374.0{- value -} dt13.s50375.0{- value -}
                                                  case lwild.s50405.0{- value -} of
                                                    _ ->
                                                        letS ds13.s50406.0 = "readMutVar#" @ dt1.s50338.0
                                                        case ds13.s50406.0 of
                                                          ("GHC.Prim.Unit#" ipv5.s50408.0) ->
                                                              letS wild6.s50409.1 = ipv5.s50408.0
                                                              case wild6.s50409.1 of
                                                                ("GHC.Tuple.(,)" codec_state.s50410.0 bbuf0.s50411.0) ->
                                                                    letS ds14.s50412.0 = "readMutVar#" @ dt2.s50339.0
                                                                    case ds14.s50412.0 of
                                                                      ("GHC.Prim.Unit#" ipv7.s50414.0) ->
                                                                          let sat.s50422.0 = "GHC.IO.Handle.Internals.$wwantWritableHandle'.closure.2" @ ipv7.s50414.0
                                                                          letS "s2#.s50423.0" = "writeMutVar#" @ dt2.s50339.0 sat.s50422.0
                                                                          case "s2#.s50423.0"{- value -} of
                                                                            ("GHC.Prim.(##)") ->
                                                                                letS wild7.s50424.0 = ipv7.s50414.0
                                                                                case wild7.s50424.0 of
                                                                                  (GHC.IO.Buffer.Buffer dt14.s50425.0 dt15.s50426.0 ds15.s50427.0 dt16.s50428.0 dt17.s50429.0 dt18.s50430.0) ->
                                                                                      letS wild8.s50431.0 = dt17.s50429.0{- value -}
                                                                                      case wild8.s50431.0{- value -} of
                                                                                        _ ->
                                                                                            letS wild9.s50432.0 = ds4.s50342.0
                                                                                            case wild9.s50432.0 of
                                                                                              (GHC.Maybe.Nothing) ->
                                                                                                  let sat.s50441.0 = "GHC.IO.Handle.Internals.$wwantWritableHandle'.closure.3" @ bbuf0.s50411.0 wild8.s50431.0{- value -}
                                                                                                  letS "s2#1.s50442.0" = "writeMutVar#" @ dt.s50336.0 sat.s50441.0
                                                                                                  case "s2#1.s50442.0"{- value -} of
                                                                                                    ("GHC.Prim.(##)") ->
                                                                                                        "$w$j.s50376.0" @ #"GHC.Prim.void#"
                                                                                              (GHC.Maybe.Just decoder.s50443.0) ->
                                                                                                  letS wild10.s50444.0 = decoder.s50443.0
                                                                                                  case wild10.s50444.0 of
                                                                                                    (GHC.IO.Encoding.Types.BufferCodec ds16.s50445.0 ds17.s50446.0 ds18.s50447.0 ds19.s50448.0 ds20.s50449.0) ->
                                                                                                        letS ds21.s50450.0 = ds20.s50449.0 @ codec_state.s50410.0 #"GHC.Prim.void#"
                                                                                                        case ds21.s50450.0 of
                                                                                                          ("GHC.Prim.Unit#" ipv9.s50452.0) ->
                                                                                                              let sat.s50453.1 = [GHC.IO.Buffer.Buffer dt14.s50425.0{- value -} dt15.s50426.0 ds15.s50427.0 wild8.s50431.0{- value -} 0 0]
                                                                                                              letS ds22.s50454.0 = "GHC.IO.Handle.Internals.$wstreamEncode" @ ds16.s50445.0 ds17.s50446.0 bbuf0.s50411.0 sat.s50453.1 #"GHC.Prim.void#"
                                                                                                              case ds22.s50454.0 of
                                                                                                                ("GHC.Prim.Unit#" ipv11.s50456.0) ->
                                                                                                                    letS wild11.s50457.0 = ipv11.s50456.0
                                                                                                                    case wild11.s50457.0 of
                                                                                                                      ("GHC.Tuple.(,)" bbuf1.s50458.0 cbuf1.s50459.0) ->
                                                                                                                          letS "s2#1.s50460.0" = "writeMutVar#" @ dt.s50336.0 bbuf1.s50458.0
                                                                                                                          case "s2#1.s50460.0"{- value -} of
                                                                                                                            ("GHC.Prim.(##)") ->
                                                                                                                                "$w$j.s50376.0" @ #"GHC.Prim.void#"
                                                                                        0 ->
                                                                                            letS "s2#1.s50461.0" = "writeMutVar#" @ dt.s50336.0 bbuf0.s50411.0
                                                                                            case "s2#1.s50461.0"{- value -} of
                                                                                              ("GHC.Prim.(##)") ->
                                                                                                  "$w$j.s50376.0" @ #"GHC.Prim.void#"
                                                    1 ->
                                                        "$w$j.s50376.0" @ #"GHC.Prim.void#"
                                              (GHC.IO.Buffer.WriteBuffer) ->
                                                  "$w$j.s50376.0" @ #"GHC.Prim.void#"
                            (GHC.IO.Buffer.WriteBuffer) ->
                                letS ds11.s50462.0 = w2.s50326.1 @ wild.s50330.0 #"GHC.Prim.void#"
                                case ds11.s50462.0 of
                                  ("GHC.Prim.Unit#" ipv3.s50464.0) ->
                                      let sat.s50465.0 = ["GHC.Tuple.(,)" wild.s50330.0 ipv3.s50464.0]
                                      ["GHC.Prim.Unit#" sat.s50465.0]

"GHC.IO.Handle.Internals.$wwithHandle'" w.s50122.0 w1.s50123.0 ww.s50124.0 w2.s50125.0 void.040.1693 =
  letS ds.s50127.0 = "getMaskingState#" @
  case ds.s50127.0{- value -} of
    ("GHC.Prim.Unit#" ipv1.s50129.0) ->
        let io.s50130.0 = "GHC.IO.Handle.Internals.$wwithHandle'.closure.0" @ w.s50122.0 w1.s50123.0 w2.s50125.0 ww.s50124.0
        letS ds1.s50139.0 = ipv1.s50129.0{- value -}
        case ds1.s50139.0{- value -} of
          _ ->
              io.s50130.0 @ #"GHC.Prim.void#"
          0 ->
              io.s50130.0 @ #"GHC.Prim.void#"

"GHC.IO.Handle.Internals.$wwithHandle'.closure.0" w.s50122.1 w1.s50123.1 w2.s50125.1 ww.s50124.1 void.040.1694 =
  letS ds1.s50132.0 = "GHC.IO.Handle.Internals.$wdo_operation" @ w.s50122.1 w1.s50123.1 w2.s50125.1 ww.s50124.1 #"GHC.Prim.void#"
  case ds1.s50132.0 of
    ("GHC.Prim.Unit#" ipv3.s50134.0) ->
        letS wild.s50135.0 = ipv3.s50134.0
        case wild.s50135.0 of
          ("GHC.Tuple.(,)" h'.s50136.0 v.s50137.0) ->
              letS "s2#.s50138.0" = "putMVar#" @ ww.s50124.1 h'.s50136.0
              case "s2#.s50138.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    ["GHC.Prim.Unit#" v.s50137.0]

"GHC.IO.Handle.Internals.$wwriteCharBuffer" w.s49135.0 ww.s49136.0 ww1.s49137.0 ww2.s49138.0 ww3.s49139.0 ww4.s49140.0 ww5.s49141.0 void.040.1650 =
  letS wild.s49143.0 = w.s49135.0
  case wild.s49143.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s49144.0" "$dBufferedIO.s49145.0" "$dTypeable.s49146.0" ds.s49147.0 ds1.s49148.0 dt.s49149.0 ds2.s49150.0 dt1.s49151.0 dt2.s49152.0 dt3.s49153.0 ds3.s49154.0 ds4.s49155.0 ds5.s49156.0 ds6.s49157.0 ds7.s49158.0 ds8.s49159.0) ->
        letS ds9.s49160.0 = "readMutVar#" @ dt.s49149.0
        case ds9.s49160.0 of
          ("GHC.Prim.Unit#" ipv1.s49162.0) ->
              let "$w$j.s49163.0" = "GHC.IO.Handle.Internals.$wwriteCharBuffer.closure.2" @ "$dBufferedIO.s49145.0" ds.s49147.0 ds2.s49150.0 dt.s49149.0 wild.s49143.0 ww4.s49140.0{- value -}
              letS wild1.s49211.0 = ds3.s49154.0
              case wild1.s49211.0 of
                (GHC.Maybe.Nothing) ->
                    let sat.s49212.0 = [GHC.IO.Buffer.Buffer ww.s49136.0{- value -} ww1.s49137.0 ww2.s49138.0 ww3.s49139.0{- value -} ww4.s49140.0{- value -} ww5.s49141.0{- value -}]
                    letS ds10.s49213.0 = GHC.IO.Encoding.Latin1.latin3 @ sat.s49212.0 ipv1.s49162.0 #"GHC.Prim.void#"
                    case ds10.s49213.0 of
                      ("GHC.Prim.Unit#" ipv3.s49215.0) ->
                          letS wild2.s49216.0 = ipv3.s49215.0
                          case wild2.s49216.0 of
                            ("GHC.Tuple.(,,)" _why.s49217.0 input'.s49218.0 output'.s49219.0) ->
                                letS ww6.s49220.0 = output'.s49219.0
                                case ww6.s49220.0 of
                                  (GHC.IO.Buffer.Buffer ww7.s49221.0 ww8.s49222.0 ww9.s49223.0 ww10.s49224.0 ww11.s49225.0 ww12.s49226.0) ->
                                      "$w$j.s49163.0" @ #"GHC.Prim.void#" input'.s49218.0 ww7.s49221.0{- value -} ww8.s49222.0 ww9.s49223.0 ww10.s49224.0{- value -} ww11.s49225.0{- value -} ww12.s49226.0{- value -}
                (GHC.Maybe.Just encoder.s49227.0) ->
                    letS ww6.s49228.0 = encoder.s49227.0
                    case ww6.s49228.0 of
                      (GHC.IO.Encoding.Types.BufferCodec ww7.s49229.0 ww8.s49230.0 ww9.s49231.0 ww10.s49232.0 ww11.s49233.0) ->
                          let sat.s49234.0 = [GHC.IO.Buffer.Buffer ww.s49136.0{- value -} ww1.s49137.0 ww2.s49138.0 ww3.s49139.0{- value -} ww4.s49140.0{- value -} ww5.s49141.0{- value -}]
                          letS ds10.s49235.0 = "GHC.IO.Handle.Internals.$wstreamEncode" @ ww7.s49229.0 ww8.s49230.0 sat.s49234.0 ipv1.s49162.0 #"GHC.Prim.void#"
                          case ds10.s49235.0 of
                            ("GHC.Prim.Unit#" ipv3.s49237.0) ->
                                letS ww12.s49238.0 = ipv3.s49237.0
                                case ww12.s49238.0 of
                                  ("GHC.Tuple.(,)" ww13.s49239.0 ww14.s49240.0) ->
                                      letS ww15.s49241.0 = ww14.s49240.0
                                      case ww15.s49241.0 of
                                        (GHC.IO.Buffer.Buffer ww16.s49242.0 ww17.s49243.0 ww18.s49244.0 ww19.s49245.0 ww20.s49246.0 ww21.s49247.0) ->
                                            "$w$j.s49163.0" @ #"GHC.Prim.void#" ww13.s49239.0 ww16.s49242.0{- value -} ww17.s49243.0 ww18.s49244.0 ww19.s49245.0{- value -} ww20.s49246.0{- value -} ww21.s49247.0{- value -}

"GHC.IO.Handle.Internals.$wwriteCharBuffer.closure.0" "$dBufferedIO.s49145.2" ds.s49147.2 dt.s49149.2 wild.s49143.2 wild1.s49172.1 ww6.s49165.1 =
  letS ds10.s49174.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s49145.2" ds.s49147.2 wild1.s49172.1 #"GHC.Prim.void#"
  case ds10.s49174.0 of
    ("GHC.Prim.Unit#" ipv3.s49176.0) ->
        letS "s2#.s49177.0" = "writeMutVar#" @ dt.s49149.2 ipv3.s49176.0
        case "s2#.s49177.0"{- value -} of
          ("GHC.Prim.(##)") ->
              letS wild2.s49178.0 = ww6.s49165.1
              case wild2.s49178.0 of
                (GHC.IO.Buffer.Buffer dt4.s49179.0 dt5.s49180.0 ds11.s49181.0 dt6.s49182.0 dt7.s49183.0 dt8.s49184.0) ->
                    letS lwild.s49185.0 = "==#" @ dt7.s49183.0{- value -} dt8.s49184.0{- value -}
                    case lwild.s49185.0{- value -} of
                      _ ->
                          "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild.s49143.2 dt4.s49179.0{- value -} dt5.s49180.0 ds11.s49181.0 dt6.s49182.0{- value -} dt7.s49183.0{- value -} dt8.s49184.0{- value -} #"GHC.Prim.void#"
                      1 ->
                          ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Internals.$wwriteCharBuffer.closure.1" "$j.s49173.1" ds10.s49190.1 ds2.s49150.2 dt.s49149.3 dt4.s49188.1 dt5.s49189.1 dt6.s49191.1 dt7.s49192.1 dt8.s49193.1 wild.s49143.3 wild1.s49172.2 ww11.s49170.1 ww12.s49171.1 =
  letS wild3.s49195.0 = ds2.s49150.2
  case wild3.s49195.0 of
    (GHC.IO.Handle.Types.NoBuffering) ->
        "$j.s49173.1"
    (GHC.IO.Handle.Types.LineBuffering) ->
        letS "s2#.s49196.0" = "writeMutVar#" @ dt.s49149.3 wild1.s49172.2
        case "s2#.s49196.0"{- value -} of
          ("GHC.Prim.(##)") ->
              letS lwild1.s49197.0 = "==#" @ dt7.s49192.1{- value -} dt8.s49193.1{- value -}
              case lwild1.s49197.0{- value -} of
                _ ->
                    "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild.s49143.3 dt4.s49188.1{- value -} dt5.s49189.1 ds10.s49190.1 dt6.s49191.1{- value -} dt7.s49192.1{- value -} dt8.s49193.1{- value -} #"GHC.Prim.void#"
                1 ->
                    ["GHC.Prim.Unit#" "GHC.Tuple.()"]
    (GHC.IO.Handle.Types.BlockBuffering ds11.s49198.0) ->
        letS wild4.s49199.0 = ds11.s49198.0
        case wild4.s49199.0 of
          (GHC.Maybe.Nothing) ->
              letS "s2#.s49200.0" = "writeMutVar#" @ dt.s49149.3 wild1.s49172.2
              case "s2#.s49200.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    letS lwild1.s49201.0 = "==#" @ dt7.s49192.1{- value -} dt8.s49193.1{- value -}
                    case lwild1.s49201.0{- value -} of
                      _ ->
                          "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild.s49143.3 dt4.s49188.1{- value -} dt5.s49189.1 ds10.s49190.1 dt6.s49191.1{- value -} dt7.s49192.1{- value -} dt8.s49193.1{- value -} #"GHC.Prim.void#"
                      1 ->
                          ["GHC.Prim.Unit#" "GHC.Tuple.()"]
          (GHC.Maybe.Just s.s49202.0) ->
              letS wild5.s49203.0 = s.s49202.0
              case wild5.s49203.0 of
                ("GHC.Types.I#" y.s49204.0) ->
                    letS sat.s49205.0 = "-#" @ ww12.s49171.1{- value -} ww11.s49170.1{- value -}
                         lwild1.s49206.0 = ">=#" @ sat.s49205.0{- value -} y.s49204.0{- value -}
                    case lwild1.s49206.0{- value -} of
                      _ ->
                          letS "s2#.s49207.0" = "writeMutVar#" @ dt.s49149.3 wild1.s49172.2
                          case "s2#.s49207.0"{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS lwild2.s49208.0 = "==#" @ dt7.s49192.1{- value -} dt8.s49193.1{- value -}
                                case lwild2.s49208.0{- value -} of
                                  _ ->
                                      "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild.s49143.3 dt4.s49188.1{- value -} dt5.s49189.1 ds10.s49190.1 dt6.s49191.1{- value -} dt7.s49192.1{- value -} dt8.s49193.1{- value -} #"GHC.Prim.void#"
                                  1 ->
                                      ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                      1 ->
                          "$j.s49173.1"

"GHC.IO.Handle.Internals.$wwriteCharBuffer.closure.2" "$dBufferedIO.s49145.1" ds.s49147.1 ds2.s49150.1 dt.s49149.1 wild.s49143.1 ww4.s49140.1 void.040.1651 ww6.s49165.0 ww7.s49166.0 ww8.s49167.0 ww9.s49168.0 ww10.s49169.0 ww11.s49170.0 ww12.s49171.0 =
  let wild1.s49172.0 = [GHC.IO.Buffer.Buffer ww7.s49166.0{- value -} ww8.s49167.0 ww9.s49168.0 ww10.s49169.0{- value -} ww11.s49170.0{- value -} ww12.s49171.0{- value -}]
      "$j.s49173.0" = "GHC.IO.Handle.Internals.$wwriteCharBuffer.closure.0" @ "$dBufferedIO.s49145.1" ds.s49147.1 dt.s49149.1 wild.s49143.1 wild1.s49172.0 ww6.s49165.0
  letS lwild.s49186.0 = "==#" @ ww10.s49169.0{- value -} ww12.s49171.0{- value -}
  case lwild.s49186.0{- value -} of
    _ ->
        letS wild2.s49187.0 = ww6.s49165.0
        case wild2.s49187.0 of
          (GHC.IO.Buffer.Buffer dt4.s49188.0 dt5.s49189.0 ds10.s49190.0 dt6.s49191.0 dt7.s49192.0 dt8.s49193.0) ->
              let "$j1.s49194.0" = "GHC.IO.Handle.Internals.$wwriteCharBuffer.closure.1" @ "$j.s49173.0" ds10.s49190.0 ds2.s49150.1 dt.s49149.1 dt4.s49188.0{- value -} dt5.s49189.0 dt6.s49191.0{- value -} dt7.s49192.0{- value -} dt8.s49193.0{- value -} wild.s49143.1 wild1.s49172.0 ww11.s49170.0{- value -} ww12.s49171.0{- value -}
              letS lwild1.s49209.0 = "==#" @ dt7.s49192.0{- value -} dt8.s49193.0{- value -}
              case lwild1.s49209.0{- value -} of
                _ ->
                    letS lwild2.s49210.0 = "==#" @ dt7.s49192.0{- value -} ww4.s49140.1{- value -}
                    case lwild2.s49210.0{- value -} of
                      _ ->
                          "$j1.s49194.0"
                      1 ->
                          "$j.s49173.0"
                1 ->
                    "$j1.s49194.0"
    1 ->
        "$j.s49173.0"

GHC.IO.Handle.Internals.decodeByteBuf2 =
  letS sat.s48805.0 = "GHC.CString.unpackCString#" @ GHC.IO.Handle.Internals.lvl7{- value -}
  GHC.Err.errorWithoutStackTrace @ sat.s48805.0

GHC.IO.Handle.Internals.flushBuffer2 h_.s49378.0 void.040.1658 =
  letS wild.s49380.0 = h_.s49378.0
  case wild.s49380.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s49381.0" "$dBufferedIO.s49382.0" "$dTypeable.s49383.0" ds.s49384.0 ds1.s49385.0 dt.s49386.0 ds2.s49387.0 dt1.s49388.0 dt2.s49389.0 dt3.s49390.0 ds3.s49391.0 ds4.s49392.0 ds5.s49393.0 ds6.s49394.0 ds7.s49395.0 ds8.s49396.0) ->
        letS ds9.s49397.0 = "readMutVar#" @ dt.s49386.0
        case ds9.s49397.0 of
          ("GHC.Prim.Unit#" ipv1.s49399.0) ->
              letS wild1.s49400.0 = ipv1.s49399.0
              case wild1.s49400.0 of
                (GHC.IO.Buffer.Buffer dt4.s49401.0 dt5.s49402.0 ds10.s49403.0 dt6.s49404.0 dt7.s49405.0 dt8.s49406.0) ->
                    letS lwild.s49407.0 = "==#" @ dt7.s49405.0{- value -} dt8.s49406.0{- value -}
                    case lwild.s49407.0{- value -} of
                      _ ->
                          letS ds11.s49408.0 = GHC.IO.Device.isSeekable @ "$dIODevice.s49381.0" ds.s49384.0 #"GHC.Prim.void#"
                          case ds11.s49408.0 of
                            ("GHC.Prim.Unit#" ipv3.s49410.0) ->
                                letS wild2.s49411.0 = ipv3.s49410.0
                                case wild2.s49411.0 of
                                  (GHC.Types.False) ->
                                      "raiseIO#" @ GHC.IO.Handle.Internals.flushBuffer3
                                  (GHC.Types.True) ->
                                      let sat.s49414.0 = GHC.IO.Handle.Internals.flushBuffer2.closure.0 @ dt7.s49405.0{- value -} dt8.s49406.0{- value -}
                                      letS ds12.s49415.0 = GHC.IO.Device.seek @ "$dIODevice.s49381.0" ds.s49384.0 GHC.IO.Device.RelativeSeek sat.s49414.0 #"GHC.Prim.void#"
                                      case ds12.s49415.0 of
                                        ("GHC.Prim.Unit#" ipv5.s49417.0) ->
                                            let sat.s49418.0 = [GHC.IO.Buffer.Buffer dt4.s49401.0{- value -} dt5.s49402.0 ds10.s49403.0 dt6.s49404.0{- value -} 0 0]
                                            letS "s2#.s49419.0" = "writeMutVar#" @ dt.s49386.0 sat.s49418.0
                                            case "s2#.s49419.0"{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                      1 ->
                          ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.IO.Handle.Internals.flushBuffer2.closure.0 dt7.s49405.1 dt8.s49406.1 =
  letS sat.s49412.0 = "-#" @ dt8.s49406.1{- value -} dt7.s49405.1{- value -}
       sat.s49413.0 = "negateInt#" @ sat.s49412.0{- value -}
  GHC.Integer.Type.smallInteger @ sat.s49413.0{- value -}

GHC.IO.Handle.Internals.flushBuffer3 =
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ GHC.IO.Handle.Internals.flushBuffer4

GHC.IO.Handle.Internals.flushBuffer4 =
  [GHC.IO.Exception.IOError GHC.Maybe.Nothing GHC.IO.Exception.IllegalOperation "GHC.Types.[]" GHC.IO.Handle.Internals.flushBuffer5 GHC.Maybe.Nothing GHC.Maybe.Nothing]

GHC.IO.Handle.Internals.flushBuffer5 =
  "GHC.CString.unpackCString#" @ GHC.IO.Handle.Internals.flushBuffer6{- value -}

GHC.IO.Handle.Internals.flushBuffer6 =
  #"cannot flush the read buffer: underlying device is not seekable"

GHC.IO.Handle.Internals.ioe_finalizedHandle fp.s48641.0 =
  let sat.s48644.0 = GHC.IO.Handle.Internals.ioe_finalizedHandle.closure.0 @ fp.s48641.0
  "raise#" @ sat.s48644.0

GHC.IO.Handle.Internals.ioe_finalizedHandle.closure.0 fp.s48641.1 =
  let sat.s48642.0 = [GHC.Maybe.Just fp.s48641.1]
      sat.s48643.0 = [GHC.IO.Exception.IOError GHC.Maybe.Nothing GHC.IO.Exception.IllegalOperation "GHC.Types.[]" GHC.IO.Handle.Internals.lvl6 GHC.Maybe.Nothing sat.s48642.0]
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ sat.s48643.0

GHC.IO.Handle.Internals.lvl5 =
  #"handle is finalized"

GHC.IO.Handle.Internals.lvl6 =
  "GHC.CString.unpackCString#" @ GHC.IO.Handle.Internals.lvl5{- value -}

GHC.IO.Handle.Internals.lvl7 =
  #"codec_state"

GHC.IO.Handle.Internals.lvl8 =
  [GHC.IO.Handle.Types.BlockBuffering GHC.Maybe.Nothing]

GHC.IO.Handle.Internals.mkDuplexHandle9 "$dIODevice.s49020.0" "$dBufferedIO.s49021.0" "$dTypeable.s49022.0" dev1.s49023.0 filepath.s49024.0 ha_type.s49025.0 buffered.s49026.0 mb_codec.s49027.0 nl.s49028.0 finalizer.s49029.0 other_side.s49030.0 void.040.1644 =
  let cont.s49032.0 = GHC.IO.Handle.Internals.mkDuplexHandle9.closure.7 @ "$dBufferedIO.s49021.0" "$dIODevice.s49020.0" "$dTypeable.s49022.0" buffered.s49026.0 dev1.s49023.0 filepath.s49024.0 finalizer.s49029.0 ha_type.s49025.0 mb_codec.s49027.0 nl.s49028.0 other_side.s49030.0
  letS wild.s49102.0 = mb_codec.s49027.0
  case wild.s49102.0 of
    (GHC.Maybe.Nothing) ->
        cont.s49032.0 @ GHC.Maybe.Nothing GHC.Maybe.Nothing #"GHC.Prim.void#"
    (GHC.Maybe.Just ds.s49103.0) ->
        letS wild1.s49104.0 = ds.s49103.0
        case wild1.s49104.0 of
          (GHC.IO.Encoding.Types.TextEncoding ds1.s49105.0 ds2.s49106.0 ds3.s49107.0) ->
              let "$j.s49108.0" = GHC.IO.Handle.Internals.mkDuplexHandle9.closure.8 @ cont.s49032.0 ds3.s49107.0 ha_type.s49025.0
              letS wild2.s49124.0 = ha_type.s49025.0
              case wild2.s49124.0 of
                _ ->
                    "$j.s49108.0" @ #"GHC.Prim.void#" GHC.Maybe.Nothing
                (GHC.IO.Handle.Types.ReadHandle) ->
                    letS ds4.s49125.0 = ds2.s49106.0 @ #"GHC.Prim.void#"
                    case ds4.s49125.0 of
                      ("GHC.Prim.Unit#" ipv1.s49127.0) ->
                          let sat.s49128.0 = [GHC.Maybe.Just ipv1.s49127.0]
                          "$j.s49108.0" @ #"GHC.Prim.void#" sat.s49128.0
                (GHC.IO.Handle.Types.ReadWriteHandle) ->
                    letS ds4.s49129.0 = ds2.s49106.0 @ #"GHC.Prim.void#"
                    case ds4.s49129.0 of
                      ("GHC.Prim.Unit#" ipv1.s49131.0) ->
                          let sat.s49132.0 = [GHC.Maybe.Just ipv1.s49131.0]
                          "$j.s49108.0" @ #"GHC.Prim.void#" sat.s49132.0

GHC.IO.Handle.Internals.mkDuplexHandle9.closure.0 ha_type.s49025.2 =
  letS wild.s49037.0 = ha_type.s49025.2
  case wild.s49037.0 of
    _ ->
        [GHC.IO.Buffer.WriteBuffer]
    (GHC.IO.Handle.Types.ReadHandle) ->
        [GHC.IO.Buffer.ReadBuffer]

GHC.IO.Handle.Internals.mkDuplexHandle9.closure.1 nl.s49028.4 =
  GHC.IO.Handle.Types.outputNL @ nl.s49028.4

GHC.IO.Handle.Internals.mkDuplexHandle9.closure.2 nl.s49028.5 =
  GHC.IO.Handle.Types.inputNL @ nl.s49028.5

GHC.IO.Handle.Internals.mkDuplexHandle9.closure.3 "$dBufferedIO.s49021.3" "$dIODevice.s49020.3" "$dTypeable.s49022.3" dev1.s49023.3 ha_type.s49025.4 ipv3.s49043.2 ipv5.s49047.2 ipv7.s49054.1 mb_codec.s49027.3 mb_decoder.s49034.2 mb_encoder.s49033.2 nl.s49028.3 other_side.s49030.3 sc.s49049.1 sc1.s49050.1 =
  letS dt.s49058.0 = dev1.s49023.3
  let sat.s49060.0 = GHC.IO.Handle.Internals.mkDuplexHandle9.closure.1 @ nl.s49028.3
      sat.s49059.0 = GHC.IO.Handle.Internals.mkDuplexHandle9.closure.2 @ nl.s49028.3
  [GHC.IO.Handle.Types.Handle__ "$dIODevice.s49020.3" "$dBufferedIO.s49021.3" "$dTypeable.s49022.3" dt.s49058.0 ha_type.s49025.4 ipv3.s49043.2 sc.s49049.1 ipv5.s49047.2 sc1.s49050.1 ipv7.s49054.1 mb_encoder.s49033.2 mb_decoder.s49034.2 mb_codec.s49027.3 sat.s49059.0 sat.s49060.0 other_side.s49030.3]

GHC.IO.Handle.Internals.mkDuplexHandle9.closure.4 filepath.s49024.3 finalizer1.s49065.1 ipv9.s49057.1 =
  let sat.s49066.0 = [GHC.MVar.MVar ipv9.s49057.1]
  finalizer1.s49065.1 @ filepath.s49024.3 sat.s49066.0

GHC.IO.Handle.Internals.mkDuplexHandle9.closure.5 "$dBufferedIO.s49021.2" "$dIODevice.s49020.2" "$dTypeable.s49022.2" dev1.s49023.2 filepath.s49024.2 finalizer.s49029.2 ha_type.s49025.3 ipv3.s49043.1 ipv5.s49047.1 mb_codec.s49027.2 mb_decoder.s49034.1 mb_encoder.s49033.1 nl.s49028.2 other_side.s49030.2 sc.s49049.0 sc1.s49050.0 void.X118.4 void.X119.2 =
  letS ds4.s49052.0 = "newMutVar#" @ GHC.IO.Handle.Types.BufferListNil
  case ds4.s49052.0 of
    ("GHC.Prim.Unit#" ipv7.s49054.0) ->
        letS ds5.s49055.0 = "newMVar#" @
        case ds5.s49055.0 of
          ("GHC.Prim.Unit#" ipv9.s49057.0) ->
              let sat.s49061.0 = GHC.IO.Handle.Internals.mkDuplexHandle9.closure.3 @ "$dBufferedIO.s49021.2" "$dIODevice.s49020.2" "$dTypeable.s49022.2" dev1.s49023.2 ha_type.s49025.3 ipv3.s49043.1 ipv5.s49047.1 ipv7.s49054.0 mb_codec.s49027.2 mb_decoder.s49034.1 mb_encoder.s49033.1 nl.s49028.2 other_side.s49030.2 sc.s49049.0 sc1.s49050.0
              letS "s2#.s49062.0" = "putMVar#" @ ipv9.s49057.0 sat.s49061.0
              case "s2#.s49062.0"{- value -} of
                ("GHC.Prim.(##)") ->
                    letS wild.s49063.0 = finalizer.s49029.2
                    case wild.s49063.0 of
                      (GHC.Maybe.Nothing) ->
                          let sat.s49064.0 = [GHC.IO.Handle.Types.FileHandle filepath.s49024.2 ipv9.s49057.0]
                          ["GHC.Prim.Unit#" sat.s49064.0]
                      (GHC.Maybe.Just finalizer1.s49065.0) ->
                          let sat.s49067.0 = GHC.IO.Handle.Internals.mkDuplexHandle9.closure.4 @ filepath.s49024.2 finalizer1.s49065.0 ipv9.s49057.0
                          letS ds6.s49068.0 = "mkWeakNoFinalizer#" @ ipv9.s49057.0 "GHC.Tuple.()"
                          case ds6.s49068.0 of
                            ("GHC.Prim.Unit#" ipv11.s49070.0) ->
                                let sat.s49071.0 = [GHC.IO.Handle.Types.FileHandle filepath.s49024.2 ipv9.s49057.0]
                                ["GHC.Prim.Unit#" sat.s49071.0]

GHC.IO.Handle.Internals.mkDuplexHandle9.closure.6 ipv13.s49099.1 =
  letS wild1.s49100.0 = ipv13.s49099.1
  case wild1.s49100.0 of
    (GHC.Types.False) ->
        GHC.IO.Handle.Internals.lvl8
    (GHC.Types.True) ->
        [GHC.IO.Handle.Types.LineBuffering]

GHC.IO.Handle.Internals.mkDuplexHandle9.closure.7 "$dBufferedIO.s49021.1" "$dIODevice.s49020.1" "$dTypeable.s49022.1" buffered.s49026.1 dev1.s49023.1 filepath.s49024.1 finalizer.s49029.1 ha_type.s49025.1 mb_codec.s49027.1 nl.s49028.1 other_side.s49030.1 mb_encoder.s49033.0 mb_decoder.s49034.0 void.040.1645 =
  let buf_state.s49036.0 = GHC.IO.Handle.Internals.mkDuplexHandle9.closure.0 @ ha_type.s49025.1
  letS ds1.s49038.0 = GHC.IO.BufferedIO.newBuffer @ "$dBufferedIO.s49021.1" dev1.s49023.1 buf_state.s49036.0 #"GHC.Prim.void#"
  case ds1.s49038.0 of
    ("GHC.Prim.Unit#" ipv1.s49040.0) ->
        letS ds2.s49041.0 = "newMutVar#" @ ipv1.s49040.0
        case ds2.s49041.0 of
          ("GHC.Prim.Unit#" ipv3.s49043.0) ->
              let sat.s49044.0 = ["GHC.Tuple.(,)" GHC.IO.Handle.Internals.decodeByteBuf2 ipv1.s49040.0]
              letS ds3.s49045.0 = "newMutVar#" @ sat.s49044.0
              case ds3.s49045.0 of
                ("GHC.Prim.Unit#" ipv5.s49047.0) ->
                    let "$s$w$j.s49048.0" = GHC.IO.Handle.Internals.mkDuplexHandle9.closure.5 @ "$dBufferedIO.s49021.1" "$dIODevice.s49020.1" "$dTypeable.s49022.1" dev1.s49023.1 filepath.s49024.1 finalizer.s49029.1 ha_type.s49025.1 ipv3.s49043.0 ipv5.s49047.0 mb_codec.s49027.1 mb_decoder.s49034.0 mb_encoder.s49033.0 nl.s49028.1 other_side.s49030.1
                    letS wild.s49072.0 = buffered.s49026.1
                    case wild.s49072.0 of
                      (GHC.Types.False) ->
                          letS ds4.s49073.0 = "newMutVar#" @ GHC.ForeignPtr.NoFinalizers
                          case ds4.s49073.0 of
                            ("GHC.Prim.Unit#" ipv7.s49075.0) ->
                                letS ds5.s49076.0 = "newPinnedByteArray#" @ 8192
                                case ds5.s49076.0 of
                                  ("GHC.Prim.Unit#" ipv9.s49078.0) ->
                                      let sat.s49080.0 = [GHC.ForeignPtr.MallocPtr ipv9.s49078.0 ipv7.s49075.0]
                                      letS sat.s49079.0 = "byteArrayContents#" @ ipv9.s49078.0
                                      let sat.s49081.0 = [GHC.IO.Buffer.Buffer sat.s49079.0{- value -} sat.s49080.0 buf_state.s49036.0 2048 0 0]
                                      letS ds6.s49082.0 = "newMutVar#" @ sat.s49081.0
                                      case ds6.s49082.0 of
                                        ("GHC.Prim.Unit#" ipv11.s49084.0) ->
                                            "$s$w$j.s49048.0" @ GHC.IO.Handle.Types.NoBuffering ipv11.s49084.0 #"GHC.Prim.coercionToken#" #"GHC.Prim.void#"
                      (GHC.Types.True) ->
                          letS ds4.s49085.0 = "newMutVar#" @ GHC.ForeignPtr.NoFinalizers
                          case ds4.s49085.0 of
                            ("GHC.Prim.Unit#" ipv7.s49087.0) ->
                                letS ds5.s49088.0 = "newPinnedByteArray#" @ 8192
                                case ds5.s49088.0 of
                                  ("GHC.Prim.Unit#" ipv9.s49090.0) ->
                                      let sat.s49092.0 = [GHC.ForeignPtr.MallocPtr ipv9.s49090.0 ipv7.s49087.0]
                                      letS sat.s49091.0 = "byteArrayContents#" @ ipv9.s49090.0
                                      let sat.s49093.0 = [GHC.IO.Buffer.Buffer sat.s49091.0{- value -} sat.s49092.0 buf_state.s49036.0 2048 0 0]
                                      letS ds6.s49094.0 = "newMutVar#" @ sat.s49093.0
                                      case ds6.s49094.0 of
                                        ("GHC.Prim.Unit#" ipv11.s49096.0) ->
                                            letS ds7.s49097.0 = GHC.IO.Device.isTerminal @ "$dIODevice.s49020.1" dev1.s49023.1 #"GHC.Prim.void#"
                                            case ds7.s49097.0 of
                                              ("GHC.Prim.Unit#" ipv13.s49099.0) ->
                                                  let sat.s49101.0 = GHC.IO.Handle.Internals.mkDuplexHandle9.closure.6 @ ipv13.s49099.0
                                                  "$s$w$j.s49048.0" @ sat.s49101.0 ipv11.s49096.0 #"GHC.Prim.coercionToken#" #"GHC.Prim.void#"

GHC.IO.Handle.Internals.mkDuplexHandle9.closure.8 cont.s49032.1 ds3.s49107.1 ha_type.s49025.5 void.040.1646 ipv1.s49110.0 =
  letS wild2.s49111.0 = ha_type.s49025.5
  case wild2.s49111.0 of
    _ ->
        cont.s49032.1 @ GHC.Maybe.Nothing ipv1.s49110.0 #"GHC.Prim.void#"
    (GHC.IO.Handle.Types.WriteHandle) ->
        letS ds4.s49112.0 = ds3.s49107.1 @ #"GHC.Prim.void#"
        case ds4.s49112.0 of
          ("GHC.Prim.Unit#" ipv3.s49114.0) ->
              let sat.s49115.0 = [GHC.Maybe.Just ipv3.s49114.0]
              cont.s49032.1 @ sat.s49115.0 ipv1.s49110.0 #"GHC.Prim.void#"
    (GHC.IO.Handle.Types.AppendHandle) ->
        letS ds4.s49116.0 = ds3.s49107.1 @ #"GHC.Prim.void#"
        case ds4.s49116.0 of
          ("GHC.Prim.Unit#" ipv3.s49118.0) ->
              let sat.s49119.0 = [GHC.Maybe.Just ipv3.s49118.0]
              cont.s49032.1 @ sat.s49119.0 ipv1.s49110.0 #"GHC.Prim.void#"
    (GHC.IO.Handle.Types.ReadWriteHandle) ->
        letS ds4.s49120.0 = ds3.s49107.1 @ #"GHC.Prim.void#"
        case ds4.s49120.0 of
          ("GHC.Prim.Unit#" ipv3.s49122.0) ->
              let sat.s49123.0 = [GHC.Maybe.Just ipv3.s49122.0]
              cont.s49032.1 @ sat.s49123.0 ipv1.s49110.0 #"GHC.Prim.void#"

GHC.IO.Handle.Internals.wantReadableHandle10 =
  #"handle is semi-closed"

GHC.IO.Handle.Internals.wantReadableHandle11 =
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ GHC.IO.Handle.Internals.wantReadableHandle12

GHC.IO.Handle.Internals.wantReadableHandle12 =
  [GHC.IO.Exception.IOError GHC.Maybe.Nothing GHC.IO.Exception.IllegalOperation "GHC.Types.[]" GHC.IO.Handle.Internals.wantReadableHandle13 GHC.Maybe.Nothing GHC.Maybe.Nothing]

GHC.IO.Handle.Internals.wantReadableHandle13 =
  "GHC.CString.unpackCString#" @ GHC.IO.Handle.Internals.wantReadableHandle14{- value -}

GHC.IO.Handle.Internals.wantReadableHandle14 =
  #"handle is closed"

GHC.IO.Handle.Internals.wantReadableHandle7 =
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ GHC.IO.Handle.Internals.wantReadableHandle8

GHC.IO.Handle.Internals.wantReadableHandle8 =
  [GHC.IO.Exception.IOError GHC.Maybe.Nothing GHC.IO.Exception.IllegalOperation "GHC.Types.[]" GHC.IO.Handle.Internals.wantReadableHandle9 GHC.Maybe.Nothing GHC.Maybe.Nothing]

GHC.IO.Handle.Internals.wantReadableHandle9 =
  "GHC.CString.unpackCString#" @ GHC.IO.Handle.Internals.wantReadableHandle10{- value -}

GHC.IO.Handle.Internals.wantWritableHandle1 fun.s50467.0 h.s50468.0 act.s50469.0 void.040.1714 =
  letS wild.s50471.0 = h.s50468.0
  case wild.s50471.0 of
    (GHC.IO.Handle.Types.FileHandle ds.s50472.0 dt.s50473.0) ->
        "GHC.IO.Handle.Internals.$wwantWritableHandle'" @ fun.s50467.0 wild.s50471.0 dt.s50473.0 act.s50469.0 #"GHC.Prim.void#"
    (GHC.IO.Handle.Types.DuplexHandle ds.s50474.0 dt.s50475.0 dt1.s50476.0) ->
        "GHC.IO.Handle.Internals.$wwantWritableHandle'" @ fun.s50467.0 wild.s50471.0 dt1.s50476.0 act.s50469.0 #"GHC.Prim.void#"

GHC.IO.Handle.Internals.wantWritableHandle2 =
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ GHC.IO.Handle.Internals.wantWritableHandle3

GHC.IO.Handle.Internals.wantWritableHandle3 =
  [GHC.IO.Exception.IOError GHC.Maybe.Nothing GHC.IO.Exception.IllegalOperation "GHC.Types.[]" GHC.IO.Handle.Internals.wantWritableHandle4 GHC.Maybe.Nothing GHC.Maybe.Nothing]

GHC.IO.Handle.Internals.wantWritableHandle4 =
  "GHC.CString.unpackCString#" @ GHC.IO.Handle.Internals.wantWritableHandle5{- value -}

GHC.IO.Handle.Internals.wantWritableHandle5 =
  #"handle is not open for writing"

"GHC.IO.Handle.Text.$whPutChar" w.s60326.0 ww.s60327.0 void.040.1731 =
  let act.s60329.0 = "GHC.IO.Handle.Text.$whPutChar.closure.1" @ ww.s60327.0{- value -}
  letS wild.s60417.0 = w.s60326.0
  case wild.s60417.0 of
    (GHC.IO.Handle.Types.FileHandle ds.s60418.0 dt.s60419.0) ->
        "GHC.IO.Handle.Internals.$wwantWritableHandle'" @ GHC.IO.Handle.Text.hPutChar2 wild.s60417.0 dt.s60419.0 act.s60329.0 #"GHC.Prim.void#"
    (GHC.IO.Handle.Types.DuplexHandle ds.s60420.0 dt.s60421.0 dt1.s60422.0) ->
        "GHC.IO.Handle.Internals.$wwantWritableHandle'" @ GHC.IO.Handle.Text.hPutChar2 wild.s60417.0 dt1.s60422.0 act.s60329.0 #"GHC.Prim.void#"

"GHC.IO.Handle.Text.$whPutChar.closure.0" "$dBufferedIO.s60334.1" ds.s60336.1 ds2.s60339.1 dt.s60338.1 wild.s60332.1 void.X76.1 ww1.s60368.0 ww2.s60369.0 ww3.s60370.0 ww4.s60371.0 ww5.s60372.0 ww6.s60373.0 =
  letS ds10.s60374.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild.s60332.1 ww1.s60368.0{- value -} ww2.s60369.0 ww3.s60370.0 ww4.s60371.0{- value -} ww5.s60372.0{- value -} ww6.s60373.0{- value -} #"GHC.Prim.void#"
  case ds10.s60374.0 of
    ("GHC.Prim.Unit#" ipv3.s60376.0) ->
        letS wild2.s60377.0 = ds2.s60339.1
        case wild2.s60377.0 of
          _ ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]
          (GHC.IO.Handle.Types.LineBuffering) ->
              letS ds11.s60378.0 = "readMutVar#" @ dt.s60338.1
              case ds11.s60378.0 of
                ("GHC.Prim.Unit#" ipv5.s60380.0) ->
                    letS wild3.s60381.0 = ipv5.s60380.0
                    case wild3.s60381.0 of
                      (GHC.IO.Buffer.Buffer dt4.s60382.0 dt5.s60383.0 ds12.s60384.0 dt6.s60385.0 dt7.s60386.0 dt8.s60387.0) ->
                          letS lwild.s60388.0 = "==#" @ dt7.s60386.0{- value -} dt8.s60387.0{- value -}
                          case lwild.s60388.0{- value -} of
                            _ ->
                                letS ds13.s60389.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s60334.1" ds.s60336.1 wild3.s60381.0 #"GHC.Prim.void#"
                                case ds13.s60389.0 of
                                  ("GHC.Prim.Unit#" ipv7.s60391.0) ->
                                      letS "s2#.s60392.0" = "writeMutVar#" @ dt.s60338.1 ipv7.s60391.0
                                      case "s2#.s60392.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$whPutChar.closure.1" ww.s60327.1 handle_.s60330.0 void.040.1732 =
  letS wild.s60332.0 = handle_.s60330.0
  case wild.s60332.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s60333.0" "$dBufferedIO.s60334.0" "$dTypeable.s60335.0" ds.s60336.0 ds1.s60337.0 dt.s60338.0 ds2.s60339.0 dt1.s60340.0 dt2.s60341.0 dt3.s60342.0 ds3.s60343.0 ds4.s60344.0 ds5.s60345.0 ds6.s60346.0 ds7.s60347.0 ds8.s60348.0) ->
        letS ds9.s60349.0 = "readMutVar#" @ dt2.s60341.0
        case ds9.s60349.0 of
          ("GHC.Prim.Unit#" ipv1.s60351.0) ->
              letS wild1.s60352.0 = ww.s60327.1{- value -}
              case wild1.s60352.0{- value -} of
                _ ->
                    letS wild2.s60353.0 = ipv1.s60351.0
                    case wild2.s60353.0 of
                      (GHC.IO.Buffer.Buffer dt4.s60354.0 dt5.s60355.0 ds10.s60356.0 dt6.s60357.0 dt7.s60358.0 dt8.s60359.0) ->
                          letS s2.s60360.0 = "writeWideCharOffAddr#" @ dt4.s60354.0{- value -} dt8.s60359.0{- value -} wild1.s60352.0{- value -}
                          case s2.s60360.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s60361.0 = "touch#" @ dt5.s60355.0
                                case s'.s60361.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s60362.0 = "+#" @ dt8.s60359.0{- value -} 1
                                           ds11.s60363.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild.s60332.0 dt4.s60354.0{- value -} dt5.s60355.0 ds10.s60356.0 dt6.s60357.0{- value -} dt7.s60358.0{- value -} sat.s60362.0{- value -} #"GHC.Prim.void#"
                                      case ds11.s60363.0 of
                                        ("GHC.Prim.Unit#" ipv3.s60365.0) ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                #'\n' ->
                    let "$w$j.s60366.0" = "GHC.IO.Handle.Text.$whPutChar.closure.0" @ "$dBufferedIO.s60334.0" ds.s60336.0 ds2.s60339.0 dt.s60338.0 wild.s60332.0
                    letS wild2.s60393.0 = ds7.s60347.0
                    case wild2.s60393.0 of
                      (GHC.IO.Handle.Types.LF) ->
                          letS wild3.s60394.0 = ipv1.s60351.0
                          case wild3.s60394.0 of
                            (GHC.IO.Buffer.Buffer dt4.s60395.0 dt5.s60396.0 ds10.s60397.0 dt6.s60398.0 dt7.s60399.0 dt8.s60400.0) ->
                                letS s2.s60401.0 = "writeWideCharOffAddr#" @ dt4.s60395.0{- value -} dt8.s60400.0{- value -} #'\n'
                                case s2.s60401.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s60402.0 = "touch#" @ dt5.s60396.0
                                      case s'.s60402.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s60403.0 = "+#" @ dt8.s60400.0{- value -} 1
                                            "$w$j.s60366.0" @ #"GHC.Prim.void#" dt4.s60395.0{- value -} dt5.s60396.0 ds10.s60397.0 dt6.s60398.0{- value -} dt7.s60399.0{- value -} sat.s60403.0{- value -}
                      (GHC.IO.Handle.Types.CRLF) ->
                          letS wild3.s60404.0 = ipv1.s60351.0
                          case wild3.s60404.0 of
                            (GHC.IO.Buffer.Buffer dt4.s60405.0 dt5.s60406.0 ds10.s60407.0 dt6.s60408.0 dt7.s60409.0 dt8.s60410.0) ->
                                letS s2.s60411.0 = "writeWideCharOffAddr#" @ dt4.s60405.0{- value -} dt8.s60410.0{- value -} #'\r'
                                case s2.s60411.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s60412.0 = "touch#" @ dt5.s60406.0
                                      case s'.s60412.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv2.s60413.0 = "+#" @ dt8.s60410.0{- value -} 1
                                                 s1.s60414.0 = "writeWideCharOffAddr#" @ dt4.s60405.0{- value -} ipv2.s60413.0{- value -} #'\n'
                                            case s1.s60414.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s60415.0 = "touch#" @ dt5.s60406.0
                                                  case s'1.s60415.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s60416.0 = "+#" @ ipv2.s60413.0{- value -} 1
                                                        "$w$j.s60366.0" @ #"GHC.Prim.void#" dt4.s60405.0{- value -} dt5.s60406.0 ds10.s60407.0 dt6.s60408.0{- value -} dt7.s60409.0{- value -} sat.s60416.0{- value -}

"GHC.IO.Handle.Text.$wwriteBlocks" w.s61963.0 w1.s61964.0 w2.s61965.0 w3.s61966.0 ww.s61967.0 ww1.s61968.0 ww2.s61969.0 w4.s61970.0 void.040.1786 =
  let sat.s63577.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.0" @ w2.s61965.0
      exit.s61972.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.2" @ w.s61963.0 ww.s61967.0{- value -} ww1.s61968.0 ww2.s61969.0{- value -}
  letrec "$s$wshoveString.s62015.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.12" @ "$s$wshoveString.s62015.0" "$s$wshoveString1.s62016.0" exit.s61972.0 w.s61963.0 w1.s61964.0 w3.s61966.0 ww.s61967.0{- value -} ww1.s61968.0 ww2.s61969.0{- value -}
         "$s$wshoveString1.s62016.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.22" @ "$s$wshoveString.s62015.0" "$s$wshoveString1.s62016.0" exit.s61972.0 w.s61963.0 w1.s61964.0 w3.s61966.0 ww.s61967.0{- value -} ww1.s61968.0 ww2.s61969.0{- value -}
  letrec "$wshoveString.s62497.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.50" @ "$s$wshoveString.s62015.0" "$s$wshoveString2.s62498.0" "$wshoveString.s62497.0" exit.s61972.0 w.s61963.0 w1.s61964.0 w3.s61966.0 ww.s61967.0{- value -} ww1.s61968.0 ww2.s61969.0{- value -}
         "$s$wshoveString2.s62498.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.66" @ "$s$wshoveString2.s62498.0" "$wshoveString.s62497.0" exit.s61972.0 w.s61963.0 w1.s61964.0 w3.s61966.0 ww.s61967.0{- value -} ww1.s61968.0 ww2.s61969.0{- value -}
  "$wshoveString.s62497.0" @ 0 w4.s61970.0 sat.s63577.0 #"GHC.Prim.void#"

"GHC.IO.Handle.Text.$wwriteBlocks.closure.0" w2.s61965.1 =
  letS wild.s63576.0 = w2.s61965.1
  case wild.s63576.0 of
    (GHC.Types.False) ->
        ["GHC.Types.[]"]
    (GHC.Types.True) ->
        GHC.IO.Handle.Text.lvl32

"GHC.IO.Handle.Text.$wwriteBlocks.closure.1" raw.s61975.1 ww.s61967.2 ww1.s61968.2 ww2.s61969.2 ww3.s61973.1 h_.s61976.0 void.X129.3 =
  letS wild.s61978.0 = h_.s61976.0
  case wild.s61978.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s61979.0" "$dBufferedIO.s61980.0" "$dTypeable.s61981.0" ds.s61982.0 ds1.s61983.0 dt.s61984.0 ds2.s61985.0 dt1.s61986.0 dt2.s61987.0 dt3.s61988.0 ds3.s61989.0 ds4.s61990.0 ds5.s61991.0 ds6.s61992.0 ds7.s61993.0 ds8.s61994.0) ->
        letS ds9.s61995.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild.s61978.0 ww.s61967.2{- value -} ww1.s61968.2 GHC.IO.Buffer.WriteBuffer ww2.s61969.2{- value -} 0 ww3.s61973.1{- value -} #"GHC.Prim.void#"
        case ds9.s61995.0 of
          ("GHC.Prim.Unit#" ipv1.s61997.0) ->
              letS ds10.s61998.0 = "readMutVar#" @ dt2.s61987.0
              case ds10.s61998.0 of
                ("GHC.Prim.Unit#" ipv3.s62000.0) ->
                    letS wild1.s62001.0 = ipv3.s62000.0
                    case wild1.s62001.0 of
                      (GHC.IO.Buffer.Buffer dt4.s62002.0 dt5.s62003.0 ds11.s62004.0 dt6.s62005.0 dt7.s62006.0 dt8.s62007.0) ->
                          letS lwild.s62008.0 = "==#" @ ww2.s61969.2{- value -} dt6.s62005.0{- value -}
                          case lwild.s62008.0{- value -} of
                            _ ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                letS ds12.s62009.0 = "readMutVar#" @ dt3.s61988.0
                                case ds12.s62009.0 of
                                  ("GHC.Prim.Unit#" ipv5.s62011.0) ->
                                      let sat.s62012.0 = [GHC.IO.Handle.Types.BufferListCons raw.s61975.1 ipv5.s62011.0]
                                      letS "s2#.s62013.0" = "writeMutVar#" @ dt3.s61988.0 sat.s62012.0
                                      case "s2#.s62013.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.10" exit.s61972.2 sc2.s62019.1 w.s61963.3 w1.s61964.2 w3.s61966.2 ww.s61967.4 ww1.s61968.4 ww2.s61969.4 void.X136.3 ww3.s62031.0 =
  letS wild2.s62032.0 = w1.s61964.2
  case wild2.s62032.0 of
    (GHC.Types.False) ->
        letrec "$s$wshoveString2.s62033.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.4" @ "$s$wshoveString2.s62033.0" exit.s61972.2 w.s61963.3 w3.s61966.2 ww.s61967.4{- value -} ww1.s61968.4 ww2.s61969.4{- value -}
        "$s$wshoveString2.s62033.0" @ #"GHC.Prim.void#" sc2.s62019.1 ww3.s62031.0{- value -}
    (GHC.Types.True) ->
        let sat.s62121.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.5" @ ww.s61967.4{- value -} ww1.s61968.4 ww2.s61969.4{- value -} ww3.s62031.0{- value -}
        letS ds1.s62122.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.3 sat.s62121.0 #"GHC.Prim.void#"
        case ds1.s62122.0 of
          ("GHC.Prim.Unit#" ipv1.s62124.0) ->
              letrec "$s$wshoveString2.s62125.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.9" @ "$s$wshoveString2.s62125.0" exit.s61972.2 w.s61963.3 w3.s61966.2 ww.s61967.4{- value -} ww1.s61968.4 ww2.s61969.4{- value -}
              "$s$wshoveString2.s62125.0" @ #"GHC.Prim.void#" sc2.s62019.1 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.11" sc3.s62020.1 ww.s61967.12 ww1.s61968.12 ww2.s61969.12 h_.s62230.0 void.X134.5 =
  letS wild.s62232.0 = h_.s62230.0
  case wild.s62232.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62233.0" "$dBufferedIO.s62234.0" "$dTypeable.s62235.0" ds.s62236.0 ds1.s62237.0 dt.s62238.0 ds2.s62239.0 dt1.s62240.0 dt2.s62241.0 dt3.s62242.0 ds3.s62243.0 ds4.s62244.0 ds5.s62245.0 ds6.s62246.0 ds7.s62247.0 ds8.s62248.0) ->
        letS ds9.s62249.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild.s62232.0 ww.s61967.12{- value -} ww1.s61968.12 GHC.IO.Buffer.WriteBuffer ww2.s61969.12{- value -} 0 sc3.s62020.1{- value -} #"GHC.Prim.void#"
        case ds9.s62249.0 of
          ("GHC.Prim.Unit#" ipv1.s62251.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.12" "$s$wshoveString.s62015.1" "$s$wshoveString1.s62016.1" exit.s61972.1 w.s61963.2 w1.s61964.1 w3.s61966.1 ww.s61967.3 ww1.s61968.3 ww2.s61969.3 void.040.1788 sc1.s62018.0 sc2.s62019.0 sc3.s62020.0 =
  letS sat.s62021.0 = "+#" @ sc3.s62020.0{- value -} 1
       lwild.s62022.0 = ">=#" @ sat.s62021.0{- value -} ww2.s61969.3{- value -}
  case lwild.s62022.0{- value -} of
    _ ->
        letS wild.s62023.0 = sc1.s62018.0
        case wild.s62023.0 of
          ("GHC.Types.C#" x.s62024.0) ->
              letS wild1.s62025.0 = x.s62024.0{- value -}
              case wild1.s62025.0{- value -} of
                _ ->
                    letS s2.s62026.0 = "writeWideCharOffAddr#" @ ww.s61967.3{- value -} sc3.s62020.0{- value -} wild1.s62025.0{- value -}
                    case s2.s62026.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'.s62027.0 = "touch#" @ ww1.s61968.3
                          case s'.s62027.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s62028.0 = "+#" @ sc3.s62020.0{- value -} 1
                                "$s$wshoveString1.s62016.1" @ #"GHC.Prim.void#" sc2.s62019.0 sat.s62028.0{- value -}
                #'\n' ->
                    let "$w$j.s62029.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.10" @ exit.s61972.1 sc2.s62019.0 w.s61963.2 w1.s61964.1 w3.s61966.1 ww.s61967.3{- value -} ww1.s61968.3 ww2.s61969.3{- value -}
                    letS wild2.s62220.0 = w3.s61966.1
                    case wild2.s62220.0 of
                      (GHC.IO.Handle.Types.LF) ->
                          letS s2.s62221.0 = "writeWideCharOffAddr#" @ ww.s61967.3{- value -} sc3.s62020.0{- value -} #'\n'
                          case s2.s62221.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62222.0 = "touch#" @ ww1.s61968.3
                                case s'.s62222.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62223.0 = "+#" @ sc3.s62020.0{- value -} 1
                                      "$w$j.s62029.0" @ #"GHC.Prim.void#" sat.s62223.0{- value -}
                      (GHC.IO.Handle.Types.CRLF) ->
                          letS s2.s62224.0 = "writeWideCharOffAddr#" @ ww.s61967.3{- value -} sc3.s62020.0{- value -} #'\r'
                          case s2.s62224.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62225.0 = "touch#" @ ww1.s61968.3
                                case s'.s62225.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS ipv1.s62226.0 = "+#" @ sc3.s62020.0{- value -} 1
                                           s1.s62227.0 = "writeWideCharOffAddr#" @ ww.s61967.3{- value -} ipv1.s62226.0{- value -} #'\n'
                                      case s1.s62227.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s62228.0 = "touch#" @ ww1.s61968.3
                                            case s'1.s62228.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s62229.0 = "+#" @ ipv1.s62226.0{- value -} 1
                                                  "$w$j.s62029.0" @ #"GHC.Prim.void#" sat.s62229.0{- value -}
    1 ->
        let sat.s62252.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.11" @ sc3.s62020.0{- value -} ww.s61967.3{- value -} ww1.s61968.3 ww2.s61969.3{- value -}
        letS ds1.s62253.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.2 sat.s62252.0 #"GHC.Prim.void#"
        case ds1.s62253.0 of
          ("GHC.Prim.Unit#" ipv1.s62255.0) ->
              "$s$wshoveString.s62015.1" @ #"GHC.Prim.void#" sc1.s62018.0 sc2.s62019.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.13" sc5.s62277.1 ww.s61967.16 ww1.s61968.16 ww2.s61969.16 h_.s62299.0 void.X152.4 =
  letS wild5.s62301.0 = h_.s62299.0
  case wild5.s62301.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62302.0" "$dBufferedIO.s62303.0" "$dTypeable.s62304.0" ds.s62305.0 ds1.s62306.0 dt.s62307.0 ds2.s62308.0 dt1.s62309.0 dt2.s62310.0 dt3.s62311.0 ds3.s62312.0 ds4.s62313.0 ds5.s62314.0 ds6.s62315.0 ds7.s62316.0 ds8.s62317.0) ->
        letS ds9.s62318.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild5.s62301.0 ww.s61967.16{- value -} ww1.s61968.16 GHC.IO.Buffer.WriteBuffer ww2.s61969.16{- value -} 0 sc5.s62277.1{- value -} #"GHC.Prim.void#"
        case ds9.s62318.0 of
          ("GHC.Prim.Unit#" ipv1.s62320.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.14" "$s$wshoveString2.s62274.1" exit.s61972.7 w.s61963.9 w3.s61966.7 ww.s61967.15 ww1.s61968.15 ww2.s61969.15 void.X142.3 sc4.s62276.0 sc5.s62277.0 =
  letS wild4.s62278.0 = sc4.s62276.0
  case wild4.s62278.0 of
    ("GHC.Types.[]") ->
        exit.s61972.7 @ sc5.s62277.0{- value -} #"GHC.Prim.void#"
    (GHC.Types.: c1.s62279.0 cs1.s62280.0) ->
        letS sat.s62281.0 = "+#" @ sc5.s62277.0{- value -} 1
             lwild1.s62282.0 = ">=#" @ sat.s62281.0{- value -} ww2.s61969.15{- value -}
        case lwild1.s62282.0{- value -} of
          _ ->
              letS wild5.s62283.0 = c1.s62279.0
              case wild5.s62283.0 of
                ("GHC.Types.C#" x1.s62284.0) ->
                    letS wild6.s62285.0 = x1.s62284.0{- value -}
                    case wild6.s62285.0{- value -} of
                      _ ->
                          letS s2.s62286.0 = "writeWideCharOffAddr#" @ ww.s61967.15{- value -} sc5.s62277.0{- value -} wild6.s62285.0{- value -}
                          case s2.s62286.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62287.0 = "touch#" @ ww1.s61968.15
                                case s'.s62287.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62288.0 = "+#" @ sc5.s62277.0{- value -} 1
                                      "$s$wshoveString2.s62274.1" @ #"GHC.Prim.void#" cs1.s62280.0 sat.s62288.0{- value -}
                      #'\n' ->
                          letS wild7.s62289.0 = w3.s61966.7
                          case wild7.s62289.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s62290.0 = "writeWideCharOffAddr#" @ ww.s61967.15{- value -} sc5.s62277.0{- value -} #'\n'
                                case s2.s62290.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62291.0 = "touch#" @ ww1.s61968.15
                                      case s'.s62291.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s62292.0 = "+#" @ sc5.s62277.0{- value -} 1
                                            "$s$wshoveString2.s62274.1" @ #"GHC.Prim.void#" cs1.s62280.0 sat.s62292.0{- value -}
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s62293.0 = "writeWideCharOffAddr#" @ ww.s61967.15{- value -} sc5.s62277.0{- value -} #'\r'
                                case s2.s62293.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62294.0 = "touch#" @ ww1.s61968.15
                                      case s'.s62294.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv1.s62295.0 = "+#" @ sc5.s62277.0{- value -} 1
                                                 s1.s62296.0 = "writeWideCharOffAddr#" @ ww.s61967.15{- value -} ipv1.s62295.0{- value -} #'\n'
                                            case s1.s62296.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s62297.0 = "touch#" @ ww1.s61968.15
                                                  case s'1.s62297.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s62298.0 = "+#" @ ipv1.s62295.0{- value -} 1
                                                        "$s$wshoveString2.s62274.1" @ #"GHC.Prim.void#" cs1.s62280.0 sat.s62298.0{- value -}
          1 ->
              let sat.s62321.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.13" @ sc5.s62277.0{- value -} ww.s61967.15{- value -} ww1.s61968.15 ww2.s61969.15{- value -}
              letS ds1.s62322.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.9 sat.s62321.0 #"GHC.Prim.void#"
              case ds1.s62322.0 of
                ("GHC.Prim.Unit#" ipv1.s62324.0) ->
                    "$s$wshoveString2.s62274.1" @ #"GHC.Prim.void#" wild4.s62278.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.15" ww.s61967.17 ww1.s61968.17 ww2.s61969.17 ww3.s62272.1 h_.s62325.0 void.X143.5 =
  letS wild4.s62327.0 = h_.s62325.0
  case wild4.s62327.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62328.0" "$dBufferedIO.s62329.0" "$dTypeable.s62330.0" ds.s62331.0 ds1.s62332.0 dt.s62333.0 ds2.s62334.0 dt1.s62335.0 dt2.s62336.0 dt3.s62337.0 ds3.s62338.0 ds4.s62339.0 ds5.s62340.0 ds6.s62341.0 ds7.s62342.0 ds8.s62343.0) ->
        letS ds9.s62344.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild4.s62327.0 ww.s61967.17{- value -} ww1.s61968.17 GHC.IO.Buffer.WriteBuffer ww2.s61969.17{- value -} 0 ww3.s62272.1{- value -} #"GHC.Prim.void#"
        case ds9.s62344.0 of
          ("GHC.Prim.Unit#" ipv1.s62346.0) ->
              letS ds10.s62347.0 = "readMutVar#" @ dt.s62333.0
              case ds10.s62347.0 of
                ("GHC.Prim.Unit#" ipv3.s62349.0) ->
                    letS wild5.s62350.0 = ipv3.s62349.0
                    case wild5.s62350.0 of
                      (GHC.IO.Buffer.Buffer dt4.s62351.0 dt5.s62352.0 ds11.s62353.0 dt6.s62354.0 dt7.s62355.0 dt8.s62356.0) ->
                          letS lwild1.s62357.0 = "==#" @ dt7.s62355.0{- value -} dt8.s62356.0{- value -}
                          case lwild1.s62357.0{- value -} of
                            _ ->
                                letS ds12.s62358.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s62329.0" ds.s62331.0 wild5.s62350.0 #"GHC.Prim.void#"
                                case ds12.s62358.0 of
                                  ("GHC.Prim.Unit#" ipv5.s62360.0) ->
                                      letS "s2#.s62361.0" = "writeMutVar#" @ dt.s62333.0 ipv5.s62360.0
                                      case "s2#.s62361.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.16" ww.s61967.20 ww1.s61968.20 ww2.s61969.20 ww4.s62383.1 h_.s62384.0 void.X161.2 =
  letS wild7.s62386.0 = h_.s62384.0
  case wild7.s62386.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62387.0" "$dBufferedIO.s62388.0" "$dTypeable.s62389.0" ds.s62390.0 ds2.s62391.0 dt.s62392.0 ds3.s62393.0 dt1.s62394.0 dt2.s62395.0 dt3.s62396.0 ds4.s62397.0 ds5.s62398.0 ds6.s62399.0 ds7.s62400.0 ds8.s62401.0 ds9.s62402.0) ->
        letS ds10.s62403.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild7.s62386.0 ww.s61967.20{- value -} ww1.s61968.20 GHC.IO.Buffer.WriteBuffer ww2.s61969.20{- value -} 0 ww4.s62383.1{- value -} #"GHC.Prim.void#"
        case ds10.s62403.0 of
          ("GHC.Prim.Unit#" ipv3.s62405.0) ->
              letS ds11.s62406.0 = "readMutVar#" @ dt.s62392.0
              case ds11.s62406.0 of
                ("GHC.Prim.Unit#" ipv5.s62408.0) ->
                    letS wild8.s62409.0 = ipv5.s62408.0
                    case wild8.s62409.0 of
                      (GHC.IO.Buffer.Buffer dt4.s62410.0 dt5.s62411.0 ds12.s62412.0 dt6.s62413.0 dt7.s62414.0 dt8.s62415.0) ->
                          letS lwild2.s62416.0 = "==#" @ dt7.s62414.0{- value -} dt8.s62415.0{- value -}
                          case lwild2.s62416.0{- value -} of
                            _ ->
                                letS ds13.s62417.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s62388.0" ds.s62390.0 wild8.s62409.0 #"GHC.Prim.void#"
                                case ds13.s62417.0 of
                                  ("GHC.Prim.Unit#" ipv7.s62419.0) ->
                                      letS "s2#.s62420.0" = "writeMutVar#" @ dt.s62392.0 ipv7.s62419.0
                                      case "s2#.s62420.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.17" "$s$wshoveString2.s62366.2" cs1.s62372.1 w.s61963.11 ww.s61967.19 ww1.s61968.19 ww2.s61969.19 void.X157.2 ww4.s62383.0 =
  let sat.s62421.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.16" @ ww.s61967.19{- value -} ww1.s61968.19 ww2.s61969.19{- value -} ww4.s62383.0{- value -}
  letS ds2.s62422.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.11 sat.s62421.0 #"GHC.Prim.void#"
  case ds2.s62422.0 of
    ("GHC.Prim.Unit#" ipv3.s62424.0) ->
        "$s$wshoveString2.s62366.2" @ #"GHC.Prim.void#" cs1.s62372.1 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.18" sc5.s62369.1 ww.s61967.21 ww1.s61968.21 ww2.s61969.21 h_.s62435.0 void.X155.1 =
  letS wild5.s62437.0 = h_.s62435.0
  case wild5.s62437.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62438.0" "$dBufferedIO.s62439.0" "$dTypeable.s62440.0" ds.s62441.0 ds2.s62442.0 dt.s62443.0 ds3.s62444.0 dt1.s62445.0 dt2.s62446.0 dt3.s62447.0 ds4.s62448.0 ds5.s62449.0 ds6.s62450.0 ds7.s62451.0 ds8.s62452.0 ds9.s62453.0) ->
        letS ds10.s62454.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild5.s62437.0 ww.s61967.21{- value -} ww1.s61968.21 GHC.IO.Buffer.WriteBuffer ww2.s61969.21{- value -} 0 sc5.s62369.1{- value -} #"GHC.Prim.void#"
        case ds10.s62454.0 of
          ("GHC.Prim.Unit#" ipv3.s62456.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.19" "$s$wshoveString2.s62366.1" exit.s61972.8 w.s61963.10 w3.s61966.8 ww.s61967.18 ww1.s61968.18 ww2.s61969.18 void.X145.4 sc4.s62368.0 sc5.s62369.0 =
  letS wild4.s62370.0 = sc4.s62368.0
  case wild4.s62370.0 of
    ("GHC.Types.[]") ->
        exit.s61972.8 @ sc5.s62369.0{- value -} #"GHC.Prim.void#"
    (GHC.Types.: c1.s62371.0 cs1.s62372.0) ->
        letS sat.s62373.0 = "+#" @ sc5.s62369.0{- value -} 1
             lwild1.s62374.0 = ">=#" @ sat.s62373.0{- value -} ww2.s61969.18{- value -}
        case lwild1.s62374.0{- value -} of
          _ ->
              letS wild5.s62375.0 = c1.s62371.0
              case wild5.s62375.0 of
                ("GHC.Types.C#" x1.s62376.0) ->
                    letS wild6.s62377.0 = x1.s62376.0{- value -}
                    case wild6.s62377.0{- value -} of
                      _ ->
                          letS s2.s62378.0 = "writeWideCharOffAddr#" @ ww.s61967.18{- value -} sc5.s62369.0{- value -} wild6.s62377.0{- value -}
                          case s2.s62378.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62379.0 = "touch#" @ ww1.s61968.18
                                case s'.s62379.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62380.0 = "+#" @ sc5.s62369.0{- value -} 1
                                      "$s$wshoveString2.s62366.1" @ #"GHC.Prim.void#" cs1.s62372.0 sat.s62380.0{- value -}
                      #'\n' ->
                          let "$w$j1.s62381.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.17" @ "$s$wshoveString2.s62366.1" cs1.s62372.0 w.s61963.10 ww.s61967.18{- value -} ww1.s61968.18 ww2.s61969.18{- value -}
                          letS wild7.s62425.0 = w3.s61966.8
                          case wild7.s62425.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s62426.0 = "writeWideCharOffAddr#" @ ww.s61967.18{- value -} sc5.s62369.0{- value -} #'\n'
                                case s2.s62426.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62427.0 = "touch#" @ ww1.s61968.18
                                      case s'.s62427.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s62428.0 = "+#" @ sc5.s62369.0{- value -} 1
                                            "$w$j1.s62381.0" @ #"GHC.Prim.void#" sat.s62428.0{- value -}
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s62429.0 = "writeWideCharOffAddr#" @ ww.s61967.18{- value -} sc5.s62369.0{- value -} #'\r'
                                case s2.s62429.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62430.0 = "touch#" @ ww1.s61968.18
                                      case s'.s62430.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv2.s62431.0 = "+#" @ sc5.s62369.0{- value -} 1
                                                 s1.s62432.0 = "writeWideCharOffAddr#" @ ww.s61967.18{- value -} ipv2.s62431.0{- value -} #'\n'
                                            case s1.s62432.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s62433.0 = "touch#" @ ww1.s61968.18
                                                  case s'1.s62433.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s62434.0 = "+#" @ ipv2.s62431.0{- value -} 1
                                                        "$w$j1.s62381.0" @ #"GHC.Prim.void#" sat.s62434.0{- value -}
          1 ->
              let sat.s62457.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.18" @ sc5.s62369.0{- value -} ww.s61967.18{- value -} ww1.s61968.18 ww2.s61969.18{- value -}
              letS ds2.s62458.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.10 sat.s62457.0 #"GHC.Prim.void#"
              case ds2.s62458.0 of
                ("GHC.Prim.Unit#" ipv3.s62460.0) ->
                    "$s$wshoveString2.s62366.1" @ #"GHC.Prim.void#" wild4.s62370.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.2" w.s61963.1 ww.s61967.1 ww1.s61968.1 ww2.s61969.1 ww3.s61973.0 void.040.1787 =
  let raw.s61975.0 = [GHC.ForeignPtr.ForeignPtr ww.s61967.1{- value -} ww1.s61968.1]
      sat.s62014.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.1" @ raw.s61975.0 ww.s61967.1{- value -} ww1.s61968.1 ww2.s61969.1{- value -} ww3.s61973.0{- value -}
  GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.1 sat.s62014.0 #"GHC.Prim.void#"

"GHC.IO.Handle.Text.$wwriteBlocks.closure.20" cs.s62261.1 exit.s61972.6 w.s61963.8 w1.s61964.4 w3.s61966.6 ww.s61967.14 ww1.s61968.14 ww2.s61969.14 void.X138.6 ww3.s62272.0 =
  letS wild3.s62273.0 = w1.s61964.4
  case wild3.s62273.0 of
    (GHC.Types.False) ->
        letrec "$s$wshoveString2.s62274.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.14" @ "$s$wshoveString2.s62274.0" exit.s61972.6 w.s61963.8 w3.s61966.6 ww.s61967.14{- value -} ww1.s61968.14 ww2.s61969.14{- value -}
        "$s$wshoveString2.s62274.0" @ #"GHC.Prim.void#" cs.s62261.1 ww3.s62272.0{- value -}
    (GHC.Types.True) ->
        let sat.s62362.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.15" @ ww.s61967.14{- value -} ww1.s61968.14 ww2.s61969.14{- value -} ww3.s62272.0{- value -}
        letS ds1.s62363.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.8 sat.s62362.0 #"GHC.Prim.void#"
        case ds1.s62363.0 of
          ("GHC.Prim.Unit#" ipv1.s62365.0) ->
              letrec "$s$wshoveString2.s62366.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.19" @ "$s$wshoveString2.s62366.0" exit.s61972.6 w.s61963.8 w3.s61966.6 ww.s61967.14{- value -} ww1.s61968.14 ww2.s61969.14{- value -}
              "$s$wshoveString2.s62366.0" @ #"GHC.Prim.void#" cs.s62261.1 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.21" sc2.s62258.1 ww.s61967.22 ww1.s61968.22 ww2.s61969.22 h_.s62471.0 void.X136.4 =
  letS wild1.s62473.0 = h_.s62471.0
  case wild1.s62473.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62474.0" "$dBufferedIO.s62475.0" "$dTypeable.s62476.0" ds.s62477.0 ds1.s62478.0 dt.s62479.0 ds2.s62480.0 dt1.s62481.0 dt2.s62482.0 dt3.s62483.0 ds3.s62484.0 ds4.s62485.0 ds5.s62486.0 ds6.s62487.0 ds7.s62488.0 ds8.s62489.0) ->
        letS ds9.s62490.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild1.s62473.0 ww.s61967.22{- value -} ww1.s61968.22 GHC.IO.Buffer.WriteBuffer ww2.s61969.22{- value -} 0 sc2.s62258.1{- value -} #"GHC.Prim.void#"
        case ds9.s62490.0 of
          ("GHC.Prim.Unit#" ipv1.s62492.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.22" "$s$wshoveString.s62015.2" "$s$wshoveString1.s62016.2" exit.s61972.5 w.s61963.7 w1.s61964.3 w3.s61966.5 ww.s61967.13 ww1.s61968.13 ww2.s61969.13 void.040.1789 sc1.s62257.0 sc2.s62258.0 =
  letS wild.s62259.0 = sc1.s62257.0
  case wild.s62259.0 of
    ("GHC.Types.[]") ->
        exit.s61972.5 @ sc2.s62258.0{- value -} #"GHC.Prim.void#"
    (GHC.Types.: c.s62260.0 cs.s62261.0) ->
        letS sat.s62262.0 = "+#" @ sc2.s62258.0{- value -} 1
             lwild.s62263.0 = ">=#" @ sat.s62262.0{- value -} ww2.s61969.13{- value -}
        case lwild.s62263.0{- value -} of
          _ ->
              letS wild1.s62264.0 = c.s62260.0
              case wild1.s62264.0 of
                ("GHC.Types.C#" x.s62265.0) ->
                    letS wild2.s62266.0 = x.s62265.0{- value -}
                    case wild2.s62266.0{- value -} of
                      _ ->
                          letS s2.s62267.0 = "writeWideCharOffAddr#" @ ww.s61967.13{- value -} sc2.s62258.0{- value -} wild2.s62266.0{- value -}
                          case s2.s62267.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62268.0 = "touch#" @ ww1.s61968.13
                                case s'.s62268.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62269.0 = "+#" @ sc2.s62258.0{- value -} 1
                                      "$s$wshoveString1.s62016.2" @ #"GHC.Prim.void#" cs.s62261.0 sat.s62269.0{- value -}
                      #'\n' ->
                          let "$w$j.s62270.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.20" @ cs.s62261.0 exit.s61972.5 w.s61963.7 w1.s61964.3 w3.s61966.5 ww.s61967.13{- value -} ww1.s61968.13 ww2.s61969.13{- value -}
                          letS wild3.s62461.0 = w3.s61966.5
                          case wild3.s62461.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s62462.0 = "writeWideCharOffAddr#" @ ww.s61967.13{- value -} sc2.s62258.0{- value -} #'\n'
                                case s2.s62462.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62463.0 = "touch#" @ ww1.s61968.13
                                      case s'.s62463.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s62464.0 = "+#" @ sc2.s62258.0{- value -} 1
                                            "$w$j.s62270.0" @ #"GHC.Prim.void#" sat.s62464.0{- value -}
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s62465.0 = "writeWideCharOffAddr#" @ ww.s61967.13{- value -} sc2.s62258.0{- value -} #'\r'
                                case s2.s62465.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62466.0 = "touch#" @ ww1.s61968.13
                                      case s'.s62466.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv1.s62467.0 = "+#" @ sc2.s62258.0{- value -} 1
                                                 s1.s62468.0 = "writeWideCharOffAddr#" @ ww.s61967.13{- value -} ipv1.s62467.0{- value -} #'\n'
                                            case s1.s62468.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s62469.0 = "touch#" @ ww1.s61968.13
                                                  case s'1.s62469.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s62470.0 = "+#" @ ipv1.s62467.0{- value -} 1
                                                        "$w$j.s62270.0" @ #"GHC.Prim.void#" sat.s62470.0{- value -}
          1 ->
              let sat.s62493.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.21" @ sc2.s62258.0{- value -} ww.s61967.13{- value -} ww1.s61968.13 ww2.s61969.13{- value -}
              letS ds1.s62494.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.7 sat.s62493.0 #"GHC.Prim.void#"
              case ds1.s62494.0 of
                ("GHC.Prim.Unit#" ipv1.s62496.0) ->
                    "$s$wshoveString.s62015.2" @ #"GHC.Prim.void#" c.s62260.0 cs.s62261.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.23" sc3.s62526.1 ww.s61967.26 ww1.s61968.26 ww2.s61969.26 h_.s62545.0 void.X154.2 =
  letS wild4.s62547.0 = h_.s62545.0
  case wild4.s62547.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62548.0" "$dBufferedIO.s62549.0" "$dTypeable.s62550.0" ds.s62551.0 ds1.s62552.0 dt.s62553.0 ds2.s62554.0 dt1.s62555.0 dt2.s62556.0 dt3.s62557.0 ds3.s62558.0 ds4.s62559.0 ds5.s62560.0 ds6.s62561.0 ds7.s62562.0 ds8.s62563.0) ->
        letS ds9.s62564.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild4.s62547.0 ww.s61967.26{- value -} ww1.s61968.26 GHC.IO.Buffer.WriteBuffer ww2.s61969.26{- value -} 0 sc3.s62526.1{- value -} #"GHC.Prim.void#"
        case ds9.s62564.0 of
          ("GHC.Prim.Unit#" ipv1.s62566.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.24" "$s$wshoveString3.s62521.1" "$s$wshoveString4.s62522.1" w.s61963.14 w3.s61966.11 ww.s61967.25 ww1.s61968.25 ww2.s61969.25 void.X146.4 sc1.s62524.0 sc2.s62525.0 sc3.s62526.0 =
  letS sat.s62527.0 = "+#" @ sc3.s62526.0{- value -} 1
       lwild1.s62528.0 = ">=#" @ sat.s62527.0{- value -} ww2.s61969.25{- value -}
  case lwild1.s62528.0{- value -} of
    _ ->
        letS wild4.s62529.0 = sc1.s62524.0
        case wild4.s62529.0 of
          ("GHC.Types.C#" x1.s62530.0) ->
              letS wild5.s62531.0 = x1.s62530.0{- value -}
              case wild5.s62531.0{- value -} of
                _ ->
                    letS s2.s62532.0 = "writeWideCharOffAddr#" @ ww.s61967.25{- value -} sc3.s62526.0{- value -} wild5.s62531.0{- value -}
                    case s2.s62532.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'.s62533.0 = "touch#" @ ww1.s61968.25
                          case s'.s62533.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s62534.0 = "+#" @ sc3.s62526.0{- value -} 1
                                "$s$wshoveString4.s62522.1" @ #"GHC.Prim.void#" sc2.s62525.0 sat.s62534.0{- value -}
                #'\n' ->
                    letS wild6.s62535.0 = w3.s61966.11
                    case wild6.s62535.0 of
                      (GHC.IO.Handle.Types.LF) ->
                          letS s2.s62536.0 = "writeWideCharOffAddr#" @ ww.s61967.25{- value -} sc3.s62526.0{- value -} #'\n'
                          case s2.s62536.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62537.0 = "touch#" @ ww1.s61968.25
                                case s'.s62537.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62538.0 = "+#" @ sc3.s62526.0{- value -} 1
                                      "$s$wshoveString4.s62522.1" @ #"GHC.Prim.void#" sc2.s62525.0 sat.s62538.0{- value -}
                      (GHC.IO.Handle.Types.CRLF) ->
                          letS s2.s62539.0 = "writeWideCharOffAddr#" @ ww.s61967.25{- value -} sc3.s62526.0{- value -} #'\r'
                          case s2.s62539.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62540.0 = "touch#" @ ww1.s61968.25
                                case s'.s62540.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS ipv1.s62541.0 = "+#" @ sc3.s62526.0{- value -} 1
                                           s1.s62542.0 = "writeWideCharOffAddr#" @ ww.s61967.25{- value -} ipv1.s62541.0{- value -} #'\n'
                                      case s1.s62542.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s62543.0 = "touch#" @ ww1.s61968.25
                                            case s'1.s62543.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s62544.0 = "+#" @ ipv1.s62541.0{- value -} 1
                                                  "$s$wshoveString4.s62522.1" @ #"GHC.Prim.void#" sc2.s62525.0 sat.s62544.0{- value -}
    1 ->
        let sat.s62567.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.23" @ sc3.s62526.0{- value -} ww.s61967.25{- value -} ww1.s61968.25 ww2.s61969.25{- value -}
        letS ds1.s62568.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.14 sat.s62567.0 #"GHC.Prim.void#"
        case ds1.s62568.0 of
          ("GHC.Prim.Unit#" ipv1.s62570.0) ->
              "$s$wshoveString3.s62521.1" @ #"GHC.Prim.void#" sc1.s62524.0 sc2.s62525.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.25" sc2.s62573.1 ww.s61967.28 ww1.s61968.28 ww2.s61969.28 h_.s62595.0 void.X156.1 =
  letS wild5.s62597.0 = h_.s62595.0
  case wild5.s62597.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62598.0" "$dBufferedIO.s62599.0" "$dTypeable.s62600.0" ds.s62601.0 ds1.s62602.0 dt.s62603.0 ds2.s62604.0 dt1.s62605.0 dt2.s62606.0 dt3.s62607.0 ds3.s62608.0 ds4.s62609.0 ds5.s62610.0 ds6.s62611.0 ds7.s62612.0 ds8.s62613.0) ->
        letS ds9.s62614.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild5.s62597.0 ww.s61967.28{- value -} ww1.s61968.28 GHC.IO.Buffer.WriteBuffer ww2.s61969.28{- value -} 0 sc2.s62573.1{- value -} #"GHC.Prim.void#"
        case ds9.s62614.0 of
          ("GHC.Prim.Unit#" ipv1.s62616.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.26" "$s$wshoveString3.s62521.2" "$s$wshoveString4.s62522.2" exit.s61972.11 w.s61963.15 w3.s61966.12 ww.s61967.27 ww1.s61968.27 ww2.s61969.27 void.X146.5 sc1.s62572.0 sc2.s62573.0 =
  letS wild4.s62574.0 = sc1.s62572.0
  case wild4.s62574.0 of
    ("GHC.Types.[]") ->
        exit.s61972.11 @ sc2.s62573.0{- value -} #"GHC.Prim.void#"
    (GHC.Types.: c1.s62575.0 cs1.s62576.0) ->
        letS sat.s62577.0 = "+#" @ sc2.s62573.0{- value -} 1
             lwild1.s62578.0 = ">=#" @ sat.s62577.0{- value -} ww2.s61969.27{- value -}
        case lwild1.s62578.0{- value -} of
          _ ->
              letS wild5.s62579.0 = c1.s62575.0
              case wild5.s62579.0 of
                ("GHC.Types.C#" x1.s62580.0) ->
                    letS wild6.s62581.0 = x1.s62580.0{- value -}
                    case wild6.s62581.0{- value -} of
                      _ ->
                          letS s2.s62582.0 = "writeWideCharOffAddr#" @ ww.s61967.27{- value -} sc2.s62573.0{- value -} wild6.s62581.0{- value -}
                          case s2.s62582.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62583.0 = "touch#" @ ww1.s61968.27
                                case s'.s62583.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62584.0 = "+#" @ sc2.s62573.0{- value -} 1
                                      "$s$wshoveString4.s62522.2" @ #"GHC.Prim.void#" cs1.s62576.0 sat.s62584.0{- value -}
                      #'\n' ->
                          letS wild7.s62585.0 = w3.s61966.12
                          case wild7.s62585.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s62586.0 = "writeWideCharOffAddr#" @ ww.s61967.27{- value -} sc2.s62573.0{- value -} #'\n'
                                case s2.s62586.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62587.0 = "touch#" @ ww1.s61968.27
                                      case s'.s62587.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s62588.0 = "+#" @ sc2.s62573.0{- value -} 1
                                            "$s$wshoveString4.s62522.2" @ #"GHC.Prim.void#" cs1.s62576.0 sat.s62588.0{- value -}
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s62589.0 = "writeWideCharOffAddr#" @ ww.s61967.27{- value -} sc2.s62573.0{- value -} #'\r'
                                case s2.s62589.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62590.0 = "touch#" @ ww1.s61968.27
                                      case s'.s62590.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv1.s62591.0 = "+#" @ sc2.s62573.0{- value -} 1
                                                 s1.s62592.0 = "writeWideCharOffAddr#" @ ww.s61967.27{- value -} ipv1.s62591.0{- value -} #'\n'
                                            case s1.s62592.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s62593.0 = "touch#" @ ww1.s61968.27
                                                  case s'1.s62593.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s62594.0 = "+#" @ ipv1.s62591.0{- value -} 1
                                                        "$s$wshoveString4.s62522.2" @ #"GHC.Prim.void#" cs1.s62576.0 sat.s62594.0{- value -}
          1 ->
              let sat.s62617.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.25" @ sc2.s62573.0{- value -} ww.s61967.27{- value -} ww1.s61968.27 ww2.s61969.27{- value -}
              letS ds1.s62618.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.15 sat.s62617.0 #"GHC.Prim.void#"
              case ds1.s62618.0 of
                ("GHC.Prim.Unit#" ipv1.s62620.0) ->
                    "$s$wshoveString3.s62521.2" @ #"GHC.Prim.void#" c1.s62575.0 cs1.s62576.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.27" ww.s61967.30 ww1.s61968.30 ww2.s61969.30 ww5.s62623.1 h_.s62651.0 void.X159.2 =
  letS wild5.s62653.0 = h_.s62651.0
  case wild5.s62653.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62654.0" "$dBufferedIO.s62655.0" "$dTypeable.s62656.0" ds.s62657.0 ds1.s62658.0 dt.s62659.0 ds2.s62660.0 dt1.s62661.0 dt2.s62662.0 dt3.s62663.0 ds3.s62664.0 ds4.s62665.0 ds5.s62666.0 ds6.s62667.0 ds7.s62668.0 ds8.s62669.0) ->
        letS ds9.s62670.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild5.s62653.0 ww.s61967.30{- value -} ww1.s61968.30 GHC.IO.Buffer.WriteBuffer ww2.s61969.30{- value -} 0 ww5.s62623.1{- value -} #"GHC.Prim.void#"
        case ds9.s62670.0 of
          ("GHC.Prim.Unit#" ipv1.s62672.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.28" "$s$wshoveString3.s62521.3" "$s$wshoveString5.s62622.1" "$wshoveString1.s62621.1" exit.s61972.12 w.s61963.16 w3.s61966.13 ww.s61967.29 ww1.s61968.29 ww2.s61969.29 ww5.s62623.0 w10.s62624.0 w11.s62625.0 void.X151.4 =
  letS wild4.s62627.0 = w10.s62624.0
  case wild4.s62627.0 of
    ("GHC.Types.[]") ->
        letS wild5.s62628.0 = w11.s62625.0
        case wild5.s62628.0 of
          ("GHC.Types.[]") ->
              exit.s61972.12 @ ww5.s62623.0{- value -} #"GHC.Prim.void#"
          (GHC.Types.: ipv.s62629.0 ipv1.s62630.0) ->
              "$s$wshoveString3.s62521.3" @ #"GHC.Prim.void#" ipv.s62629.0 ipv1.s62630.0 ww5.s62623.0{- value -}
    (GHC.Types.: c1.s62631.0 cs1.s62632.0) ->
        letS sat.s62633.0 = "+#" @ ww5.s62623.0{- value -} 1
             lwild1.s62634.0 = ">=#" @ sat.s62633.0{- value -} ww2.s61969.29{- value -}
        case lwild1.s62634.0{- value -} of
          _ ->
              letS wild5.s62635.0 = c1.s62631.0
              case wild5.s62635.0 of
                ("GHC.Types.C#" x1.s62636.0) ->
                    letS wild6.s62637.0 = x1.s62636.0{- value -}
                    case wild6.s62637.0{- value -} of
                      _ ->
                          letS s2.s62638.0 = "writeWideCharOffAddr#" @ ww.s61967.29{- value -} ww5.s62623.0{- value -} wild6.s62637.0{- value -}
                          case s2.s62638.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62639.0 = "touch#" @ ww1.s61968.29
                                case s'.s62639.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62640.0 = "+#" @ ww5.s62623.0{- value -} 1
                                      "$wshoveString1.s62621.1" @ sat.s62640.0{- value -} cs1.s62632.0 w11.s62625.0 #"GHC.Prim.void#"
                      #'\n' ->
                          letS wild7.s62641.0 = w3.s61966.13
                          case wild7.s62641.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s62642.0 = "writeWideCharOffAddr#" @ ww.s61967.29{- value -} ww5.s62623.0{- value -} #'\n'
                                case s2.s62642.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62643.0 = "touch#" @ ww1.s61968.29
                                      case s'.s62643.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s62644.0 = "+#" @ ww5.s62623.0{- value -} 1
                                            "$wshoveString1.s62621.1" @ sat.s62644.0{- value -} cs1.s62632.0 w11.s62625.0 #"GHC.Prim.void#"
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s62645.0 = "writeWideCharOffAddr#" @ ww.s61967.29{- value -} ww5.s62623.0{- value -} #'\r'
                                case s2.s62645.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62646.0 = "touch#" @ ww1.s61968.29
                                      case s'.s62646.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv1.s62647.0 = "+#" @ ww5.s62623.0{- value -} 1
                                                 s1.s62648.0 = "writeWideCharOffAddr#" @ ww.s61967.29{- value -} ipv1.s62647.0{- value -} #'\n'
                                            case s1.s62648.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s62649.0 = "touch#" @ ww1.s61968.29
                                                  case s'1.s62649.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s62650.0 = "+#" @ ipv1.s62647.0{- value -} 1
                                                        "$wshoveString1.s62621.1" @ sat.s62650.0{- value -} cs1.s62632.0 w11.s62625.0 #"GHC.Prim.void#"
          1 ->
              let sat.s62673.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.27" @ ww.s61967.29{- value -} ww1.s61968.29 ww2.s61969.29{- value -} ww5.s62623.0{- value -}
              letS ds1.s62674.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.16 sat.s62673.0 #"GHC.Prim.void#"
              case ds1.s62674.0 of
                ("GHC.Prim.Unit#" ipv1.s62676.0) ->
                    "$s$wshoveString5.s62622.1" @ #"GHC.Prim.void#" w11.s62625.0 c1.s62631.0 cs1.s62632.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.29" sc4.s62681.1 ww.s61967.32 ww1.s61968.32 ww2.s61969.32 h_.s62700.0 void.X157.3 =
  letS wild4.s62702.0 = h_.s62700.0
  case wild4.s62702.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62703.0" "$dBufferedIO.s62704.0" "$dTypeable.s62705.0" ds.s62706.0 ds1.s62707.0 dt.s62708.0 ds2.s62709.0 dt1.s62710.0 dt2.s62711.0 dt3.s62712.0 ds3.s62713.0 ds4.s62714.0 ds5.s62715.0 ds6.s62716.0 ds7.s62717.0 ds8.s62718.0) ->
        letS ds9.s62719.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild4.s62702.0 ww.s61967.32{- value -} ww1.s61968.32 GHC.IO.Buffer.WriteBuffer ww2.s61969.32{- value -} 0 sc4.s62681.1{- value -} #"GHC.Prim.void#"
        case ds9.s62719.0 of
          ("GHC.Prim.Unit#" ipv1.s62721.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.3" sc6.s62036.1 ww.s61967.6 ww1.s61968.6 ww2.s61969.6 h_.s62058.0 void.X150.6 =
  letS wild4.s62060.0 = h_.s62058.0
  case wild4.s62060.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62061.0" "$dBufferedIO.s62062.0" "$dTypeable.s62063.0" ds.s62064.0 ds1.s62065.0 dt.s62066.0 ds2.s62067.0 dt1.s62068.0 dt2.s62069.0 dt3.s62070.0 ds3.s62071.0 ds4.s62072.0 ds5.s62073.0 ds6.s62074.0 ds7.s62075.0 ds8.s62076.0) ->
        letS ds9.s62077.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild4.s62060.0 ww.s61967.6{- value -} ww1.s61968.6 GHC.IO.Buffer.WriteBuffer ww2.s61969.6{- value -} 0 sc6.s62036.1{- value -} #"GHC.Prim.void#"
        case ds9.s62077.0 of
          ("GHC.Prim.Unit#" ipv1.s62079.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.30" "$s$wshoveString5.s62622.2" "$wshoveString1.s62621.2" w.s61963.17 w3.s61966.14 ww.s61967.31 ww1.s61968.31 ww2.s61969.31 void.X148.3 sc1.s62678.0 sc2.s62679.0 sc3.s62680.0 sc4.s62681.0 =
  letS sat.s62682.0 = "+#" @ sc4.s62681.0{- value -} 1
       lwild1.s62683.0 = ">=#" @ sat.s62682.0{- value -} ww2.s61969.31{- value -}
  case lwild1.s62683.0{- value -} of
    _ ->
        letS wild4.s62684.0 = sc2.s62679.0
        case wild4.s62684.0 of
          ("GHC.Types.C#" x1.s62685.0) ->
              letS wild5.s62686.0 = x1.s62685.0{- value -}
              case wild5.s62686.0{- value -} of
                _ ->
                    letS s2.s62687.0 = "writeWideCharOffAddr#" @ ww.s61967.31{- value -} sc4.s62681.0{- value -} wild5.s62686.0{- value -}
                    case s2.s62687.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'.s62688.0 = "touch#" @ ww1.s61968.31
                          case s'.s62688.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s62689.0 = "+#" @ sc4.s62681.0{- value -} 1
                                "$wshoveString1.s62621.2" @ sat.s62689.0{- value -} sc3.s62680.0 sc1.s62678.0 #"GHC.Prim.void#"
                #'\n' ->
                    letS wild6.s62690.0 = w3.s61966.14
                    case wild6.s62690.0 of
                      (GHC.IO.Handle.Types.LF) ->
                          letS s2.s62691.0 = "writeWideCharOffAddr#" @ ww.s61967.31{- value -} sc4.s62681.0{- value -} #'\n'
                          case s2.s62691.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62692.0 = "touch#" @ ww1.s61968.31
                                case s'.s62692.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62693.0 = "+#" @ sc4.s62681.0{- value -} 1
                                      "$wshoveString1.s62621.2" @ sat.s62693.0{- value -} sc3.s62680.0 sc1.s62678.0 #"GHC.Prim.void#"
                      (GHC.IO.Handle.Types.CRLF) ->
                          letS s2.s62694.0 = "writeWideCharOffAddr#" @ ww.s61967.31{- value -} sc4.s62681.0{- value -} #'\r'
                          case s2.s62694.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62695.0 = "touch#" @ ww1.s61968.31
                                case s'.s62695.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS ipv1.s62696.0 = "+#" @ sc4.s62681.0{- value -} 1
                                           s1.s62697.0 = "writeWideCharOffAddr#" @ ww.s61967.31{- value -} ipv1.s62696.0{- value -} #'\n'
                                      case s1.s62697.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s62698.0 = "touch#" @ ww1.s61968.31
                                            case s'1.s62698.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s62699.0 = "+#" @ ipv1.s62696.0{- value -} 1
                                                  "$wshoveString1.s62621.2" @ sat.s62699.0{- value -} sc3.s62680.0 sc1.s62678.0 #"GHC.Prim.void#"
    1 ->
        let sat.s62722.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.29" @ sc4.s62681.0{- value -} ww.s61967.31{- value -} ww1.s61968.31 ww2.s61969.31{- value -}
        letS ds1.s62723.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.17 sat.s62722.0 #"GHC.Prim.void#"
        case ds1.s62723.0 of
          ("GHC.Prim.Unit#" ipv1.s62725.0) ->
              "$s$wshoveString5.s62622.2" @ #"GHC.Prim.void#" sc1.s62678.0 sc2.s62679.0 sc3.s62680.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.31" ww.s61967.33 ww1.s61968.33 ww2.s61969.33 ww4.s62519.1 h_.s62726.0 void.X146.6 =
  letS wild4.s62728.0 = h_.s62726.0
  case wild4.s62728.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62729.0" "$dBufferedIO.s62730.0" "$dTypeable.s62731.0" ds.s62732.0 ds1.s62733.0 dt.s62734.0 ds2.s62735.0 dt1.s62736.0 dt2.s62737.0 dt3.s62738.0 ds3.s62739.0 ds4.s62740.0 ds5.s62741.0 ds6.s62742.0 ds7.s62743.0 ds8.s62744.0) ->
        letS ds9.s62745.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild4.s62728.0 ww.s61967.33{- value -} ww1.s61968.33 GHC.IO.Buffer.WriteBuffer ww2.s61969.33{- value -} 0 ww4.s62519.1{- value -} #"GHC.Prim.void#"
        case ds9.s62745.0 of
          ("GHC.Prim.Unit#" ipv1.s62747.0) ->
              letS ds10.s62748.0 = "readMutVar#" @ dt.s62734.0
              case ds10.s62748.0 of
                ("GHC.Prim.Unit#" ipv3.s62750.0) ->
                    letS wild5.s62751.0 = ipv3.s62750.0
                    case wild5.s62751.0 of
                      (GHC.IO.Buffer.Buffer dt4.s62752.0 dt5.s62753.0 ds11.s62754.0 dt6.s62755.0 dt7.s62756.0 dt8.s62757.0) ->
                          letS lwild1.s62758.0 = "==#" @ dt7.s62756.0{- value -} dt8.s62757.0{- value -}
                          case lwild1.s62758.0{- value -} of
                            _ ->
                                letS ds12.s62759.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s62730.0" ds.s62732.0 wild5.s62751.0 #"GHC.Prim.void#"
                                case ds12.s62759.0 of
                                  ("GHC.Prim.Unit#" ipv5.s62761.0) ->
                                      letS "s2#.s62762.0" = "writeMutVar#" @ dt.s62734.0 ipv5.s62761.0
                                      case "s2#.s62762.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.32" ww.s61967.36 ww1.s61968.36 ww2.s61969.36 ww5.s62783.1 h_.s62784.0 void.X163.1 =
  letS wild6.s62786.0 = h_.s62784.0
  case wild6.s62786.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62787.0" "$dBufferedIO.s62788.0" "$dTypeable.s62789.0" ds.s62790.0 ds2.s62791.0 dt.s62792.0 ds3.s62793.0 dt1.s62794.0 dt2.s62795.0 dt3.s62796.0 ds4.s62797.0 ds5.s62798.0 ds6.s62799.0 ds7.s62800.0 ds8.s62801.0 ds9.s62802.0) ->
        letS ds10.s62803.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild6.s62786.0 ww.s61967.36{- value -} ww1.s61968.36 GHC.IO.Buffer.WriteBuffer ww2.s61969.36{- value -} 0 ww5.s62783.1{- value -} #"GHC.Prim.void#"
        case ds10.s62803.0 of
          ("GHC.Prim.Unit#" ipv3.s62805.0) ->
              letS ds11.s62806.0 = "readMutVar#" @ dt.s62792.0
              case ds11.s62806.0 of
                ("GHC.Prim.Unit#" ipv5.s62808.0) ->
                    letS wild7.s62809.0 = ipv5.s62808.0
                    case wild7.s62809.0 of
                      (GHC.IO.Buffer.Buffer dt4.s62810.0 dt5.s62811.0 ds12.s62812.0 dt6.s62813.0 dt7.s62814.0 dt8.s62815.0) ->
                          letS lwild2.s62816.0 = "==#" @ dt7.s62814.0{- value -} dt8.s62815.0{- value -}
                          case lwild2.s62816.0{- value -} of
                            _ ->
                                letS ds13.s62817.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s62788.0" ds.s62790.0 wild7.s62809.0 #"GHC.Prim.void#"
                                case ds13.s62817.0 of
                                  ("GHC.Prim.Unit#" ipv7.s62819.0) ->
                                      letS "s2#.s62820.0" = "writeMutVar#" @ dt.s62792.0 ipv7.s62819.0
                                      case "s2#.s62820.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.33" "$s$wshoveString4.s62768.2" sc2.s62771.1 w.s61963.19 ww.s61967.35 ww1.s61968.35 ww2.s61969.35 void.X159.3 ww5.s62783.0 =
  let sat.s62821.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.32" @ ww.s61967.35{- value -} ww1.s61968.35 ww2.s61969.35{- value -} ww5.s62783.0{- value -}
  letS ds2.s62822.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.19 sat.s62821.0 #"GHC.Prim.void#"
  case ds2.s62822.0 of
    ("GHC.Prim.Unit#" ipv3.s62824.0) ->
        "$s$wshoveString4.s62768.2" @ #"GHC.Prim.void#" sc2.s62771.1 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.34" sc3.s62772.1 ww.s61967.37 ww1.s61968.37 ww2.s61969.37 h_.s62835.0 void.X157.4 =
  letS wild4.s62837.0 = h_.s62835.0
  case wild4.s62837.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62838.0" "$dBufferedIO.s62839.0" "$dTypeable.s62840.0" ds.s62841.0 ds2.s62842.0 dt.s62843.0 ds3.s62844.0 dt1.s62845.0 dt2.s62846.0 dt3.s62847.0 ds4.s62848.0 ds5.s62849.0 ds6.s62850.0 ds7.s62851.0 ds8.s62852.0 ds9.s62853.0) ->
        letS ds10.s62854.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild4.s62837.0 ww.s61967.37{- value -} ww1.s61968.37 GHC.IO.Buffer.WriteBuffer ww2.s61969.37{- value -} 0 sc3.s62772.1{- value -} #"GHC.Prim.void#"
        case ds10.s62854.0 of
          ("GHC.Prim.Unit#" ipv3.s62856.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.35" "$s$wshoveString3.s62767.1" "$s$wshoveString4.s62768.1" w.s61963.18 w3.s61966.15 ww.s61967.34 ww1.s61968.34 ww2.s61969.34 void.X149.6 sc1.s62770.0 sc2.s62771.0 sc3.s62772.0 =
  letS sat.s62773.0 = "+#" @ sc3.s62772.0{- value -} 1
       lwild1.s62774.0 = ">=#" @ sat.s62773.0{- value -} ww2.s61969.34{- value -}
  case lwild1.s62774.0{- value -} of
    _ ->
        letS wild4.s62775.0 = sc1.s62770.0
        case wild4.s62775.0 of
          ("GHC.Types.C#" x1.s62776.0) ->
              letS wild5.s62777.0 = x1.s62776.0{- value -}
              case wild5.s62777.0{- value -} of
                _ ->
                    letS s2.s62778.0 = "writeWideCharOffAddr#" @ ww.s61967.34{- value -} sc3.s62772.0{- value -} wild5.s62777.0{- value -}
                    case s2.s62778.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'.s62779.0 = "touch#" @ ww1.s61968.34
                          case s'.s62779.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s62780.0 = "+#" @ sc3.s62772.0{- value -} 1
                                "$s$wshoveString4.s62768.1" @ #"GHC.Prim.void#" sc2.s62771.0 sat.s62780.0{- value -}
                #'\n' ->
                    let "$w$j1.s62781.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.33" @ "$s$wshoveString4.s62768.1" sc2.s62771.0 w.s61963.18 ww.s61967.34{- value -} ww1.s61968.34 ww2.s61969.34{- value -}
                    letS wild6.s62825.0 = w3.s61966.15
                    case wild6.s62825.0 of
                      (GHC.IO.Handle.Types.LF) ->
                          letS s2.s62826.0 = "writeWideCharOffAddr#" @ ww.s61967.34{- value -} sc3.s62772.0{- value -} #'\n'
                          case s2.s62826.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62827.0 = "touch#" @ ww1.s61968.34
                                case s'.s62827.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62828.0 = "+#" @ sc3.s62772.0{- value -} 1
                                      "$w$j1.s62781.0" @ #"GHC.Prim.void#" sat.s62828.0{- value -}
                      (GHC.IO.Handle.Types.CRLF) ->
                          letS s2.s62829.0 = "writeWideCharOffAddr#" @ ww.s61967.34{- value -} sc3.s62772.0{- value -} #'\r'
                          case s2.s62829.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62830.0 = "touch#" @ ww1.s61968.34
                                case s'.s62830.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS ipv2.s62831.0 = "+#" @ sc3.s62772.0{- value -} 1
                                           s1.s62832.0 = "writeWideCharOffAddr#" @ ww.s61967.34{- value -} ipv2.s62831.0{- value -} #'\n'
                                      case s1.s62832.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s62833.0 = "touch#" @ ww1.s61968.34
                                            case s'1.s62833.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s62834.0 = "+#" @ ipv2.s62831.0{- value -} 1
                                                  "$w$j1.s62781.0" @ #"GHC.Prim.void#" sat.s62834.0{- value -}
    1 ->
        let sat.s62857.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.34" @ sc3.s62772.0{- value -} ww.s61967.34{- value -} ww1.s61968.34 ww2.s61969.34{- value -}
        letS ds2.s62858.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.18 sat.s62857.0 #"GHC.Prim.void#"
        case ds2.s62858.0 of
          ("GHC.Prim.Unit#" ipv3.s62860.0) ->
              "$s$wshoveString3.s62767.1" @ #"GHC.Prim.void#" sc1.s62770.0 sc2.s62771.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.36" ww.s61967.40 ww1.s61968.40 ww2.s61969.40 ww5.s62877.1 h_.s62878.0 void.X165.3 =
  letS wild7.s62880.0 = h_.s62878.0
  case wild7.s62880.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62881.0" "$dBufferedIO.s62882.0" "$dTypeable.s62883.0" ds.s62884.0 ds2.s62885.0 dt.s62886.0 ds3.s62887.0 dt1.s62888.0 dt2.s62889.0 dt3.s62890.0 ds4.s62891.0 ds5.s62892.0 ds6.s62893.0 ds7.s62894.0 ds8.s62895.0 ds9.s62896.0) ->
        letS ds10.s62897.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild7.s62880.0 ww.s61967.40{- value -} ww1.s61968.40 GHC.IO.Buffer.WriteBuffer ww2.s61969.40{- value -} 0 ww5.s62877.1{- value -} #"GHC.Prim.void#"
        case ds10.s62897.0 of
          ("GHC.Prim.Unit#" ipv3.s62899.0) ->
              letS ds11.s62900.0 = "readMutVar#" @ dt.s62886.0
              case ds11.s62900.0 of
                ("GHC.Prim.Unit#" ipv5.s62902.0) ->
                    letS wild8.s62903.0 = ipv5.s62902.0
                    case wild8.s62903.0 of
                      (GHC.IO.Buffer.Buffer dt4.s62904.0 dt5.s62905.0 ds12.s62906.0 dt6.s62907.0 dt7.s62908.0 dt8.s62909.0) ->
                          letS lwild2.s62910.0 = "==#" @ dt7.s62908.0{- value -} dt8.s62909.0{- value -}
                          case lwild2.s62910.0{- value -} of
                            _ ->
                                letS ds13.s62911.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s62882.0" ds.s62884.0 wild8.s62903.0 #"GHC.Prim.void#"
                                case ds13.s62911.0 of
                                  ("GHC.Prim.Unit#" ipv7.s62913.0) ->
                                      letS "s2#.s62914.0" = "writeMutVar#" @ dt.s62886.0 ipv7.s62913.0
                                      case "s2#.s62914.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.37" "$s$wshoveString4.s62768.4" cs1.s62866.1 w.s61963.21 ww.s61967.39 ww1.s61968.39 ww2.s61969.39 void.X161.3 ww5.s62877.0 =
  let sat.s62915.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.36" @ ww.s61967.39{- value -} ww1.s61968.39 ww2.s61969.39{- value -} ww5.s62877.0{- value -}
  letS ds2.s62916.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.21 sat.s62915.0 #"GHC.Prim.void#"
  case ds2.s62916.0 of
    ("GHC.Prim.Unit#" ipv3.s62918.0) ->
        "$s$wshoveString4.s62768.4" @ #"GHC.Prim.void#" cs1.s62866.1 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.38" sc2.s62863.1 ww.s61967.41 ww1.s61968.41 ww2.s61969.41 h_.s62929.0 void.X159.4 =
  letS wild5.s62931.0 = h_.s62929.0
  case wild5.s62931.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62932.0" "$dBufferedIO.s62933.0" "$dTypeable.s62934.0" ds.s62935.0 ds2.s62936.0 dt.s62937.0 ds3.s62938.0 dt1.s62939.0 dt2.s62940.0 dt3.s62941.0 ds4.s62942.0 ds5.s62943.0 ds6.s62944.0 ds7.s62945.0 ds8.s62946.0 ds9.s62947.0) ->
        letS ds10.s62948.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild5.s62931.0 ww.s61967.41{- value -} ww1.s61968.41 GHC.IO.Buffer.WriteBuffer ww2.s61969.41{- value -} 0 sc2.s62863.1{- value -} #"GHC.Prim.void#"
        case ds10.s62948.0 of
          ("GHC.Prim.Unit#" ipv3.s62950.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.39" "$s$wshoveString3.s62767.2" "$s$wshoveString4.s62768.3" exit.s61972.13 w.s61963.20 w3.s61966.16 ww.s61967.38 ww1.s61968.38 ww2.s61969.38 void.X149.7 sc1.s62862.0 sc2.s62863.0 =
  letS wild4.s62864.0 = sc1.s62862.0
  case wild4.s62864.0 of
    ("GHC.Types.[]") ->
        exit.s61972.13 @ sc2.s62863.0{- value -} #"GHC.Prim.void#"
    (GHC.Types.: c1.s62865.0 cs1.s62866.0) ->
        letS sat.s62867.0 = "+#" @ sc2.s62863.0{- value -} 1
             lwild1.s62868.0 = ">=#" @ sat.s62867.0{- value -} ww2.s61969.38{- value -}
        case lwild1.s62868.0{- value -} of
          _ ->
              letS wild5.s62869.0 = c1.s62865.0
              case wild5.s62869.0 of
                ("GHC.Types.C#" x1.s62870.0) ->
                    letS wild6.s62871.0 = x1.s62870.0{- value -}
                    case wild6.s62871.0{- value -} of
                      _ ->
                          letS s2.s62872.0 = "writeWideCharOffAddr#" @ ww.s61967.38{- value -} sc2.s62863.0{- value -} wild6.s62871.0{- value -}
                          case s2.s62872.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62873.0 = "touch#" @ ww1.s61968.38
                                case s'.s62873.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62874.0 = "+#" @ sc2.s62863.0{- value -} 1
                                      "$s$wshoveString4.s62768.3" @ #"GHC.Prim.void#" cs1.s62866.0 sat.s62874.0{- value -}
                      #'\n' ->
                          let "$w$j1.s62875.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.37" @ "$s$wshoveString4.s62768.3" cs1.s62866.0 w.s61963.20 ww.s61967.38{- value -} ww1.s61968.38 ww2.s61969.38{- value -}
                          letS wild7.s62919.0 = w3.s61966.16
                          case wild7.s62919.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s62920.0 = "writeWideCharOffAddr#" @ ww.s61967.38{- value -} sc2.s62863.0{- value -} #'\n'
                                case s2.s62920.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62921.0 = "touch#" @ ww1.s61968.38
                                      case s'.s62921.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s62922.0 = "+#" @ sc2.s62863.0{- value -} 1
                                            "$w$j1.s62875.0" @ #"GHC.Prim.void#" sat.s62922.0{- value -}
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s62923.0 = "writeWideCharOffAddr#" @ ww.s61967.38{- value -} sc2.s62863.0{- value -} #'\r'
                                case s2.s62923.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62924.0 = "touch#" @ ww1.s61968.38
                                      case s'.s62924.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv2.s62925.0 = "+#" @ sc2.s62863.0{- value -} 1
                                                 s1.s62926.0 = "writeWideCharOffAddr#" @ ww.s61967.38{- value -} ipv2.s62925.0{- value -} #'\n'
                                            case s1.s62926.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s62927.0 = "touch#" @ ww1.s61968.38
                                                  case s'1.s62927.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s62928.0 = "+#" @ ipv2.s62925.0{- value -} 1
                                                        "$w$j1.s62875.0" @ #"GHC.Prim.void#" sat.s62928.0{- value -}
          1 ->
              let sat.s62951.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.38" @ sc2.s62863.0{- value -} ww.s61967.38{- value -} ww1.s61968.38 ww2.s61969.38{- value -}
              letS ds2.s62952.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.20 sat.s62951.0 #"GHC.Prim.void#"
              case ds2.s62952.0 of
                ("GHC.Prim.Unit#" ipv3.s62954.0) ->
                    "$s$wshoveString3.s62767.2" @ #"GHC.Prim.void#" c1.s62865.0 cs1.s62866.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.4" "$s$wshoveString2.s62033.1" exit.s61972.3 w.s61963.4 w3.s61966.3 ww.s61967.5 ww1.s61968.5 ww2.s61969.5 void.X140.5 sc5.s62035.0 sc6.s62036.0 =
  letS wild3.s62037.0 = sc5.s62035.0
  case wild3.s62037.0 of
    ("GHC.Types.[]") ->
        exit.s61972.3 @ sc6.s62036.0{- value -} #"GHC.Prim.void#"
    (GHC.Types.: c.s62038.0 cs.s62039.0) ->
        letS sat.s62040.0 = "+#" @ sc6.s62036.0{- value -} 1
             lwild1.s62041.0 = ">=#" @ sat.s62040.0{- value -} ww2.s61969.5{- value -}
        case lwild1.s62041.0{- value -} of
          _ ->
              letS wild4.s62042.0 = c.s62038.0
              case wild4.s62042.0 of
                ("GHC.Types.C#" x1.s62043.0) ->
                    letS wild5.s62044.0 = x1.s62043.0{- value -}
                    case wild5.s62044.0{- value -} of
                      _ ->
                          letS s2.s62045.0 = "writeWideCharOffAddr#" @ ww.s61967.5{- value -} sc6.s62036.0{- value -} wild5.s62044.0{- value -}
                          case s2.s62045.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62046.0 = "touch#" @ ww1.s61968.5
                                case s'.s62046.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62047.0 = "+#" @ sc6.s62036.0{- value -} 1
                                      "$s$wshoveString2.s62033.1" @ #"GHC.Prim.void#" cs.s62039.0 sat.s62047.0{- value -}
                      #'\n' ->
                          letS wild6.s62048.0 = w3.s61966.3
                          case wild6.s62048.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s62049.0 = "writeWideCharOffAddr#" @ ww.s61967.5{- value -} sc6.s62036.0{- value -} #'\n'
                                case s2.s62049.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62050.0 = "touch#" @ ww1.s61968.5
                                      case s'.s62050.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s62051.0 = "+#" @ sc6.s62036.0{- value -} 1
                                            "$s$wshoveString2.s62033.1" @ #"GHC.Prim.void#" cs.s62039.0 sat.s62051.0{- value -}
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s62052.0 = "writeWideCharOffAddr#" @ ww.s61967.5{- value -} sc6.s62036.0{- value -} #'\r'
                                case s2.s62052.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62053.0 = "touch#" @ ww1.s61968.5
                                      case s'.s62053.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv1.s62054.0 = "+#" @ sc6.s62036.0{- value -} 1
                                                 s1.s62055.0 = "writeWideCharOffAddr#" @ ww.s61967.5{- value -} ipv1.s62054.0{- value -} #'\n'
                                            case s1.s62055.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s62056.0 = "touch#" @ ww1.s61968.5
                                                  case s'1.s62056.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s62057.0 = "+#" @ ipv1.s62054.0{- value -} 1
                                                        "$s$wshoveString2.s62033.1" @ #"GHC.Prim.void#" cs.s62039.0 sat.s62057.0{- value -}
          1 ->
              let sat.s62080.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.3" @ sc6.s62036.0{- value -} ww.s61967.5{- value -} ww1.s61968.5 ww2.s61969.5{- value -}
              letS ds1.s62081.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.4 sat.s62080.0 #"GHC.Prim.void#"
              case ds1.s62081.0 of
                ("GHC.Prim.Unit#" ipv1.s62083.0) ->
                    "$s$wshoveString2.s62033.1" @ #"GHC.Prim.void#" wild3.s62037.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.40" ww.s61967.44 ww1.s61968.44 ww2.s61969.44 ww6.s62977.1 h_.s62978.0 void.X168.2 =
  letS wild7.s62980.0 = h_.s62978.0
  case wild7.s62980.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62981.0" "$dBufferedIO.s62982.0" "$dTypeable.s62983.0" ds.s62984.0 ds2.s62985.0 dt.s62986.0 ds3.s62987.0 dt1.s62988.0 dt2.s62989.0 dt3.s62990.0 ds4.s62991.0 ds5.s62992.0 ds6.s62993.0 ds7.s62994.0 ds8.s62995.0 ds9.s62996.0) ->
        letS ds10.s62997.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild7.s62980.0 ww.s61967.44{- value -} ww1.s61968.44 GHC.IO.Buffer.WriteBuffer ww2.s61969.44{- value -} 0 ww6.s62977.1{- value -} #"GHC.Prim.void#"
        case ds10.s62997.0 of
          ("GHC.Prim.Unit#" ipv3.s62999.0) ->
              letS ds11.s63000.0 = "readMutVar#" @ dt.s62986.0
              case ds11.s63000.0 of
                ("GHC.Prim.Unit#" ipv5.s63002.0) ->
                    letS wild8.s63003.0 = ipv5.s63002.0
                    case wild8.s63003.0 of
                      (GHC.IO.Buffer.Buffer dt4.s63004.0 dt5.s63005.0 ds12.s63006.0 dt6.s63007.0 dt7.s63008.0 dt8.s63009.0) ->
                          letS lwild2.s63010.0 = "==#" @ dt7.s63008.0{- value -} dt8.s63009.0{- value -}
                          case lwild2.s63010.0{- value -} of
                            _ ->
                                letS ds13.s63011.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s62982.0" ds.s62984.0 wild8.s63003.0 #"GHC.Prim.void#"
                                case ds13.s63011.0 of
                                  ("GHC.Prim.Unit#" ipv7.s63013.0) ->
                                      letS "s2#.s63014.0" = "writeMutVar#" @ dt.s62986.0 ipv7.s63013.0
                                      case "s2#.s63014.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.41" "$wshoveString1.s62955.2" cs1.s62966.1 w.s61963.23 w11.s62959.1 ww.s61967.43 ww1.s61968.43 ww2.s61969.43 void.X164.0 ww6.s62977.0 =
  let sat.s63015.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.40" @ ww.s61967.43{- value -} ww1.s61968.43 ww2.s61969.43{- value -} ww6.s62977.0{- value -}
  letS ds2.s63016.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.23 sat.s63015.0 #"GHC.Prim.void#"
  case ds2.s63016.0 of
    ("GHC.Prim.Unit#" ipv3.s63018.0) ->
        "$wshoveString1.s62955.2" @ 0 cs1.s62966.1 w11.s62959.1 #"GHC.Prim.void#"

"GHC.IO.Handle.Text.$wwriteBlocks.closure.42" ww.s61967.45 ww1.s61968.45 ww2.s61969.45 ww5.s62957.1 h_.s63029.0 void.X162.0 =
  letS wild5.s63031.0 = h_.s63029.0
  case wild5.s63031.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63032.0" "$dBufferedIO.s63033.0" "$dTypeable.s63034.0" ds.s63035.0 ds2.s63036.0 dt.s63037.0 ds3.s63038.0 dt1.s63039.0 dt2.s63040.0 dt3.s63041.0 ds4.s63042.0 ds5.s63043.0 ds6.s63044.0 ds7.s63045.0 ds8.s63046.0 ds9.s63047.0) ->
        letS ds10.s63048.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild5.s63031.0 ww.s61967.45{- value -} ww1.s61968.45 GHC.IO.Buffer.WriteBuffer ww2.s61969.45{- value -} 0 ww5.s62957.1{- value -} #"GHC.Prim.void#"
        case ds10.s63048.0 of
          ("GHC.Prim.Unit#" ipv3.s63050.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.43" "$s$wshoveString3.s62767.3" "$s$wshoveString5.s62956.1" "$wshoveString1.s62955.1" exit.s61972.14 w.s61963.22 w3.s61966.17 ww.s61967.42 ww1.s61968.42 ww2.s61969.42 ww5.s62957.0 w10.s62958.0 w11.s62959.0 void.X154.3 =
  letS wild4.s62961.0 = w10.s62958.0
  case wild4.s62961.0 of
    ("GHC.Types.[]") ->
        letS wild5.s62962.0 = w11.s62959.0
        case wild5.s62962.0 of
          ("GHC.Types.[]") ->
              exit.s61972.14 @ ww5.s62957.0{- value -} #"GHC.Prim.void#"
          (GHC.Types.: ipv2.s62963.0 ipv3.s62964.0) ->
              "$s$wshoveString3.s62767.3" @ #"GHC.Prim.void#" ipv2.s62963.0 ipv3.s62964.0 ww5.s62957.0{- value -}
    (GHC.Types.: c1.s62965.0 cs1.s62966.0) ->
        letS sat.s62967.0 = "+#" @ ww5.s62957.0{- value -} 1
             lwild1.s62968.0 = ">=#" @ sat.s62967.0{- value -} ww2.s61969.42{- value -}
        case lwild1.s62968.0{- value -} of
          _ ->
              letS wild5.s62969.0 = c1.s62965.0
              case wild5.s62969.0 of
                ("GHC.Types.C#" x1.s62970.0) ->
                    letS wild6.s62971.0 = x1.s62970.0{- value -}
                    case wild6.s62971.0{- value -} of
                      _ ->
                          letS s2.s62972.0 = "writeWideCharOffAddr#" @ ww.s61967.42{- value -} ww5.s62957.0{- value -} wild6.s62971.0{- value -}
                          case s2.s62972.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62973.0 = "touch#" @ ww1.s61968.42
                                case s'.s62973.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62974.0 = "+#" @ ww5.s62957.0{- value -} 1
                                      "$wshoveString1.s62955.1" @ sat.s62974.0{- value -} cs1.s62966.0 w11.s62959.0 #"GHC.Prim.void#"
                      #'\n' ->
                          let "$w$j1.s62975.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.41" @ "$wshoveString1.s62955.1" cs1.s62966.0 w.s61963.22 w11.s62959.0 ww.s61967.42{- value -} ww1.s61968.42 ww2.s61969.42{- value -}
                          letS wild7.s63019.0 = w3.s61966.17
                          case wild7.s63019.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s63020.0 = "writeWideCharOffAddr#" @ ww.s61967.42{- value -} ww5.s62957.0{- value -} #'\n'
                                case s2.s63020.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s63021.0 = "touch#" @ ww1.s61968.42
                                      case s'.s63021.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s63022.0 = "+#" @ ww5.s62957.0{- value -} 1
                                            "$w$j1.s62975.0" @ #"GHC.Prim.void#" sat.s63022.0{- value -}
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s63023.0 = "writeWideCharOffAddr#" @ ww.s61967.42{- value -} ww5.s62957.0{- value -} #'\r'
                                case s2.s63023.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s63024.0 = "touch#" @ ww1.s61968.42
                                      case s'.s63024.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv2.s63025.0 = "+#" @ ww5.s62957.0{- value -} 1
                                                 s1.s63026.0 = "writeWideCharOffAddr#" @ ww.s61967.42{- value -} ipv2.s63025.0{- value -} #'\n'
                                            case s1.s63026.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s63027.0 = "touch#" @ ww1.s61968.42
                                                  case s'1.s63027.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s63028.0 = "+#" @ ipv2.s63025.0{- value -} 1
                                                        "$w$j1.s62975.0" @ #"GHC.Prim.void#" sat.s63028.0{- value -}
          1 ->
              let sat.s63051.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.42" @ ww.s61967.42{- value -} ww1.s61968.42 ww2.s61969.42{- value -} ww5.s62957.0{- value -}
              letS ds2.s63052.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.22 sat.s63051.0 #"GHC.Prim.void#"
              case ds2.s63052.0 of
                ("GHC.Prim.Unit#" ipv3.s63054.0) ->
                    "$s$wshoveString5.s62956.1" @ #"GHC.Prim.void#" w11.s62959.0 c1.s62965.0 cs1.s62966.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.44" ww.s61967.48 ww1.s61968.48 ww2.s61969.48 ww5.s63070.1 h_.s63071.0 void.X166.4 =
  letS wild6.s63073.0 = h_.s63071.0
  case wild6.s63073.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63074.0" "$dBufferedIO.s63075.0" "$dTypeable.s63076.0" ds.s63077.0 ds2.s63078.0 dt.s63079.0 ds3.s63080.0 dt1.s63081.0 dt2.s63082.0 dt3.s63083.0 ds4.s63084.0 ds5.s63085.0 ds6.s63086.0 ds7.s63087.0 ds8.s63088.0 ds9.s63089.0) ->
        letS ds10.s63090.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild6.s63073.0 ww.s61967.48{- value -} ww1.s61968.48 GHC.IO.Buffer.WriteBuffer ww2.s61969.48{- value -} 0 ww5.s63070.1{- value -} #"GHC.Prim.void#"
        case ds10.s63090.0 of
          ("GHC.Prim.Unit#" ipv3.s63092.0) ->
              letS ds11.s63093.0 = "readMutVar#" @ dt.s63079.0
              case ds11.s63093.0 of
                ("GHC.Prim.Unit#" ipv5.s63095.0) ->
                    letS wild7.s63096.0 = ipv5.s63095.0
                    case wild7.s63096.0 of
                      (GHC.IO.Buffer.Buffer dt4.s63097.0 dt5.s63098.0 ds12.s63099.0 dt6.s63100.0 dt7.s63101.0 dt8.s63102.0) ->
                          letS lwild2.s63103.0 = "==#" @ dt7.s63101.0{- value -} dt8.s63102.0{- value -}
                          case lwild2.s63103.0{- value -} of
                            _ ->
                                letS ds13.s63104.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s63075.0" ds.s63077.0 wild7.s63096.0 #"GHC.Prim.void#"
                                case ds13.s63104.0 of
                                  ("GHC.Prim.Unit#" ipv7.s63106.0) ->
                                      letS "s2#.s63107.0" = "writeMutVar#" @ dt.s63079.0 ipv7.s63106.0
                                      case "s2#.s63107.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.45" "$wshoveString1.s62955.4" sc1.s63056.1 sc3.s63058.1 w.s61963.25 ww.s61967.47 ww1.s61968.47 ww2.s61969.47 void.X162.1 ww5.s63070.0 =
  let sat.s63108.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.44" @ ww.s61967.47{- value -} ww1.s61968.47 ww2.s61969.47{- value -} ww5.s63070.0{- value -}
  letS ds2.s63109.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.25 sat.s63108.0 #"GHC.Prim.void#"
  case ds2.s63109.0 of
    ("GHC.Prim.Unit#" ipv3.s63111.0) ->
        "$wshoveString1.s62955.4" @ 0 sc3.s63058.1 sc1.s63056.1 #"GHC.Prim.void#"

"GHC.IO.Handle.Text.$wwriteBlocks.closure.46" sc4.s63059.1 ww.s61967.49 ww1.s61968.49 ww2.s61969.49 h_.s63122.0 void.X160.0 =
  letS wild4.s63124.0 = h_.s63122.0
  case wild4.s63124.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63125.0" "$dBufferedIO.s63126.0" "$dTypeable.s63127.0" ds.s63128.0 ds2.s63129.0 dt.s63130.0 ds3.s63131.0 dt1.s63132.0 dt2.s63133.0 dt3.s63134.0 ds4.s63135.0 ds5.s63136.0 ds6.s63137.0 ds7.s63138.0 ds8.s63139.0 ds9.s63140.0) ->
        letS ds10.s63141.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild4.s63124.0 ww.s61967.49{- value -} ww1.s61968.49 GHC.IO.Buffer.WriteBuffer ww2.s61969.49{- value -} 0 sc4.s63059.1{- value -} #"GHC.Prim.void#"
        case ds10.s63141.0 of
          ("GHC.Prim.Unit#" ipv3.s63143.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.47" "$s$wshoveString5.s62956.2" "$wshoveString1.s62955.3" w.s61963.24 w3.s61966.18 ww.s61967.46 ww1.s61968.46 ww2.s61969.46 void.X151.5 sc1.s63056.0 sc2.s63057.0 sc3.s63058.0 sc4.s63059.0 =
  letS sat.s63060.0 = "+#" @ sc4.s63059.0{- value -} 1
       lwild1.s63061.0 = ">=#" @ sat.s63060.0{- value -} ww2.s61969.46{- value -}
  case lwild1.s63061.0{- value -} of
    _ ->
        letS wild4.s63062.0 = sc2.s63057.0
        case wild4.s63062.0 of
          ("GHC.Types.C#" x1.s63063.0) ->
              letS wild5.s63064.0 = x1.s63063.0{- value -}
              case wild5.s63064.0{- value -} of
                _ ->
                    letS s2.s63065.0 = "writeWideCharOffAddr#" @ ww.s61967.46{- value -} sc4.s63059.0{- value -} wild5.s63064.0{- value -}
                    case s2.s63065.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'.s63066.0 = "touch#" @ ww1.s61968.46
                          case s'.s63066.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s63067.0 = "+#" @ sc4.s63059.0{- value -} 1
                                "$wshoveString1.s62955.3" @ sat.s63067.0{- value -} sc3.s63058.0 sc1.s63056.0 #"GHC.Prim.void#"
                #'\n' ->
                    let "$w$j1.s63068.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.45" @ "$wshoveString1.s62955.3" sc1.s63056.0 sc3.s63058.0 w.s61963.24 ww.s61967.46{- value -} ww1.s61968.46 ww2.s61969.46{- value -}
                    letS wild6.s63112.0 = w3.s61966.18
                    case wild6.s63112.0 of
                      (GHC.IO.Handle.Types.LF) ->
                          letS s2.s63113.0 = "writeWideCharOffAddr#" @ ww.s61967.46{- value -} sc4.s63059.0{- value -} #'\n'
                          case s2.s63113.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s63114.0 = "touch#" @ ww1.s61968.46
                                case s'.s63114.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s63115.0 = "+#" @ sc4.s63059.0{- value -} 1
                                      "$w$j1.s63068.0" @ #"GHC.Prim.void#" sat.s63115.0{- value -}
                      (GHC.IO.Handle.Types.CRLF) ->
                          letS s2.s63116.0 = "writeWideCharOffAddr#" @ ww.s61967.46{- value -} sc4.s63059.0{- value -} #'\r'
                          case s2.s63116.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s63117.0 = "touch#" @ ww1.s61968.46
                                case s'.s63117.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS ipv2.s63118.0 = "+#" @ sc4.s63059.0{- value -} 1
                                           s1.s63119.0 = "writeWideCharOffAddr#" @ ww.s61967.46{- value -} ipv2.s63118.0{- value -} #'\n'
                                      case s1.s63119.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s63120.0 = "touch#" @ ww1.s61968.46
                                            case s'1.s63120.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s63121.0 = "+#" @ ipv2.s63118.0{- value -} 1
                                                  "$w$j1.s63068.0" @ #"GHC.Prim.void#" sat.s63121.0{- value -}
    1 ->
        let sat.s63144.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.46" @ sc4.s63059.0{- value -} ww.s61967.46{- value -} ww1.s61968.46 ww2.s61969.46{- value -}
        letS ds2.s63145.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.24 sat.s63144.0 #"GHC.Prim.void#"
        case ds2.s63145.0 of
          ("GHC.Prim.Unit#" ipv3.s63147.0) ->
              "$s$wshoveString5.s62956.2" @ #"GHC.Prim.void#" sc1.s63056.0 sc2.s63057.0 sc3.s63058.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.48" cs.s62508.1 exit.s61972.10 w.s61963.13 w1.s61964.6 w3.s61966.10 w7.s62501.1 ww.s61967.24 ww1.s61968.24 ww2.s61969.24 void.X141.8 ww4.s62519.0 =
  letS wild3.s62520.0 = w1.s61964.6
  case wild3.s62520.0 of
    (GHC.Types.False) ->
        letrec "$s$wshoveString3.s62521.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.24" @ "$s$wshoveString3.s62521.0" "$s$wshoveString4.s62522.0" w.s61963.13 w3.s61966.10 ww.s61967.24{- value -} ww1.s61968.24 ww2.s61969.24{- value -}
               "$s$wshoveString4.s62522.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.26" @ "$s$wshoveString3.s62521.0" "$s$wshoveString4.s62522.0" exit.s61972.10 w.s61963.13 w3.s61966.10 ww.s61967.24{- value -} ww1.s61968.24 ww2.s61969.24{- value -}
        letrec "$wshoveString1.s62621.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.28" @ "$s$wshoveString3.s62521.0" "$s$wshoveString5.s62622.0" "$wshoveString1.s62621.0" exit.s61972.10 w.s61963.13 w3.s61966.10 ww.s61967.24{- value -} ww1.s61968.24 ww2.s61969.24{- value -}
               "$s$wshoveString5.s62622.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.30" @ "$s$wshoveString5.s62622.0" "$wshoveString1.s62621.0" w.s61963.13 w3.s61966.10 ww.s61967.24{- value -} ww1.s61968.24 ww2.s61969.24{- value -}
        "$wshoveString1.s62621.0" @ ww4.s62519.0{- value -} cs.s62508.1 w7.s62501.1 #"GHC.Prim.void#"
    (GHC.Types.True) ->
        let sat.s62763.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.31" @ ww.s61967.24{- value -} ww1.s61968.24 ww2.s61969.24{- value -} ww4.s62519.0{- value -}
        letS ds1.s62764.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.13 sat.s62763.0 #"GHC.Prim.void#"
        case ds1.s62764.0 of
          ("GHC.Prim.Unit#" ipv1.s62766.0) ->
              letrec "$s$wshoveString3.s62767.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.35" @ "$s$wshoveString3.s62767.0" "$s$wshoveString4.s62768.0" w.s61963.13 w3.s61966.10 ww.s61967.24{- value -} ww1.s61968.24 ww2.s61969.24{- value -}
                     "$s$wshoveString4.s62768.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.39" @ "$s$wshoveString3.s62767.0" "$s$wshoveString4.s62768.0" exit.s61972.10 w.s61963.13 w3.s61966.10 ww.s61967.24{- value -} ww1.s61968.24 ww2.s61969.24{- value -}
              letrec "$wshoveString1.s62955.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.43" @ "$s$wshoveString3.s62767.0" "$s$wshoveString5.s62956.0" "$wshoveString1.s62955.0" exit.s61972.10 w.s61963.13 w3.s61966.10 ww.s61967.24{- value -} ww1.s61968.24 ww2.s61969.24{- value -}
                     "$s$wshoveString5.s62956.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.47" @ "$s$wshoveString5.s62956.0" "$wshoveString1.s62955.0" w.s61963.13 w3.s61966.10 ww.s61967.24{- value -} ww1.s61968.24 ww2.s61969.24{- value -}
              "$wshoveString1.s62955.0" @ 0 cs.s62508.1 w7.s62501.1 #"GHC.Prim.void#"

"GHC.IO.Handle.Text.$wwriteBlocks.closure.49" ww.s61967.50 ww1.s61968.50 ww2.s61969.50 ww3.s62499.1 h_.s63158.0 void.X139.9 =
  letS wild1.s63160.0 = h_.s63158.0
  case wild1.s63160.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63161.0" "$dBufferedIO.s63162.0" "$dTypeable.s63163.0" ds.s63164.0 ds1.s63165.0 dt.s63166.0 ds2.s63167.0 dt1.s63168.0 dt2.s63169.0 dt3.s63170.0 ds3.s63171.0 ds4.s63172.0 ds5.s63173.0 ds6.s63174.0 ds7.s63175.0 ds8.s63176.0) ->
        letS ds9.s63177.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild1.s63160.0 ww.s61967.50{- value -} ww1.s61968.50 GHC.IO.Buffer.WriteBuffer ww2.s61969.50{- value -} 0 ww3.s62499.1{- value -} #"GHC.Prim.void#"
        case ds9.s63177.0 of
          ("GHC.Prim.Unit#" ipv1.s63179.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.5" ww.s61967.7 ww1.s61968.7 ww2.s61969.7 ww3.s62031.1 h_.s62084.0 void.X141.7 =
  letS wild3.s62086.0 = h_.s62084.0
  case wild3.s62086.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62087.0" "$dBufferedIO.s62088.0" "$dTypeable.s62089.0" ds.s62090.0 ds1.s62091.0 dt.s62092.0 ds2.s62093.0 dt1.s62094.0 dt2.s62095.0 dt3.s62096.0 ds3.s62097.0 ds4.s62098.0 ds5.s62099.0 ds6.s62100.0 ds7.s62101.0 ds8.s62102.0) ->
        letS ds9.s62103.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild3.s62086.0 ww.s61967.7{- value -} ww1.s61968.7 GHC.IO.Buffer.WriteBuffer ww2.s61969.7{- value -} 0 ww3.s62031.1{- value -} #"GHC.Prim.void#"
        case ds9.s62103.0 of
          ("GHC.Prim.Unit#" ipv1.s62105.0) ->
              letS ds10.s62106.0 = "readMutVar#" @ dt.s62092.0
              case ds10.s62106.0 of
                ("GHC.Prim.Unit#" ipv3.s62108.0) ->
                    letS wild4.s62109.0 = ipv3.s62108.0
                    case wild4.s62109.0 of
                      (GHC.IO.Buffer.Buffer dt4.s62110.0 dt5.s62111.0 ds11.s62112.0 dt6.s62113.0 dt7.s62114.0 dt8.s62115.0) ->
                          letS lwild1.s62116.0 = "==#" @ dt7.s62114.0{- value -} dt8.s62115.0{- value -}
                          case lwild1.s62116.0{- value -} of
                            _ ->
                                letS ds12.s62117.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s62088.0" ds.s62090.0 wild4.s62109.0 #"GHC.Prim.void#"
                                case ds12.s62117.0 of
                                  ("GHC.Prim.Unit#" ipv5.s62119.0) ->
                                      letS "s2#.s62120.0" = "writeMutVar#" @ dt.s62092.0 ipv5.s62119.0
                                      case "s2#.s62120.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.50" "$s$wshoveString.s62015.3" "$s$wshoveString2.s62498.1" "$wshoveString.s62497.1" exit.s61972.9 w.s61963.12 w1.s61964.5 w3.s61966.9 ww.s61967.23 ww1.s61968.23 ww2.s61969.23 ww3.s62499.0 w6.s62500.0 w7.s62501.0 void.040.1790 =
  letS wild.s62503.0 = w6.s62500.0
  case wild.s62503.0 of
    ("GHC.Types.[]") ->
        letS wild1.s62504.0 = w7.s62501.0
        case wild1.s62504.0 of
          ("GHC.Types.[]") ->
              exit.s61972.9 @ ww3.s62499.0{- value -} #"GHC.Prim.void#"
          (GHC.Types.: ipv.s62505.0 ipv1.s62506.0) ->
              "$s$wshoveString.s62015.3" @ #"GHC.Prim.void#" ipv.s62505.0 ipv1.s62506.0 ww3.s62499.0{- value -}
    (GHC.Types.: c.s62507.0 cs.s62508.0) ->
        letS sat.s62509.0 = "+#" @ ww3.s62499.0{- value -} 1
             lwild.s62510.0 = ">=#" @ sat.s62509.0{- value -} ww2.s61969.23{- value -}
        case lwild.s62510.0{- value -} of
          _ ->
              letS wild1.s62511.0 = c.s62507.0
              case wild1.s62511.0 of
                ("GHC.Types.C#" x.s62512.0) ->
                    letS wild2.s62513.0 = x.s62512.0{- value -}
                    case wild2.s62513.0{- value -} of
                      _ ->
                          letS s2.s62514.0 = "writeWideCharOffAddr#" @ ww.s61967.23{- value -} ww3.s62499.0{- value -} wild2.s62513.0{- value -}
                          case s2.s62514.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62515.0 = "touch#" @ ww1.s61968.23
                                case s'.s62515.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62516.0 = "+#" @ ww3.s62499.0{- value -} 1
                                      "$wshoveString.s62497.1" @ sat.s62516.0{- value -} cs.s62508.0 w7.s62501.0 #"GHC.Prim.void#"
                      #'\n' ->
                          let "$w$j.s62517.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.48" @ cs.s62508.0 exit.s61972.9 w.s61963.12 w1.s61964.5 w3.s61966.9 w7.s62501.0 ww.s61967.23{- value -} ww1.s61968.23 ww2.s61969.23{- value -}
                          letS wild3.s63148.0 = w3.s61966.9
                          case wild3.s63148.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s63149.0 = "writeWideCharOffAddr#" @ ww.s61967.23{- value -} ww3.s62499.0{- value -} #'\n'
                                case s2.s63149.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s63150.0 = "touch#" @ ww1.s61968.23
                                      case s'.s63150.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s63151.0 = "+#" @ ww3.s62499.0{- value -} 1
                                            "$w$j.s62517.0" @ #"GHC.Prim.void#" sat.s63151.0{- value -}
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s63152.0 = "writeWideCharOffAddr#" @ ww.s61967.23{- value -} ww3.s62499.0{- value -} #'\r'
                                case s2.s63152.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s63153.0 = "touch#" @ ww1.s61968.23
                                      case s'.s63153.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv1.s63154.0 = "+#" @ ww3.s62499.0{- value -} 1
                                                 s1.s63155.0 = "writeWideCharOffAddr#" @ ww.s61967.23{- value -} ipv1.s63154.0{- value -} #'\n'
                                            case s1.s63155.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s63156.0 = "touch#" @ ww1.s61968.23
                                                  case s'1.s63156.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s63157.0 = "+#" @ ipv1.s63154.0{- value -} 1
                                                        "$w$j.s62517.0" @ #"GHC.Prim.void#" sat.s63157.0{- value -}
          1 ->
              let sat.s63180.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.49" @ ww.s61967.23{- value -} ww1.s61968.23 ww2.s61969.23{- value -} ww3.s62499.0{- value -}
              letS ds1.s63181.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.12 sat.s63180.0 #"GHC.Prim.void#"
              case ds1.s63181.0 of
                ("GHC.Prim.Unit#" ipv1.s63183.0) ->
                    "$s$wshoveString2.s62498.1" @ #"GHC.Prim.void#" w7.s62501.0 c.s62507.0 cs.s62508.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.51" sc9.s63207.1 ww.s61967.54 ww1.s61968.54 ww2.s61969.54 h_.s63226.0 void.X153.4 =
  letS wild3.s63228.0 = h_.s63226.0
  case wild3.s63228.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63229.0" "$dBufferedIO.s63230.0" "$dTypeable.s63231.0" ds.s63232.0 ds1.s63233.0 dt.s63234.0 ds2.s63235.0 dt1.s63236.0 dt2.s63237.0 dt3.s63238.0 ds3.s63239.0 ds4.s63240.0 ds5.s63241.0 ds6.s63242.0 ds7.s63243.0 ds8.s63244.0) ->
        letS ds9.s63245.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild3.s63228.0 ww.s61967.54{- value -} ww1.s61968.54 GHC.IO.Buffer.WriteBuffer ww2.s61969.54{- value -} 0 sc9.s63207.1{- value -} #"GHC.Prim.void#"
        case ds9.s63245.0 of
          ("GHC.Prim.Unit#" ipv1.s63247.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.52" "$s$wshoveString3.s63201.1" "$wshoveString1.s63202.1" w.s61963.28 w3.s61966.21 ww.s61967.53 ww1.s61968.53 ww2.s61969.53 void.X144.7 sc6.s63204.0 sc7.s63205.0 sc8.s63206.0 sc9.s63207.0 =
  letS sat.s63208.0 = "+#" @ sc9.s63207.0{- value -} 1
       lwild1.s63209.0 = ">=#" @ sat.s63208.0{- value -} ww2.s61969.53{- value -}
  case lwild1.s63209.0{- value -} of
    _ ->
        letS wild3.s63210.0 = sc7.s63205.0
        case wild3.s63210.0 of
          ("GHC.Types.C#" x1.s63211.0) ->
              letS wild4.s63212.0 = x1.s63211.0{- value -}
              case wild4.s63212.0{- value -} of
                _ ->
                    letS s2.s63213.0 = "writeWideCharOffAddr#" @ ww.s61967.53{- value -} sc9.s63207.0{- value -} wild4.s63212.0{- value -}
                    case s2.s63213.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'.s63214.0 = "touch#" @ ww1.s61968.53
                          case s'.s63214.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s63215.0 = "+#" @ sc9.s63207.0{- value -} 1
                                "$wshoveString1.s63202.1" @ sat.s63215.0{- value -} sc8.s63206.0 sc6.s63204.0 #"GHC.Prim.void#"
                #'\n' ->
                    letS wild5.s63216.0 = w3.s61966.21
                    case wild5.s63216.0 of
                      (GHC.IO.Handle.Types.LF) ->
                          letS s2.s63217.0 = "writeWideCharOffAddr#" @ ww.s61967.53{- value -} sc9.s63207.0{- value -} #'\n'
                          case s2.s63217.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s63218.0 = "touch#" @ ww1.s61968.53
                                case s'.s63218.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s63219.0 = "+#" @ sc9.s63207.0{- value -} 1
                                      "$wshoveString1.s63202.1" @ sat.s63219.0{- value -} sc8.s63206.0 sc6.s63204.0 #"GHC.Prim.void#"
                      (GHC.IO.Handle.Types.CRLF) ->
                          letS s2.s63220.0 = "writeWideCharOffAddr#" @ ww.s61967.53{- value -} sc9.s63207.0{- value -} #'\r'
                          case s2.s63220.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s63221.0 = "touch#" @ ww1.s61968.53
                                case s'.s63221.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS ipv1.s63222.0 = "+#" @ sc9.s63207.0{- value -} 1
                                           s1.s63223.0 = "writeWideCharOffAddr#" @ ww.s61967.53{- value -} ipv1.s63222.0{- value -} #'\n'
                                      case s1.s63223.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s63224.0 = "touch#" @ ww1.s61968.53
                                            case s'1.s63224.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s63225.0 = "+#" @ ipv1.s63222.0{- value -} 1
                                                  "$wshoveString1.s63202.1" @ sat.s63225.0{- value -} sc8.s63206.0 sc6.s63204.0 #"GHC.Prim.void#"
    1 ->
        let sat.s63248.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.51" @ sc9.s63207.0{- value -} ww.s61967.53{- value -} ww1.s61968.53 ww2.s61969.53{- value -}
        letS ds1.s63249.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.28 sat.s63248.0 #"GHC.Prim.void#"
        case ds1.s63249.0 of
          ("GHC.Prim.Unit#" ipv1.s63251.0) ->
              "$s$wshoveString3.s63201.1" @ #"GHC.Prim.void#" sc6.s63204.0 sc7.s63205.0 sc8.s63206.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.53" ww.s61967.56 ww1.s61968.56 ww2.s61969.56 ww4.s63252.1 h_.s63280.0 void.X155.2 =
  letS wild4.s63282.0 = h_.s63280.0
  case wild4.s63282.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63283.0" "$dBufferedIO.s63284.0" "$dTypeable.s63285.0" ds.s63286.0 ds1.s63287.0 dt.s63288.0 ds2.s63289.0 dt1.s63290.0 dt2.s63291.0 dt3.s63292.0 ds3.s63293.0 ds4.s63294.0 ds5.s63295.0 ds6.s63296.0 ds7.s63297.0 ds8.s63298.0) ->
        letS ds9.s63299.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild4.s63282.0 ww.s61967.56{- value -} ww1.s61968.56 GHC.IO.Buffer.WriteBuffer ww2.s61969.56{- value -} 0 ww4.s63252.1{- value -} #"GHC.Prim.void#"
        case ds9.s63299.0 of
          ("GHC.Prim.Unit#" ipv1.s63301.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.54" "$s$wshoveString3.s63201.2" "$wshoveString1.s63202.2" exit.s61972.17 w.s61963.29 w3.s61966.22 ww.s61967.55 ww1.s61968.55 ww2.s61969.55 ww4.s63252.0 w7.s63253.0 w8.s63254.0 void.X147.4 =
  letS wild3.s63256.0 = w7.s63253.0
  case wild3.s63256.0 of
    ("GHC.Types.[]") ->
        letS wild4.s63257.0 = w8.s63254.0
        case wild4.s63257.0 of
          ("GHC.Types.[]") ->
              exit.s61972.17 @ ww4.s63252.0{- value -} #"GHC.Prim.void#"
          (GHC.Types.: ipv.s63258.0 ipv1.s63259.0) ->
              "$s$wshoveString3.s63201.2" @ #"GHC.Prim.void#" "GHC.Types.[]" ipv.s63258.0 ipv1.s63259.0 ww4.s63252.0{- value -}
    (GHC.Types.: c.s63260.0 cs.s63261.0) ->
        letS sat.s63262.0 = "+#" @ ww4.s63252.0{- value -} 1
             lwild1.s63263.0 = ">=#" @ sat.s63262.0{- value -} ww2.s61969.55{- value -}
        case lwild1.s63263.0{- value -} of
          _ ->
              letS wild4.s63264.0 = c.s63260.0
              case wild4.s63264.0 of
                ("GHC.Types.C#" x1.s63265.0) ->
                    letS wild5.s63266.0 = x1.s63265.0{- value -}
                    case wild5.s63266.0{- value -} of
                      _ ->
                          letS s2.s63267.0 = "writeWideCharOffAddr#" @ ww.s61967.55{- value -} ww4.s63252.0{- value -} wild5.s63266.0{- value -}
                          case s2.s63267.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s63268.0 = "touch#" @ ww1.s61968.55
                                case s'.s63268.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s63269.0 = "+#" @ ww4.s63252.0{- value -} 1
                                      "$wshoveString1.s63202.2" @ sat.s63269.0{- value -} cs.s63261.0 w8.s63254.0 #"GHC.Prim.void#"
                      #'\n' ->
                          letS wild6.s63270.0 = w3.s61966.22
                          case wild6.s63270.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s63271.0 = "writeWideCharOffAddr#" @ ww.s61967.55{- value -} ww4.s63252.0{- value -} #'\n'
                                case s2.s63271.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s63272.0 = "touch#" @ ww1.s61968.55
                                      case s'.s63272.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s63273.0 = "+#" @ ww4.s63252.0{- value -} 1
                                            "$wshoveString1.s63202.2" @ sat.s63273.0{- value -} cs.s63261.0 w8.s63254.0 #"GHC.Prim.void#"
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s63274.0 = "writeWideCharOffAddr#" @ ww.s61967.55{- value -} ww4.s63252.0{- value -} #'\r'
                                case s2.s63274.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s63275.0 = "touch#" @ ww1.s61968.55
                                      case s'.s63275.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv1.s63276.0 = "+#" @ ww4.s63252.0{- value -} 1
                                                 s1.s63277.0 = "writeWideCharOffAddr#" @ ww.s61967.55{- value -} ipv1.s63276.0{- value -} #'\n'
                                            case s1.s63277.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s63278.0 = "touch#" @ ww1.s61968.55
                                                  case s'1.s63278.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s63279.0 = "+#" @ ipv1.s63276.0{- value -} 1
                                                        "$wshoveString1.s63202.2" @ sat.s63279.0{- value -} cs.s63261.0 w8.s63254.0 #"GHC.Prim.void#"
          1 ->
              let sat.s63302.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.53" @ ww.s61967.55{- value -} ww1.s61968.55 ww2.s61969.55{- value -} ww4.s63252.0{- value -}
              letS ds1.s63303.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.29 sat.s63302.0 #"GHC.Prim.void#"
              case ds1.s63303.0 of
                ("GHC.Prim.Unit#" ipv1.s63305.0) ->
                    "$s$wshoveString3.s63201.2" @ #"GHC.Prim.void#" w8.s63254.0 c.s63260.0 cs.s63261.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.55" ww.s61967.57 ww1.s61968.57 ww2.s61969.57 ww3.s63199.1 h_.s63306.0 void.X144.8 =
  letS wild3.s63308.0 = h_.s63306.0
  case wild3.s63308.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63309.0" "$dBufferedIO.s63310.0" "$dTypeable.s63311.0" ds.s63312.0 ds1.s63313.0 dt.s63314.0 ds2.s63315.0 dt1.s63316.0 dt2.s63317.0 dt3.s63318.0 ds3.s63319.0 ds4.s63320.0 ds5.s63321.0 ds6.s63322.0 ds7.s63323.0 ds8.s63324.0) ->
        letS ds9.s63325.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild3.s63308.0 ww.s61967.57{- value -} ww1.s61968.57 GHC.IO.Buffer.WriteBuffer ww2.s61969.57{- value -} 0 ww3.s63199.1{- value -} #"GHC.Prim.void#"
        case ds9.s63325.0 of
          ("GHC.Prim.Unit#" ipv1.s63327.0) ->
              letS ds10.s63328.0 = "readMutVar#" @ dt.s63314.0
              case ds10.s63328.0 of
                ("GHC.Prim.Unit#" ipv3.s63330.0) ->
                    letS wild4.s63331.0 = ipv3.s63330.0
                    case wild4.s63331.0 of
                      (GHC.IO.Buffer.Buffer dt4.s63332.0 dt5.s63333.0 ds11.s63334.0 dt6.s63335.0 dt7.s63336.0 dt8.s63337.0) ->
                          letS lwild1.s63338.0 = "==#" @ dt7.s63336.0{- value -} dt8.s63337.0{- value -}
                          case lwild1.s63338.0{- value -} of
                            _ ->
                                letS ds12.s63339.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s63310.0" ds.s63312.0 wild4.s63331.0 #"GHC.Prim.void#"
                                case ds12.s63339.0 of
                                  ("GHC.Prim.Unit#" ipv5.s63341.0) ->
                                      letS "s2#.s63342.0" = "writeMutVar#" @ dt.s63314.0 ipv5.s63341.0
                                      case "s2#.s63342.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.56" ww.s61967.60 ww1.s61968.60 ww2.s61969.60 ww4.s63364.1 h_.s63365.0 void.X162.2 =
  letS wild5.s63367.0 = h_.s63365.0
  case wild5.s63367.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63368.0" "$dBufferedIO.s63369.0" "$dTypeable.s63370.0" ds.s63371.0 ds2.s63372.0 dt.s63373.0 ds3.s63374.0 dt1.s63375.0 dt2.s63376.0 dt3.s63377.0 ds4.s63378.0 ds5.s63379.0 ds6.s63380.0 ds7.s63381.0 ds8.s63382.0 ds9.s63383.0) ->
        letS ds10.s63384.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild5.s63367.0 ww.s61967.60{- value -} ww1.s61968.60 GHC.IO.Buffer.WriteBuffer ww2.s61969.60{- value -} 0 ww4.s63364.1{- value -} #"GHC.Prim.void#"
        case ds10.s63384.0 of
          ("GHC.Prim.Unit#" ipv3.s63386.0) ->
              letS ds11.s63387.0 = "readMutVar#" @ dt.s63373.0
              case ds11.s63387.0 of
                ("GHC.Prim.Unit#" ipv5.s63389.0) ->
                    letS wild6.s63390.0 = ipv5.s63389.0
                    case wild6.s63390.0 of
                      (GHC.IO.Buffer.Buffer dt4.s63391.0 dt5.s63392.0 ds12.s63393.0 dt6.s63394.0 dt7.s63395.0 dt8.s63396.0) ->
                          letS lwild2.s63397.0 = "==#" @ dt7.s63395.0{- value -} dt8.s63396.0{- value -}
                          case lwild2.s63397.0{- value -} of
                            _ ->
                                letS ds13.s63398.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s63369.0" ds.s63371.0 wild6.s63390.0 #"GHC.Prim.void#"
                                case ds13.s63398.0 of
                                  ("GHC.Prim.Unit#" ipv7.s63400.0) ->
                                      letS "s2#.s63401.0" = "writeMutVar#" @ dt.s63373.0 ipv7.s63400.0
                                      case "s2#.s63401.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.57" "$wshoveString1.s63348.2" sc6.s63350.1 sc8.s63352.1 w.s61963.31 ww.s61967.59 ww1.s61968.59 ww2.s61969.59 void.X158.0 ww4.s63364.0 =
  let sat.s63402.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.56" @ ww.s61967.59{- value -} ww1.s61968.59 ww2.s61969.59{- value -} ww4.s63364.0{- value -}
  letS ds2.s63403.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.31 sat.s63402.0 #"GHC.Prim.void#"
  case ds2.s63403.0 of
    ("GHC.Prim.Unit#" ipv3.s63405.0) ->
        "$wshoveString1.s63348.2" @ 0 sc8.s63352.1 sc6.s63350.1 #"GHC.Prim.void#"

"GHC.IO.Handle.Text.$wwriteBlocks.closure.58" sc9.s63353.1 ww.s61967.61 ww1.s61968.61 ww2.s61969.61 h_.s63416.0 void.X156.2 =
  letS wild3.s63418.0 = h_.s63416.0
  case wild3.s63418.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63419.0" "$dBufferedIO.s63420.0" "$dTypeable.s63421.0" ds.s63422.0 ds2.s63423.0 dt.s63424.0 ds3.s63425.0 dt1.s63426.0 dt2.s63427.0 dt3.s63428.0 ds4.s63429.0 ds5.s63430.0 ds6.s63431.0 ds7.s63432.0 ds8.s63433.0 ds9.s63434.0) ->
        letS ds10.s63435.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild3.s63418.0 ww.s61967.61{- value -} ww1.s61968.61 GHC.IO.Buffer.WriteBuffer ww2.s61969.61{- value -} 0 sc9.s63353.1{- value -} #"GHC.Prim.void#"
        case ds10.s63435.0 of
          ("GHC.Prim.Unit#" ipv3.s63437.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.59" "$s$wshoveString3.s63347.1" "$wshoveString1.s63348.1" w.s61963.30 w3.s61966.23 ww.s61967.58 ww1.s61968.58 ww2.s61969.58 void.X147.5 sc6.s63350.0 sc7.s63351.0 sc8.s63352.0 sc9.s63353.0 =
  letS sat.s63354.0 = "+#" @ sc9.s63353.0{- value -} 1
       lwild1.s63355.0 = ">=#" @ sat.s63354.0{- value -} ww2.s61969.58{- value -}
  case lwild1.s63355.0{- value -} of
    _ ->
        letS wild3.s63356.0 = sc7.s63351.0
        case wild3.s63356.0 of
          ("GHC.Types.C#" x1.s63357.0) ->
              letS wild4.s63358.0 = x1.s63357.0{- value -}
              case wild4.s63358.0{- value -} of
                _ ->
                    letS s2.s63359.0 = "writeWideCharOffAddr#" @ ww.s61967.58{- value -} sc9.s63353.0{- value -} wild4.s63358.0{- value -}
                    case s2.s63359.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'.s63360.0 = "touch#" @ ww1.s61968.58
                          case s'.s63360.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s63361.0 = "+#" @ sc9.s63353.0{- value -} 1
                                "$wshoveString1.s63348.1" @ sat.s63361.0{- value -} sc8.s63352.0 sc6.s63350.0 #"GHC.Prim.void#"
                #'\n' ->
                    let "$w$j1.s63362.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.57" @ "$wshoveString1.s63348.1" sc6.s63350.0 sc8.s63352.0 w.s61963.30 ww.s61967.58{- value -} ww1.s61968.58 ww2.s61969.58{- value -}
                    letS wild5.s63406.0 = w3.s61966.23
                    case wild5.s63406.0 of
                      (GHC.IO.Handle.Types.LF) ->
                          letS s2.s63407.0 = "writeWideCharOffAddr#" @ ww.s61967.58{- value -} sc9.s63353.0{- value -} #'\n'
                          case s2.s63407.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s63408.0 = "touch#" @ ww1.s61968.58
                                case s'.s63408.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s63409.0 = "+#" @ sc9.s63353.0{- value -} 1
                                      "$w$j1.s63362.0" @ #"GHC.Prim.void#" sat.s63409.0{- value -}
                      (GHC.IO.Handle.Types.CRLF) ->
                          letS s2.s63410.0 = "writeWideCharOffAddr#" @ ww.s61967.58{- value -} sc9.s63353.0{- value -} #'\r'
                          case s2.s63410.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s63411.0 = "touch#" @ ww1.s61968.58
                                case s'.s63411.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS ipv2.s63412.0 = "+#" @ sc9.s63353.0{- value -} 1
                                           s1.s63413.0 = "writeWideCharOffAddr#" @ ww.s61967.58{- value -} ipv2.s63412.0{- value -} #'\n'
                                      case s1.s63413.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s63414.0 = "touch#" @ ww1.s61968.58
                                            case s'1.s63414.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s63415.0 = "+#" @ ipv2.s63412.0{- value -} 1
                                                  "$w$j1.s63362.0" @ #"GHC.Prim.void#" sat.s63415.0{- value -}
    1 ->
        let sat.s63438.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.58" @ sc9.s63353.0{- value -} ww.s61967.58{- value -} ww1.s61968.58 ww2.s61969.58{- value -}
        letS ds2.s63439.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.30 sat.s63438.0 #"GHC.Prim.void#"
        case ds2.s63439.0 of
          ("GHC.Prim.Unit#" ipv3.s63441.0) ->
              "$s$wshoveString3.s63347.1" @ #"GHC.Prim.void#" sc6.s63350.0 sc7.s63351.0 sc8.s63352.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.6" ww.s61967.10 ww1.s61968.10 ww2.s61969.10 ww4.s62142.1 h_.s62143.0 void.X159.1 =
  letS wild6.s62145.0 = h_.s62143.0
  case wild6.s62145.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62146.0" "$dBufferedIO.s62147.0" "$dTypeable.s62148.0" ds.s62149.0 ds2.s62150.0 dt.s62151.0 ds3.s62152.0 dt1.s62153.0 dt2.s62154.0 dt3.s62155.0 ds4.s62156.0 ds5.s62157.0 ds6.s62158.0 ds7.s62159.0 ds8.s62160.0 ds9.s62161.0) ->
        letS ds10.s62162.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild6.s62145.0 ww.s61967.10{- value -} ww1.s61968.10 GHC.IO.Buffer.WriteBuffer ww2.s61969.10{- value -} 0 ww4.s62142.1{- value -} #"GHC.Prim.void#"
        case ds10.s62162.0 of
          ("GHC.Prim.Unit#" ipv3.s62164.0) ->
              letS ds11.s62165.0 = "readMutVar#" @ dt.s62151.0
              case ds11.s62165.0 of
                ("GHC.Prim.Unit#" ipv5.s62167.0) ->
                    letS wild7.s62168.0 = ipv5.s62167.0
                    case wild7.s62168.0 of
                      (GHC.IO.Buffer.Buffer dt4.s62169.0 dt5.s62170.0 ds12.s62171.0 dt6.s62172.0 dt7.s62173.0 dt8.s62174.0) ->
                          letS lwild2.s62175.0 = "==#" @ dt7.s62173.0{- value -} dt8.s62174.0{- value -}
                          case lwild2.s62175.0{- value -} of
                            _ ->
                                letS ds13.s62176.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s62147.0" ds.s62149.0 wild7.s62168.0 #"GHC.Prim.void#"
                                case ds13.s62176.0 of
                                  ("GHC.Prim.Unit#" ipv7.s62178.0) ->
                                      letS "s2#.s62179.0" = "writeMutVar#" @ dt.s62151.0 ipv7.s62178.0
                                      case "s2#.s62179.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.60" ww.s61967.64 ww1.s61968.64 ww2.s61969.64 ww5.s63462.1 h_.s63463.0 void.X164.1 =
  letS wild6.s63465.0 = h_.s63463.0
  case wild6.s63465.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63466.0" "$dBufferedIO.s63467.0" "$dTypeable.s63468.0" ds.s63469.0 ds2.s63470.0 dt.s63471.0 ds3.s63472.0 dt1.s63473.0 dt2.s63474.0 dt3.s63475.0 ds4.s63476.0 ds5.s63477.0 ds6.s63478.0 ds7.s63479.0 ds8.s63480.0 ds9.s63481.0) ->
        letS ds10.s63482.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild6.s63465.0 ww.s61967.64{- value -} ww1.s61968.64 GHC.IO.Buffer.WriteBuffer ww2.s61969.64{- value -} 0 ww5.s63462.1{- value -} #"GHC.Prim.void#"
        case ds10.s63482.0 of
          ("GHC.Prim.Unit#" ipv3.s63484.0) ->
              letS ds11.s63485.0 = "readMutVar#" @ dt.s63471.0
              case ds11.s63485.0 of
                ("GHC.Prim.Unit#" ipv5.s63487.0) ->
                    letS wild7.s63488.0 = ipv5.s63487.0
                    case wild7.s63488.0 of
                      (GHC.IO.Buffer.Buffer dt4.s63489.0 dt5.s63490.0 ds12.s63491.0 dt6.s63492.0 dt7.s63493.0 dt8.s63494.0) ->
                          letS lwild2.s63495.0 = "==#" @ dt7.s63493.0{- value -} dt8.s63494.0{- value -}
                          case lwild2.s63495.0{- value -} of
                            _ ->
                                letS ds13.s63496.0 = GHC.IO.BufferedIO.flushWriteBuffer @ "$dBufferedIO.s63467.0" ds.s63469.0 wild7.s63488.0 #"GHC.Prim.void#"
                                case ds13.s63496.0 of
                                  ("GHC.Prim.Unit#" ipv7.s63498.0) ->
                                      letS "s2#.s63499.0" = "writeMutVar#" @ dt.s63471.0 ipv7.s63498.0
                                      case "s2#.s63499.0"{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                            1 ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.61" "$wshoveString1.s63348.4" cs.s63451.1 w.s61963.33 w8.s63444.1 ww.s61967.63 ww1.s61968.63 ww2.s61969.63 void.X160.1 ww5.s63462.0 =
  let sat.s63500.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.60" @ ww.s61967.63{- value -} ww1.s61968.63 ww2.s61969.63{- value -} ww5.s63462.0{- value -}
  letS ds2.s63501.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.33 sat.s63500.0 #"GHC.Prim.void#"
  case ds2.s63501.0 of
    ("GHC.Prim.Unit#" ipv3.s63503.0) ->
        "$wshoveString1.s63348.4" @ 0 cs.s63451.1 w8.s63444.1 #"GHC.Prim.void#"

"GHC.IO.Handle.Text.$wwriteBlocks.closure.62" ww.s61967.65 ww1.s61968.65 ww2.s61969.65 ww4.s63442.1 h_.s63514.0 void.X158.1 =
  letS wild4.s63516.0 = h_.s63514.0
  case wild4.s63516.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63517.0" "$dBufferedIO.s63518.0" "$dTypeable.s63519.0" ds.s63520.0 ds2.s63521.0 dt.s63522.0 ds3.s63523.0 dt1.s63524.0 dt2.s63525.0 dt3.s63526.0 ds4.s63527.0 ds5.s63528.0 ds6.s63529.0 ds7.s63530.0 ds8.s63531.0 ds9.s63532.0) ->
        letS ds10.s63533.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild4.s63516.0 ww.s61967.65{- value -} ww1.s61968.65 GHC.IO.Buffer.WriteBuffer ww2.s61969.65{- value -} 0 ww4.s63442.1{- value -} #"GHC.Prim.void#"
        case ds10.s63533.0 of
          ("GHC.Prim.Unit#" ipv3.s63535.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.63" "$s$wshoveString3.s63347.2" "$wshoveString1.s63348.3" exit.s61972.18 w.s61963.32 w3.s61966.24 ww.s61967.62 ww1.s61968.62 ww2.s61969.62 ww4.s63442.0 w7.s63443.0 w8.s63444.0 void.X150.7 =
  letS wild3.s63446.0 = w7.s63443.0
  case wild3.s63446.0 of
    ("GHC.Types.[]") ->
        letS wild4.s63447.0 = w8.s63444.0
        case wild4.s63447.0 of
          ("GHC.Types.[]") ->
              exit.s61972.18 @ ww4.s63442.0{- value -} #"GHC.Prim.void#"
          (GHC.Types.: ipv2.s63448.0 ipv3.s63449.0) ->
              "$s$wshoveString3.s63347.2" @ #"GHC.Prim.void#" "GHC.Types.[]" ipv2.s63448.0 ipv3.s63449.0 ww4.s63442.0{- value -}
    (GHC.Types.: c.s63450.0 cs.s63451.0) ->
        letS sat.s63452.0 = "+#" @ ww4.s63442.0{- value -} 1
             lwild1.s63453.0 = ">=#" @ sat.s63452.0{- value -} ww2.s61969.62{- value -}
        case lwild1.s63453.0{- value -} of
          _ ->
              letS wild4.s63454.0 = c.s63450.0
              case wild4.s63454.0 of
                ("GHC.Types.C#" x1.s63455.0) ->
                    letS wild5.s63456.0 = x1.s63455.0{- value -}
                    case wild5.s63456.0{- value -} of
                      _ ->
                          letS s2.s63457.0 = "writeWideCharOffAddr#" @ ww.s61967.62{- value -} ww4.s63442.0{- value -} wild5.s63456.0{- value -}
                          case s2.s63457.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s63458.0 = "touch#" @ ww1.s61968.62
                                case s'.s63458.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s63459.0 = "+#" @ ww4.s63442.0{- value -} 1
                                      "$wshoveString1.s63348.3" @ sat.s63459.0{- value -} cs.s63451.0 w8.s63444.0 #"GHC.Prim.void#"
                      #'\n' ->
                          let "$w$j1.s63460.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.61" @ "$wshoveString1.s63348.3" cs.s63451.0 w.s61963.32 w8.s63444.0 ww.s61967.62{- value -} ww1.s61968.62 ww2.s61969.62{- value -}
                          letS wild6.s63504.0 = w3.s61966.24
                          case wild6.s63504.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s63505.0 = "writeWideCharOffAddr#" @ ww.s61967.62{- value -} ww4.s63442.0{- value -} #'\n'
                                case s2.s63505.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s63506.0 = "touch#" @ ww1.s61968.62
                                      case s'.s63506.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s63507.0 = "+#" @ ww4.s63442.0{- value -} 1
                                            "$w$j1.s63460.0" @ #"GHC.Prim.void#" sat.s63507.0{- value -}
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s63508.0 = "writeWideCharOffAddr#" @ ww.s61967.62{- value -} ww4.s63442.0{- value -} #'\r'
                                case s2.s63508.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s63509.0 = "touch#" @ ww1.s61968.62
                                      case s'.s63509.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv2.s63510.0 = "+#" @ ww4.s63442.0{- value -} 1
                                                 s1.s63511.0 = "writeWideCharOffAddr#" @ ww.s61967.62{- value -} ipv2.s63510.0{- value -} #'\n'
                                            case s1.s63511.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s63512.0 = "touch#" @ ww1.s61968.62
                                                  case s'1.s63512.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s63513.0 = "+#" @ ipv2.s63510.0{- value -} 1
                                                        "$w$j1.s63460.0" @ #"GHC.Prim.void#" sat.s63513.0{- value -}
          1 ->
              let sat.s63536.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.62" @ ww.s61967.62{- value -} ww1.s61968.62 ww2.s61969.62{- value -} ww4.s63442.0{- value -}
              letS ds2.s63537.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.32 sat.s63536.0 #"GHC.Prim.void#"
              case ds2.s63537.0 of
                ("GHC.Prim.Unit#" ipv3.s63539.0) ->
                    "$s$wshoveString3.s63347.2" @ #"GHC.Prim.void#" w8.s63444.0 c.s63450.0 cs.s63451.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.64" exit.s61972.16 sc1.s63185.1 sc3.s63187.1 w.s61963.27 w1.s61964.8 w3.s61966.20 ww.s61967.52 ww1.s61968.52 ww2.s61969.52 void.X139.10 ww3.s63199.0 =
  letS wild2.s63200.0 = w1.s61964.8
  case wild2.s63200.0 of
    (GHC.Types.False) ->
        letrec "$s$wshoveString3.s63201.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.52" @ "$s$wshoveString3.s63201.0" "$wshoveString1.s63202.0" w.s61963.27 w3.s61966.20 ww.s61967.52{- value -} ww1.s61968.52 ww2.s61969.52{- value -}
               "$wshoveString1.s63202.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.54" @ "$s$wshoveString3.s63201.0" "$wshoveString1.s63202.0" exit.s61972.16 w.s61963.27 w3.s61966.20 ww.s61967.52{- value -} ww1.s61968.52 ww2.s61969.52{- value -}
        "$wshoveString1.s63202.0" @ ww3.s63199.0{- value -} sc3.s63187.1 sc1.s63185.1 #"GHC.Prim.void#"
    (GHC.Types.True) ->
        let sat.s63343.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.55" @ ww.s61967.52{- value -} ww1.s61968.52 ww2.s61969.52{- value -} ww3.s63199.0{- value -}
        letS ds1.s63344.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.27 sat.s63343.0 #"GHC.Prim.void#"
        case ds1.s63344.0 of
          ("GHC.Prim.Unit#" ipv1.s63346.0) ->
              letrec "$s$wshoveString3.s63347.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.59" @ "$s$wshoveString3.s63347.0" "$wshoveString1.s63348.0" w.s61963.27 w3.s61966.20 ww.s61967.52{- value -} ww1.s61968.52 ww2.s61969.52{- value -}
                     "$wshoveString1.s63348.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.63" @ "$s$wshoveString3.s63347.0" "$wshoveString1.s63348.0" exit.s61972.16 w.s61963.27 w3.s61966.20 ww.s61967.52{- value -} ww1.s61968.52 ww2.s61969.52{- value -}
              "$wshoveString1.s63348.0" @ 0 sc3.s63187.1 sc1.s63185.1 #"GHC.Prim.void#"

"GHC.IO.Handle.Text.$wwriteBlocks.closure.65" sc4.s63188.1 ww.s61967.66 ww1.s61968.66 ww2.s61969.66 h_.s63550.0 void.X137.7 =
  letS wild.s63552.0 = h_.s63550.0
  case wild.s63552.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63553.0" "$dBufferedIO.s63554.0" "$dTypeable.s63555.0" ds.s63556.0 ds1.s63557.0 dt.s63558.0 ds2.s63559.0 dt1.s63560.0 dt2.s63561.0 dt3.s63562.0 ds3.s63563.0 ds4.s63564.0 ds5.s63565.0 ds6.s63566.0 ds7.s63567.0 ds8.s63568.0) ->
        letS ds9.s63569.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild.s63552.0 ww.s61967.66{- value -} ww1.s61968.66 GHC.IO.Buffer.WriteBuffer ww2.s61969.66{- value -} 0 sc4.s63188.1{- value -} #"GHC.Prim.void#"
        case ds9.s63569.0 of
          ("GHC.Prim.Unit#" ipv1.s63571.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.66" "$s$wshoveString2.s62498.2" "$wshoveString.s62497.2" exit.s61972.15 w.s61963.26 w1.s61964.7 w3.s61966.19 ww.s61967.51 ww1.s61968.51 ww2.s61969.51 void.040.1791 sc1.s63185.0 sc2.s63186.0 sc3.s63187.0 sc4.s63188.0 =
  letS sat.s63189.0 = "+#" @ sc4.s63188.0{- value -} 1
       lwild.s63190.0 = ">=#" @ sat.s63189.0{- value -} ww2.s61969.51{- value -}
  case lwild.s63190.0{- value -} of
    _ ->
        letS wild.s63191.0 = sc2.s63186.0
        case wild.s63191.0 of
          ("GHC.Types.C#" x.s63192.0) ->
              letS wild1.s63193.0 = x.s63192.0{- value -}
              case wild1.s63193.0{- value -} of
                _ ->
                    letS s2.s63194.0 = "writeWideCharOffAddr#" @ ww.s61967.51{- value -} sc4.s63188.0{- value -} wild1.s63193.0{- value -}
                    case s2.s63194.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          letS s'.s63195.0 = "touch#" @ ww1.s61968.51
                          case s'.s63195.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS sat.s63196.0 = "+#" @ sc4.s63188.0{- value -} 1
                                "$wshoveString.s62497.2" @ sat.s63196.0{- value -} sc3.s63187.0 sc1.s63185.0 #"GHC.Prim.void#"
                #'\n' ->
                    let "$w$j.s63197.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.64" @ exit.s61972.15 sc1.s63185.0 sc3.s63187.0 w.s61963.26 w1.s61964.7 w3.s61966.19 ww.s61967.51{- value -} ww1.s61968.51 ww2.s61969.51{- value -}
                    letS wild2.s63540.0 = w3.s61966.19
                    case wild2.s63540.0 of
                      (GHC.IO.Handle.Types.LF) ->
                          letS s2.s63541.0 = "writeWideCharOffAddr#" @ ww.s61967.51{- value -} sc4.s63188.0{- value -} #'\n'
                          case s2.s63541.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s63542.0 = "touch#" @ ww1.s61968.51
                                case s'.s63542.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s63543.0 = "+#" @ sc4.s63188.0{- value -} 1
                                      "$w$j.s63197.0" @ #"GHC.Prim.void#" sat.s63543.0{- value -}
                      (GHC.IO.Handle.Types.CRLF) ->
                          letS s2.s63544.0 = "writeWideCharOffAddr#" @ ww.s61967.51{- value -} sc4.s63188.0{- value -} #'\r'
                          case s2.s63544.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s63545.0 = "touch#" @ ww1.s61968.51
                                case s'.s63545.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS ipv1.s63546.0 = "+#" @ sc4.s63188.0{- value -} 1
                                           s1.s63547.0 = "writeWideCharOffAddr#" @ ww.s61967.51{- value -} ipv1.s63546.0{- value -} #'\n'
                                      case s1.s63547.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS s'1.s63548.0 = "touch#" @ ww1.s61968.51
                                            case s'1.s63548.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS sat.s63549.0 = "+#" @ ipv1.s63546.0{- value -} 1
                                                  "$w$j.s63197.0" @ #"GHC.Prim.void#" sat.s63549.0{- value -}
    1 ->
        let sat.s63572.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.65" @ sc4.s63188.0{- value -} ww.s61967.51{- value -} ww1.s61968.51 ww2.s61969.51{- value -}
        letS ds1.s63573.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.26 sat.s63572.0 #"GHC.Prim.void#"
        case ds1.s63573.0 of
          ("GHC.Prim.Unit#" ipv1.s63575.0) ->
              "$s$wshoveString2.s62498.2" @ #"GHC.Prim.void#" sc1.s63185.0 sc2.s63186.0 sc3.s63187.0 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.7" "$s$wshoveString2.s62125.2" cs.s62131.1 w.s61963.6 ww.s61967.9 ww1.s61968.9 ww2.s61969.9 void.X155.0 ww4.s62142.0 =
  let sat.s62180.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.6" @ ww.s61967.9{- value -} ww1.s61968.9 ww2.s61969.9{- value -} ww4.s62142.0{- value -}
  letS ds2.s62181.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.6 sat.s62180.0 #"GHC.Prim.void#"
  case ds2.s62181.0 of
    ("GHC.Prim.Unit#" ipv3.s62183.0) ->
        "$s$wshoveString2.s62125.2" @ #"GHC.Prim.void#" cs.s62131.1 0

"GHC.IO.Handle.Text.$wwriteBlocks.closure.8" sc6.s62128.1 ww.s61967.11 ww1.s61968.11 ww2.s61969.11 h_.s62194.0 void.X153.3 =
  letS wild4.s62196.0 = h_.s62194.0
  case wild4.s62196.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s62197.0" "$dBufferedIO.s62198.0" "$dTypeable.s62199.0" ds.s62200.0 ds2.s62201.0 dt.s62202.0 ds3.s62203.0 dt1.s62204.0 dt2.s62205.0 dt3.s62206.0 ds4.s62207.0 ds5.s62208.0 ds6.s62209.0 ds7.s62210.0 ds8.s62211.0 ds9.s62212.0) ->
        letS ds10.s62213.0 = "GHC.IO.Handle.Internals.$wwriteCharBuffer" @ wild4.s62196.0 ww.s61967.11{- value -} ww1.s61968.11 GHC.IO.Buffer.WriteBuffer ww2.s61969.11{- value -} 0 sc6.s62128.1{- value -} #"GHC.Prim.void#"
        case ds10.s62213.0 of
          ("GHC.Prim.Unit#" ipv3.s62215.0) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"GHC.IO.Handle.Text.$wwriteBlocks.closure.9" "$s$wshoveString2.s62125.1" exit.s61972.4 w.s61963.5 w3.s61966.4 ww.s61967.8 ww1.s61968.8 ww2.s61969.8 void.X143.4 sc5.s62127.0 sc6.s62128.0 =
  letS wild3.s62129.0 = sc5.s62127.0
  case wild3.s62129.0 of
    ("GHC.Types.[]") ->
        exit.s61972.4 @ sc6.s62128.0{- value -} #"GHC.Prim.void#"
    (GHC.Types.: c.s62130.0 cs.s62131.0) ->
        letS sat.s62132.0 = "+#" @ sc6.s62128.0{- value -} 1
             lwild1.s62133.0 = ">=#" @ sat.s62132.0{- value -} ww2.s61969.8{- value -}
        case lwild1.s62133.0{- value -} of
          _ ->
              letS wild4.s62134.0 = c.s62130.0
              case wild4.s62134.0 of
                ("GHC.Types.C#" x1.s62135.0) ->
                    letS wild5.s62136.0 = x1.s62135.0{- value -}
                    case wild5.s62136.0{- value -} of
                      _ ->
                          letS s2.s62137.0 = "writeWideCharOffAddr#" @ ww.s61967.8{- value -} sc6.s62128.0{- value -} wild5.s62136.0{- value -}
                          case s2.s62137.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS s'.s62138.0 = "touch#" @ ww1.s61968.8
                                case s'.s62138.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS sat.s62139.0 = "+#" @ sc6.s62128.0{- value -} 1
                                      "$s$wshoveString2.s62125.1" @ #"GHC.Prim.void#" cs.s62131.0 sat.s62139.0{- value -}
                      #'\n' ->
                          let "$w$j1.s62140.0" = "GHC.IO.Handle.Text.$wwriteBlocks.closure.7" @ "$s$wshoveString2.s62125.1" cs.s62131.0 w.s61963.5 ww.s61967.8{- value -} ww1.s61968.8 ww2.s61969.8{- value -}
                          letS wild6.s62184.0 = w3.s61966.4
                          case wild6.s62184.0 of
                            (GHC.IO.Handle.Types.LF) ->
                                letS s2.s62185.0 = "writeWideCharOffAddr#" @ ww.s61967.8{- value -} sc6.s62128.0{- value -} #'\n'
                                case s2.s62185.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62186.0 = "touch#" @ ww1.s61968.8
                                      case s'.s62186.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS sat.s62187.0 = "+#" @ sc6.s62128.0{- value -} 1
                                            "$w$j1.s62140.0" @ #"GHC.Prim.void#" sat.s62187.0{- value -}
                            (GHC.IO.Handle.Types.CRLF) ->
                                letS s2.s62188.0 = "writeWideCharOffAddr#" @ ww.s61967.8{- value -} sc6.s62128.0{- value -} #'\r'
                                case s2.s62188.0{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      letS s'.s62189.0 = "touch#" @ ww1.s61968.8
                                      case s'.s62189.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            letS ipv2.s62190.0 = "+#" @ sc6.s62128.0{- value -} 1
                                                 s1.s62191.0 = "writeWideCharOffAddr#" @ ww.s61967.8{- value -} ipv2.s62190.0{- value -} #'\n'
                                            case s1.s62191.0{- value -} of
                                              ("GHC.Prim.(##)") ->
                                                  letS s'1.s62192.0 = "touch#" @ ww1.s61968.8
                                                  case s'1.s62192.0{- value -} of
                                                    ("GHC.Prim.(##)") ->
                                                        letS sat.s62193.0 = "+#" @ ipv2.s62190.0{- value -} 1
                                                        "$w$j1.s62140.0" @ #"GHC.Prim.void#" sat.s62193.0{- value -}
          1 ->
              let sat.s62216.0 = "GHC.IO.Handle.Text.$wwriteBlocks.closure.8" @ sc6.s62128.0{- value -} ww.s61967.8{- value -} ww1.s61968.8 ww2.s61969.8{- value -}
              letS ds2.s62217.0 = GHC.IO.Handle.Internals.wantWritableHandle1 @ GHC.IO.Handle.Text.lvl2 w.s61963.5 sat.s62216.0 #"GHC.Prim.void#"
              case ds2.s62217.0 of
                ("GHC.Prim.Unit#" ipv3.s62219.0) ->
                    "$s$wshoveString2.s62125.1" @ #"GHC.Prim.void#" wild3.s62129.0 0

GHC.IO.Handle.Text.hPutChar2 =
  "GHC.CString.unpackCString#" @ GHC.IO.Handle.Text.hPutChar3{- value -}

GHC.IO.Handle.Text.hPutChar3 =
  #"hPutChar"

GHC.IO.Handle.Text.hPutStr' eta.B4.213 eta.B3.391 eta.B2.886 void.040.1795 =
  GHC.IO.Handle.Text.hPutStr1 @ eta.B4.213 eta.B3.391 eta.B2.886 #"GHC.Prim.void#"

GHC.IO.Handle.Text.hPutStr1 handle.s63644.0 str.s63645.0 add_nl.s63646.0 void.040.1793 =
  let "$w$j.s63648.0" = GHC.IO.Handle.Text.hPutStr1.closure.0 @ add_nl.s63646.0 handle.s63644.0 str.s63645.0
  letS wild.s63673.0 = handle.s63644.0
  case wild.s63673.0 of
    (GHC.IO.Handle.Types.FileHandle ds.s63674.0 dt.s63675.0) ->
        letS ds1.s63676.0 = "GHC.IO.Handle.Internals.$wwantWritableHandle'" @ GHC.IO.Handle.Text.hPutStr5 wild.s63673.0 dt.s63675.0 GHC.IO.Handle.Text.hPutStr2 #"GHC.Prim.void#"
        case ds1.s63676.0 of
          ("GHC.Prim.Unit#" ipv1.s63678.0) ->
              letS ww.s63679.0 = ipv1.s63678.0
              case ww.s63679.0 of
                ("GHC.Tuple.(,)" ww1.s63680.0 ww2.s63681.0) ->
                    letS ww3.s63682.0 = ww1.s63680.0
                    case ww3.s63682.0 of
                      ("GHC.Tuple.(,)" ww4.s63683.0 ww5.s63684.0) ->
                          "$w$j.s63648.0" @ #"GHC.Prim.void#" ww4.s63683.0 ww5.s63684.0 ww2.s63681.0
    (GHC.IO.Handle.Types.DuplexHandle ds.s63685.0 dt.s63686.0 dt1.s63687.0) ->
        letS ds1.s63688.0 = "GHC.IO.Handle.Internals.$wwantWritableHandle'" @ GHC.IO.Handle.Text.hPutStr5 wild.s63673.0 dt1.s63687.0 GHC.IO.Handle.Text.hPutStr2 #"GHC.Prim.void#"
        case ds1.s63688.0 of
          ("GHC.Prim.Unit#" ipv1.s63690.0) ->
              letS ww.s63691.0 = ipv1.s63690.0
              case ww.s63691.0 of
                ("GHC.Tuple.(,)" ww1.s63692.0 ww2.s63693.0) ->
                    letS ww3.s63694.0 = ww1.s63692.0
                    case ww3.s63694.0 of
                      ("GHC.Tuple.(,)" ww4.s63695.0 ww5.s63696.0) ->
                          "$w$j.s63648.0" @ #"GHC.Prim.void#" ww4.s63695.0 ww5.s63696.0 ww2.s63693.0

GHC.IO.Handle.Text.hPutStr1.closure.0 add_nl.s63646.1 handle.s63644.1 str.s63645.1 void.040.1794 ww.s63650.0 ww1.s63651.0 ww2.s63652.0 =
  letS wild.s63653.0 = ww.s63650.0
  case wild.s63653.0 of
    (GHC.IO.Handle.Types.NoBuffering) ->
        letS ds1.s63654.0 = GHC.IO.Handle.Text.hPutStr7 @ handle.s63644.1 str.s63645.1 #"GHC.Prim.void#"
        case ds1.s63654.0 of
          ("GHC.Prim.Unit#" ipv1.s63656.0) ->
              letS wild1.s63657.0 = add_nl.s63646.1
              case wild1.s63657.0 of
                (GHC.Types.False) ->
                    ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                (GHC.Types.True) ->
                    "GHC.IO.Handle.Text.$whPutChar" @ handle.s63644.1 #'\n' #"GHC.Prim.void#"
    (GHC.IO.Handle.Types.LineBuffering) ->
        letS ww3.s63658.0 = ww1.s63651.0
        case ww3.s63658.0 of
          (GHC.IO.Buffer.Buffer ww4.s63659.0 ww5.s63660.0 ww6.s63661.0 ww7.s63662.0 ww8.s63663.0 ww9.s63664.0) ->
              "GHC.IO.Handle.Text.$wwriteBlocks" @ handle.s63644.1 GHC.Types.True add_nl.s63646.1 ww2.s63652.0 ww4.s63659.0{- value -} ww5.s63660.0 ww7.s63662.0{- value -} str.s63645.1 #"GHC.Prim.void#"
    (GHC.IO.Handle.Types.BlockBuffering ds.s63665.0) ->
        letS ww3.s63666.0 = ww1.s63651.0
        case ww3.s63666.0 of
          (GHC.IO.Buffer.Buffer ww4.s63667.0 ww5.s63668.0 ww6.s63669.0 ww7.s63670.0 ww8.s63671.0 ww9.s63672.0) ->
              "GHC.IO.Handle.Text.$wwriteBlocks" @ handle.s63644.1 GHC.Types.False add_nl.s63646.1 ww2.s63652.0 ww4.s63667.0{- value -} ww5.s63668.0 ww7.s63670.0{- value -} str.s63645.1 #"GHC.Prim.void#"

GHC.IO.Handle.Text.hPutStr2 h_.s63579.0 void.040.1792 =
  letS wild.s63581.0 = h_.s63579.0
  case wild.s63581.0 of
    (GHC.IO.Handle.Types.Handle__ "$dIODevice.s63582.0" "$dBufferedIO.s63583.0" "$dTypeable.s63584.0" ds.s63585.0 ds1.s63586.0 dt.s63587.0 ds2.s63588.0 dt1.s63589.0 dt2.s63590.0 dt3.s63591.0 ds3.s63592.0 ds4.s63593.0 ds5.s63594.0 ds6.s63595.0 ds7.s63596.0 ds8.s63597.0) ->
        letS wild1.s63598.0 = ds2.s63588.0
        case wild1.s63598.0 of
          _ ->
              letS ds9.s63599.0 = "readMutVar#" @ dt3.s63591.0
              case ds9.s63599.0 of
                ("GHC.Prim.Unit#" ipv1.s63601.0) ->
                    letS ds10.s63602.0 = "readMutVar#" @ dt2.s63590.0
                    case ds10.s63602.0 of
                      ("GHC.Prim.Unit#" ipv3.s63604.0) ->
                          letS wild2.s63605.0 = ipv1.s63601.0
                          case wild2.s63605.0 of
                            (GHC.IO.Handle.Types.BufferListNil) ->
                                letS wild3.s63606.0 = ipv3.s63604.0
                                case wild3.s63606.0 of
                                  (GHC.IO.Buffer.Buffer dt4.s63607.0 dt5.s63608.0 ds11.s63609.0 dt6.s63610.0 dt7.s63611.0 dt8.s63612.0) ->
                                      letS x1.s63613.0 = "*#" @ dt6.s63610.0{- value -} 4
                                           lwild.s63614.0 = "<#" @ x1.s63613.0{- value -} 0
                                      case lwild.s63614.0{- value -} of
                                        _ ->
                                            letS ds12.s63615.0 = "newMutVar#" @ GHC.ForeignPtr.NoFinalizers
                                            case ds12.s63615.0 of
                                              ("GHC.Prim.Unit#" ipv5.s63617.0) ->
                                                  letS ds13.s63618.0 = "newPinnedByteArray#" @ x1.s63613.0{- value -}
                                                  case ds13.s63618.0 of
                                                    ("GHC.Prim.Unit#" ipv7.s63620.0) ->
                                                        let sat.s63622.0 = [GHC.ForeignPtr.MallocPtr ipv7.s63620.0 ipv5.s63617.0]
                                                        letS sat.s63621.0 = "byteArrayContents#" @ ipv7.s63620.0
                                                        let sat.s63623.0 = [GHC.IO.Buffer.Buffer sat.s63621.0{- value -} sat.s63622.0 GHC.IO.Buffer.WriteBuffer dt6.s63610.0{- value -} 0 0]
                                                            sat.s63624.0 = ["GHC.Tuple.(,)" wild1.s63598.0 sat.s63623.0]
                                                            sat.s63625.0 = ["GHC.Tuple.(,)" sat.s63624.0 ds7.s63596.0]
                                                        ["GHC.Prim.Unit#" sat.s63625.0]
                                        1 ->
                                            GHC.ForeignPtr.mallocForeignPtrBytes2
                            (GHC.IO.Handle.Types.BufferListCons b.s63627.0 rest.s63628.0) ->
                                letS "s2#.s63629.0" = "writeMutVar#" @ dt3.s63591.0 rest.s63628.0
                                case "s2#.s63629.0"{- value -} of
                                  ("GHC.Prim.(##)") ->
                                      let sat.s63640.0 = GHC.IO.Handle.Text.hPutStr2.closure.0 @ b.s63627.0 ipv3.s63604.0
                                          sat.s63641.0 = ["GHC.Tuple.(,)" wild1.s63598.0 sat.s63640.0]
                                          sat.s63642.0 = ["GHC.Tuple.(,)" sat.s63641.0 ds7.s63596.0]
                                      ["GHC.Prim.Unit#" sat.s63642.0]
          (GHC.IO.Handle.Types.NoBuffering) ->
              let sat.s63643.0 = ["GHC.Tuple.(,)" GHC.IO.Handle.Text.hPutStr3 ds7.s63596.0]
              ["GHC.Prim.Unit#" sat.s63643.0]

GHC.IO.Handle.Text.hPutStr2.closure.0 b.s63627.1 ipv3.s63604.1 =
  letS dt4.s63630.0 = b.s63627.1
  case dt4.s63630.0 of
    (GHC.ForeignPtr.ForeignPtr dt5.s63631.0 dt6.s63632.0) ->
        letS wild3.s63633.0 = ipv3.s63604.1
        case wild3.s63633.0 of
          (GHC.IO.Buffer.Buffer dt7.s63634.0 dt8.s63635.0 ds11.s63636.0 dt9.s63637.0 dt10.s63638.0 dt11.s63639.0) ->
              [GHC.IO.Buffer.Buffer dt5.s63631.0{- value -} dt6.s63632.0 GHC.IO.Buffer.WriteBuffer dt9.s63637.0{- value -} 0 0]

GHC.IO.Handle.Text.hPutStr3 =
  ["GHC.Tuple.(,)" GHC.IO.Handle.Types.NoBuffering GHC.IO.Handle.Text.hPutStr4]

GHC.IO.Handle.Text.hPutStr4 =
  letS sat.s63578.0 = "GHC.CString.unpackCString#" @ GHC.IO.Handle.Text.lvl33{- value -}
  GHC.Err.errorWithoutStackTrace @ sat.s63578.0

GHC.IO.Handle.Text.hPutStr5 =
  "GHC.CString.unpackCString#" @ GHC.IO.Handle.Text.hPutStr6{- value -}

GHC.IO.Handle.Text.hPutStr6 =
  #"hPutStr"

GHC.IO.Handle.Text.hPutStr7 ds.s60428.0 ds1.s60429.0 void.040.1735 =
  letS wild.s60431.0 = ds1.s60429.0
  case wild.s60431.0 of
    ("GHC.Types.[]") ->
        ["GHC.Prim.Unit#" "GHC.Tuple.()"]
    (GHC.Types.: c.s60432.0 cs.s60433.0) ->
        letS ww.s60434.0 = c.s60432.0
        case ww.s60434.0 of
          ("GHC.Types.C#" ww1.s60435.0) ->
              letS ds2.s60436.0 = "GHC.IO.Handle.Text.$whPutChar" @ ds.s60428.0 ww1.s60435.0{- value -} #"GHC.Prim.void#"
              case ds2.s60436.0 of
                ("GHC.Prim.Unit#" ipv1.s60438.0) ->
                    GHC.IO.Handle.Text.hPutStr7 @ ds.s60428.0 cs.s60433.0 #"GHC.Prim.void#"

GHC.IO.Handle.Text.lvl1 =
  #"commitBuffer"

GHC.IO.Handle.Text.lvl2 =
  "GHC.CString.unpackCString#" @ GHC.IO.Handle.Text.lvl1{- value -}

GHC.IO.Handle.Text.lvl31 =
  #"\n"

GHC.IO.Handle.Text.lvl32 =
  "GHC.CString.unpackCString#" @ GHC.IO.Handle.Text.lvl31{- value -}

GHC.IO.Handle.Text.lvl33 =
  #"no buffer!"

GHC.IO.Handle.Types.BufferListNil =
  [GHC.IO.Handle.Types.BufferListNil]

GHC.IO.Handle.Types.LF =
  [GHC.IO.Handle.Types.LF]

GHC.IO.Handle.Types.NoBuffering =
  [GHC.IO.Handle.Types.NoBuffering]

GHC.IO.Handle.Types.WriteHandle =
  [GHC.IO.Handle.Types.WriteHandle]

GHC.IO.Handle.Types.inputNL ds3.s29337.0 =
  letS wild.s29338.0 = ds3.s29337.0
  case wild.s29338.0 of
    (GHC.IO.Handle.Types.NewlineMode ds4.s29339.0 ds5.s29340.0) ->
        ds4.s29339.0

GHC.IO.Handle.Types.nativeNewlineMode =
  [GHC.IO.Handle.Types.NewlineMode GHC.IO.Handle.Types.LF GHC.IO.Handle.Types.LF]

GHC.IO.Handle.Types.outputNL ds3.s29333.0 =
  letS wild.s29334.0 = ds3.s29333.0
  case wild.s29334.0 of
    (GHC.IO.Handle.Types.NewlineMode ds4.s29335.0 ds5.s29336.0) ->
        ds5.s29336.0

GHC.IO.Handle.Types.showHandle1 =
  #"}"

GHC.IO.Handle.Types.showHandle2 =
  #"{handle: "

GHC.IO.bracket1 before.s15338.0 after.s15339.0 thing.s15340.0 void.040.1066 =
  letS ds.s15342.0 = "getMaskingState#" @
  case ds.s15342.0{- value -} of
    ("GHC.Prim.Unit#" ipv1.s15344.0) ->
        letS ds1.s15345.0 = ipv1.s15344.0{- value -}
        case ds1.s15345.0{- value -} of
          _ ->
              letS ds2.s15346.0 = before.s15338.0 @ #"GHC.Prim.void#"
              case ds2.s15346.0 of
                ("GHC.Prim.Unit#" ipv3.s15348.0) ->
                    let sat.s15356.0 = GHC.IO.bracket1.closure.0 @ after.s15339.0 ipv3.s15348.0
                        sat.s15349.0 = GHC.IO.bracket1.closure.1 @ ipv3.s15348.0 thing.s15340.0
                        sat.s15350.0 = GHC.IO.bracket1.closure.2 @ sat.s15349.0
                    letS ds3.s15357.0 = sat.s15350.0 @ #"GHC.Prim.void#"
                    case ds3.s15357.0 of
                      ("GHC.Prim.Unit#" ipv5.s15359.0) ->
                          letS ds4.s15360.0 = after.s15339.0 @ ipv3.s15348.0 #"GHC.Prim.void#"
                          case ds4.s15360.0 of
                            ("GHC.Prim.Unit#" ipv7.s15362.0) ->
                                ["GHC.Prim.Unit#" ipv5.s15359.0]
          0 ->
              let sat.s15381.0 = GHC.IO.bracket1.closure.6 @ after.s15339.0 before.s15338.0 thing.s15340.0
              sat.s15381.0 @ #"GHC.Prim.void#"
          1 ->
              letS ds2.s15382.0 = before.s15338.0 @ #"GHC.Prim.void#"
              case ds2.s15382.0 of
                ("GHC.Prim.Unit#" ipv3.s15384.0) ->
                    let sat.s15392.0 = GHC.IO.bracket1.closure.7 @ after.s15339.0 ipv3.s15384.0
                        sat.s15385.0 = GHC.IO.bracket1.closure.8 @ ipv3.s15384.0 thing.s15340.0
                        sat.s15386.0 = GHC.IO.bracket1.closure.9 @ sat.s15385.0
                    letS ds3.s15393.0 = sat.s15386.0 @ #"GHC.Prim.void#"
                    case ds3.s15393.0 of
                      ("GHC.Prim.Unit#" ipv5.s15395.0) ->
                          letS ds4.s15396.0 = after.s15339.0 @ ipv3.s15384.0 #"GHC.Prim.void#"
                          case ds4.s15396.0 of
                            ("GHC.Prim.Unit#" ipv7.s15398.0) ->
                                ["GHC.Prim.Unit#" ipv5.s15395.0]

GHC.IO.bracket1.closure.0 after.s15339.1 ipv3.s15348.1 e.s15351.0 void.040.1067 =
  letS ds3.s15353.0 = after.s15339.1 @ ipv3.s15348.1 #"GHC.Prim.void#"
  case ds3.s15353.0 of
    ("GHC.Prim.Unit#" ipv5.s15355.0) ->
        "raiseIO#" @ e.s15351.0

GHC.IO.bracket1.closure.1 ipv3.s15348.2 thing.s15340.1 =
  thing.s15340.1 @ ipv3.s15348.2

GHC.IO.bracket1.closure.2 sat.s15349.1 void.040.1068 =
  sat.s15349.1 @ #"GHC.Prim.void#"

GHC.IO.bracket1.closure.3 after.s15339.3 ipv3.s15366.1 e.s15369.0 void.X93.3 =
  letS ds3.s15371.0 = after.s15339.3 @ ipv3.s15366.1 #"GHC.Prim.void#"
  case ds3.s15371.0 of
    ("GHC.Prim.Unit#" ipv5.s15373.0) ->
        "raiseIO#" @ e.s15369.0

GHC.IO.bracket1.closure.4 ipv3.s15366.2 thing.s15340.3 =
  thing.s15340.3 @ ipv3.s15366.2

GHC.IO.bracket1.closure.5 sat.s15367.1 void.X94.3 =
  sat.s15367.1 @ #"GHC.Prim.void#"

GHC.IO.bracket1.closure.6 after.s15339.2 before.s15338.1 thing.s15340.2 void.040.1069 =
  letS ds2.s15364.0 = before.s15338.1 @ #"GHC.Prim.void#"
  case ds2.s15364.0 of
    ("GHC.Prim.Unit#" ipv3.s15366.0) ->
        let sat.s15374.0 = GHC.IO.bracket1.closure.3 @ after.s15339.2 ipv3.s15366.0
            sat.s15367.0 = GHC.IO.bracket1.closure.4 @ ipv3.s15366.0 thing.s15340.2
            sat.s15368.0 = GHC.IO.bracket1.closure.5 @ sat.s15367.0
        letS ds3.s15375.0 = sat.s15368.0 @ #"GHC.Prim.void#"
        case ds3.s15375.0 of
          ("GHC.Prim.Unit#" ipv5.s15377.0) ->
              letS ds4.s15378.0 = after.s15339.2 @ ipv3.s15366.0 #"GHC.Prim.void#"
              case ds4.s15378.0 of
                ("GHC.Prim.Unit#" ipv7.s15380.0) ->
                    ["GHC.Prim.Unit#" ipv5.s15377.0]

GHC.IO.bracket1.closure.7 after.s15339.4 ipv3.s15384.1 e.s15387.0 void.040.1070 =
  letS ds3.s15389.0 = after.s15339.4 @ ipv3.s15384.1 #"GHC.Prim.void#"
  case ds3.s15389.0 of
    ("GHC.Prim.Unit#" ipv5.s15391.0) ->
        "raiseIO#" @ e.s15387.0

GHC.IO.bracket1.closure.8 ipv3.s15384.2 thing.s15340.4 =
  thing.s15340.4 @ ipv3.s15384.2

GHC.IO.bracket1.closure.9 sat.s15385.1 void.040.1071 =
  sat.s15385.1 @ #"GHC.Prim.void#"

GHC.IO.failIO1 s.s15250.0 void.040.1034 =
  let sat.s15253.0 = GHC.IO.failIO1.closure.1 @ s.s15250.0
  "raiseIO#" @ sat.s15253.0

GHC.IO.failIO1.closure.0 s.s15250.2 =
  GHC.IO.Exception.userError @ s.s15250.2

GHC.IO.failIO1.closure.1 s.s15250.1 =
  let sat.s15252.0 = GHC.IO.failIO1.closure.0 @ s.s15250.1
  GHC.Exception.Type.toException @ "GHC.IO.Exception.$fxExceptionIOException" sat.s15252.0

"GHC.Int.$fIntegralInt64_$ctoInteger" ds.s66916.0 =
  letS wild.s66917.0 = ds.s66916.0
  case wild.s66917.0 of
    ("GHC.Int.I64#" "x#.s66918.0") ->
        GHC.Integer.Type.smallInteger @ "x#.s66918.0"{- value -}

GHC.Integer.Type.integerToInt ds.s87981.0 =
  letS wild.s87982.0 = ds.s87981.0
  case wild.s87982.0 of
    ("GHC.Integer.Type.S#" "i#.s87983.0") ->
        "i#.s87983.0"{- value -}
    ("GHC.Integer.Type.Jp#" dt.s87984.0) ->
        "indexIntArray#" @ dt.s87984.0 0
    ("GHC.Integer.Type.Jn#" dt.s87985.0) ->
        letS wild1.s87986.0 = "indexIntArray#" @ dt.s87985.0 0
        "negateInt#" @ wild1.s87986.0{- value -}

GHC.Integer.Type.smallInteger eta.B1.711 =
  ["GHC.Integer.Type.S#" eta.B1.711{- value -}]

"GHC.List.$wlenAcc" w.s26116.0 ww.s26117.0 =
  letS wild.s26118.0 = w.s26116.0
  case wild.s26118.0 of
    ("GHC.Types.[]") ->
        ww.s26117.0{- value -}
    (GHC.Types.: ds.s26119.0 ys.s26120.0) ->
        letS sat.s26121.0 = "+#" @ ww.s26117.0{- value -} 1
        "GHC.List.$wlenAcc" @ ys.s26120.0 sat.s26121.0{- value -}

"GHC.List.$wspan" w.s25790.0 w1.s25791.0 =
  letS wild.s25792.0 = w1.s25791.0
  case wild.s25792.0 of
    ("GHC.Types.[]") ->
        ["GHC.Prim.(#,#)" "GHC.Types.[]" "GHC.Types.[]"]
    (GHC.Types.: x.s25793.0 xs'.s25794.0) ->
        letS wild1.s25795.0 = w.s25790.0 @ x.s25793.0
        case wild1.s25795.0 of
          (GHC.Types.False) ->
              ["GHC.Prim.(#,#)" "GHC.Types.[]" wild.s25792.0]
          (GHC.Types.True) ->
              let ds.s25796.0 = "GHC.List.$wspan.closure.0" @ w.s25790.0 xs'.s25794.0
                  sat.s25808.0 = "GHC.List.$wspan.closure.1" @ ds.s25796.0
                  sat.s25803.0 = "GHC.List.$wspan.closure.2" @ ds.s25796.0
                  sat.s25804.0 = [GHC.Types.: x.s25793.0 sat.s25803.0]
              ["GHC.Prim.(#,#)" sat.s25804.0 sat.s25808.0]

"GHC.List.$wspan.closure.0" w.s25790.1 xs'.s25794.1 =
  letS ww.s25797.0 = "GHC.List.$wspan" @ w.s25790.1 xs'.s25794.1
  case ww.s25797.0{- value -} of
    ("GHC.Prim.(#,#)" ww1.s25798.0 ww2.s25799.0) ->
        ["GHC.Tuple.(,)" ww1.s25798.0 ww2.s25799.0]

"GHC.List.$wspan.closure.1" ds.s25796.1 =
  letS wild2.s25805.0 = ds.s25796.1
  case wild2.s25805.0 of
    ("GHC.Tuple.(,)" ys.s25806.0 zs.s25807.0) ->
        zs.s25807.0

"GHC.List.$wspan.closure.2" ds.s25796.2 =
  letS wild2.s25800.0 = ds.s25796.2
  case wild2.s25800.0 of
    ("GHC.Tuple.(,)" ys.s25801.0 zs.s25802.0) ->
        ys.s25801.0

GHC.List.elem "$dEq.s25730.0" ds.s25731.0 ds1.s25732.0 =
  letS wild.s25733.0 = ds1.s25732.0
  case wild.s25733.0 of
    ("GHC.Types.[]") ->
        [GHC.Types.False]
    (GHC.Types.: y.s25734.0 ys.s25735.0) ->
        letS wild1.s25736.0 = "GHC.Classes.==" @ "$dEq.s25730.0" ds.s25731.0 y.s25734.0
        case wild1.s25736.0 of
          (GHC.Types.False) ->
              GHC.List.elem @ "$dEq.s25730.0" ds.s25731.0 ys.s25735.0
          (GHC.Types.True) ->
              [GHC.Types.True]

GHC.List.filter _pred.s26102.0 ds.s26103.0 =
  letS wild.s26104.0 = ds.s26103.0
  case wild.s26104.0 of
    ("GHC.Types.[]") ->
        ["GHC.Types.[]"]
    (GHC.Types.: x.s26105.0 xs.s26106.0) ->
        letS wild1.s26107.0 = _pred.s26102.0 @ x.s26105.0
        case wild1.s26107.0 of
          (GHC.Types.False) ->
              GHC.List.filter @ _pred.s26102.0 xs.s26106.0
          (GHC.Types.True) ->
              let sat.s26108.1 = GHC.List.filter.closure.0 @ _pred.s26102.0 xs.s26106.0
              [GHC.Types.: x.s26105.0 sat.s26108.1]

GHC.List.filter.closure.0 _pred.s26102.1 xs.s26106.1 =
  GHC.List.filter @ _pred.s26102.1 xs.s26106.1

GHC.List.reverse1 ds.s25759.0 a1.s25760.0 =
  letS wild.s25761.0 = ds.s25759.0
  case wild.s25761.0 of
    ("GHC.Types.[]") ->
        a1.s25760.0
    (GHC.Types.: x.s25762.0 xs.s25763.0) ->
        let sat.s25764.0 = [GHC.Types.: x.s25762.0 a1.s25760.0]
        GHC.List.reverse1 @ xs.s25763.0 sat.s25764.0

"GHC.List.splitAt_$s$wsplitAt'" sc.s25357.0 sc1.s25358.0 =
  letS wild.s25359.0 = sc.s25357.0
  case wild.s25359.0 of
    ("GHC.Types.[]") ->
        ["GHC.Prim.(#,#)" "GHC.Types.[]" "GHC.Types.[]"]
    (GHC.Types.: ipv.s25360.0 ipv1.s25361.0) ->
        letS ds.s25362.0 = sc1.s25358.0{- value -}
        case ds.s25362.0{- value -} of
          _ ->
              let ds1.s25363.0 = "GHC.List.splitAt_$s$wsplitAt'.closure.0" @ ds.s25362.0{- value -} ipv1.s25361.0
                  sat.s25376.0 = "GHC.List.splitAt_$s$wsplitAt'.closure.1" @ ds1.s25363.0
                  sat.s25371.0 = "GHC.List.splitAt_$s$wsplitAt'.closure.2" @ ds1.s25363.0
                  sat.s25372.0 = [GHC.Types.: ipv.s25360.0 sat.s25371.0]
              ["GHC.Prim.(#,#)" sat.s25372.0 sat.s25376.0]
          1 ->
              let sat.s25377.0 = [GHC.Types.: ipv.s25360.0 "GHC.Types.[]"]
              ["GHC.Prim.(#,#)" sat.s25377.0 ipv1.s25361.0]

"GHC.List.splitAt_$s$wsplitAt'.closure.0" ds.s25362.1 ipv1.s25361.1 =
  letS sat.s25364.0 = "-#" @ ds.s25362.1{- value -} 1
       ww.s25365.0 = "GHC.List.splitAt_$s$wsplitAt'" @ ipv1.s25361.1 sat.s25364.0{- value -}
  case ww.s25365.0{- value -} of
    ("GHC.Prim.(#,#)" ww1.s25366.0 ww2.s25367.0) ->
        ["GHC.Tuple.(,)" ww1.s25366.0 ww2.s25367.0]

"GHC.List.splitAt_$s$wsplitAt'.closure.1" ds1.s25363.1 =
  letS wild1.s25373.0 = ds1.s25363.1
  case wild1.s25373.0 of
    ("GHC.Tuple.(,)" xs'.s25374.0 xs''.s25375.0) ->
        xs''.s25375.0

"GHC.List.splitAt_$s$wsplitAt'.closure.2" ds1.s25363.2 =
  letS wild1.s25368.0 = ds1.s25363.2
  case wild1.s25368.0 of
    ("GHC.Tuple.(,)" xs'.s25369.0 xs''.s25370.0) ->
        xs'.s25369.0

GHC.List.zipWith3 z.s25608.0 eta.s25609.0 eta1.s25610.0 eta2.s25611.0 =
  letrec go2.s25612.0 = GHC.List.zipWith3.closure.2 @ go2.s25612.0 z.s25608.0
  go2.s25612.0 @ eta.s25609.0 eta1.s25610.0 eta2.s25611.0

GHC.List.zipWith3.closure.0 as.s25618.1 bs.s25621.1 cs.s25624.1 go2.s25612.2 =
  go2.s25612.2 @ as.s25618.1 bs.s25621.1 cs.s25624.1

GHC.List.zipWith3.closure.1 a1.s25617.1 b1.s25620.1 c1.s25623.1 z.s25608.2 =
  z.s25608.2 @ a1.s25617.1 b1.s25620.1 c1.s25623.1

GHC.List.zipWith3.closure.2 go2.s25612.1 z.s25608.1 ds.s25613.0 ds1.s25614.0 ds2.s25615.0 =
  letS wild.s25616.0 = ds.s25613.0
  case wild.s25616.0 of
    ("GHC.Types.[]") ->
        ["GHC.Types.[]"]
    (GHC.Types.: a1.s25617.0 as.s25618.0) ->
        letS wild1.s25619.0 = ds1.s25614.0
        case wild1.s25619.0 of
          ("GHC.Types.[]") ->
              ["GHC.Types.[]"]
          (GHC.Types.: b1.s25620.0 bs.s25621.0) ->
              letS wild2.s25622.0 = ds2.s25615.0
              case wild2.s25622.0 of
                ("GHC.Types.[]") ->
                    ["GHC.Types.[]"]
                (GHC.Types.: c1.s25623.0 cs.s25624.0) ->
                    let sat.s25626.0 = GHC.List.zipWith3.closure.0 @ as.s25618.0 bs.s25621.0 cs.s25624.0 go2.s25612.1
                        sat.s25625.0 = GHC.List.zipWith3.closure.1 @ a1.s25617.0 b1.s25620.0 c1.s25623.0 z.s25608.1
                    [GHC.Types.: sat.s25625.0 sat.s25626.0]

GHC.Maybe.Nothing =
  [GHC.Maybe.Nothing]

"GHC.Show.$fShow(,)1" =
  ["GHC.Types.I#" 0]

"GHC.Show.$fShow(,)2" =
  ["GHC.Types.C#" #')']

"GHC.Show.$fShow(,)4" =
  ["GHC.Types.C#" #'(']

"GHC.Show.$fShow(,)_$sgo1" sc.s38645.0 sc1.s38646.0 sc2.s38647.0 =
  letS wild1.s38648.0 = sc2.s38647.0
  case wild1.s38648.0 of
    ("GHC.Types.[]") ->
        sc1.s38646.0 @ sc.s38645.0
    (GHC.Types.: ipv.s38649.0 ipv1.s38650.0) ->
        let sat.s38651.0 = "GHC.Show.$fShow(,)_$sgo1.closure.0" @ ipv.s38649.0 ipv1.s38650.0 sc.s38645.0
            sat.s38652.0 = [GHC.Types.: GHC.Show.showList__1 sat.s38651.0]
        sc1.s38646.0 @ sat.s38652.0

"GHC.Show.$fShow(,)_$sgo1.closure.0" ipv.s38649.1 ipv1.s38650.1 sc.s38645.1 =
  "GHC.Show.$fShow(,)_$sgo1" @ sc.s38645.1 ipv.s38649.1 ipv1.s38650.1

"GHC.Show.$witos" w.s37221.0 w1.s37222.0 =
  letS lwild.s37223.0 = "<#" @ w.s37221.0{- value -} 0
  case lwild.s37223.0{- value -} of
    _ ->
        "GHC.Show.$witos'" @ w.s37221.0{- value -} w1.s37222.0
    1 ->
        letS wild.s37224.0 = w.s37221.0{- value -}
        case wild.s37224.0{- value -} of
          _ ->
              let sat.s37229.0 = "GHC.Show.$witos.closure.0" @ w1.s37222.0 wild.s37224.0{- value -}
              ["GHC.Prim.(#,#)" GHC.Show.showLitChar1 sat.s37229.0]
          -9223372036854775808 ->
              let sat.s37242.0 = "GHC.Show.$witos.closure.2" @ w1.s37222.0
              ["GHC.Prim.(#,#)" GHC.Show.showLitChar1 sat.s37242.0]

"GHC.Show.$witos'" w.s37208.0 w1.s37209.0 =
  letS lwild.s37210.0 = "<#" @ w.s37208.0{- value -} 10
  case lwild.s37210.0{- value -} of
    _ ->
        letS ds.s37211.0 = "quotRemInt#" @ w.s37208.0{- value -} 10
        case ds.s37211.0{- value -} of
          ("GHC.Prim.(#,#)" ipv.s37212.0 ipv1.s37213.0) ->
              letS sat.s37214.0 = "+#" @ 48 ipv1.s37213.0{- value -}
                   sat.s37215.0 = "chr#" @ sat.s37214.0{- value -}
              let sat.s37216.0 = ["GHC.Types.C#" sat.s37215.0{- value -}]
                  sat.s37217.0 = [GHC.Types.: sat.s37216.0 w1.s37209.0]
              "GHC.Show.$witos'" @ ipv.s37212.0{- value -} sat.s37217.0
    1 ->
        letS sat.s37218.0 = "+#" @ 48 w.s37208.0{- value -}
             sat.s37219.0 = "chr#" @ sat.s37218.0{- value -}
        let sat.s37220.0 = ["GHC.Types.C#" sat.s37219.0{- value -}]
        ["GHC.Prim.(#,#)" sat.s37220.0 w1.s37209.0]

"GHC.Show.$witos.closure.0" w1.s37222.1 wild.s37224.1 =
  letS sat.s37225.0 = "negateInt#" @ wild.s37224.1{- value -}
       ww.s37226.0 = "GHC.Show.$witos'" @ sat.s37225.0{- value -} w1.s37222.1
  case ww.s37226.0{- value -} of
    ("GHC.Prim.(#,#)" ww1.s37227.0 ww2.s37228.0) ->
        [GHC.Types.: ww1.s37227.0 ww2.s37228.0]

"GHC.Show.$witos.closure.1" ipv1.s37232.1 w1.s37222.3 =
  letS sat.s37234.0 = "negateInt#" @ ipv1.s37232.1{- value -}
       ww.s37235.0 = "GHC.Show.$witos'" @ sat.s37234.0{- value -} w1.s37222.3
  case ww.s37235.0{- value -} of
    ("GHC.Prim.(#,#)" ww1.s37236.0 ww2.s37237.0) ->
        [GHC.Types.: ww1.s37236.0 ww2.s37237.0]

"GHC.Show.$witos.closure.2" w1.s37222.2 =
  letS ds.s37230.0 = "quotRemInt#" @ -9223372036854775808 10
  case ds.s37230.0{- value -} of
    ("GHC.Prim.(#,#)" ipv.s37231.0 ipv1.s37232.0) ->
        let sat.s37238.0 = "GHC.Show.$witos.closure.1" @ ipv1.s37232.0{- value -} w1.s37222.2
        letS sat.s37233.0 = "negateInt#" @ ipv.s37231.0{- value -}
             ww.s37239.0 = "GHC.Show.$witos'" @ sat.s37233.0{- value -} sat.s37238.0
        case ww.s37239.0{- value -} of
          ("GHC.Prim.(#,#)" ww1.s37240.0 ww2.s37241.0) ->
              [GHC.Types.: ww1.s37240.0 ww2.s37241.0]

"GHC.Show.$wshowSignedInt" ww.s37243.0 ww1.s37244.0 w.s37245.0 =
  letS lwild.s37246.0 = "<#" @ ww1.s37244.0{- value -} 0
  case lwild.s37246.0{- value -} of
    _ ->
        "GHC.Show.$witos" @ ww1.s37244.0{- value -} w.s37245.0
    1 ->
        letS lwild1.s37247.0 = ">#" @ ww.s37243.0{- value -} 6
        case lwild1.s37247.0{- value -} of
          _ ->
              "GHC.Show.$witos" @ ww1.s37244.0{- value -} w.s37245.0
          1 ->
              let sat.s37252.0 = "GHC.Show.$wshowSignedInt.closure.0" @ w.s37245.0 ww1.s37244.0{- value -}
              ["GHC.Prim.(#,#)" "GHC.Show.$fShow(,)4" sat.s37252.0]

"GHC.Show.$wshowSignedInt.closure.0" w.s37245.1 ww1.s37244.1 =
  let sat.s37248.0 = [GHC.Types.: "GHC.Show.$fShow(,)2" w.s37245.1]
  letS ww2.s37249.0 = "GHC.Show.$witos" @ ww1.s37244.1{- value -} sat.s37248.0
  case ww2.s37249.0{- value -} of
    ("GHC.Prim.(#,#)" ww3.s37250.0 ww4.s37251.0) ->
        [GHC.Types.: ww3.s37250.0 ww4.s37251.0]

GHC.Show.show v.s37198.0 =
  letS v.s37199.0 = v.s37198.0
  case v.s37199.0 of
    (GHC.Show.C:Show v.s37200.0 v.s37201.0 v.s37202.0) ->
        v.s37201.0

GHC.Show.showList__ ds.s37301.0 ds1.s37302.0 s.s37303.0 =
  letS wild.s37304.0 = ds1.s37302.0
  case wild.s37304.0 of
    ("GHC.Types.[]") ->
        "GHC.CString.unpackAppendCString#" @ GHC.Show.showList__4{- value -} s.s37303.0
    (GHC.Types.: x.s37305.0 xs.s37306.0) ->
        let sat.s37316.0 = GHC.Show.showList__.closure.4 @ ds.s37301.0 s.s37303.0 x.s37305.0 xs.s37306.0
        [GHC.Types.: GHC.Show.showList__3 sat.s37316.0]

GHC.Show.showList__.closure.0 showl.s37308.3 ys.s37312.2 =
  showl.s37308.3 @ ys.s37312.2

GHC.Show.showList__.closure.1 ds.s37301.4 showl.s37308.2 y.s37311.1 ys.s37312.1 =
  let sat.s37313.0 = GHC.Show.showList__.closure.0 @ showl.s37308.2 ys.s37312.1
  ds.s37301.4 @ y.s37311.1 sat.s37313.0

GHC.Show.showList__.closure.2 ds.s37301.3 lvl43.s37307.1 showl.s37308.1 ds2.s37309.0 =
  letS wild1.s37310.0 = ds2.s37309.0
  case wild1.s37310.0 of
    ("GHC.Types.[]") ->
        lvl43.s37307.1
    (GHC.Types.: y.s37311.0 ys.s37312.0) ->
        let sat.s37314.0 = GHC.Show.showList__.closure.1 @ ds.s37301.3 showl.s37308.1 y.s37311.0 ys.s37312.0
        [GHC.Types.: GHC.Show.showList__1 sat.s37314.0]

GHC.Show.showList__.closure.3 ds.s37301.2 s.s37303.2 xs.s37306.2 =
  let lvl43.s37307.0 = [GHC.Types.: GHC.Show.showList__2 s.s37303.2]
  letrec showl.s37308.0 = GHC.Show.showList__.closure.2 @ ds.s37301.2 lvl43.s37307.0 showl.s37308.0
  showl.s37308.0 @ xs.s37306.2

GHC.Show.showList__.closure.4 ds.s37301.1 s.s37303.1 x.s37305.1 xs.s37306.1 =
  let sat.s37315.0 = GHC.Show.showList__.closure.3 @ ds.s37301.1 s.s37303.1 xs.s37306.1
  ds.s37301.1 @ x.s37305.1 sat.s37315.0

GHC.Show.showList__1 =
  ["GHC.Types.C#" #',']

GHC.Show.showList__2 =
  ["GHC.Types.C#" #']']

GHC.Show.showList__3 =
  ["GHC.Types.C#" #'[']

GHC.Show.showList__4 =
  #"[]"

GHC.Show.showLitChar1 =
  ["GHC.Types.C#" #'-']

GHC.Show.showSignedInt w.s37253.0 w1.s37254.0 w2.s37255.0 =
  letS ww.s37256.0 = w.s37253.0
  case ww.s37256.0 of
    ("GHC.Types.I#" ww1.s37257.0) ->
        letS ww2.s37258.0 = w1.s37254.0
        case ww2.s37258.0 of
          ("GHC.Types.I#" ww3.s37259.0) ->
              letS ww4.s37260.0 = "GHC.Show.$wshowSignedInt" @ ww1.s37257.0{- value -} ww3.s37259.0{- value -} w2.s37255.0
              case ww4.s37260.0{- value -} of
                ("GHC.Prim.(#,#)" ww5.s37261.0 ww6.s37262.0) ->
                    [GHC.Types.: ww5.s37261.0 ww6.s37262.0]

GHC.Show.showsPrec v.s37193.0 =
  letS v.s37194.0 = v.s37193.0
  case v.s37194.0 of
    (GHC.Show.C:Show v.s37195.0 v.s37196.0 v.s37197.0) ->
        v.s37195.0

"GHC.Stack.CCS.$wgo" ww.s15119.0 w.s15120.0 void.040.1991 =
  letS lwild.s15122.0 = "eqAddr#" @ ww.s15119.0{- value -} #NullAddr
  case lwild.s15122.0{- value -} of
    _ ->
        letS sat.s15123.0 = "plusAddr#" @ ww.s15119.0{- value -} 8
             ds2.s15124.0 = "readAddrOffAddr#" @ sat.s15123.0{- value -} 0
        case ds2.s15124.0{- value -} of
          ("GHC.Prim.Unit#" ipv1.s15126.0) ->
              letS sat.s15127.0 = "plusAddr#" @ ipv1.s15126.0{- value -} 8
                   ds1.s15128.0 = "readAddrOffAddr#" @ sat.s15127.0{- value -} 0
              case ds1.s15128.0{- value -} of
                ("GHC.Prim.Unit#" ipv3.s15130.0) ->
                    letS ds3.s15131.0 = "GHC.Foreign.$wpeekCString" @ GHC.IO.Encoding.UTF8.utf8 ipv3.s15130.0{- value -} #"GHC.Prim.void#"
                    case ds3.s15131.0 of
                      ("GHC.Prim.Unit#" ipv5.s15133.0) ->
                          letS sat.s15134.0 = "plusAddr#" @ ipv1.s15126.0{- value -} 16
                               ds4.s15135.0 = "readAddrOffAddr#" @ sat.s15134.0{- value -} 0
                          case ds4.s15135.0{- value -} of
                            ("GHC.Prim.Unit#" ipv7.s15137.0) ->
                                letS ds5.s15138.0 = "GHC.Foreign.$wpeekCString" @ GHC.IO.Encoding.UTF8.utf8 ipv7.s15137.0{- value -} #"GHC.Prim.void#"
                                case ds5.s15138.0 of
                                  ("GHC.Prim.Unit#" ipv9.s15140.0) ->
                                      letS sat.s15141.0 = "plusAddr#" @ ipv1.s15126.0{- value -} 24
                                           ds6.s15142.0 = "readAddrOffAddr#" @ sat.s15141.0{- value -} 0
                                      case ds6.s15142.0{- value -} of
                                        ("GHC.Prim.Unit#" ipv11.s15144.0) ->
                                            letS ds7.s15145.0 = "GHC.Foreign.$wpeekCString" @ GHC.IO.Encoding.UTF8.utf8 ipv11.s15144.0{- value -} #"GHC.Prim.void#"
                                            case ds7.s15145.0 of
                                              ("GHC.Prim.Unit#" ipv13.s15147.0) ->
                                                  letS sat.s15148.0 = "plusAddr#" @ ww.s15119.0{- value -} 16
                                                       ds8.s15149.0 = "readAddrOffAddr#" @ sat.s15148.0{- value -} 0
                                                  case ds8.s15149.0{- value -} of
                                                    ("GHC.Prim.Unit#" ipv15.s15151.0) ->
                                                        let "$j.s15152.0" = "GHC.Stack.CCS.$wgo.closure.3" @ ipv13.s15147.0 ipv15.s15151.0{- value -} ipv5.s15133.0 ipv9.s15140.0 w.s15120.0
                                                        letS wild.s15160.0 = GHC.Base.eqString @ ipv9.s15140.0 GHC.Stack.CCS.lvl1
                                                        case wild.s15160.0 of
                                                          (GHC.Types.False) ->
                                                              "$j.s15152.0"
                                                          (GHC.Types.True) ->
                                                              letS wild1.s15161.0 = GHC.Base.eqString @ ipv5.s15133.0 GHC.Stack.CCS.lvl1
                                                              case wild1.s15161.0 of
                                                                (GHC.Types.False) ->
                                                                    "$j.s15152.0"
                                                                (GHC.Types.True) ->
                                                                    ["GHC.Prim.Unit#" w.s15120.0]
    1 ->
        ["GHC.Prim.Unit#" w.s15120.0]

"GHC.Stack.CCS.$wgo.closure.0" ipv13.s15147.4 =
  "GHC.Base.++" @ ipv13.s15147.4 GHC.Stack.CCS.lvl6

"GHC.Stack.CCS.$wgo.closure.1" ipv13.s15147.3 ipv5.s15133.3 =
  let sat.s15153.0 = "GHC.Stack.CCS.$wgo.closure.0" @ ipv13.s15147.3
      sat.s15154.0 = [GHC.Types.: GHC.Stack.CCS.lvl3 sat.s15153.0]
      sat.s15155.0 = [GHC.Types.: GHC.Stack.CCS.lvl4 sat.s15154.0]
  "GHC.Base.++" @ ipv5.s15133.3 sat.s15155.0

"GHC.Stack.CCS.$wgo.closure.2" ipv13.s15147.2 ipv5.s15133.2 ipv9.s15140.2 =
  let sat.s15156.0 = "GHC.Stack.CCS.$wgo.closure.1" @ ipv13.s15147.2 ipv5.s15133.2
      sat.s15157.0 = [GHC.Types.: GHC.Stack.CCS.lvl5 sat.s15156.0]
  "GHC.Base.++" @ ipv9.s15140.2 sat.s15157.0

"GHC.Stack.CCS.$wgo.closure.3" ipv13.s15147.1 ipv15.s15151.1 ipv5.s15133.1 ipv9.s15140.1 w.s15120.1 =
  let sat.s15158.0 = "GHC.Stack.CCS.$wgo.closure.2" @ ipv13.s15147.1 ipv5.s15133.1 ipv9.s15140.1
      sat.s15159.0 = [GHC.Types.: sat.s15158.0 w.s15120.1]
  "GHC.Stack.CCS.$wgo" @ ipv15.s15151.1{- value -} sat.s15159.0 #"GHC.Prim.void#"

GHC.Stack.CCS.currentCallStack void.040.1998 =
  GHC.Stack.CCS.currentCallStack1 @ #"GHC.Prim.void#"

GHC.Stack.CCS.currentCallStack1 void.040.1997 =
  letS wild.s15177.0 = "getCurrentCCS#" @ "GHC.Tuple.()"
  case wild.s15177.0{- value -} of
    ("GHC.Prim.Unit#" addr.s15179.0) ->
        "GHC.Stack.CCS.$wgo" @ addr.s15179.0{- value -} "GHC.Types.[]" #"GHC.Prim.void#"

GHC.Stack.CCS.lvl =
  #"MAIN"

GHC.Stack.CCS.lvl1 =
  "GHC.CString.unpackCString#" @ GHC.Stack.CCS.lvl{- value -}

GHC.Stack.CCS.lvl2 =
  #")"

GHC.Stack.CCS.lvl3 =
  ["GHC.Types.C#" #'(']

GHC.Stack.CCS.lvl4 =
  ["GHC.Types.C#" #' ']

GHC.Stack.CCS.lvl5 =
  ["GHC.Types.C#" #'.']

GHC.Stack.CCS.lvl6 =
  "GHC.CString.unpackCString#" @ GHC.Stack.CCS.lvl2{- value -}

GHC.Stack.Types.EmptyCallStack =
  [GHC.Stack.Types.EmptyCallStack]

GHC.Stack.Types.getCallStack stk.s9234.0 =
  letS wild.s9235.0 = stk.s9234.0
  case wild.s9235.0 of
    (GHC.Stack.Types.EmptyCallStack) ->
        ["GHC.Types.[]"]
    (GHC.Stack.Types.PushCallStack fn.s9236.0 loc.s9237.0 stk'.s9238.0) ->
        let sat.s9240.0 = GHC.Stack.Types.getCallStack.closure.0 @ stk'.s9238.0
            sat.s9239.0 = ["GHC.Tuple.(,)" fn.s9236.0 loc.s9237.0]
        [GHC.Types.: sat.s9239.0 sat.s9240.0]
    (GHC.Stack.Types.FreezeCallStack stk'.s9241.0) ->
        GHC.Stack.Types.getCallStack @ stk'.s9241.0

GHC.Stack.Types.getCallStack.closure.0 stk'.s9238.1 =
  GHC.Stack.Types.getCallStack @ stk'.s9238.1

GHC.TopHandler.runMainIO1 main.s29191.0 void.040.2088 =
  let sat.s29235.0 = GHC.TopHandler.runMainIO1.closure.2 @ main.s29191.0
  sat.s29235.0 @ #"GHC.Prim.void#"

GHC.TopHandler.runMainIO1.closure.0 ipv3.s29200.1 void.X88.6 =
  letS ds3.s29216.0 = "deRefWeak#" @ ipv3.s29200.1
  case ds3.s29216.0{- value -} of
    ("GHC.Prim.(#,#)" ipv5.s29218.0 ipv6.s29219.0) ->
        letS ds4.s29220.0 = ipv5.s29218.0{- value -}
        case ds4.s29220.0{- value -} of
          _ ->
              letS wild1.s29221.0 = ipv6.s29219.0
              case wild1.s29221.0 of
                (GHC.Conc.Sync.ThreadId tid.s29222.0) ->
                    letS s2.s29223.0 = "killThread#" @ tid.s29222.0 GHC.TopHandler.runMainIO3
                    case s2.s29223.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          ["GHC.Prim.Unit#" "GHC.Tuple.()"]
          0 ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.TopHandler.runMainIO1.closure.1 ipv3.s29200.2 ds3.s29204.0 void.X91.4 =
  letS ds4.s29206.0 = "deRefWeak#" @ ipv3.s29200.2
  case ds4.s29206.0{- value -} of
    ("GHC.Prim.(#,#)" ipv5.s29208.0 ipv6.s29209.0) ->
        letS ds5.s29210.0 = ipv5.s29208.0{- value -}
        case ds5.s29210.0{- value -} of
          _ ->
              letS wild1.s29211.0 = ipv6.s29209.0
              case wild1.s29211.0 of
                (GHC.Conc.Sync.ThreadId tid.s29212.0) ->
                    letS s1.s29213.0 = "killThread#" @ tid.s29212.0 GHC.TopHandler.runMainIO3
                    case s1.s29213.0{- value -} of
                      ("GHC.Prim.(##)") ->
                          ["GHC.Prim.Unit#" "GHC.Tuple.()"]
          0 ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

GHC.TopHandler.runMainIO1.closure.2 main.s29191.1 void.040.2089 =
  letS ds.s29194.0 = "myThreadId#" @
  case ds.s29194.0 of
    ("GHC.Prim.Unit#" ipv1.s29196.0) ->
        let sat.s29197.0 = [GHC.Conc.Sync.ThreadId ipv1.s29196.0]
        letS ds1.s29198.0 = "mkWeakNoFinalizer#" @ ipv1.s29196.0 sat.s29197.0
        case ds1.s29198.0 of
          ("GHC.Prim.Unit#" ipv3.s29200.0) ->
              letS wild.s29202.0 = rts_setMainThread @ ipv3.s29200.0
              case wild.s29202.0{- value -} of
                ("GHC.Prim.(##)") ->
                    let sat.s29224.0 = GHC.TopHandler.runMainIO1.closure.0 @ ipv3.s29200.0
                        sat.s29225.0 = [Data.Dynamic.Dynamic GHC.TopHandler.runMainIO2 sat.s29224.0]
                        sat.s29214.0 = GHC.TopHandler.runMainIO1.closure.1 @ ipv3.s29200.0
                        sat.s29226.0 = ["GHC.Tuple.(,)" sat.s29214.0 sat.s29225.0]
                        sat.s29227.0 = [GHC.Maybe.Just sat.s29226.0]
                    letS ds3.s29228.0 = GHC.Conc.Signal.setHandler1 @ GHC.TopHandler.runMainIO4 sat.s29227.0 #"GHC.Prim.void#"
                    case ds3.s29228.0 of
                      ("GHC.Prim.Unit#" ipv5.s29230.0) ->
                          letS wild1.s29232.0 = stg_sig_install @ 2 -5 #NullAddr
                          case wild1.s29232.0{- value -} of
                            ("GHC.Prim.Unit#" ds5.s29234.0) ->
                                main.s29191.1 @ #"GHC.Prim.void#"

GHC.TopHandler.runMainIO2 =
  letS ww7.s28920.0 = "Data.Typeable.Internal.$wmkTrCon" @ 11571292540224541508u 14006894820825784566u "GHC.Types.$trModule" "GHC.Types.$tcIO1" 0 "GHC.Types.krep$*Arr*" "GHC.Types.[]"
  case ww7.s28920.0{- value -} of
    ("GHC.Prim.(#,,,,#)" ww8.s28921.0 ww9.s28922.0 ww10.s28923.0 ww11.s28924.0 ww12.s28925.0) ->
        letS ww1.s28926.0 = "Data.Typeable.Internal.$wmkTrCon" @ 2684808367141291271u 14290630168515401665u "GHC.Tuple.$trModule" "GHC.Tuple.$tc()1" 0 "GHC.Types.krep$*" "GHC.Types.[]"
        case ww1.s28926.0{- value -} of
          ("GHC.Prim.(#,,,,#)" ww2.s28927.0 ww3.s28928.0 ww4.s28929.0 ww5.s28930.0 ww6.s28931.0) ->
              let sat.s28933.0 = [Data.Typeable.Internal.TrTyCon ww2.s28927.0{- value -} ww3.s28928.0{- value -} ww4.s28929.0 ww5.s28930.0 ww6.s28931.0]
                  sat.s28932.0 = [Data.Typeable.Internal.TrTyCon ww8.s28921.0{- value -} ww9.s28922.0{- value -} ww10.s28923.0 ww11.s28924.0 ww12.s28925.0]
              Data.Typeable.Internal.mkTrApp @ sat.s28932.0 sat.s28933.0

GHC.TopHandler.runMainIO3 =
  "GHC.IO.Exception.$fExceptionAsyncException_$ctoException" @ GHC.IO.Exception.UserInterrupt

GHC.TopHandler.runMainIO4 =
  ["GHC.Int.I32#" 2]

"GHC.Tuple.$tc()1" =
  [GHC.Types.TrNameS "GHC.Tuple.$tc()2"{- value -}]

"GHC.Tuple.$tc()2" =
  #"()"

"GHC.Tuple.$trModule" =
  [GHC.Types.Module "GHC.Tuple.$trModule3" "GHC.Tuple.$trModule1"]

"GHC.Tuple.$trModule1" =
  [GHC.Types.TrNameS "GHC.Tuple.$trModule2"{- value -}]

"GHC.Tuple.$trModule2" =
  #"GHC.Tuple"

"GHC.Tuple.$trModule3" =
  [GHC.Types.TrNameS "GHC.Tuple.$trModule4"{- value -}]

"GHC.Tuple.$trModule4" =
  #"ghc-prim"

"GHC.Tuple.()" =
  ["GHC.Tuple.()"]

"GHC.Types.$krep148" =
  [GHC.Types.KindRepFun "GHC.Types.$tc'DoubleElemRep1" "GHC.Types.$tc'AddrRep1"]

"GHC.Types.$krep219" =
  [GHC.Types.: "GHC.Types.$krep61" "GHC.Types.[]"]

"GHC.Types.$krep220" =
  [GHC.Types.KindRepTyConApp "GHC.Types.$tcTYPE" "GHC.Types.$krep219"]

"GHC.Types.$krep221" =
  [GHC.Types.: "GHC.Types.$krep60" "GHC.Types.[]"]

"GHC.Types.$krep222" =
  [GHC.Types.KindRepTyConApp "GHC.Types.$tcTYPE" "GHC.Types.$krep221"]

"GHC.Types.$krep223" =
  [GHC.Types.KindRepFun "GHC.Types.$krep222" "GHC.Types.krep$*"]

"GHC.Types.$krep377" =
  [GHC.Types.: "GHC.Types.$tc'AddrRep1" "GHC.Types.[]"]

"GHC.Types.$krep379" =
  [GHC.Types.KindRepFun "GHC.Types.$tc'[]1" "GHC.Types.$tc'[]1"]

"GHC.Types.$krep60" =
  [GHC.Types.KindRepVar 1]

"GHC.Types.$krep61" =
  [GHC.Types.KindRepVar 0]

"GHC.Types.$krep8131" =
  [GHC.Types.KindRepTyConApp "GHC.Types.$tc[]" "GHC.Types.$krep377"]

"GHC.Types.$tc':1" =
  [GHC.Types.KindRepFun "GHC.Types.$krep61" "GHC.Types.$krep379"]

"GHC.Types.$tc':2" =
  [GHC.Types.TrNameS "GHC.Types.$tc':3"{- value -}]

"GHC.Types.$tc':3" =
  #"':"

"GHC.Types.$tc'AddrRep1" =
  [GHC.Types.KindRepTyConApp "GHC.Types.$tcRuntimeRep" "GHC.Types.[]"]

"GHC.Types.$tc'AddrRep2" =
  [GHC.Types.TrNameS "GHC.Types.$tc'AddrRep3"{- value -}]

"GHC.Types.$tc'AddrRep3" =
  #"'AddrRep"

"GHC.Types.$tc'DoubleElemRep1" =
  [GHC.Types.KindRepTyConApp "GHC.Types.$tcVecElem" "GHC.Types.[]"]

"GHC.Types.$tc'DoubleElemRep2" =
  [GHC.Types.TrNameS "GHC.Types.$tc'DoubleElemRep3"{- value -}]

"GHC.Types.$tc'DoubleElemRep3" =
  #"'DoubleElemRep"

"GHC.Types.$tc'DoubleRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'DoubleRep2"{- value -}]

"GHC.Types.$tc'DoubleRep2" =
  #"'DoubleRep"

"GHC.Types.$tc'FloatElemRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'FloatElemRep2"{- value -}]

"GHC.Types.$tc'FloatElemRep2" =
  #"'FloatElemRep"

"GHC.Types.$tc'FloatRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'FloatRep2"{- value -}]

"GHC.Types.$tc'FloatRep2" =
  #"'FloatRep"

"GHC.Types.$tc'Int16ElemRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Int16ElemRep2"{- value -}]

"GHC.Types.$tc'Int16ElemRep2" =
  #"'Int16ElemRep"

"GHC.Types.$tc'Int32ElemRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Int32ElemRep2"{- value -}]

"GHC.Types.$tc'Int32ElemRep2" =
  #"'Int32ElemRep"

"GHC.Types.$tc'Int64ElemRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Int64ElemRep2"{- value -}]

"GHC.Types.$tc'Int64ElemRep2" =
  #"'Int64ElemRep"

"GHC.Types.$tc'Int64Rep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Int64Rep2"{- value -}]

"GHC.Types.$tc'Int64Rep2" =
  #"'Int64Rep"

"GHC.Types.$tc'Int8ElemRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Int8ElemRep2"{- value -}]

"GHC.Types.$tc'Int8ElemRep2" =
  #"'Int8ElemRep"

"GHC.Types.$tc'IntRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'IntRep2"{- value -}]

"GHC.Types.$tc'IntRep2" =
  #"'IntRep"

"GHC.Types.$tc'LiftedRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'LiftedRep2"{- value -}]

"GHC.Types.$tc'LiftedRep2" =
  #"'LiftedRep"

"GHC.Types.$tc'SumRep1" =
  [GHC.Types.KindRepFun "GHC.Types.$krep8131" "GHC.Types.$tc'AddrRep1"]

"GHC.Types.$tc'SumRep2" =
  [GHC.Types.TrNameS "GHC.Types.$tc'SumRep3"{- value -}]

"GHC.Types.$tc'SumRep3" =
  #"'SumRep"

"GHC.Types.$tc'TupleRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'TupleRep2"{- value -}]

"GHC.Types.$tc'TupleRep2" =
  #"'TupleRep"

"GHC.Types.$tc'UnliftedRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'UnliftedRep2"{- value -}]

"GHC.Types.$tc'UnliftedRep2" =
  #"'UnliftedRep"

"GHC.Types.$tc'Vec1" =
  [GHC.Types.KindRepTyConApp "GHC.Types.$tcVecCount" "GHC.Types.[]"]

"GHC.Types.$tc'Vec10" =
  #"'Vec32"

"GHC.Types.$tc'Vec11" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Vec12"{- value -}]

"GHC.Types.$tc'Vec12" =
  #"'Vec4"

"GHC.Types.$tc'Vec13" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Vec14"{- value -}]

"GHC.Types.$tc'Vec14" =
  #"'Vec64"

"GHC.Types.$tc'Vec15" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Vec17"{- value -}]

"GHC.Types.$tc'Vec17" =
  #"'Vec8"

"GHC.Types.$tc'Vec3" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Vec5"{- value -}]

"GHC.Types.$tc'Vec5" =
  #"'Vec16"

"GHC.Types.$tc'Vec6" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Vec7"{- value -}]

"GHC.Types.$tc'Vec7" =
  #"'Vec2"

"GHC.Types.$tc'Vec9" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Vec10"{- value -}]

"GHC.Types.$tc'VecRep1" =
  [GHC.Types.KindRepFun "GHC.Types.$tc'Vec1" "GHC.Types.$krep148"]

"GHC.Types.$tc'VecRep2" =
  [GHC.Types.TrNameS "GHC.Types.$tc'VecRep3"{- value -}]

"GHC.Types.$tc'VecRep3" =
  #"'VecRep"

"GHC.Types.$tc'Word16ElemRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Word16ElemRep2"{- value -}]

"GHC.Types.$tc'Word16ElemRep2" =
  #"'Word16ElemRep"

"GHC.Types.$tc'Word32ElemRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Word32ElemRep2"{- value -}]

"GHC.Types.$tc'Word32ElemRep2" =
  #"'Word32ElemRep"

"GHC.Types.$tc'Word64ElemRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Word64ElemRep2"{- value -}]

"GHC.Types.$tc'Word64ElemRep2" =
  #"'Word64ElemRep"

"GHC.Types.$tc'Word64Rep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Word64Rep2"{- value -}]

"GHC.Types.$tc'Word64Rep2" =
  #"'Word64Rep"

"GHC.Types.$tc'Word8ElemRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'Word8ElemRep2"{- value -}]

"GHC.Types.$tc'Word8ElemRep2" =
  #"'Word8ElemRep"

"GHC.Types.$tc'WordRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tc'WordRep2"{- value -}]

"GHC.Types.$tc'WordRep2" =
  #"'WordRep"

"GHC.Types.$tc'[]1" =
  [GHC.Types.KindRepTyConApp "GHC.Types.$tc[]" "GHC.Types.$krep219"]

"GHC.Types.$tc'[]2" =
  [GHC.Types.TrNameS "GHC.Types.$tc'[]3"{- value -}]

"GHC.Types.$tc'[]3" =
  #"'[]"

"GHC.Types.$tc->1" =
  [GHC.Types.KindRepFun "GHC.Types.$krep220" "GHC.Types.$krep223"]

"GHC.Types.$tc->2" =
  [GHC.Types.TrNameS "GHC.Types.$tc->3"{- value -}]

"GHC.Types.$tc->3" =
  #"->"

"GHC.Types.$tcIO1" =
  [GHC.Types.TrNameS "GHC.Types.$tcIO2"{- value -}]

"GHC.Types.$tcIO2" =
  #"IO"

"GHC.Types.$tcRuntimeRep" =
  [GHC.Types.TyCon 16896417499213239425u 17941018328399767108u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tcRuntimeRep1" 0 "GHC.Types.krep$*"]

"GHC.Types.$tcRuntimeRep1" =
  [GHC.Types.TrNameS "GHC.Types.$tcRuntimeRep2"{- value -}]

"GHC.Types.$tcRuntimeRep2" =
  #"RuntimeRep"

"GHC.Types.$tcSymbol1" =
  [GHC.Types.TrNameS "GHC.Types.$tcSymbol2"{- value -}]

"GHC.Types.$tcSymbol2" =
  #"Symbol"

"GHC.Types.$tcTYPE" =
  [GHC.Types.TyCon 16277905407886699876u 12502576999761269576u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tcTYPE2" 0 "GHC.Types.$tcTYPE1"]

"GHC.Types.$tcTYPE1" =
  [GHC.Types.KindRepFun "GHC.Types.$tc'AddrRep1" "GHC.Types.krep$*"]

"GHC.Types.$tcTYPE2" =
  [GHC.Types.TrNameS "GHC.Types.$tcTYPE3"{- value -}]

"GHC.Types.$tcTYPE3" =
  #"TYPE"

"GHC.Types.$tcVecCount" =
  [GHC.Types.TyCon 8903350443080264256u 2160018036749789317u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tcVecCount1" 0 "GHC.Types.krep$*"]

"GHC.Types.$tcVecCount1" =
  [GHC.Types.TrNameS "GHC.Types.$tcVecCount2"{- value -}]

"GHC.Types.$tcVecCount2" =
  #"VecCount"

"GHC.Types.$tcVecElem" =
  [GHC.Types.TyCon 16603934306420184111u 11686556811252851484u "GHC.Types.tr$ModuleGHCPrim" "GHC.Types.$tcVecElem1" 0 "GHC.Types.krep$*"]

"GHC.Types.$tcVecElem1" =
  [GHC.Types.TrNameS "GHC.Types.$tcVecElem2"{- value -}]

"GHC.Types.$tcVecElem2" =
  #"VecElem"

"GHC.Types.$tc[]" =
  [GHC.Types.TyCon 15300440589168157478u 15016221815972113379u "GHC.Types.$trModule" "GHC.Types.$tc[]1" 0 "GHC.Types.krep$*Arr*"]

"GHC.Types.$tc[]1" =
  [GHC.Types.TrNameS "GHC.Types.$tc[]2"{- value -}]

"GHC.Types.$tc[]2" =
  #"[]"

"GHC.Types.$trModule" =
  [GHC.Types.Module "GHC.Types.tr$ModuleGHCPrim3" "GHC.Types.$trModule1"]

"GHC.Types.$trModule1" =
  [GHC.Types.TrNameS "GHC.Types.$trModule2"{- value -}]

"GHC.Types.$trModule2" =
  #"GHC.Types"

GHC.Types.False =
  [GHC.Types.False]

GHC.Types.LiftedRep =
  [GHC.Types.LiftedRep]

GHC.Types.True =
  [GHC.Types.True]

"GHC.Types.[]" =
  ["GHC.Types.[]"]

"GHC.Types.krep$*" =
  [GHC.Types.KindRepTYPE GHC.Types.LiftedRep]

"GHC.Types.krep$*Arr*" =
  [GHC.Types.KindRepFun "GHC.Types.krep$*" "GHC.Types.krep$*"]

"GHC.Types.tr$ModuleGHCPrim" =
  [GHC.Types.Module "GHC.Types.tr$ModuleGHCPrim3" "GHC.Types.tr$ModuleGHCPrim1"]

"GHC.Types.tr$ModuleGHCPrim1" =
  [GHC.Types.TrNameS "GHC.Types.tr$ModuleGHCPrim2"{- value -}]

"GHC.Types.tr$ModuleGHCPrim2" =
  #"GHC.Prim"

"GHC.Types.tr$ModuleGHCPrim3" =
  [GHC.Types.TrNameS "GHC.Types.tr$ModuleGHCPrim4"{- value -}]

"GHC.Types.tr$ModuleGHCPrim4" =
  #"ghc-prim"

"Main.$wupto" ww.s16190.0 ww1.s16191.0 =
  letS lwild.s16192.0 = ">#" @ ww.s16190.0{- value -} ww1.s16191.0{- value -}
  case lwild.s16192.0{- value -} of
    _ ->
        let sat.s16195.0 = "Main.$wupto.closure.0" @ ww.s16190.0{- value -} ww1.s16191.0{- value -}
            sat.s16193.0 = ["GHC.Types.I#" ww.s16190.0{- value -}]
        [GHC.Types.: sat.s16193.0 sat.s16195.0]
    1 ->
        ["GHC.Types.[]"]

"Main.$wupto.closure.0" ww.s16190.1 ww1.s16191.1 =
  letS sat.s16194.0 = "+#" @ ww.s16190.1{- value -} 1
  "Main.$wupto" @ sat.s16194.0{- value -} ww1.s16191.1{- value -}

"Main.$wxsum" ww.s16182.0 w.s16183.0 =
  letS wild.s16184.0 = w.s16183.0
  case wild.s16184.0 of
    ("GHC.Types.[]") ->
        ww.s16182.0{- value -}
    (GHC.Types.: x.s16185.0 xs.s16186.0) ->
        letS wild1.s16187.0 = x.s16185.0
        case wild1.s16187.0 of
          ("GHC.Types.I#" y.s16188.0) ->
              letS sat.s16189.0 = "+#" @ ww.s16182.0{- value -} y.s16188.0{- value -}
              "Main.$wxsum" @ sat.s16189.0{- value -} xs.s16186.0

Main.main void.040.2096 =
  GHC.IO.Handle.Text.hPutStr' @ GHC.IO.Handle.FD.stdout Main.main1 GHC.Types.True #"GHC.Prim.void#"

Main.main1 =
  letS sat.s16196.0 = "Main.$wupto" @ 1 10000000
       ww.s16197.0 = "Main.$wxsum" @ 0 sat.s16196.0
       ww4.s16198.0 = "GHC.Show.$wshowSignedInt" @ 0 ww.s16197.0{- value -} "GHC.Types.[]"
  case ww4.s16198.0{- value -} of
    ("GHC.Prim.(#,#)" ww5.s16199.0 ww6.s16200.0) ->
        [GHC.Types.: ww5.s16199.0 ww6.s16200.0]

Main.main2 void.040.2097 =
  GHC.TopHandler.runMainIO1 @ Main.main #"GHC.Prim.void#"

"System.Posix.Internals.$wfdFileSize" ww.s48096.0 void.040.2302 =
  let sat.s48128.0 = "System.Posix.Internals.$wfdFileSize.closure.2" @ ww.s48096.0{- value -}
  Foreign.Marshal.Alloc.allocaBytes @ System.Posix.Internals.sizeof_stat sat.s48128.0 #"GHC.Prim.void#"

"System.Posix.Internals.$wfdFileSize.closure.0" ds1.s48101.1 ww.s48096.2 void.X300.0 =
  letS wild.s48104.0 = __hscore_fstat @ ww.s48096.2{- value -} ds1.s48101.1{- value -}
  case wild.s48104.0{- value -} of
    ("GHC.Prim.Unit#" ds4.s48106.0) ->
        letS sat.s48107.0 = "narrow32Int#" @ ds4.s48106.0{- value -}
        let sat.s48108.0 = ["GHC.Int.I32#" sat.s48107.0{- value -}]
        ["GHC.Prim.Unit#" sat.s48108.0]

"System.Posix.Internals.$wfdFileSize.closure.1" ds8.s48126.1 =
  GHC.Integer.Type.smallInteger @ ds8.s48126.1{- value -}

"System.Posix.Internals.$wfdFileSize.closure.2" ww.s48096.1 p_stat.s48098.0 void.040.2303 =
  letS ds.s48100.0 = p_stat.s48098.0
  case ds.s48100.0 of
    (GHC.Ptr.Ptr ds1.s48101.0) ->
        let sat.s48109.0 = "System.Posix.Internals.$wfdFileSize.closure.0" @ ds1.s48101.0{- value -} ww.s48096.1{- value -}
        letS ds2.s48110.0 = Foreign.C.Error.throwErrnoIfMinus1Retry2 @ System.Posix.Internals.fdFileSize_pred System.Posix.Internals.fdFileSize3 sat.s48109.0 #"GHC.Prim.void#"
        case ds2.s48110.0 of
          ("GHC.Prim.Unit#" ipv1.s48112.0) ->
              letS wild.s48114.0 = __hscore_st_mode @ ds1.s48101.0{- value -}
              case wild.s48114.0{- value -} of
                ("GHC.Prim.Unit#" ds4.s48116.0) ->
                    letS sat.s48118.1 = "narrow32Word#" @ ds4.s48116.0{- value -}
                         wild1.s48119.0 = ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG @ sat.s48118.1{- value -}
                    case wild1.s48119.0{- value -} of
                      ("GHC.Prim.Unit#" ds6.s48121.0) ->
                          letS wild2.s48122.0 = "narrow32Int#" @ ds6.s48121.0{- value -}
                          case wild2.s48122.0{- value -} of
                            _ ->
                                letS wild3.s48124.0 = __hscore_st_size @ ds1.s48101.0{- value -}
                                case wild3.s48124.0{- value -} of
                                  ("GHC.Prim.Unit#" ds8.s48126.0) ->
                                      let sat.s48127.0 = "System.Posix.Internals.$wfdFileSize.closure.1" @ ds8.s48126.0{- value -}
                                      ["GHC.Prim.Unit#" sat.s48127.0]
                            0 ->
                                ["GHC.Prim.Unit#" System.Posix.Internals.fdFileSize2]

"System.Posix.Internals.$wfdStat" ww.s47935.0 void.040.2293 =
  let sat.s48054.0 = "System.Posix.Internals.$wfdStat.closure.1" @ ww.s47935.0{- value -}
  Foreign.Marshal.Alloc.allocaBytes @ System.Posix.Internals.sizeof_stat sat.s48054.0 #"GHC.Prim.void#"

"System.Posix.Internals.$wfdStat.closure.0" ds1.s47940.1 ww.s47935.2 void.X290.0 =
  letS wild.s47943.0 = __hscore_fstat @ ww.s47935.2{- value -} ds1.s47940.1{- value -}
  case wild.s47943.0{- value -} of
    ("GHC.Prim.Unit#" ds4.s47945.0) ->
        letS sat.s47946.0 = "narrow32Int#" @ ds4.s47945.0{- value -}
        let sat.s47947.0 = ["GHC.Int.I32#" sat.s47946.0{- value -}]
        ["GHC.Prim.Unit#" sat.s47947.0]

"System.Posix.Internals.$wfdStat.closure.1" ww.s47935.1 p_stat.s47937.0 void.040.2294 =
  letS ds.s47939.0 = p_stat.s47937.0
  case ds.s47939.0 of
    (GHC.Ptr.Ptr ds1.s47940.0) ->
        let sat.s47948.0 = "System.Posix.Internals.$wfdStat.closure.0" @ ds1.s47940.0{- value -} ww.s47935.1{- value -}
        letS ds2.s47949.0 = Foreign.C.Error.throwErrnoIfMinus1Retry2 @ System.Posix.Internals.fdFileSize_pred System.Posix.Internals.ioe_unknownfiletype3 sat.s47948.0 #"GHC.Prim.void#"
        case ds2.s47949.0 of
          ("GHC.Prim.Unit#" ipv1.s47951.0) ->
              letS wild.s47953.0 = __hscore_st_mode @ ds1.s47940.0{- value -}
              case wild.s47953.0{- value -} of
                ("GHC.Prim.Unit#" ds4.s47955.0) ->
                    letS ipv2.s47956.0 = "narrow32Word#" @ ds4.s47955.0{- value -}
                         wild1.s47958.0 = ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR @ ipv2.s47956.0{- value -}
                    case wild1.s47958.0{- value -} of
                      ("GHC.Prim.Unit#" ds6.s47960.0) ->
                          letS wild2.s47961.0 = "narrow32Int#" @ ds6.s47960.0{- value -}
                          case wild2.s47961.0{- value -} of
                            _ ->
                                letS wild3.s47963.0 = __hscore_st_dev @ ds1.s47940.0{- value -}
                                case wild3.s47963.0{- value -} of
                                  ("GHC.Prim.Unit#" ds8.s47965.0) ->
                                      letS wild4.s47967.0 = __hscore_st_ino @ ds1.s47940.0{- value -}
                                      case wild4.s47967.0{- value -} of
                                        ("GHC.Prim.Unit#" ds10.s47969.0) ->
                                            let sat.s47971.0 = ["GHC.Word.W64#" ds10.s47969.0{- value -}]
                                                sat.s47970.0 = ["GHC.Word.W64#" ds8.s47965.0{- value -}]
                                                sat.s47972.1 = ["GHC.Tuple.(,,)" GHC.IO.Device.Directory sat.s47970.0 sat.s47971.0]
                                            ["GHC.Prim.Unit#" sat.s47972.1]
                            0 ->
                                letS wild3.s47974.0 = ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO @ ipv2.s47956.0{- value -}
                                case wild3.s47974.0{- value -} of
                                  ("GHC.Prim.Unit#" ds8.s47976.0) ->
                                      letS wild4.s47977.0 = "narrow32Int#" @ ds8.s47976.0{- value -}
                                      case wild4.s47977.0{- value -} of
                                        _ ->
                                            letS wild5.s47979.0 = __hscore_st_dev @ ds1.s47940.0{- value -}
                                            case wild5.s47979.0{- value -} of
                                              ("GHC.Prim.Unit#" ds10.s47981.0) ->
                                                  letS wild6.s47983.0 = __hscore_st_ino @ ds1.s47940.0{- value -}
                                                  case wild6.s47983.0{- value -} of
                                                    ("GHC.Prim.Unit#" ds12.s47985.0) ->
                                                        let sat.s47987.0 = ["GHC.Word.W64#" ds12.s47985.0{- value -}]
                                                            sat.s47986.0 = ["GHC.Word.W64#" ds10.s47981.0{- value -}]
                                                            sat.s47988.1 = ["GHC.Tuple.(,,)" GHC.IO.Device.Stream sat.s47986.0 sat.s47987.0]
                                                        ["GHC.Prim.Unit#" sat.s47988.1]
                                        0 ->
                                            letS wild5.s47990.0 = ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK @ ipv2.s47956.0{- value -}
                                            case wild5.s47990.0{- value -} of
                                              ("GHC.Prim.Unit#" ds10.s47992.0) ->
                                                  letS wild6.s47993.0 = "narrow32Int#" @ ds10.s47992.0{- value -}
                                                  case wild6.s47993.0{- value -} of
                                                    _ ->
                                                        letS wild7.s47995.0 = __hscore_st_dev @ ds1.s47940.0{- value -}
                                                        case wild7.s47995.0{- value -} of
                                                          ("GHC.Prim.Unit#" ds12.s47997.0) ->
                                                              letS wild8.s47999.0 = __hscore_st_ino @ ds1.s47940.0{- value -}
                                                              case wild8.s47999.0{- value -} of
                                                                ("GHC.Prim.Unit#" ds14.s48001.0) ->
                                                                    let sat.s48003.0 = ["GHC.Word.W64#" ds14.s48001.0{- value -}]
                                                                        sat.s48002.0 = ["GHC.Word.W64#" ds12.s47997.0{- value -}]
                                                                        sat.s48004.0 = ["GHC.Tuple.(,,)" GHC.IO.Device.Stream sat.s48002.0 sat.s48003.0]
                                                                    ["GHC.Prim.Unit#" sat.s48004.0]
                                                    0 ->
                                                        letS wild7.s48006.0 = ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR @ ipv2.s47956.0{- value -}
                                                        case wild7.s48006.0{- value -} of
                                                          ("GHC.Prim.Unit#" ds12.s48008.0) ->
                                                              letS wild8.s48009.0 = "narrow32Int#" @ ds12.s48008.0{- value -}
                                                              case wild8.s48009.0{- value -} of
                                                                _ ->
                                                                    letS wild9.s48011.0 = __hscore_st_dev @ ds1.s47940.0{- value -}
                                                                    case wild9.s48011.0{- value -} of
                                                                      ("GHC.Prim.Unit#" ds14.s48013.0) ->
                                                                          letS wild10.s48015.0 = __hscore_st_ino @ ds1.s47940.0{- value -}
                                                                          case wild10.s48015.0{- value -} of
                                                                            ("GHC.Prim.Unit#" ds16.s48017.0) ->
                                                                                let sat.s48019.0 = ["GHC.Word.W64#" ds16.s48017.0{- value -}]
                                                                                    sat.s48018.0 = ["GHC.Word.W64#" ds14.s48013.0{- value -}]
                                                                                    sat.s48020.0 = ["GHC.Tuple.(,,)" GHC.IO.Device.Stream sat.s48018.0 sat.s48019.0]
                                                                                ["GHC.Prim.Unit#" sat.s48020.0]
                                                                0 ->
                                                                    letS wild9.s48022.0 = ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG @ ipv2.s47956.0{- value -}
                                                                    case wild9.s48022.0{- value -} of
                                                                      ("GHC.Prim.Unit#" ds14.s48024.0) ->
                                                                          letS wild10.s48025.0 = "narrow32Int#" @ ds14.s48024.0{- value -}
                                                                          case wild10.s48025.0{- value -} of
                                                                            _ ->
                                                                                letS wild11.s48027.0 = __hscore_st_dev @ ds1.s47940.0{- value -}
                                                                                case wild11.s48027.0{- value -} of
                                                                                  ("GHC.Prim.Unit#" ds16.s48029.0) ->
                                                                                      letS wild12.s48031.0 = __hscore_st_ino @ ds1.s47940.0{- value -}
                                                                                      case wild12.s48031.0{- value -} of
                                                                                        ("GHC.Prim.Unit#" ds18.s48033.0) ->
                                                                                            let sat.s48035.0 = ["GHC.Word.W64#" ds18.s48033.0{- value -}]
                                                                                                sat.s48034.0 = ["GHC.Word.W64#" ds16.s48029.0{- value -}]
                                                                                                sat.s48036.0 = ["GHC.Tuple.(,,)" GHC.IO.Device.RegularFile sat.s48034.0 sat.s48035.0]
                                                                                            ["GHC.Prim.Unit#" sat.s48036.0]
                                                                            0 ->
                                                                                letS wild11.s48038.0 = ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK @ ipv2.s47956.0{- value -}
                                                                                case wild11.s48038.0{- value -} of
                                                                                  ("GHC.Prim.Unit#" ds16.s48040.0) ->
                                                                                      letS wild12.s48041.0 = "narrow32Int#" @ ds16.s48040.0{- value -}
                                                                                      case wild12.s48041.0{- value -} of
                                                                                        _ ->
                                                                                            letS wild13.s48043.0 = __hscore_st_dev @ ds1.s47940.0{- value -}
                                                                                            case wild13.s48043.0{- value -} of
                                                                                              ("GHC.Prim.Unit#" ds18.s48045.0) ->
                                                                                                  letS wild14.s48047.0 = __hscore_st_ino @ ds1.s47940.0{- value -}
                                                                                                  case wild14.s48047.0{- value -} of
                                                                                                    ("GHC.Prim.Unit#" ds20.s48049.0) ->
                                                                                                        let sat.s48051.0 = ["GHC.Word.W64#" ds20.s48049.0{- value -}]
                                                                                                            sat.s48050.0 = ["GHC.Word.W64#" ds18.s48045.0{- value -}]
                                                                                                            sat.s48052.0 = ["GHC.Tuple.(,,)" GHC.IO.Device.RawDevice sat.s48050.0 sat.s48051.0]
                                                                                                        ["GHC.Prim.Unit#" sat.s48052.0]
                                                                                        0 ->
                                                                                            "raiseIO#" @ System.Posix.Internals.fileType2

"System.Posix.Internals.$wsetCooked" ww.s47578.0 w.s47579.0 void.040.2267 =
  let sat.s47633.1 = "System.Posix.Internals.$wsetCooked.closure.1" @ w.s47579.0
  "System.Posix.Internals.$wtcSetAttr" @ ww.s47578.0{- value -} sat.s47633.1 #"GHC.Prim.void#"

"System.Posix.Internals.$wsetCooked.closure.0" ds1.s47584.1 w.s47579.2 ds4.s47590.0 =
  letS wild1.s47592.0 = __hscore_poke_lflag @ ds1.s47584.1{- value -} ds4.s47590.0{- value -}
  case wild1.s47592.0{- value -} of
    ("GHC.Prim.(##)") ->
        letS wild2.s47594.0 = w.s47579.2
        case wild2.s47594.0 of
          (GHC.Types.False) ->
              letS wild3.s47596.0 = __hscore_ptr_c_cc @ ds1.s47584.1{- value -}
              case wild3.s47596.0{- value -} of
                ("GHC.Prim.Unit#" ds7.s47598.0) ->
                    letS wild4.s47600.0 = __hscore_vmin @
                    case wild4.s47600.0{- value -} of
                      ("GHC.Prim.Unit#" ds9.s47602.0) ->
                          letS sat.s47603.0 = "narrow32Int#" @ ds9.s47602.0{- value -}
                               sat.s47604.0 = "plusAddr#" @ ds7.s47598.0{- value -} sat.s47603.0{- value -}
                               s2.s47605.0 = "writeWord8OffAddr#" @ sat.s47604.0{- value -} 0 1u
                          case s2.s47605.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                letS wild5.s47607.0 = __hscore_vtime @
                                case wild5.s47607.0{- value -} of
                                  ("GHC.Prim.Unit#" ds11.s47609.0) ->
                                      letS sat.s47610.1 = "narrow32Int#" @ ds11.s47609.0{- value -}
                                           sat.s47611.0 = "plusAddr#" @ ds7.s47598.0{- value -} sat.s47610.1{- value -}
                                           s1.s47612.0 = "writeWord8OffAddr#" @ sat.s47611.0{- value -} 0 0u
                                      case s1.s47612.0{- value -} of
                                        ("GHC.Prim.(##)") ->
                                            ["GHC.Prim.Unit#" "GHC.Tuple.()"]
          (GHC.Types.True) ->
              ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"System.Posix.Internals.$wsetCooked.closure.1" w.s47579.1 p_tios.s47581.0 void.040.2268 =
  letS ds.s47583.0 = p_tios.s47581.0
  case ds.s47583.0 of
    (GHC.Ptr.Ptr ds1.s47584.0) ->
        letS wild.s47586.0 = __hscore_lflag @ ds1.s47584.0{- value -}
        case wild.s47586.0{- value -} of
          ("GHC.Prim.Unit#" ds3.s47588.0) ->
              let "$j.s47589.0" = "System.Posix.Internals.$wsetCooked.closure.0" @ ds1.s47584.0{- value -} w.s47579.1
              letS wild1.s47613.0 = w.s47579.1
              case wild1.s47613.0 of
                (GHC.Types.False) ->
                    letS wild2.s47615.0 = __hscore_icanon @
                    case wild2.s47615.0{- value -} of
                      ("GHC.Prim.Unit#" ds5.s47617.0) ->
                          letS sat.s47619.0 = "narrow32Int#" @ ds5.s47617.0{- value -}
                               sat.s47620.0 = "int2Word#" @ sat.s47619.0{- value -}
                               sat.s47621.0 = "narrow32Word#" @ sat.s47620.0{- value -}
                               sat.s47622.0 = "xor#" @ sat.s47621.0{- value -} 4294967295u
                               sat.s47618.0 = "narrow32Word#" @ ds3.s47588.0{- value -}
                               sat.s47623.0 = "and#" @ sat.s47618.0{- value -} sat.s47622.0{- value -}
                          "$j.s47589.0" @ sat.s47623.0{- value -}
                (GHC.Types.True) ->
                    letS wild2.s47625.0 = __hscore_icanon @
                    case wild2.s47625.0{- value -} of
                      ("GHC.Prim.Unit#" ds5.s47627.0) ->
                          letS sat.s47629.0 = "narrow32Int#" @ ds5.s47627.0{- value -}
                               sat.s47630.0 = "int2Word#" @ sat.s47629.0{- value -}
                               sat.s47631.1 = "narrow32Word#" @ sat.s47630.0{- value -}
                               sat.s47628.0 = "narrow32Word#" @ ds3.s47588.0{- value -}
                               sat.s47632.1 = "or#" @ sat.s47628.0{- value -} sat.s47631.1{- value -}
                          "$j.s47589.0" @ sat.s47632.1{- value -}

"System.Posix.Internals.$wsetEcho" ww.s47661.0 w.s47662.0 void.040.2274 =
  let sat.s47698.0 = "System.Posix.Internals.$wsetEcho.closure.0" @ w.s47662.0
  "System.Posix.Internals.$wtcSetAttr" @ ww.s47661.0{- value -} sat.s47698.0 #"GHC.Prim.void#"

"System.Posix.Internals.$wsetEcho.closure.0" w.s47662.1 p_tios.s47664.0 void.040.2275 =
  letS ds.s47666.0 = p_tios.s47664.0
  case ds.s47666.0 of
    (GHC.Ptr.Ptr ds1.s47667.0) ->
        letS wild.s47669.0 = __hscore_lflag @ ds1.s47667.0{- value -}
        case wild.s47669.0{- value -} of
          ("GHC.Prim.Unit#" ds3.s47671.0) ->
              letS wild1.s47672.0 = w.s47662.1
              case wild1.s47672.0 of
                (GHC.Types.False) ->
                    letS wild2.s47674.0 = __hscore_echo @
                    case wild2.s47674.0{- value -} of
                      ("GHC.Prim.Unit#" ds5.s47676.0) ->
                          letS sat.s47679.0 = "narrow32Int#" @ ds5.s47676.0{- value -}
                               sat.s47680.0 = "int2Word#" @ sat.s47679.0{- value -}
                               sat.s47681.0 = "narrow32Word#" @ sat.s47680.0{- value -}
                               sat.s47682.0 = "xor#" @ sat.s47681.0{- value -} 4294967295u
                               sat.s47678.0 = "narrow32Word#" @ ds3.s47671.0{- value -}
                               sat.s47683.0 = "and#" @ sat.s47678.0{- value -} sat.s47682.0{- value -}
                               wild3.s47684.0 = __hscore_poke_lflag @ ds1.s47667.0{- value -} sat.s47683.0{- value -}
                          case wild3.s47684.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]
                (GHC.Types.True) ->
                    letS wild2.s47687.0 = __hscore_echo @
                    case wild2.s47687.0{- value -} of
                      ("GHC.Prim.Unit#" ds5.s47689.0) ->
                          letS sat.s47692.0 = "narrow32Int#" @ ds5.s47689.0{- value -}
                               sat.s47693.0 = "int2Word#" @ sat.s47692.0{- value -}
                               sat.s47694.0 = "narrow32Word#" @ sat.s47693.0{- value -}
                               sat.s47691.0 = "narrow32Word#" @ ds3.s47671.0{- value -}
                               sat.s47695.0 = "or#" @ sat.s47691.0{- value -} sat.s47694.0{- value -}
                               wild3.s47696.0 = __hscore_poke_lflag @ ds1.s47667.0{- value -} sat.s47695.0{- value -}
                          case wild3.s47696.0{- value -} of
                            ("GHC.Prim.(##)") ->
                                ["GHC.Prim.Unit#" "GHC.Tuple.()"]

"System.Posix.Internals.$wtcSetAttr" ww.s47443.0 w.s47444.0 void.040.2263 =
  let sat.s47572.0 = "System.Posix.Internals.$wtcSetAttr.closure.5" @ w.s47444.0 ww.s47443.0{- value -}
  Foreign.Marshal.Alloc.allocaBytes @ System.Posix.Internals.sizeof_termios sat.s47572.0 #"GHC.Prim.void#"

"System.Posix.Internals.$wtcSetAttr.closure.0" ds1.s47449.1 ww.s47443.2 void.X255.0 =
  letS wild.s47452.0 = ghczuwrapperZC10ZCbaseZCSystemziPosixziInternalsZCtcgetattr @ ww.s47443.2{- value -} ds1.s47449.1{- value -}
  case wild.s47452.0{- value -} of
    ("GHC.Prim.Unit#" ds4.s47454.0) ->
        letS sat.s47455.0 = "narrow32Int#" @ ds4.s47454.0{- value -}
        let sat.s47456.1 = ["GHC.Int.I32#" sat.s47455.0{- value -}]
        ["GHC.Prim.Unit#" sat.s47456.1]

"System.Posix.Internals.$wtcSetAttr.closure.1" ds1.s47449.5 ds19.s47502.1 ww.s47443.6 void.X289.0 =
  letS sat.s47505.0 = "narrow32Int#" @ ds19.s47502.1{- value -}
       wild9.s47506.0 = ghczuwrapperZC9ZCbaseZCSystemziPosixziInternalsZCtcsetattr @ ww.s47443.6{- value -} sat.s47505.0{- value -} ds1.s47449.5{- value -}
  case wild9.s47506.0{- value -} of
    ("GHC.Prim.Unit#" ds22.s47508.0) ->
        letS sat.s47509.0 = "narrow32Int#" @ ds22.s47508.0{- value -}
        let sat.s47510.0 = ["GHC.Int.I32#" sat.s47509.0{- value -}]
        ["GHC.Prim.Unit#" sat.s47510.0]

"System.Posix.Internals.$wtcSetAttr.closure.2" ds.s47448.3 ds1.s47449.4 p_sigset.s47463.1 w.s47444.4 ww.s47443.5 p_old_sigset.s47465.0 void.X264.0 =
  letS ds3.s47467.0 = p_sigset.s47463.1
  case ds3.s47467.0 of
    (GHC.Ptr.Ptr ds4.s47468.0) ->
        letS wild.s47470.0 = ghczuwrapperZC13ZCbaseZCSystemziPosixziInternalsZCsigemptyset @ ds4.s47468.0{- value -}
        case wild.s47470.0{- value -} of
          ("GHC.Prim.Unit#" ds6.s47472.0) ->
              letS wild1.s47473.0 = "narrow32Int#" @ ds6.s47472.0{- value -}
              case wild1.s47473.0{- value -} of
                _ ->
                    letS wild2.s47475.0 = __hscore_sigttou @
                    case wild2.s47475.0{- value -} of
                      ("GHC.Prim.Unit#" ds8.s47477.0) ->
                          letS sat.s47479.0 = "narrow32Int#" @ ds8.s47477.0{- value -}
                               wild3.s47480.0 = ghczuwrapperZC12ZCbaseZCSystemziPosixziInternalsZCsigaddset @ ds4.s47468.0{- value -} sat.s47479.0{- value -}
                          case wild3.s47480.0{- value -} of
                            ("GHC.Prim.Unit#" ds10.s47482.0) ->
                                letS wild4.s47483.0 = "narrow32Int#" @ ds10.s47482.0{- value -}
                                case wild4.s47483.0{- value -} of
                                  _ ->
                                      letS wild5.s47485.0 = __hscore_sig_block @
                                      case wild5.s47485.0{- value -} of
                                        ("GHC.Prim.Unit#" ds12.s47487.0) ->
                                            letS ds13.s47488.0 = p_old_sigset.s47465.0
                                            case ds13.s47488.0 of
                                              (GHC.Ptr.Ptr ds14.s47489.0) ->
                                                  letS sat.s47491.0 = "narrow32Int#" @ ds12.s47487.0{- value -}
                                                       wild6.s47492.0 = ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask @ sat.s47491.0{- value -} ds4.s47468.0{- value -} ds14.s47489.0{- value -}
                                                  case wild6.s47492.0{- value -} of
                                                    ("GHC.Prim.Unit#" ds16.s47494.0) ->
                                                        letS wild7.s47495.0 = "narrow32Int#" @ ds16.s47494.0{- value -}
                                                        case wild7.s47495.0{- value -} of
                                                          _ ->
                                                              letS ds17.s47496.0 = w.s47444.4 @ ds.s47448.3 #"GHC.Prim.void#"
                                                              case ds17.s47496.0 of
                                                                ("GHC.Prim.Unit#" ipv3.s47498.0) ->
                                                                    letS wild8.s47500.0 = __hscore_tcsanow @
                                                                    case wild8.s47500.0{- value -} of
                                                                      ("GHC.Prim.Unit#" ds19.s47502.0) ->
                                                                          let sat.s47511.0 = "System.Posix.Internals.$wtcSetAttr.closure.1" @ ds1.s47449.4{- value -} ds19.s47502.0{- value -} ww.s47443.5{- value -}
                                                                          letS ds20.s47512.0 = Foreign.C.Error.throwErrnoIfMinus1Retry2 @ System.Posix.Internals.fdFileSize_pred System.Posix.Internals.lvl5 sat.s47511.0 #"GHC.Prim.void#"
                                                                          case ds20.s47512.0 of
                                                                            ("GHC.Prim.Unit#" ipv5.s47514.0) ->
                                                                                letS wild9.s47516.0 = __hscore_sig_setmask @
                                                                                case wild9.s47516.0{- value -} of
                                                                                  ("GHC.Prim.Unit#" ds22.s47518.0) ->
                                                                                      letS sat.s47520.0 = "narrow32Int#" @ ds22.s47518.0{- value -}
                                                                                           wild10.s47521.0 = ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask @ sat.s47520.0{- value -} ds14.s47489.0{- value -} #NullAddr
                                                                                      case wild10.s47521.0{- value -} of
                                                                                        ("GHC.Prim.Unit#" ds24.s47523.0) ->
                                                                                            letS wild11.s47524.0 = "narrow32Int#" @ ds24.s47523.0{- value -}
                                                                                            case wild11.s47524.0{- value -} of
                                                                                              _ ->
                                                                                                  ["GHC.Prim.Unit#" ipv3.s47498.0]
                                                                                              -1 ->
                                                                                                  letS wild12.s47526.0 = __hscore_get_errno @
                                                                                                  case wild12.s47526.0{- value -} of
                                                                                                    ("GHC.Prim.Unit#" ds26.s47528.1) ->
                                                                                                        System.Posix.Internals.lvl3 @ #"GHC.Prim.void#" ds26.s47528.1{- value -}
                                                          -1 ->
                                                              letS wild8.s47531.0 = __hscore_get_errno @
                                                              case wild8.s47531.0{- value -} of
                                                                ("GHC.Prim.Unit#" ds18.s47533.0) ->
                                                                    System.Posix.Internals.lvl3 @ #"GHC.Prim.void#" ds18.s47533.0{- value -}
                                  -1 ->
                                      letS wild5.s47536.0 = __hscore_get_errno @
                                      case wild5.s47536.0{- value -} of
                                        ("GHC.Prim.Unit#" ds12.s47538.0) ->
                                            System.Posix.Internals.lvl8 @ #"GHC.Prim.void#" ds12.s47538.0{- value -}
                -1 ->
                    letS wild2.s47541.0 = __hscore_get_errno @
                    case wild2.s47541.0{- value -} of
                      ("GHC.Prim.Unit#" ds8.s47543.0) ->
                          System.Posix.Internals.lvl11 @ #"GHC.Prim.void#" ds8.s47543.0{- value -}

"System.Posix.Internals.$wtcSetAttr.closure.3" ds.s47448.2 ds1.s47449.3 w.s47444.3 ww.s47443.4 p_sigset.s47463.0 void.X261.1 =
  let sat.s47545.1 = "System.Posix.Internals.$wtcSetAttr.closure.2" @ ds.s47448.2 ds1.s47449.3{- value -} p_sigset.s47463.0 w.s47444.3 ww.s47443.4{- value -}
  Foreign.Marshal.Alloc.allocaBytes @ System.Posix.Internals.sizeof_sigset_t sat.s47545.1 #"GHC.Prim.void#"

"System.Posix.Internals.$wtcSetAttr.closure.4" ds.s47448.1 ds1.s47449.2 w.s47444.2 ww.s47443.3 void.X258.1 =
  let sat.s47546.0 = "System.Posix.Internals.$wtcSetAttr.closure.3" @ ds.s47448.1 ds1.s47449.2{- value -} w.s47444.2 ww.s47443.3{- value -}
  Foreign.Marshal.Alloc.allocaBytes @ System.Posix.Internals.sizeof_sigset_t sat.s47546.0 #"GHC.Prim.void#"

"System.Posix.Internals.$wtcSetAttr.closure.5" w.s47444.1 ww.s47443.1 p_tios.s47446.0 void.040.2264 =
  letS ds.s47448.0 = p_tios.s47446.0
  case ds.s47448.0 of
    (GHC.Ptr.Ptr ds1.s47449.0) ->
        let sat.s47457.1 = "System.Posix.Internals.$wtcSetAttr.closure.0" @ ds1.s47449.0{- value -} ww.s47443.1{- value -}
        letS ds2.s47458.0 = Foreign.C.Error.throwErrnoIfMinus1Retry2 @ System.Posix.Internals.fdFileSize_pred System.Posix.Internals.lvl5 sat.s47457.1 #"GHC.Prim.void#"
        case ds2.s47458.0 of
          ("GHC.Prim.Unit#" ipv1.s47460.0) ->
              let "$w$j.s47461.0" = "System.Posix.Internals.$wtcSetAttr.closure.4" @ ds.s47448.0 ds1.s47449.0{- value -} w.s47444.1 ww.s47443.1{- value -}
              letS lwild.s47547.0 = "<=#" @ ww.s47443.1{- value -} 2
              case lwild.s47547.0{- value -} of
                _ ->
                    "$w$j.s47461.0" @ #"GHC.Prim.void#"
                1 ->
                    letS wild.s47549.0 = __hscore_get_saved_termios @ ww.s47443.1{- value -}
                    case wild.s47549.0{- value -} of
                      ("GHC.Prim.Unit#" ds4.s47551.0) ->
                          letS lwild1.s47552.0 = "eqAddr#" @ ds4.s47551.0{- value -} #NullAddr
                          case lwild1.s47552.0{- value -} of
                            _ ->
                                "$w$j.s47461.0" @ #"GHC.Prim.void#"
                            1 ->
                                letS wild1.s47554.0 = __hscore_sizeof_termios @
                                case wild1.s47554.0{- value -} of
                                  ("GHC.Prim.Unit#" ds6.s47556.0) ->
                                      letS sat.s47558.0 = "int2Word#" @ ds6.s47556.0{- value -}
                                           wild2.s47559.0 = malloc @ sat.s47558.0{- value -}
                                      case wild2.s47559.0{- value -} of
                                        ("GHC.Prim.Unit#" ds8.s47561.0) ->
                                            letS lwild2.s47562.0 = "eqAddr#" @ ds8.s47561.0{- value -} #NullAddr
                                            case lwild2.s47562.0{- value -} of
                                              _ ->
                                                  letS sat.s47564.0 = "int2Word#" @ ds6.s47556.0{- value -}
                                                       wild3.s47565.0 = memcpy @ ds8.s47561.0{- value -} ds1.s47449.0{- value -} sat.s47564.0{- value -}
                                                  case wild3.s47565.0{- value -} of
                                                    ("GHC.Prim.Unit#" ds10.s47567.0) ->
                                                        letS wild4.s47569.0 = __hscore_set_saved_termios @ ww.s47443.1{- value -} ds8.s47561.0{- value -}
                                                        case wild4.s47569.0{- value -} of
                                                          ("GHC.Prim.(##)") ->
                                                              "$w$j.s47461.0" @ #"GHC.Prim.void#"
                                              1 ->
                                                  "raiseIO#" @ Foreign.Marshal.Alloc.malloc1

System.Posix.Internals.fdFileSize2 =
  ["GHC.Integer.Type.S#" -1]

System.Posix.Internals.fdFileSize3 =
  "GHC.CString.unpackCString#" @ System.Posix.Internals.fdFileSize4{- value -}

System.Posix.Internals.fdFileSize4 =
  #"fileSize"

System.Posix.Internals.fdFileSize_pred ds1.s47430.0 =
  letS wild.s47431.0 = ds1.s47430.0
  case wild.s47431.0 of
    ("GHC.Int.I32#" x.s47432.0) ->
        letS wild1.s47433.0 = x.s47432.0{- value -}
        case wild1.s47433.0{- value -} of
          _ ->
              [GHC.Types.False]
          -1 ->
              [GHC.Types.True]

System.Posix.Internals.fileType2 =
  "GHC.IO.Exception.$fExceptionIOException_$ctoException" @ System.Posix.Internals.ioe_unknownfiletype

System.Posix.Internals.getEcho2 p_tios.s47639.0 void.040.2271 =
  letS ds.s47641.0 = p_tios.s47639.0
  case ds.s47641.0 of
    (GHC.Ptr.Ptr ds1.s47642.0) ->
        letS wild.s47644.0 = __hscore_lflag @ ds1.s47642.0{- value -}
        case wild.s47644.0{- value -} of
          ("GHC.Prim.Unit#" ds3.s47646.0) ->
              let sat.s47656.0 = System.Posix.Internals.getEcho2.closure.0 @ ds3.s47646.0{- value -}
              ["GHC.Prim.Unit#" sat.s47656.0]

System.Posix.Internals.getEcho2.closure.0 ds3.s47646.1 =
  letS wild1.s47648.0 = __hscore_echo @
  case wild1.s47648.0{- value -} of
    ("GHC.Prim.Unit#" ds5.s47650.0) ->
        letS sat.s47652.0 = "narrow32Int#" @ ds5.s47650.0{- value -}
             sat.s47653.0 = "int2Word#" @ sat.s47652.0{- value -}
             sat.s47654.0 = "narrow32Word#" @ sat.s47653.0{- value -}
             sat.s47651.0 = "narrow32Word#" @ ds3.s47646.1{- value -}
             wild2.s47655.0 = "and#" @ sat.s47651.0{- value -} sat.s47654.0{- value -}
        case wild2.s47655.0{- value -} of
          _ ->
              [GHC.Types.True]
          0u ->
              [GHC.Types.False]

System.Posix.Internals.ioe_unknownfiletype =
  [GHC.IO.Exception.IOError GHC.Maybe.Nothing GHC.IO.Exception.UnsupportedOperation System.Posix.Internals.ioe_unknownfiletype3 System.Posix.Internals.ioe_unknownfiletype1 GHC.Maybe.Nothing GHC.Maybe.Nothing]

System.Posix.Internals.ioe_unknownfiletype1 =
  "GHC.CString.unpackCString#" @ System.Posix.Internals.ioe_unknownfiletype2{- value -}

System.Posix.Internals.ioe_unknownfiletype2 =
  #"unknown file type"

System.Posix.Internals.ioe_unknownfiletype3 =
  "GHC.CString.unpackCString#" @ System.Posix.Internals.ioe_unknownfiletype4{- value -}

System.Posix.Internals.ioe_unknownfiletype4 =
  #"fdType"

System.Posix.Internals.lvl1 =
  #"sigprocmask"

System.Posix.Internals.lvl10 =
  "GHC.CString.unpackCString#" @ System.Posix.Internals.lvl9{- value -}

System.Posix.Internals.lvl11 void.040.2262 ds3.s47441.0 =
  letS sat.s47442.0 = "narrow32Int#" @ ds3.s47441.0{- value -}
  "Foreign.C.Error.$wlvl" @ #"GHC.Prim.void#" sat.s47442.0{- value -} System.Posix.Internals.lvl10

System.Posix.Internals.lvl2 =
  "GHC.CString.unpackCString#" @ System.Posix.Internals.lvl1{- value -}

System.Posix.Internals.lvl3 void.040.2260 ds3.s47435.0 =
  letS sat.s47436.1 = "narrow32Int#" @ ds3.s47435.0{- value -}
  "Foreign.C.Error.$wlvl" @ #"GHC.Prim.void#" sat.s47436.1{- value -} System.Posix.Internals.lvl2

System.Posix.Internals.lvl4 =
  #"tcSetAttr"

System.Posix.Internals.lvl5 =
  "GHC.CString.unpackCString#" @ System.Posix.Internals.lvl4{- value -}

System.Posix.Internals.lvl6 =
  #"sigaddset"

System.Posix.Internals.lvl7 =
  "GHC.CString.unpackCString#" @ System.Posix.Internals.lvl6{- value -}

System.Posix.Internals.lvl8 void.040.2261 ds3.s47438.0 =
  letS sat.s47439.0 = "narrow32Int#" @ ds3.s47438.0{- value -}
  "Foreign.C.Error.$wlvl" @ #"GHC.Prim.void#" sat.s47439.0{- value -} System.Posix.Internals.lvl7

System.Posix.Internals.lvl9 =
  #"sigemptyset"

System.Posix.Internals.sizeof_sigset_t =
  letS wild.s46965.0 = __hscore_sizeof_sigset_t @
  case wild.s46965.0{- value -} of
    ("GHC.Prim.Unit#" ds1.s46967.1) ->
        ["GHC.Types.I#" ds1.s46967.1{- value -}]

System.Posix.Internals.sizeof_stat =
  letS wild.s46852.0 = __hscore_sizeof_stat @
  case wild.s46852.0{- value -} of
    ("GHC.Prim.Unit#" ds1.s46854.0) ->
        ["GHC.Types.I#" ds1.s46854.0{- value -}]

System.Posix.Internals.sizeof_termios =
  letS wild.s46961.0 = __hscore_sizeof_termios @
  case wild.s46961.0{- value -} of
    ("GHC.Prim.Unit#" ds1.s46963.0) ->
        ["GHC.Types.I#" ds1.s46963.0{- value -}]
